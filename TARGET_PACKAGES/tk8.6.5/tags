!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
::safe::TkInit	library/safetk.tcl	/^proc ::safe::TkInit {interpPath} {$/;"	p
::safe::allowTk	library/safetk.tcl	/^proc ::safe::allowTk {interpPath argv} {$/;"	p
::safe::disallowTk	library/safetk.tcl	/^proc ::safe::disallowTk {interpPath} {$/;"	p
::safe::loadTk	library/safetk.tcl	/^proc ::safe::loadTk {} {}$/;"	p
::safe::tkDelete	library/safetk.tcl	/^proc ::safe::tkDelete {W window slave} {$/;"	p
::safe::tkInterpInit	library/safetk.tcl	/^proc ::safe::tkInterpInit {slave argv} {$/;"	p
::safe::tkTopLevel	library/safetk.tcl	/^proc ::safe::tkTopLevel {slave display} {$/;"	p
::tk::::fontchooser::Done	library/fontchooser.tcl	/^proc ::tk::::fontchooser::Done {ok} {$/;"	p
::tk::AltKeyInDialog	library/tk.tcl	/^proc ::tk::AltKeyInDialog {path key} {$/;"	p
::tk::AmpMenuArgs	library/tk.tcl	/^proc ::tk::AmpMenuArgs {widget add type args} {$/;"	p
::tk::AmpWidget	library/tk.tcl	/^proc ::tk::AmpWidget {class path args} {$/;"	p
::tk::ButtonAutoInvoke	library/button.tcl	/^proc ::tk::ButtonAutoInvoke {w} {$/;"	p
::tk::ButtonDown	library/button.tcl	/^proc ::tk::ButtonDown w {$/;"	p
::tk::ButtonEnter	library/button.tcl	/^proc ::tk::ButtonEnter w {$/;"	p
::tk::ButtonEnter	library/button.tcl	/^proc ::tk::ButtonEnter {w} {$/;"	p
::tk::ButtonInvoke	library/button.tcl	/^proc ::tk::ButtonInvoke w {$/;"	p
::tk::ButtonLeave	library/button.tcl	/^proc ::tk::ButtonLeave w {$/;"	p
::tk::ButtonUp	library/button.tcl	/^proc ::tk::ButtonUp w {$/;"	p
::tk::CancelRepeat	library/tk.tcl	/^proc ::tk::CancelRepeat {} {$/;"	p
::tk::CheckEnter	library/button.tcl	/^proc ::tk::CheckEnter {w} {$/;"	p
::tk::CheckInvoke	library/button.tcl	/^proc ::tk::CheckInvoke {w} {$/;"	p
::tk::CheckLeave	library/button.tcl	/^proc ::tk::CheckLeave {w} {$/;"	p
::tk::CheckRadioDown	library/button.tcl	/^proc ::tk::CheckRadioDown w {$/;"	p
::tk::CheckRadioEnter	library/button.tcl	/^proc ::tk::CheckRadioEnter w {$/;"	p
::tk::CheckRadioInvoke	library/button.tcl	/^proc ::tk::CheckRadioInvoke {w {cmd invoke}} {$/;"	p
::tk::ConsoleAbout	library/console.tcl	/^proc ::tk::ConsoleAbout {} {$/;"	p
::tk::ConsoleBind	library/console.tcl	/^proc ::tk::ConsoleBind {w} {$/;"	p
::tk::ConsoleExit	library/console.tcl	/^proc ::tk::ConsoleExit {} {$/;"	p
::tk::ConsoleHistory	library/console.tcl	/^proc ::tk::ConsoleHistory {cmd} {$/;"	p
::tk::ConsoleInit	library/console.tcl	/^proc ::tk::ConsoleInit {} {$/;"	p
::tk::ConsoleInsert	library/console.tcl	/^proc ::tk::ConsoleInsert {w s} {$/;"	p
::tk::ConsoleInvoke	library/console.tcl	/^proc ::tk::ConsoleInvoke {args} {$/;"	p
::tk::ConsoleOutput	library/console.tcl	/^proc ::tk::ConsoleOutput {dest string} {$/;"	p
::tk::ConsolePrompt	library/console.tcl	/^proc ::tk::ConsolePrompt {{partial normal}} {$/;"	p
::tk::ConsoleSource	library/console.tcl	/^proc ::tk::ConsoleSource {} {$/;"	p
::tk::Darken	library/palette.tcl	/^proc ::tk::Darken {color percent} {$/;"	p
::tk::EntryAutoScan	library/entry.tcl	/^proc ::tk::EntryAutoScan {w} {$/;"	p
::tk::EntryBackspace	library/entry.tcl	/^proc ::tk::EntryBackspace w {$/;"	p
::tk::EntryButton1	library/entry.tcl	/^proc ::tk::EntryButton1 {w x} {$/;"	p
::tk::EntryClosestGap	library/entry.tcl	/^proc ::tk::EntryClosestGap {w x} {$/;"	p
::tk::EntryGetSelection	library/entry.tcl	/^proc ::tk::EntryGetSelection {w} {$/;"	p
::tk::EntryInsert	library/entry.tcl	/^proc ::tk::EntryInsert {w s} {$/;"	p
::tk::EntryKeySelect	library/entry.tcl	/^proc ::tk::EntryKeySelect {w new} {$/;"	p
::tk::EntryMouseSelect	library/entry.tcl	/^proc ::tk::EntryMouseSelect {w x} {$/;"	p
::tk::EntryNextWord	library/entry.tcl	/^    proc ::tk::EntryNextWord {w start} {$/;"	p
::tk::EntryPaste	library/entry.tcl	/^proc ::tk::EntryPaste {w x} {$/;"	p
::tk::EntryPreviousWord	library/entry.tcl	/^proc ::tk::EntryPreviousWord {w start} {$/;"	p
::tk::EntryScanDrag	library/entry.tcl	/^proc ::tk::EntryScanDrag {w x} {$/;"	p
::tk::EntryScanMark	library/entry.tcl	/^proc ::tk::EntryScanMark {w x} {$/;"	p
::tk::EntrySeeInsert	library/entry.tcl	/^proc ::tk::EntrySeeInsert w {$/;"	p
::tk::EntrySetCursor	library/entry.tcl	/^proc ::tk::EntrySetCursor {w pos} {$/;"	p
::tk::EntryTranspose	library/entry.tcl	/^proc ::tk::EntryTranspose w {$/;"	p
::tk::EventMotifBindings	library/tk.tcl	/^proc ::tk::EventMotifBindings {n1 dummy dummy} {$/;"	p
::tk::FDGetFileTypes	library/comdlg.tcl	/^proc ::tk::FDGetFileTypes {string} {$/;"	p
::tk::FindAltKeyTarget	library/tk.tcl	/^proc ::tk::FindAltKeyTarget {path char} {$/;"	p
::tk::FireListboxSelectEvent	library/listbox.tcl	/^proc ::tk::FireListboxSelectEvent w {$/;"	p
::tk::FirstMenu	library/menu.tcl	/^proc ::tk::FirstMenu w {$/;"	p
::tk::FocusGroup_BindIn	library/comdlg.tcl	/^proc ::tk::FocusGroup_BindIn {t w cmd} {$/;"	p
::tk::FocusGroup_BindOut	library/comdlg.tcl	/^proc ::tk::FocusGroup_BindOut {t w cmd} {$/;"	p
::tk::FocusGroup_Create	library/comdlg.tcl	/^proc ::tk::FocusGroup_Create {t} {$/;"	p
::tk::FocusGroup_Destroy	library/comdlg.tcl	/^proc ::tk::FocusGroup_Destroy {t w} {$/;"	p
::tk::FocusGroup_In	library/comdlg.tcl	/^proc ::tk::FocusGroup_In {t w detail} {$/;"	p
::tk::FocusGroup_Out	library/comdlg.tcl	/^proc ::tk::FocusGroup_Out {t w detail} {$/;"	p
::tk::FocusOK	library/focus.tcl	/^proc ::tk::FocusOK w {$/;"	p
::tk::GenerateMenuSelect	library/menu.tcl	/^proc ::tk::GenerateMenuSelect {menu} {$/;"	p
::tk::GetSelection	library/tk.tcl	/^    proc ::tk::GetSelection {w {sel PRIMARY}} {$/;"	p
::tk::ListBoxKeyAccel_Goto	library/xmfbox.tcl	/^proc ::tk::ListBoxKeyAccel_Goto {w string} {$/;"	p
::tk::ListBoxKeyAccel_Key	library/xmfbox.tcl	/^proc ::tk::ListBoxKeyAccel_Key {w key} {$/;"	p
::tk::ListBoxKeyAccel_Reset	library/xmfbox.tcl	/^proc ::tk::ListBoxKeyAccel_Reset {w} {$/;"	p
::tk::ListBoxKeyAccel_Set	library/xmfbox.tcl	/^proc ::tk::ListBoxKeyAccel_Set {w} {$/;"	p
::tk::ListBoxKeyAccel_Unset	library/xmfbox.tcl	/^proc ::tk::ListBoxKeyAccel_Unset {w} {$/;"	p
::tk::ListboxAutoScan	library/listbox.tcl	/^proc ::tk::ListboxAutoScan {w} {$/;"	p
::tk::ListboxBeginExtend	library/listbox.tcl	/^proc ::tk::ListboxBeginExtend {w el} {$/;"	p
::tk::ListboxBeginSelect	library/listbox.tcl	/^proc ::tk::ListboxBeginSelect {w el {focus 1}} {$/;"	p
::tk::ListboxBeginToggle	library/listbox.tcl	/^proc ::tk::ListboxBeginToggle {w el} {$/;"	p
::tk::ListboxCancel	library/listbox.tcl	/^proc ::tk::ListboxCancel w {$/;"	p
::tk::ListboxDataExtend	library/listbox.tcl	/^proc ::tk::ListboxDataExtend {w el} {$/;"	p
::tk::ListboxExtendUpDown	library/listbox.tcl	/^proc ::tk::ListboxExtendUpDown {w amount} {$/;"	p
::tk::ListboxMotion	library/listbox.tcl	/^proc ::tk::ListboxMotion {w el} {$/;"	p
::tk::ListboxSelectAll	library/listbox.tcl	/^proc ::tk::ListboxSelectAll w {$/;"	p
::tk::ListboxUpDown	library/listbox.tcl	/^proc ::tk::ListboxUpDown {w amount} {$/;"	p
::tk::MbButtonUp	library/menu.tcl	/^proc ::tk::MbButtonUp w {$/;"	p
::tk::MbEnter	library/menu.tcl	/^proc ::tk::MbEnter w {$/;"	p
::tk::MbLeave	library/menu.tcl	/^proc ::tk::MbLeave w {$/;"	p
::tk::MbMotion	library/menu.tcl	/^proc ::tk::MbMotion {w upDown rootx rooty} {$/;"	p
::tk::MbPost	library/menu.tcl	/^proc ::tk::MbPost {w {x {}} {y {}}} {$/;"	p
::tk::MenuButtonDown	library/menu.tcl	/^proc ::tk::MenuButtonDown menu {$/;"	p
::tk::MenuDownArrow	library/menu.tcl	/^proc ::tk::MenuDownArrow {menu} {$/;"	p
::tk::MenuDup	library/tearoff.tcl	/^proc ::tk::MenuDup {src dst type} {$/;"	p
::tk::MenuEscape	library/menu.tcl	/^proc ::tk::MenuEscape menu {$/;"	p
::tk::MenuFind	library/menu.tcl	/^proc ::tk::MenuFind {w char} {$/;"	p
::tk::MenuFindName	library/menu.tcl	/^proc ::tk::MenuFindName {menu s} {$/;"	p
::tk::MenuFirstEntry	library/menu.tcl	/^proc ::tk::MenuFirstEntry menu {$/;"	p
::tk::MenuInvoke	library/menu.tcl	/^proc ::tk::MenuInvoke {w buttonRelease} {$/;"	p
::tk::MenuLeave	library/menu.tcl	/^proc ::tk::MenuLeave {menu rootx rooty state} {$/;"	p
::tk::MenuLeftArrow	library/menu.tcl	/^proc ::tk::MenuLeftArrow {menu} {$/;"	p
::tk::MenuMotion	library/menu.tcl	/^proc ::tk::MenuMotion {menu x y state} {$/;"	p
::tk::MenuNextEntry	library/menu.tcl	/^proc ::tk::MenuNextEntry {menu count} {$/;"	p
::tk::MenuNextMenu	library/menu.tcl	/^proc ::tk::MenuNextMenu {menu direction} {$/;"	p
::tk::MenuRightArrow	library/menu.tcl	/^proc ::tk::MenuRightArrow {menu} {$/;"	p
::tk::MenuUnpost	library/menu.tcl	/^proc ::tk::MenuUnpost menu {$/;"	p
::tk::MenuUpArrow	library/menu.tcl	/^proc ::tk::MenuUpArrow {menu} {$/;"	p
::tk::MessageBox	library/msgbox.tcl	/^proc ::tk::MessageBox {args} {$/;"	p
::tk::MotifFDialog	library/xmfbox.tcl	/^proc ::tk::MotifFDialog {type args} {$/;"	p
::tk::MotifFDialog_ActivateDList	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_ActivateDList {w} {$/;"	p
::tk::MotifFDialog_ActivateFEnt	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_ActivateFEnt {w} {$/;"	p
::tk::MotifFDialog_ActivateFList	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_ActivateFList {w} {$/;"	p
::tk::MotifFDialog_ActivateSEnt	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_ActivateSEnt {w} {$/;"	p
::tk::MotifFDialog_BrowseDList	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_BrowseDList {w} {$/;"	p
::tk::MotifFDialog_BrowseFList	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_BrowseFList {w} {$/;"	p
::tk::MotifFDialog_BuildUI	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_BuildUI {w} {$/;"	p
::tk::MotifFDialog_CancelCmd	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_CancelCmd {w} {$/;"	p
::tk::MotifFDialog_Config	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_Config {dataName type argList} {$/;"	p
::tk::MotifFDialog_Create	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_Create {dataName type argList} {$/;"	p
::tk::MotifFDialog_FileTypes	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_FileTypes {w} {$/;"	p
::tk::MotifFDialog_FilterCmd	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_FilterCmd {w} {$/;"	p
::tk::MotifFDialog_InterpFilter	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_InterpFilter {w} {$/;"	p
::tk::MotifFDialog_LoadFiles	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_LoadFiles {w} {$/;"	p
::tk::MotifFDialog_MakeSList	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_MakeSList {w f label cmdPrefix} {$/;"	p
::tk::MotifFDialog_OkCmd	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_OkCmd {w} {$/;"	p
::tk::MotifFDialog_SetFilter	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_SetFilter {w type} {$/;"	p
::tk::MotifFDialog_SetListMode	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_SetListMode {w} {$/;"	p
::tk::MotifFDialog_Update	library/xmfbox.tcl	/^proc ::tk::MotifFDialog_Update {w} {$/;"	p
::tk::PlaceWindow	library/tk.tcl	/^proc ::tk::PlaceWindow {w {place ""} {anchor ""}} {$/;"	p
::tk::PostOverPoint	library/menu.tcl	/^proc ::tk::PostOverPoint {menu x y {entry {}}}  {$/;"	p
::tk::RecolorTree	library/palette.tcl	/^proc ::tk::RecolorTree {w colors} {$/;"	p
::tk::RestoreFocusGrab	library/tk.tcl	/^proc ::tk::RestoreFocusGrab {grab focus {destroy destroy}} {$/;"	p
::tk::RestoreOldGrab	library/menu.tcl	/^proc ::tk::RestoreOldGrab {} {$/;"	p
::tk::ScaleActivate	library/scale.tcl	/^proc ::tk::ScaleActivate {w x y} {$/;"	p
::tk::ScaleButton2Down	library/scale.tcl	/^proc ::tk::ScaleButton2Down {w x y} {$/;"	p
::tk::ScaleButtonDown	library/scale.tcl	/^proc ::tk::ScaleButtonDown {w x y} {$/;"	p
::tk::ScaleControlPress	library/scale.tcl	/^proc ::tk::ScaleControlPress {w x y} {$/;"	p
::tk::ScaleDrag	library/scale.tcl	/^proc ::tk::ScaleDrag {w x y} {$/;"	p
::tk::ScaleEndDrag	library/scale.tcl	/^proc ::tk::ScaleEndDrag {w} {$/;"	p
::tk::ScaleIncrement	library/scale.tcl	/^proc ::tk::ScaleIncrement {w dir big repeat} {$/;"	p
::tk::ScreenChanged	library/tk.tcl	/^proc ::tk::ScreenChanged screen {$/;"	p
::tk::ScrollButton2Down	library/scrlbar.tcl	/^proc ::tk::ScrollButton2Down {w x y} {$/;"	p
::tk::ScrollButtonUp	library/scrlbar.tcl	/^proc ::tk::ScrollButtonUp {w x y} {$/;"	p
::tk::ScrollByPages	library/scrlbar.tcl	/^proc ::tk::ScrollByPages {w orient amount} {$/;"	p
::tk::ScrollByUnits	library/scrlbar.tcl	/^proc ::tk::ScrollByUnits {w orient amount} {$/;"	p
::tk::ScrollDrag	library/scrlbar.tcl	/^proc ::tk::ScrollDrag {w x y} {$/;"	p
::tk::ScrollEndDrag	library/scrlbar.tcl	/^proc ::tk::ScrollEndDrag {w x y} {$/;"	p
::tk::ScrollSelect	library/scrlbar.tcl	/^proc ::tk::ScrollSelect {w element repeat} {$/;"	p
::tk::ScrollStartDrag	library/scrlbar.tcl	/^proc ::tk::ScrollStartDrag {w x y} {$/;"	p
::tk::ScrollToPos	library/scrlbar.tcl	/^proc ::tk::ScrollToPos {w pos} {$/;"	p
::tk::ScrollTopBottom	library/scrlbar.tcl	/^proc ::tk::ScrollTopBottom {w x y} {$/;"	p
::tk::SetAmpText	library/tk.tcl	/^proc ::tk::SetAmpText {widget text} {$/;"	p
::tk::SetFocusGrab	library/tk.tcl	/^proc ::tk::SetFocusGrab {grab {focus {}}} {$/;"	p
::tk::SourceLibFile	library/tk.tcl	/^    proc ::tk::SourceLibFile {file} {$/;"	p
::tk::TabToWindow	library/tk.tcl	/^proc ::tk::TabToWindow {w} {$/;"	p
::tk::TearOffMenu	library/tearoff.tcl	/^proc ::tk::TearOffMenu {w {x 0} {y 0}} {$/;"	p
::tk::TextAnchor	library/text.tcl	/^proc ::tk::TextAnchor {w} {$/;"	p
::tk::TextAutoScan	library/text.tcl	/^proc ::tk::TextAutoScan {w} {$/;"	p
::tk::TextButton1	library/text.tcl	/^proc ::tk::TextButton1 {w x y} {$/;"	p
::tk::TextClosestGap	library/text.tcl	/^proc ::tk::TextClosestGap {w x y} {$/;"	p
::tk::TextCursorInSelection	library/text.tcl	/^proc ::tk::TextCursorInSelection {w} {$/;"	p
::tk::TextInsert	library/text.tcl	/^proc ::tk::TextInsert {w s} {$/;"	p
::tk::TextKeyExtend	library/text.tcl	/^proc ::tk::TextKeyExtend {w index} {$/;"	p
::tk::TextKeySelect	library/text.tcl	/^proc ::tk::TextKeySelect {w new} {$/;"	p
::tk::TextNextPara	library/text.tcl	/^proc ::tk::TextNextPara {w start} {$/;"	p
::tk::TextNextPos	library/text.tcl	/^proc ::tk::TextNextPos {w start op} {$/;"	p
::tk::TextNextWord	library/text.tcl	/^    proc ::tk::TextNextWord {w start} {$/;"	p
::tk::TextPasteSelection	library/text.tcl	/^proc ::tk::TextPasteSelection {w x y} {$/;"	p
::tk::TextPrevPara	library/text.tcl	/^proc ::tk::TextPrevPara {w pos} {$/;"	p
::tk::TextPrevPos	library/text.tcl	/^proc ::tk::TextPrevPos {w start op} {$/;"	p
::tk::TextResetAnchor	library/text.tcl	/^proc ::tk::TextResetAnchor {w index} {$/;"	p
::tk::TextScanDrag	library/text.tcl	/^proc ::tk::TextScanDrag {w x y} {$/;"	p
::tk::TextScanMark	library/text.tcl	/^proc ::tk::TextScanMark {w x y} {$/;"	p
::tk::TextScrollPages	library/text.tcl	/^proc ::tk::TextScrollPages {w count} {$/;"	p
::tk::TextSelectTo	library/text.tcl	/^proc ::tk::TextSelectTo {w x y {extend 0}} {$/;"	p
::tk::TextSetCursor	library/text.tcl	/^proc ::tk::TextSetCursor {w pos} {$/;"	p
::tk::TextTranspose	library/text.tcl	/^proc ::tk::TextTranspose w {$/;"	p
::tk::TextUpDownLine	library/text.tcl	/^proc ::tk::TextUpDownLine {w n} {$/;"	p
::tk::TraverseToMenu	library/menu.tcl	/^proc ::tk::TraverseToMenu {w char} {$/;"	p
::tk::TraverseWithinMenu	library/menu.tcl	/^proc ::tk::TraverseWithinMenu {w char} {$/;"	p
::tk::UnderlineAmpersand	library/tk.tcl	/^proc ::tk::UnderlineAmpersand {text} {$/;"	p
::tk::classic::restore	library/obsolete.tcl	/^proc ::tk::classic::restore {args} {$/;"	p
::tk::classic::restore_button	library/obsolete.tcl	/^proc ::tk::classic::restore_button {args} {$/;"	p
::tk::classic::restore_entry	library/obsolete.tcl	/^proc ::tk::classic::restore_entry {args} {$/;"	p
::tk::classic::restore_font	library/obsolete.tcl	/^proc ::tk::classic::restore_font {args} {$/;"	p
::tk::classic::restore_listbox	library/obsolete.tcl	/^proc ::tk::classic::restore_listbox {args} {$/;"	p
::tk::classic::restore_menu	library/obsolete.tcl	/^proc ::tk::classic::restore_menu {args} {$/;"	p
::tk::classic::restore_menubutton	library/obsolete.tcl	/^proc ::tk::classic::restore_menubutton {args} {$/;"	p
::tk::classic::restore_message	library/obsolete.tcl	/^proc ::tk::classic::restore_message {args} {$/;"	p
::tk::classic::restore_panedwindow	library/obsolete.tcl	/^proc ::tk::classic::restore_panedwindow {args} {$/;"	p
::tk::classic::restore_scale	library/obsolete.tcl	/^proc ::tk::classic::restore_scale {args} {$/;"	p
::tk::classic::restore_scrollbar	library/obsolete.tcl	/^proc ::tk::classic::restore_scrollbar {args} {$/;"	p
::tk::classic::restore_text	library/obsolete.tcl	/^proc ::tk::classic::restore_text {args} {$/;"	p
::tk::console::Blink	library/console.tcl	/^proc ::tk::console::Blink {w args} {$/;"	p
::tk::console::ConstrainBuffer	library/console.tcl	/^proc ::tk::console::ConstrainBuffer {w size} {$/;"	p
::tk::console::Copy	library/console.tcl	/^proc ::tk::console::Copy {w} {$/;"	p
::tk::console::Cut	library/console.tcl	/^proc ::tk::console::Cut {w} {$/;"	p
::tk::console::Expand	library/console.tcl	/^proc ::tk::console::Expand {w {type ""}} {$/;"	p
::tk::console::ExpandBestMatch	library/console.tcl	/^proc ::tk::console::ExpandBestMatch {l {e {}}} {$/;"	p
::tk::console::ExpandPathname	library/console.tcl	/^proc ::tk::console::ExpandPathname str {$/;"	p
::tk::console::ExpandProcname	library/console.tcl	/^proc ::tk::console::ExpandProcname str {$/;"	p
::tk::console::ExpandVariable	library/console.tcl	/^proc ::tk::console::ExpandVariable str {$/;"	p
::tk::console::FitScreenWidth	library/console.tcl	/^proc ::tk::console::FitScreenWidth {w} {$/;"	p
::tk::console::FontchooserApply	library/console.tcl	/^proc ::tk::console::FontchooserApply {font args} {$/;"	p
::tk::console::FontchooserFocus	library/console.tcl	/^proc ::tk::console::FontchooserFocus {w isFocusIn} {$/;"	p
::tk::console::FontchooserToggle	library/console.tcl	/^proc ::tk::console::FontchooserToggle {} {$/;"	p
::tk::console::FontchooserVisibility	library/console.tcl	/^proc ::tk::console::FontchooserVisibility {index} {$/;"	p
::tk::console::MatchPair	library/console.tcl	/^proc ::tk::console::MatchPair {w c1 c2 {lim 1.0}} {$/;"	p
::tk::console::MatchQuote	library/console.tcl	/^proc ::tk::console::MatchQuote {w {lim 1.0}} {$/;"	p
::tk::console::Paste	library/console.tcl	/^proc ::tk::console::Paste {w} {$/;"	p
::tk::console::TagProc	library/console.tcl	/^proc ::tk::console::TagProc w {$/;"	p
::tk::dialog::color::	library/clrpick.tcl	/^proc ::tk::dialog::color:: {args} {$/;"	p
::tk::dialog::color::BuildDialog	library/clrpick.tcl	/^proc ::tk::dialog::color::BuildDialog {w} {$/;"	p
::tk::dialog::color::CancelCmd	library/clrpick.tcl	/^proc ::tk::dialog::color::CancelCmd {w} {$/;"	p
::tk::dialog::color::Config	library/clrpick.tcl	/^proc ::tk::dialog::color::Config {dataName argList} {$/;"	p
::tk::dialog::color::CreateSelector	library/clrpick.tcl	/^proc ::tk::dialog::color::CreateSelector {w sel c } {$/;"	p
::tk::dialog::color::DrawColorScale	library/clrpick.tcl	/^proc ::tk::dialog::color::DrawColorScale {w c {create 0}} {$/;"	p
::tk::dialog::color::EnterColorBar	library/clrpick.tcl	/^proc ::tk::dialog::color::EnterColorBar {w color} {$/;"	p
::tk::dialog::color::HandleRGBEntry	library/clrpick.tcl	/^proc ::tk::dialog::color::HandleRGBEntry {w} {$/;"	p
::tk::dialog::color::HandleSelEntry	library/clrpick.tcl	/^proc ::tk::dialog::color::HandleSelEntry {w} {$/;"	p
::tk::dialog::color::InitValues	library/clrpick.tcl	/^proc ::tk::dialog::color::InitValues {dataName} {$/;"	p
::tk::dialog::color::LeaveColorBar	library/clrpick.tcl	/^proc ::tk::dialog::color::LeaveColorBar {w color} {$/;"	p
::tk::dialog::color::MoveSelector	library/clrpick.tcl	/^proc ::tk::dialog::color::MoveSelector {w sel color x delta} {$/;"	p
::tk::dialog::color::OkCmd	library/clrpick.tcl	/^proc ::tk::dialog::color::OkCmd {w} {$/;"	p
::tk::dialog::color::RedrawColorBars	library/clrpick.tcl	/^proc ::tk::dialog::color::RedrawColorBars {w colorChanged} {$/;"	p
::tk::dialog::color::RedrawFinalColor	library/clrpick.tcl	/^proc ::tk::dialog::color::RedrawFinalColor {w} {$/;"	p
::tk::dialog::color::ReleaseMouse	library/clrpick.tcl	/^proc ::tk::dialog::color::ReleaseMouse {w sel color x delta} {$/;"	p
::tk::dialog::color::ResizeColorBars	library/clrpick.tcl	/^proc ::tk::dialog::color::ResizeColorBars {w} {$/;"	p
::tk::dialog::color::RgbToX	library/clrpick.tcl	/^proc ::tk::dialog::color::RgbToX {w color} {$/;"	p
::tk::dialog::color::SetRGBValue	library/clrpick.tcl	/^proc ::tk::dialog::color::SetRGBValue {w color} {$/;"	p
::tk::dialog::color::StartMove	library/clrpick.tcl	/^proc ::tk::dialog::color::StartMove {w sel color x delta {dontMove 0}} {$/;"	p
::tk::dialog::color::XToRgb	library/clrpick.tcl	/^proc ::tk::dialog::color::XToRgb {w x} {$/;"	p
::tk::dialog::error::DeleteByProtocol	library/bgerror.tcl	/^proc ::tk::dialog::error::DeleteByProtocol {} {$/;"	p
::tk::dialog::error::Destroy	library/bgerror.tcl	/^proc ::tk::dialog::error::Destroy {w} {$/;"	p
::tk::dialog::error::Details	library/bgerror.tcl	/^proc ::tk::dialog::error::Details {} {$/;"	p
::tk::dialog::error::Return	library/bgerror.tcl	/^proc ::tk::dialog::error::Return {which code} {$/;"	p
::tk::dialog::error::ReturnInDetails	library/bgerror.tcl	/^proc ::tk::dialog::error::ReturnInDetails w {$/;"	p
::tk::dialog::error::SaveToLog	library/bgerror.tcl	/^proc ::tk::dialog::error::SaveToLog {text} {$/;"	p
::tk::dialog::error::bgerror	library/bgerror.tcl	/^proc ::tk::dialog::error::bgerror err {$/;"	p
::tk::dialog::file::	library/tkfbox.tcl	/^proc ::tk::dialog::file:: {type args} {$/;"	p
::tk::dialog::file::ActivateEnt	library/tkfbox.tcl	/^proc ::tk::dialog::file::ActivateEnt {w} {$/;"	p
::tk::dialog::file::CancelCmd	library/tkfbox.tcl	/^proc ::tk::dialog::file::CancelCmd {w} {$/;"	p
::tk::dialog::file::CompleteEnt	library/tkfbox.tcl	/^proc ::tk::dialog::file::CompleteEnt {w} {$/;"	p
::tk::dialog::file::Config	library/tkfbox.tcl	/^proc ::tk::dialog::file::Config {dataName type argList} {$/;"	p
::tk::dialog::file::Create	library/tkfbox.tcl	/^proc ::tk::dialog::file::Create {w class} {$/;"	p
::tk::dialog::file::Destroyed	library/tkfbox.tcl	/^proc ::tk::dialog::file::Destroyed {w} {$/;"	p
::tk::dialog::file::Done	library/tkfbox.tcl	/^proc ::tk::dialog::file::Done {w {selectFilePath ""}} {$/;"	p
::tk::dialog::file::EntFocusIn	library/tkfbox.tcl	/^proc ::tk::dialog::file::EntFocusIn {w} {$/;"	p
::tk::dialog::file::EntFocusOut	library/tkfbox.tcl	/^proc ::tk::dialog::file::EntFocusOut {w} {$/;"	p
::tk::dialog::file::GlobFiltered	library/tkfbox.tcl	/^proc ::tk::dialog::file::GlobFiltered {dir type {overrideFilter 0}} {$/;"	p
::tk::dialog::file::InvokeBtn	library/tkfbox.tcl	/^proc ::tk::dialog::file::InvokeBtn {w key} {$/;"	p
::tk::dialog::file::JoinFile	library/tkfbox.tcl	/^proc ::tk::dialog::file::JoinFile {path file} {$/;"	p
::tk::dialog::file::ListBrowse	library/tkfbox.tcl	/^proc ::tk::dialog::file::ListBrowse {w} {$/;"	p
::tk::dialog::file::ListInvoke	library/tkfbox.tcl	/^proc ::tk::dialog::file::ListInvoke {w filenames} {$/;"	p
::tk::dialog::file::OkCmd	library/tkfbox.tcl	/^proc ::tk::dialog::file::OkCmd {w} {$/;"	p
::tk::dialog::file::ResolveFile	library/tkfbox.tcl	/^proc ::tk::dialog::file::ResolveFile {context text defaultext {expandEnv 1}} {$/;"	p
::tk::dialog::file::SetFilter	library/tkfbox.tcl	/^proc ::tk::dialog::file::SetFilter {w type} {$/;"	p
::tk::dialog::file::SetPath	library/tkfbox.tcl	/^proc ::tk::dialog::file::SetPath {w name1 name2 op} {$/;"	p
::tk::dialog::file::SetPathSilently	library/tkfbox.tcl	/^proc ::tk::dialog::file::SetPathSilently {w path} {$/;"	p
::tk::dialog::file::SetSelectMode	library/tkfbox.tcl	/^proc ::tk::dialog::file::SetSelectMode {w multi} {$/;"	p
::tk::dialog::file::UpDirCmd	library/tkfbox.tcl	/^proc ::tk::dialog::file::UpDirCmd {w} {$/;"	p
::tk::dialog::file::Update	library/tkfbox.tcl	/^proc ::tk::dialog::file::Update {w} {$/;"	p
::tk::dialog::file::UpdateWhenIdle	library/tkfbox.tcl	/^proc ::tk::dialog::file::UpdateWhenIdle {w} {$/;"	p
::tk::dialog::file::VerifyFileName	library/tkfbox.tcl	/^proc ::tk::dialog::file::VerifyFileName {w filename} {$/;"	p
::tk::dialog::file::chooseDir::	library/choosedir.tcl	/^proc ::tk::dialog::file::chooseDir:: {args} {$/;"	p
::tk::dialog::file::chooseDir::Config	library/choosedir.tcl	/^proc ::tk::dialog::file::chooseDir::Config {dataName argList} {$/;"	p
::tk::dialog::file::chooseDir::DblClick	library/choosedir.tcl	/^proc ::tk::dialog::file::chooseDir::DblClick {w} {$/;"	p
::tk::dialog::file::chooseDir::Done	library/choosedir.tcl	/^proc ::tk::dialog::file::chooseDir::Done {w {selectFilePath ""}} {$/;"	p
::tk::dialog::file::chooseDir::IsOK?	library/choosedir.tcl	/^proc ::tk::dialog::file::chooseDir::IsOK? {w text} {$/;"	p
::tk::dialog::file::chooseDir::ListBrowse	library/choosedir.tcl	/^proc ::tk::dialog::file::chooseDir::ListBrowse {w text} {$/;"	p
::tk::dialog::file::chooseDir::OkCmd	library/choosedir.tcl	/^proc ::tk::dialog::file::chooseDir::OkCmd {w} {$/;"	p
::tk::fontchooser::Apply	library/fontchooser.tcl	/^proc ::tk::fontchooser::Apply {} {$/;"	p
::tk::fontchooser::Click	library/fontchooser.tcl	/^proc ::tk::fontchooser::Click {who} {$/;"	p
::tk::fontchooser::Configure	library/fontchooser.tcl	/^proc ::tk::fontchooser::Configure {args} {$/;"	p
::tk::fontchooser::Create	library/fontchooser.tcl	/^proc ::tk::fontchooser::Create {} {$/;"	p
::tk::fontchooser::Hide	library/fontchooser.tcl	/^proc ::tk::fontchooser::Hide {} {$/;"	p
::tk::fontchooser::Init	library/fontchooser.tcl	/^proc ::tk::fontchooser::Init {{defaultFont ""}} {$/;"	p
::tk::fontchooser::Setup	library/fontchooser.tcl	/^proc ::tk::fontchooser::Setup {} {$/;"	p
::tk::fontchooser::Show	library/fontchooser.tcl	/^proc ::tk::fontchooser::Show {} {$/;"	p
::tk::fontchooser::Tracer	library/fontchooser.tcl	/^proc ::tk::fontchooser::Tracer {var1 var2 op} {$/;"	p
::tk::fontchooser::Update	library/fontchooser.tcl	/^proc ::tk::fontchooser::Update {} {$/;"	p
::tk::fontchooser::Visibility	library/fontchooser.tcl	/^proc ::tk::fontchooser::Visibility {w visible} {$/;"	p
::tk::fontchooser::ttk_slistbox	library/fontchooser.tcl	/^proc ::tk::fontchooser::ttk_slistbox {w args} {$/;"	p
::tk::mcmaxamp	library/tk.tcl	/^proc ::tk::mcmaxamp {args} {$/;"	p
::tk::panedwindow::Cursor	library/panedwindow.tcl	/^proc ::tk::panedwindow::Cursor {w} {$/;"	p
::tk::panedwindow::DragSash	library/panedwindow.tcl	/^proc ::tk::panedwindow::DragSash {w x y proxy} {$/;"	p
::tk::panedwindow::Leave	library/panedwindow.tcl	/^proc ::tk::panedwindow::Leave {w} {$/;"	p
::tk::panedwindow::MarkSash	library/panedwindow.tcl	/^proc ::tk::panedwindow::MarkSash {w x y proxy} {$/;"	p
::tk::panedwindow::Motion	library/panedwindow.tcl	/^proc ::tk::panedwindow::Motion {w x y} {$/;"	p
::tk::panedwindow::ReleaseSash	library/panedwindow.tcl	/^proc ::tk::panedwindow::ReleaseSash {w proxy} {$/;"	p
::tk::spinbox::AutoScan	library/spinbox.tcl	/^proc ::tk::spinbox::AutoScan {w} {$/;"	p
::tk::spinbox::ButtonDown	library/spinbox.tcl	/^proc ::tk::spinbox::ButtonDown {w x y} {$/;"	p
::tk::spinbox::ButtonUp	library/spinbox.tcl	/^proc ::tk::spinbox::ButtonUp {w x y} {$/;"	p
::tk::spinbox::ClosestGap	library/spinbox.tcl	/^proc ::tk::spinbox::ClosestGap {w x} {$/;"	p
::tk::spinbox::GetSelection	library/spinbox.tcl	/^proc ::tk::spinbox::GetSelection {w} {$/;"	p
::tk::spinbox::Invoke	library/spinbox.tcl	/^proc ::tk::spinbox::Invoke {w elem} {$/;"	p
::tk::spinbox::Motion	library/spinbox.tcl	/^proc ::tk::spinbox::Motion {w x y} {$/;"	p
::tk::spinbox::MouseSelect	library/spinbox.tcl	/^proc ::tk::spinbox::MouseSelect {w x {cursor {}}} {$/;"	p
::tk::spinbox::Paste	library/spinbox.tcl	/^proc ::tk::spinbox::Paste {w x} {$/;"	p
::tk::unsupported::ExposePrivateCommand	library/unsupported.tcl	/^proc ::tk::unsupported::ExposePrivateCommand {cmd} {$/;"	p
::tk::unsupported::ExposePrivateVariable	library/unsupported.tcl	/^proc ::tk::unsupported::ExposePrivateVariable {var} {$/;"	p
::tk_bisque	library/palette.tcl	/^proc ::tk_bisque {} {$/;"	p
::tk_chooseColor	library/tk.tcl	/^    proc ::tk_chooseColor {args} {$/;"	p
::tk_chooseDirectory	library/tk.tcl	/^    proc ::tk_chooseDirectory {args} {$/;"	p
::tk_dialog	library/dialog.tcl	/^proc ::tk_dialog {w title text bitmap default args} {$/;"	p
::tk_focusFollowsMouse	library/focus.tcl	/^proc ::tk_focusFollowsMouse {} {$/;"	p
::tk_focusNext	library/focus.tcl	/^proc ::tk_focusNext w {$/;"	p
::tk_focusPrev	library/focus.tcl	/^proc ::tk_focusPrev w {$/;"	p
::tk_getFileType	library/xmfbox.tcl	/^proc ::tk_getFileType {} {$/;"	p
::tk_getOpenFile	library/tk.tcl	/^    proc ::tk_getOpenFile {args} {$/;"	p
::tk_getSaveFile	library/tk.tcl	/^    proc ::tk_getSaveFile {args} {$/;"	p
::tk_menuSetFocus	library/menu.tcl	/^proc ::tk_menuSetFocus {menu} {$/;"	p
::tk_messageBox	library/tk.tcl	/^    proc ::tk_messageBox {args} {$/;"	p
::tk_optionMenu	library/optMenu.tcl	/^proc ::tk_optionMenu {w varName firstValue args} {$/;"	p
::tk_popup	library/menu.tcl	/^proc ::tk_popup {menu x y {entry {}}} {$/;"	p
::tk_setPalette	library/palette.tcl	/^proc ::tk_setPalette {args} {$/;"	p
::tk_textCopy	library/text.tcl	/^proc ::tk_textCopy w {$/;"	p
::tk_textCut	library/text.tcl	/^proc ::tk_textCut w {$/;"	p
::tk_textPaste	library/text.tcl	/^proc ::tk_textPaste w {$/;"	p
::ttk::ThemeChanged	library/ttk/ttk.tcl	/^proc ::ttk::ThemeChanged {} {$/;"	p
::ttk::setTheme	library/ttk/ttk.tcl	/^proc ::ttk::setTheme {theme} {$/;"	p
::ttk::themes	library/ttk/ttk.tcl	/^proc ::ttk::themes {{ptn *}} {$/;"	p
ABS	generic/tkCanvUtil.c	54;"	d	file:
ACCEL	macosx/tkMacOSXMenu.c	64;"	d	file:
ACCEL	macosx/tkMacOSXMenu.c	90;"	d	file:
ACTIVATE	generic/tkBind.c	481;"	d	file:
ACTIVE	generic/tkScale.h	193;"	d
ACTIVE	macosx/tkMacOSXButton.c	26;"	d	file:
ACTIVE	macosx/tkMacOSXMenubutton.c	25;"	d	file:
ACTIVE_BG	macosx/tkMacOSXDefault.h	37;"	d
ACTIVE_BG	unix/tkUnixDefault.h	31;"	d
ACTIVE_BG	win/tkWinDefault.h	31;"	d
ACTIVE_FG	macosx/tkMacOSXDefault.h	38;"	d
ACTIVE_STYLE_DOTBOX	generic/tkListbox.c	/^    ACTIVE_STYLE_DOTBOX, ACTIVE_STYLE_NONE, ACTIVE_STYLE_UNDERLINE$/;"	e	enum:activeStyle	file:
ACTIVE_STYLE_NONE	generic/tkListbox.c	/^    ACTIVE_STYLE_DOTBOX, ACTIVE_STYLE_NONE, ACTIVE_STYLE_UNDERLINE$/;"	e	enum:activeStyle	file:
ACTIVE_STYLE_UNDERLINE	generic/tkListbox.c	/^    ACTIVE_STYLE_DOTBOX, ACTIVE_STYLE_NONE, ACTIVE_STYLE_UNDERLINE$/;"	e	enum:activeStyle	file:
AC_FLAGS	unix/Makefile	/^AC_FLAGS		= -DPACKAGE_NAME=\\"tk\\" -DPACKAGE_TARNAME=\\"tk\\" -DPACKAGE_VERSION=\\"8.6\\" -DPACKAGE_STRING=\\"tk\\ 8.6\\" -DPACKAGE_BUGREPORT=\\"\\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DUSE_THREAD_ALLOC=1 -D_REENTRANT=1 -D_THREAD_SAFE=1 -DHAVE_PTHREAD_ATTR_SETSTACKSIZE=1 -DHAVE_PTHREAD_ATFORK=1 -DTCL_THREADS=1 -DMODULE_SCOPE=extern\\ __attribute__\\(\\(__visibility__\\(\\"hidden\\"\\)\\)\\) -DHAVE_HIDDEN=1 -DHAVE_CAST_TO_UNION=1 -DTCL_SHLIB_EXT=\\".so\\" -DNDEBUG=1 -DTCL_CFG_OPTIMIZED=1 -D_LARGEFILE64_SOURCE=1 -DTCL_WIDE_INT_TYPE=long\\ long -DHAVE_STRUCT_DIRENT64=1 -DHAVE_STRUCT_STAT64=1 -DHAVE_OPEN64=1 -DHAVE_LSEEK64=1 -DHAVE_TYPE_OFF64_T=1 -DHAVE_SYS_TIME_H=1 -DTIME_WITH_SYS_TIME=1 -Dstrtod=fixstrtod -DHAVE_INTPTR_T=1 -DHAVE_UINTPTR_T=1 -DHAVE_PW_GECOS=1 -DHAVE_XKBKEYCODETOKEYSYM=1 -DXKEYCODETOKEYSYM_IS_DEPRECATED=1 $/;"	m
ALERT_COMMAND	macosx/tkMacOSXDialog.c	/^    ALERT_TITLE, ALERT_TYPE, ALERT_COMMAND,$/;"	e	enum:alertOptions	file:
ALERT_DEFAULT	macosx/tkMacOSXDialog.c	/^    ALERT_DEFAULT, ALERT_DETAIL, ALERT_ICON, ALERT_MESSAGE, ALERT_PARENT,$/;"	e	enum:alertOptions	file:
ALERT_DETAIL	macosx/tkMacOSXDialog.c	/^    ALERT_DEFAULT, ALERT_DETAIL, ALERT_ICON, ALERT_MESSAGE, ALERT_PARENT,$/;"	e	enum:alertOptions	file:
ALERT_ICON	macosx/tkMacOSXDialog.c	/^    ALERT_DEFAULT, ALERT_DETAIL, ALERT_ICON, ALERT_MESSAGE, ALERT_PARENT,$/;"	e	enum:alertOptions	file:
ALERT_MESSAGE	macosx/tkMacOSXDialog.c	/^    ALERT_DEFAULT, ALERT_DETAIL, ALERT_ICON, ALERT_MESSAGE, ALERT_PARENT,$/;"	e	enum:alertOptions	file:
ALERT_PARENT	macosx/tkMacOSXDialog.c	/^    ALERT_DEFAULT, ALERT_DETAIL, ALERT_ICON, ALERT_MESSAGE, ALERT_PARENT,$/;"	e	enum:alertOptions	file:
ALERT_TITLE	macosx/tkMacOSXDialog.c	/^    ALERT_TITLE, ALERT_TYPE, ALERT_COMMAND,$/;"	e	enum:alertOptions	file:
ALERT_TYPE	macosx/tkMacOSXDialog.c	/^    ALERT_TITLE, ALERT_TYPE, ALERT_COMMAND,$/;"	e	enum:alertOptions	file:
ALIGN_BASELINE	generic/tkTextImage.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon152	file:
ALIGN_BASELINE	generic/tkTextWind.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon181	file:
ALIGN_BITMAP_BOTTOM	win/tkWinMenu.c	32;"	d	file:
ALIGN_BITMAP_LEFT	win/tkWinMenu.c	29;"	d	file:
ALIGN_BITMAP_RIGHT	win/tkWinMenu.c	30;"	d	file:
ALIGN_BITMAP_TOP	win/tkWinMenu.c	31;"	d	file:
ALIGN_BOTTOM	generic/tkTextImage.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon152	file:
ALIGN_BOTTOM	generic/tkTextWind.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon181	file:
ALIGN_CENTER	generic/tkTextImage.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon152	file:
ALIGN_CENTER	generic/tkTextWind.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon181	file:
ALIGN_TOP	generic/tkTextImage.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon152	file:
ALIGN_TOP	generic/tkTextWind.c	/^    ALIGN_BASELINE, ALIGN_BOTTOM, ALIGN_CENTER, ALIGN_TOP$/;"	e	enum:__anon181	file:
ALLOCED_MASTER	generic/tkGrid.c	250;"	d	file:
ALLOCED_MASTER	generic/tkPack.c	100;"	d	file:
ALL_BUTTONS	generic/tkGrab.c	142;"	d	file:
ALL_BUTTONS	generic/tkPointer.c	31;"	d	file:
ALL_EVENTS_MASK	generic/tkWindow.c	71;"	d	file:
ALPHA_BLEND	generic/tkImgPhInstance.c	447;"	d	file:
ALPHA_BLEND	generic/tkImgPhInstance.c	573;"	d	file:
ALREADY_DEAD	win/tkWinScrlbr.c	47;"	d	file:
ALT_MASK	generic/tkInt.h	917;"	d
ANYTABLE	win/tkWinFont.c	/^typedef struct ANYTABLE {$/;"	s	file:
ANYTABLE	win/tkWinFont.c	/^} ANYTABLE;$/;"	t	typeref:struct:ANYTABLE	file:
APPEARANCE_PIXEL	macosx/tkMacOSXPort.h	176;"	d
APPENDOBJ	generic/ttk/ttkLayout.c	775;"	d	file:
APPENDOBJ	generic/ttk/ttkLayout.c	822;"	d	file:
APPENDSTR	generic/ttk/ttkLayout.c	776;"	d	file:
APPENDSTR	generic/ttk/ttkLayout.c	823;"	d	file:
APPLFONT_NAME	macosx/tkMacOSXFont.c	55;"	d	file:
APPLICATION_INSTALL_PATH	macosx/GNUmakefile	/^APPLICATION_INSTALL_PATH ?= \/Applications\/Utilities$/;"	m
APP_CC_SWITCHES	unix/Makefile	/^APP_CC_SWITCHES = $(CC_SWITCHES_NO_STUBS) $/;"	m
APP_DIR	macosx/GNUmakefile	/^APP_DIR			:= ${APPLICATION_INSTALL_PATH}$/;"	m
APP_DIR	macosx/GNUmakefile	/^APP_DIR			:= .$/;"	m
AQUA_HDRS	unix/Makefile	/^AQUA_HDRS = $(MAC_OSX_DIR)\/tkMacOSX.h $(GENERIC_DIR)\/tkIntXlibDecls.h$/;"	m
AQUA_INCLUDES	unix/Makefile	/^AQUA_INCLUDES		= -I$(MAC_OSX_DIR) -I$(XLIB_DIR)$/;"	m
AQUA_OBJS	unix/Makefile	/^AQUA_OBJS = tkMacOSXBitmap.o tkMacOSXButton.o tkMacOSXClipboard.o \\$/;"	m
AQUA_PRIVATE_HDRS	unix/Makefile	/^AQUA_PRIVATE_HDRS = $(MAC_OSX_DIR)\/tkMacOSXPort.h $(MAC_OSX_DIR)\/tkMacOSXInt.h$/;"	m
AQUA_RESOURCES	unix/Makefile	/^AQUA_RESOURCES = \\$/;"	m
AQUA_SRCS	unix/Makefile	/^AQUA_SRCS = \\$/;"	m
AQUA_TKTEST_OBJS	unix/Makefile	/^AQUA_TKTEST_OBJS = tkMacOSXTest.o$/;"	m
AQUA_WISH_RESOURCES	unix/Makefile	/^AQUA_WISH_RESOURCES = $(MAC_OSX_DIR)\/tkMacOSXAETE.r$/;"	m
AQUA_XLIB_HDRS	unix/Makefile	/^AQUA_XLIB_HDRS = $(XLIB_DIR)\/X11\/*.h $(XLIB_DIR)\/xbytes.h$/;"	m
AR	unix/Makefile	/^AR			= ar$/;"	m
ARC_STYLE	generic/tkCanvArc.c	/^    PIESLICE_STYLE, CHORD_STYLE, ARC_STYLE$/;"	e	enum:__anon186	file:
ARROWS_BOTH	generic/tkCanvLine.c	/^    ARROWS_NONE, ARROWS_FIRST, ARROWS_LAST, ARROWS_BOTH$/;"	e	enum:__anon155	file:
ARROWS_FIRST	generic/tkCanvLine.c	/^    ARROWS_NONE, ARROWS_FIRST, ARROWS_LAST, ARROWS_BOTH$/;"	e	enum:__anon155	file:
ARROWS_LAST	generic/tkCanvLine.c	/^    ARROWS_NONE, ARROWS_FIRST, ARROWS_LAST, ARROWS_BOTH$/;"	e	enum:__anon155	file:
ARROWS_NONE	generic/tkCanvLine.c	/^    ARROWS_NONE, ARROWS_FIRST, ARROWS_LAST, ARROWS_BOTH$/;"	e	enum:__anon155	file:
ARROW_DOWN	generic/ttk/ttkTheme.h	/^typedef enum { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT } ArrowDirection;$/;"	e	enum:__anon80
ARROW_LEFT	generic/ttk/ttkTheme.h	/^typedef enum { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT } ArrowDirection;$/;"	e	enum:__anon80
ARROW_RIGHT	generic/ttk/ttkTheme.h	/^typedef enum { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT } ArrowDirection;$/;"	e	enum:__anon80
ARROW_UP	generic/ttk/ttkTheme.h	/^typedef enum { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT } ArrowDirection;$/;"	e	enum:__anon80
About	library/demos/goldberg.tcl	/^proc About {w} {$/;"	p
Above	xlib/X11/X.h	417;"	d
ActivateElement	generic/ttk/ttkTrack.c	/^static void ActivateElement(ElementStateTracker *es, Ttk_Element element)$/;"	f	file:
ActivateEvent	win/tkWinWm.c	/^typedef struct ActivateEvent {$/;"	s	file:
ActivateEvent	win/tkWinWm.c	/^} ActivateEvent;$/;"	t	typeref:struct:ActivateEvent	file:
ActivateMask	generic/tk.h	657;"	d
ActivateNotify	generic/tk.h	651;"	d
ActivateTab	generic/ttk/ttkNotebook.c	/^static void ActivateTab(Notebook *nb, int index)$/;"	f	file:
ActivateWindow	win/tkWinWm.c	/^ActivateWindow($/;"	f	file:
ActiveGUI	library/demos/goldberg.tcl	/^proc ActiveGUI {w var1 var2 op} {$/;"	p
AddClause	generic/tkFileFilter.c	/^AddClause($/;"	f	file:
AddFromString	generic/tkOption.c	/^AddFromString($/;"	f	file:
AddPane	generic/ttk/ttkPanedwindow.c	/^static int AddPane($/;"	f	file:
AddPlace	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *AddPlace )($/;"	m	struct:IFileDialogVtbl	file:
AddPlace	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *AddPlace )($/;"	m	struct:IFileOpenDialogVtbl	file:
AddPlace	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *AddPlace )($/;"	m	struct:IFileSaveDialogVtbl	file:
AddRef	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *AddRef )( IFileDialog *);$/;"	m	struct:IFileDialogVtbl	file:
AddRef	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *AddRef )( IFileOpenDialog *);$/;"	m	struct:IFileOpenDialogVtbl	file:
AddRef	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *AddRef )( IFileSaveDialog *);$/;"	m	struct:IFileSaveDialogVtbl	file:
AddRef	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *AddRef )(IShellItemArray *);$/;"	m	struct:IShellItemArrayVtbl	file:
AddRef	win/tkWinDialog.c	/^    ULONG (STDMETHODCALLTYPE *AddRef)(IShellItem *);$/;"	m	struct:IShellItemVtbl	file:
AddTab	generic/ttk/ttkNotebook.c	/^static int AddTab($/;"	f	file:
AddTag	generic/ttk/ttkTreeview.c	/^static void AddTag(TreeItem *item, Ttk_Tag tag)$/;"	f	file:
AdjustForSticky	generic/tkGrid.c	/^AdjustForSticky($/;"	f	file:
AdjustForSticky	generic/tkPanedWindow.c	/^AdjustForSticky($/;"	f	file:
AdjustForTab	generic/tkTextDisp.c	/^AdjustForTab($/;"	f	file:
AdjustIconImagePointers	win/tkWinWm.c	/^AdjustIconImagePointers($/;"	f	file:
AdjustIndex	generic/ttk/ttkEntry.c	/^static int AdjustIndex(int i0, int index, int nChars)$/;"	f	file:
AdjustIndices	generic/ttk/ttkEntry.c	/^static void AdjustIndices(Entry *entryPtr, int index, int nChars)$/;"	f	file:
AdjustMenuCoords	generic/tkMenuDraw.c	/^AdjustMenuCoords($/;"	f	file:
AdjustOffsets	generic/tkGrid.c	/^AdjustOffsets($/;"	f	file:
AdjustPanes	generic/ttk/ttkPanedwindow.c	/^static void AdjustPanes(Paned *pw)$/;"	f	file:
AdjustPixelClient	generic/tkTextBTree.c	/^AdjustPixelClient($/;"	f	file:
AdjustStartEndRefs	generic/tkTextBTree.c	/^AdjustStartEndRefs($/;"	f	file:
Advise	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Advise )($/;"	m	struct:IFileDialogVtbl	file:
Advise	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Advise )($/;"	m	struct:IFileOpenDialogVtbl	file:
Advise	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Advise )($/;"	m	struct:IFileSaveDialogVtbl	file:
AlertCallbackInfo	macosx/tkMacOSXDialog.c	/^} AlertCallbackInfo;$/;"	t	typeref:struct:__anon192	file:
AllHints	xlib/X11/Xutil.h	113;"	d
AllPlanes	xlib/X11/Xlib.h	79;"	d
AllTemporary	xlib/X11/X.h	97;"	d
AllValues	xlib/X11/Xutil.h	45;"	d
AllocAll	xlib/X11/X.h	572;"	d
AllocClipMask	xlib/xgc.c	/^static TkpClipMask *AllocClipMask(GC gc) {$/;"	f	file:
AllocFontFamily	unix/tkUnixFont.c	/^AllocFontFamily($/;"	f	file:
AllocFontFamily	win/tkWinFont.c	/^AllocFontFamily($/;"	f	file:
AllocNone	xlib/X11/X.h	571;"	d
AllocateColors	generic/tkImgPhInstance.c	/^AllocateColors($/;"	f	file:
AllocateResource	generic/ttk/ttkTheme.c	/^static int AllocateResource($/;"	f	file:
Allocator	generic/ttk/ttkCache.c	/^typedef void *(*Allocator)(Tcl_Interp *, Tk_Window, Tcl_Obj *);$/;"	t	file:
AllowExposures	xlib/X11/X.h	633;"	d
AlreadyGrabbed	xlib/X11/X.h	279;"	d
Always	xlib/X11/X.h	396;"	d
AlwaysRedraw	generic/tkCanvas.c	/^AlwaysRedraw($/;"	f	file:
AncestryCheck	generic/ttk/ttkTreeview.c	/^static int AncestryCheck($/;"	f	file:
Anchor	library/demos/goldberg.tcl	/^proc Anchor {w item where} {$/;"	p
AnchorToSticky	generic/ttk/ttkLayout.c	/^static Ttk_Sticky AnchorToSticky(Tk_Anchor anchor)$/;"	f	file:
AngleInRange	generic/tkCanvArc.c	/^AngleInRange($/;"	f	file:
AnimateProgressProc	generic/ttk/ttkProgress.c	/^static void AnimateProgressProc(ClientData clientData)$/;"	f	file:
AnimationEnabled	generic/ttk/ttkProgress.c	/^static int AnimationEnabled(Progressbar *pb)$/;"	f	file:
AnyButton	xlib/X11/X.h	95;"	d
AnyButtonMask	generic/tkTextTag.c	1415;"	d	file:
AnyKey	xlib/X11/X.h	93;"	d
AnyModifier	xlib/X11/X.h	211;"	d
AnyPropertyType	xlib/X11/X.h	91;"	d
AppendErrorProc	unix/tkUnixSend.c	/^AppendErrorProc($/;"	f	file:
AppendPropCarefully	unix/tkUnixSend.c	/^AppendPropCarefully($/;"	f	file:
AppendSystemError	win/tkWinTest.c	/^AppendSystemError($/;"	f	file:
ApplyAlpha	generic/tkImgPNG.c	/^ApplyAlpha($/;"	f	file:
ApplyFont	library/demos/fontchoose.tcl	/^proc ApplyFont {font} {$/;"	p
ApplyLogfont	win/tkWinDialog.c	/^ApplyLogfont($/;"	f	file:
ApplyMasterOverrideChanges	macosx/tkMacOSXWm.c	/^ApplyMasterOverrideChanges($/;"	f	file:
ApplyProperties	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *ApplyProperties )($/;"	m	struct:IFileSaveDialogVtbl	file:
ApplyWindowAttributeFlagChanges	macosx/tkMacOSXWm.c	/^ApplyWindowAttributeFlagChanges($/;"	f	file:
AppnameCmd	generic/tkCmds.c	/^AppnameCmd($/;"	f
AquaTheme_Init	macosx/ttkMacOSXTheme.c	/^static int AquaTheme_Init(Tcl_Interp *interp)$/;"	f	file:
ArcChord	xlib/X11/X.h	513;"	d
ArcCoords	generic/tkCanvArc.c	/^ArcCoords($/;"	f	file:
ArcItem	generic/tkCanvArc.c	/^typedef struct ArcItem {$/;"	s	file:
ArcItem	generic/tkCanvArc.c	/^} ArcItem;$/;"	t	typeref:struct:ArcItem	file:
ArcPieSlice	xlib/X11/X.h	514;"	d
ArcToArea	generic/tkCanvArc.c	/^ArcToArea($/;"	f	file:
ArcToPoint	generic/tkCanvArc.c	/^ArcToPoint($/;"	f	file:
ArcToPostscript	generic/tkCanvArc.c	/^ArcToPostscript($/;"	f	file:
ArgPfxEq	generic/tkUtil.c	735;"	d	file:
ArrangeGrid	generic/tkGrid.c	/^ArrangeGrid($/;"	f	file:
ArrangePacking	generic/tkPack.c	/^ArrangePacking($/;"	f	file:
ArrangePanes	generic/tkPanedWindow.c	/^ArrangePanes($/;"	f	file:
ArrowDirection	generic/ttk/ttkTheme.h	/^typedef enum { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT } ArrowDirection;$/;"	t	typeref:enum:__anon80
ArrowElement	generic/ttk/ttkClassicTheme.c	/^} ArrowElement;$/;"	t	typeref:struct:__anon105	file:
ArrowElement	generic/ttk/ttkDefaultTheme.c	/^} ArrowElement;$/;"	t	typeref:struct:__anon92	file:
ArrowElement	generic/ttk/ttkElements.c	/^} ArrowElement;$/;"	t	typeref:struct:__anon42	file:
ArrowElementDraw	generic/ttk/ttkClamTheme.c	/^static void ArrowElementDraw($/;"	f	file:
ArrowElementDraw	generic/ttk/ttkClassicTheme.c	/^static void ArrowElementDraw($/;"	f	file:
ArrowElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void ArrowElementDraw($/;"	f	file:
ArrowElementDraw	generic/ttk/ttkElements.c	/^static void ArrowElementDraw($/;"	f	file:
ArrowElementOptions	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementOptionSpec ArrowElementOptions[] =$/;"	v	file:
ArrowElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec ArrowElementOptions[] = {$/;"	v	file:
ArrowElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec ArrowElementOptions[] = {$/;"	v	file:
ArrowElementSize	generic/ttk/ttkClamTheme.c	/^static void ArrowElementSize($/;"	f	file:
ArrowElementSize	generic/ttk/ttkClassicTheme.c	/^static void ArrowElementSize($/;"	f	file:
ArrowElementSize	generic/ttk/ttkDefaultTheme.c	/^static void ArrowElementSize($/;"	f	file:
ArrowElementSize	generic/ttk/ttkElements.c	/^static void ArrowElementSize($/;"	f	file:
ArrowElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec ArrowElementSpec = {$/;"	v	file:
ArrowElementSpec	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementSpec ArrowElementSpec =$/;"	v	file:
ArrowElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec ArrowElementSpec = {$/;"	v	file:
ArrowElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec ArrowElementSpec = {$/;"	v	file:
ArrowElements	generic/ttk/ttkClamTheme.c	/^static int ArrowElements[] = { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT };$/;"	v	file:
ArrowElements	generic/ttk/ttkClassicTheme.c	/^static int ArrowElements[] = { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT };$/;"	v	file:
ArrowElements	generic/ttk/ttkDefaultTheme.c	/^static int ArrowElements[] = { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT };$/;"	v	file:
ArrowElements	generic/ttk/ttkElements.c	/^static int ArrowElements[] = { ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT };$/;"	v	file:
ArrowMargins	generic/ttk/ttkElements.c	/^static Ttk_Padding ArrowMargins = { 3,3,3,3 };$/;"	v	file:
ArrowPadding	generic/ttk/ttkDefaultTheme.c	/^static Ttk_Padding ArrowPadding = { 3,3,4,4 };$/;"	v	file:
ArrowParseProc	generic/tkCanvLine.c	/^ArrowParseProc($/;"	f	file:
ArrowPoints	generic/ttk/ttkDefaultTheme.c	/^static void ArrowPoints(Ttk_Box b, ArrowDirection dir, XPoint points[4])$/;"	f	file:
ArrowPrintProc	generic/tkCanvLine.c	/^ArrowPrintProc($/;"	f	file:
ArrowheadPostscript	generic/tkCanvLine.c	/^ArrowheadPostscript($/;"	f	file:
Arrows	generic/tkCanvLine.c	/^} Arrows;$/;"	t	typeref:enum:__anon155	file:
Async	win/tkWinSendCom.c	/^Async($/;"	f	file:
AsyncBoth	xlib/X11/X.h	292;"	d
AsyncKeyboard	xlib/X11/X.h	289;"	d
AsyncPointer	xlib/X11/X.h	286;"	d
AsyncUpdateLineMetrics	generic/tkTextDisp.c	/^AsyncUpdateLineMetrics($/;"	f	file:
AsyncUpdateYScrollbar	generic/tkTextDisp.c	/^AsyncUpdateYScrollbar($/;"	f	file:
Atom	xlib/X11/X.h	/^typedef unsigned long Atom;$/;"	t
AtomInit	generic/tkAtom.c	/^AtomInit($/;"	f	file:
AutoRepeatModeDefault	xlib/X11/X.h	597;"	d
AutoRepeatModeOff	xlib/X11/X.h	595;"	d
AutoRepeatModeOn	xlib/X11/X.h	596;"	d
BASE_CHARS	unix/tkUnixFont.c	96;"	d	file:
BASE_CHARS	win/tkWinFont.c	111;"	d	file:
BBOX_NOT_EMPTY	generic/tkCanvas.h	275;"	d
BEGIN_DRAWING	macosx/ttkMacOSXTheme.c	39;"	d	file:
BFFM_VALIDATEFAILED	win/tkWinDialog.c	45;"	d	file:
BFFM_VALIDATEFAILED	win/tkWinDialog.c	47;"	d	file:
BIF_EDITBOX	win/tkWinDialog.c	31;"	d	file:
BIF_NEWDIALOGSTYLE	win/tkWinDialog.c	40;"	d	file:
BIF_VALIDATE	win/tkWinDialog.c	35;"	d	file:
BINDIR	macosx/GNUmakefile	/^BINDIR			?= ${PREFIX}\/bin$/;"	m
BIN_INSTALL_DIR	unix/Makefile	/^BIN_INSTALL_DIR		= $(INSTALL_ROOT)$(bindir)$/;"	m
BLACK	macosx/tkMacOSXDefault.h	34;"	d
BLACK	unix/tkUnixDefault.h	27;"	d
BLACK	win/tkWinDefault.h	26;"	d
BLACK_AND_WHITE	generic/tkImgPhoto.h	134;"	d
BLUE	xlib/xcolors.c	334;"	d	file:
BMAP_DIR	unix/Makefile	/^BMAP_DIR		= $(TOP_DIR)\/bitmaps$/;"	m
BM_IGNORE	generic/tkPlace.c	/^typedef enum {BM_INSIDE, BM_OUTSIDE, BM_IGNORE} BorderMode;$/;"	e	enum:__anon136	file:
BM_INSIDE	generic/tkPlace.c	/^typedef enum {BM_INSIDE, BM_OUTSIDE, BM_IGNORE} BorderMode;$/;"	e	enum:__anon136	file:
BM_OUTSIDE	generic/tkPlace.c	/^typedef enum {BM_INSIDE, BM_OUTSIDE, BM_IGNORE} BorderMode;$/;"	e	enum:__anon136	file:
BORDERWIDTH	generic/ttk/ttkDefaultTheme.c	21;"	d	file:
BORDER_NEEDED	generic/tkEntry.h	260;"	d
BOTTOM	generic/tkPack.c	/^typedef enum {TOP, BOTTOM, LEFT, RIGHT} Side;$/;"	e	enum:__anon151	file:
BOTTOM_ARROW	generic/tkScrollbar.h	140;"	d
BOTTOM_GAP	generic/tkScrollbar.h	139;"	d
BOTTOM_LINE	generic/tkTextDisp.c	285;"	d	file:
BPadding	generic/ttk/ttkImage.c	/^static Ttk_Box BPadding(Ttk_Box b, Ttk_Padding p)$/;"	f	file:
BRDR	generic/ttk/ttkDefaultTheme.c	/^enum BorderColor { FLAT = 1, LITE = 2, DARK = 3, BRDR = 4 };$/;"	e	enum:BorderColor	file:
BTree	generic/tkTextBTree.c	/^typedef struct BTree {$/;"	s	file:
BTree	generic/tkTextBTree.c	/^} BTree;$/;"	t	typeref:struct:BTree	file:
BUFFER_SIZE	generic/tkImgPPM.c	656;"	d	file:
BUFFER_SIZE	generic/tkImgPPM.c	763;"	d	file:
BUILD_DIR	macosx/GNUmakefile	/^BUILD_DIR		?= ${CURDIR}\/..\/..\/build$/;"	m
BUILD_HTML	unix/Makefile	/^BUILD_HTML = \\$/;"	m
BUILD_STYLE	macosx/GNUmakefile	/^BUILD_STYLE		=$/;"	m
BUILD_TARGET	macosx/GNUmakefile	/^BUILD_TARGET		:= all tktest$/;"	m
BUILD_TCLSH	unix/Makefile	/^BUILD_TCLSH		= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6\/unix\/tclsh$/;"	m
BUILD_tk	unix/tkAppInit.c	15;"	d	file:
BUTTON	generic/tkBind.c	464;"	d	file:
BUTTON_DELETED	generic/tkButton.h	287;"	d
BUTTON_DOWN	generic/tkText.h	815;"	d
BYTETABLE	win/tkWinFont.c	/^typedef struct BYTETABLE {$/;"	s	file:
BYTETABLE	win/tkWinFont.c	/^} BYTETABLE;$/;"	t	typeref:struct:BYTETABLE	file:
BackgroundElement	generic/ttk/ttkElements.c	/^} BackgroundElement;$/;"	t	typeref:struct:__anon33	file:
BackgroundElementDraw	generic/ttk/ttkElements.c	/^static void BackgroundElementDraw($/;"	f	file:
BackgroundElementDraw	macosx/ttkMacOSXTheme.c	/^static void BackgroundElementDraw($/;"	f	file:
BackgroundElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec BackgroundElementOptions[] = {$/;"	v	file:
BackgroundElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec BackgroundElementSpec = {$/;"	v	file:
BackgroundElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec BackgroundElementSpec = {$/;"	v	file:
BackgroundGC	generic/ttk/ttkClamTheme.c	/^static GC BackgroundGC(Tk_Window tkwin, Tcl_Obj *backgroundObj)$/;"	f	file:
BadAccess	xlib/X11/X.h	315;"	d
BadAlloc	xlib/X11/X.h	324;"	d
BadAtom	xlib/X11/X.h	310;"	d
BadColor	xlib/X11/X.h	325;"	d
BadCursor	xlib/X11/X.h	311;"	d
BadDrawable	xlib/X11/X.h	314;"	d
BadFont	xlib/X11/X.h	312;"	d
BadGC	xlib/X11/X.h	326;"	d
BadIDChoice	xlib/X11/X.h	327;"	d
BadImplementation	xlib/X11/X.h	330;"	d
BadLength	xlib/X11/X.h	329;"	d
BadMatch	xlib/X11/X.h	313;"	d
BadName	xlib/X11/X.h	328;"	d
BadPixmap	xlib/X11/X.h	309;"	d
BadRequest	xlib/X11/X.h	306;"	d
BadValue	xlib/X11/X.h	307;"	d
BadWindow	xlib/X11/X.h	308;"	d
Base	generic/ttk/ttkButton.c	/^} Base;$/;"	t	typeref:struct:__anon14	file:
BaseCharInfo	generic/tkTextDisp.c	/^typedef struct BaseCharInfo {$/;"	s	file:
BaseCharInfo	generic/tkTextDisp.c	/^} BaseCharInfo;$/;"	t	typeref:struct:BaseCharInfo	file:
BaseCleanup	generic/ttk/ttkButton.c	/^BaseCleanup(void *recordPtr)$/;"	f	file:
BaseConfigure	generic/ttk/ttkButton.c	/^static int BaseConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
BaseInitialize	generic/ttk/ttkButton.c	/^BaseInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
BaseOptionSpecs	generic/ttk/ttkButton.c	/^static Tk_OptionSpec BaseOptionSpecs[] =$/;"	v	file:
BasePart	generic/ttk/ttkButton.c	/^} BasePart;$/;"	t	typeref:struct:__anon13	file:
BasePostConfigure	generic/ttk/ttkButton.c	/^BasePostConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
BeginDrawing	generic/ttk/ttkWidget.c	/^static Drawable BeginDrawing(Tk_Window tkwin) { return Tk_WindowId(tkwin); }$/;"	f	file:
BeginDrawing	generic/ttk/ttkWidget.c	/^static Drawable BeginDrawing(Tk_Window tkwin)$/;"	f	file:
Below	xlib/X11/X.h	418;"	d
BevelButtonParams	macosx/ttkMacOSXTheme.c	/^    BevelButtonParams = { kThemeBevelButton, NoThemeMetric },$/;"	v	file:
BindInfo	generic/tkBind.c	/^} BindInfo;$/;"	t	typeref:struct:TkBindInfo_	file:
BindToHandler	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *BindToHandler )(IShellItemArray *,$/;"	m	struct:IShellItemArrayVtbl	file:
BindToHandler	win/tkWinDialog.c	/^    HRESULT (STDMETHODCALLTYPE *BindToHandler)(IShellItem *, IBindCtx *, REFGUID, REFIID, void **);$/;"	m	struct:IShellItemVtbl	file:
BindingTable	generic/tkBind.c	/^} BindingTable;$/;"	t	typeref:struct:Tk_BindingTable_	file:
BitSet	generic/tkImgGIF.c	155;"	d	file:
BitmapBitOrder	xlib/X11/Xlib.h	96;"	d
BitmapCoords	generic/tkCanvBmap.c	/^BitmapCoords($/;"	f	file:
BitmapFileInvalid	xlib/X11/Xutil.h	279;"	d
BitmapInit	generic/tkBitmap.c	/^BitmapInit($/;"	f	file:
BitmapInstance	generic/tkImgBmap.c	/^typedef struct BitmapInstance {$/;"	s	file:
BitmapInstance	generic/tkImgBmap.c	/^} BitmapInstance;$/;"	t	typeref:struct:BitmapInstance	file:
BitmapItem	generic/tkCanvBmap.c	/^typedef struct BitmapItem  {$/;"	s	file:
BitmapItem	generic/tkCanvBmap.c	/^} BitmapItem;$/;"	t	typeref:struct:BitmapItem	file:
BitmapMaster	generic/tkImgBmap.c	/^typedef struct BitmapMaster {$/;"	s	file:
BitmapMaster	generic/tkImgBmap.c	/^} BitmapMaster;$/;"	t	typeref:struct:BitmapMaster	file:
BitmapNoMemory	xlib/X11/Xutil.h	280;"	d
BitmapOpenFailed	xlib/X11/Xutil.h	278;"	d
BitmapPad	xlib/X11/Xlib.h	97;"	d
BitmapRepFromDrawableRect	macosx/tkMacOSXDraw.c	/^BitmapRepFromDrawableRect($/;"	f
BitmapSuccess	xlib/X11/Xutil.h	277;"	d
BitmapToArea	generic/tkCanvBmap.c	/^BitmapToArea($/;"	f	file:
BitmapToPoint	generic/tkCanvBmap.c	/^BitmapToPoint($/;"	f	file:
BitmapToPostscript	generic/tkCanvBmap.c	/^BitmapToPostscript($/;"	f	file:
BitmapUnit	xlib/X11/Xlib.h	95;"	d
BlackPixel	xlib/X11/Xlib.h	77;"	d
BlackPixelOfScreen	xlib/X11/Xlib.h	107;"	d
BlendComplexAlpha	generic/tkImgPhInstance.c	/^BlendComplexAlpha($/;"	f	file:
BlockOfIconImages	win/tkWinWm.c	/^} BlockOfIconImages, *BlockOfIconImagesPtr;$/;"	t	typeref:struct:__anon234	file:
BlockOfIconImagesPtr	win/tkWinWm.c	/^} BlockOfIconImages, *BlockOfIconImagesPtr;$/;"	t	typeref:struct:__anon234	file:
Bool	xlib/X11/Xlib.h	57;"	d
BorderColor	generic/ttk/ttkDefaultTheme.c	/^enum BorderColor { FLAT = 1, LITE = 2, DARK = 3, BRDR = 4 };$/;"	g	file:
BorderElement	generic/ttk/ttkClamTheme.c	/^} BorderElement;$/;"	t	typeref:struct:__anon53	file:
BorderElement	generic/ttk/ttkDefaultTheme.c	/^} BorderElement;$/;"	t	typeref:struct:__anon88	file:
BorderElement	generic/ttk/ttkElements.c	/^} BorderElement;$/;"	t	typeref:struct:__anon34	file:
BorderElement	win/ttkWinTheme.c	/^} BorderElement;$/;"	t	typeref:struct:__anon245	file:
BorderElementDraw	generic/ttk/ttkClamTheme.c	/^static void BorderElementDraw($/;"	f	file:
BorderElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void BorderElementDraw($/;"	f	file:
BorderElementDraw	generic/ttk/ttkElements.c	/^static void BorderElementDraw($/;"	f	file:
BorderElementDraw	win/ttkWinTheme.c	/^static void BorderElementDraw($/;"	f	file:
BorderElementOptions	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementOptionSpec BorderElementOptions[] = {$/;"	v	file:
BorderElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec BorderElementOptions[] = {$/;"	v	file:
BorderElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec BorderElementOptions[] = {$/;"	v	file:
BorderElementOptions	win/ttkWinTheme.c	/^static Ttk_ElementOptionSpec BorderElementOptions[] = {$/;"	v	file:
BorderElementSize	generic/ttk/ttkClamTheme.c	/^static void BorderElementSize($/;"	f	file:
BorderElementSize	generic/ttk/ttkDefaultTheme.c	/^static void BorderElementSize($/;"	f	file:
BorderElementSize	generic/ttk/ttkElements.c	/^static void BorderElementSize($/;"	f	file:
BorderElementSize	win/ttkWinTheme.c	/^static void BorderElementSize($/;"	f	file:
BorderElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec BorderElementSpec = {$/;"	v	file:
BorderElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec BorderElementSpec = {$/;"	v	file:
BorderElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec BorderElementSpec = {$/;"	v	file:
BorderElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec BorderElementSpec = {$/;"	v	file:
BorderInit	generic/tk3d.c	/^BorderInit($/;"	f	file:
BorderMode	generic/tkPlace.c	/^typedef enum {BM_INSIDE, BM_OUTSIDE, BM_IGNORE} BorderMode;$/;"	t	typeref:enum:__anon136	file:
BottomIf	xlib/X11/X.h	420;"	d
BoundingBox	generic/ttk/ttkTreeview.c	/^static int BoundingBox($/;"	f	file:
BoxToRect	macosx/ttkMacOSXTheme.c	/^static inline CGRect BoxToRect(Drawable d, Ttk_Box b)$/;"	f	file:
BoxToRect	win/ttkWinTheme.c	/^static RECT BoxToRect(Ttk_Box b)$/;"	f	file:
BoxToRect	win/ttkWinXPTheme.c	/^BoxToRect(Ttk_Box b)$/;"	f	file:
BuildMoniker	win/tkWinSend.c	/^BuildMoniker($/;"	f	file:
BuildOptionMap	generic/ttk/ttkTheme.c	/^BuildOptionMap(Ttk_ElementClass *elementClass, Tk_OptionTable optionTable)$/;"	f	file:
BuildTestImage	tests/canvPsImg.tcl	/^proc BuildTestImage {} {$/;"	p
BuiltInIcon	macosx/tkMacOSXBitmap.c	/^} BuiltInIcon;$/;"	t	typeref:struct:__anon187	file:
Busy	generic/tkBusy.h	/^typedef struct Busy {$/;"	s
Busy	generic/tkBusy.h	/^} Busy;$/;"	t	typeref:struct:Busy
BusyCustodyProc	generic/tkBusy.c	/^BusyCustodyProc($/;"	f	file:
BusyEventProc	generic/tkBusy.c	/^BusyEventProc($/;"	f	file:
BusyGeometryProc	generic/tkBusy.c	/^BusyGeometryProc($/;"	f	file:
Button	generic/ttk/ttkButton.c	/^} Button;$/;"	t	typeref:struct:__anon18	file:
Button1	xlib/X11/X.h	218;"	d
Button1Mask	xlib/X11/X.h	205;"	d
Button1MotionMask	xlib/X11/X.h	119;"	d
Button2	xlib/X11/X.h	219;"	d
Button2Mask	xlib/X11/X.h	206;"	d
Button2MotionMask	xlib/X11/X.h	120;"	d
Button3	xlib/X11/X.h	220;"	d
Button3Mask	xlib/X11/X.h	207;"	d
Button3MotionMask	xlib/X11/X.h	121;"	d
Button4	xlib/X11/X.h	221;"	d
Button4Mask	xlib/X11/X.h	208;"	d
Button4MotionMask	xlib/X11/X.h	122;"	d
Button5	xlib/X11/X.h	222;"	d
Button5Mask	xlib/X11/X.h	209;"	d
Button5MotionMask	xlib/X11/X.h	123;"	d
ButtonAdornmentTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable ButtonAdornmentTable[] = {$/;"	v	file:
ButtonBackgroundDrawCB	macosx/tkMacOSXButton.c	/^ButtonBackgroundDrawCB ($/;"	f	file:
ButtonBorderElement	generic/ttk/ttkClassicTheme.c	/^} ButtonBorderElement;$/;"	t	typeref:struct:__anon104	file:
ButtonBorderElement	win/ttkWinTheme.c	/^} ButtonBorderElement;$/;"	t	typeref:struct:__anon247	file:
ButtonBorderElementDraw	generic/ttk/ttkClassicTheme.c	/^static void ButtonBorderElementDraw($/;"	f	file:
ButtonBorderElementDraw	win/ttkWinTheme.c	/^static void ButtonBorderElementDraw($/;"	f	file:
ButtonBorderElementOptions	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementOptionSpec ButtonBorderElementOptions[] =$/;"	v	file:
ButtonBorderElementOptions	win/ttkWinTheme.c	/^static Ttk_ElementOptionSpec ButtonBorderElementOptions[] = {$/;"	v	file:
ButtonBorderElementSize	generic/ttk/ttkClassicTheme.c	/^static void ButtonBorderElementSize($/;"	f	file:
ButtonBorderElementSize	win/ttkWinTheme.c	/^static void ButtonBorderElementSize($/;"	f	file:
ButtonBorderElementSpec	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementSpec ButtonBorderElementSpec =$/;"	v	file:
ButtonBorderElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec ButtonBorderElementSpec = {$/;"	v	file:
ButtonCmdDeletedProc	generic/tkButton.c	/^ButtonCmdDeletedProc($/;"	f	file:
ButtonCommands	generic/ttk/ttkButton.c	/^static const Ttk_Ensemble ButtonCommands[] = {$/;"	v	file:
ButtonConfigure	generic/ttk/ttkButton.c	/^static int ButtonConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
ButtonContentDrawCB	macosx/tkMacOSXButton.c	/^ButtonContentDrawCB ($/;"	f	file:
ButtonCreate	generic/tkButton.c	/^ButtonCreate($/;"	f	file:
ButtonElementDraw	macosx/ttkMacOSXTheme.c	/^static void ButtonElementDraw($/;"	f	file:
ButtonElementSize	macosx/ttkMacOSXTheme.c	/^static void ButtonElementSize($/;"	f	file:
ButtonElementSizeNoPadding	macosx/ttkMacOSXTheme.c	/^static void ButtonElementSizeNoPadding($/;"	f	file:
ButtonElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec ButtonElementSpec = {$/;"	v	file:
ButtonEventProc	generic/tkButton.c	/^ButtonEventProc($/;"	f	file:
ButtonEventProc	macosx/tkMacOSXButton.c	/^ButtonEventProc($/;"	f	file:
ButtonImageProc	generic/tkButton.c	/^ButtonImageProc($/;"	f	file:
ButtonInvokeCommand	generic/ttk/ttkButton.c	/^ButtonInvokeCommand($/;"	f	file:
ButtonMargins	macosx/ttkMacOSXTheme.c	/^static Ttk_Padding ButtonMargins = {2,2,2,2};$/;"	v	file:
ButtonMask	generic/tkPointer.c	36;"	d	file:
ButtonModifiers2State	macosx/tkMacOSXMouseEvent.c	/^ButtonModifiers2State($/;"	f	file:
ButtonMotionMask	xlib/X11/X.h	124;"	d
ButtonOptionSpecs	generic/ttk/ttkButton.c	/^static Tk_OptionSpec ButtonOptionSpecs[] =$/;"	v	file:
ButtonPart	generic/ttk/ttkButton.c	/^} ButtonPart;$/;"	t	typeref:struct:__anon17	file:
ButtonPress	xlib/X11/X.h	143;"	d
ButtonPressMask	xlib/X11/X.h	113;"	d
ButtonProc	win/tkWinButton.c	/^ButtonProc($/;"	f	file:
ButtonRelease	xlib/X11/X.h	144;"	d
ButtonReleaseMask	xlib/X11/X.h	114;"	d
ButtonSelectImageProc	generic/tkButton.c	/^ButtonSelectImageProc($/;"	f	file:
ButtonTextVarProc	generic/tkButton.c	/^ButtonTextVarProc($/;"	f	file:
ButtonTristateImageProc	generic/tkButton.c	/^ButtonTristateImageProc($/;"	f	file:
ButtonValueTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable ButtonValueTable[] = {$/;"	v	file:
ButtonVarProc	generic/tkButton.c	/^ButtonVarProc($/;"	f	file:
ButtonWidgetObjCmd	generic/tkButton.c	/^ButtonWidgetObjCmd($/;"	f	file:
ButtonWidgetSpec	generic/ttk/ttkButton.c	/^static WidgetSpec ButtonWidgetSpec =$/;"	v	file:
BytesPerLine	win/tkWinWm.c	/^BytesPerLine($/;"	f	file:
CANV_OBJS	unix/Makefile	/^CANV_OBJS = tkCanvas.o tkCanvArc.o tkCanvBmap.o tkCanvImg.o \\$/;"	m
CASCADE_ARROW_HEIGHT	generic/tkMenu.h	475;"	d
CASCADE_ARROW_WIDTH	generic/tkMenu.h	476;"	d
CASCADE_ENTRY	generic/tkMenu.h	239;"	d
CC	unix/Makefile	/^CC			= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/host\/usr\/bin\/arm-linux-gnueabihf-gcc$/;"	m
CC_SEARCH_FLAGS	unix/Makefile	/^CC_SEARCH_FLAGS	= -Wl,-rpath,${LIB_RUNTIME_DIR}$/;"	m
CC_SWITCHES	unix/Makefile	/^CC_SWITCHES = $(CC_SWITCHES_NO_STUBS) -DUSE_TCL_STUBS$/;"	m
CC_SWITCHES_NO_STUBS	unix/Makefile	/^CC_SWITCHES_NO_STUBS = ${CFLAGS} ${CFLAGS_WARNING} ${SHLIB_CFLAGS} \\$/;"	m
CENTER	generic/tkText.h	/^typedef enum {LEFT, RIGHT, CENTER, NUMERIC} TkTextTabAlign;$/;"	e	enum:__anon160
CFLAGS	unix/Makefile	/^CFLAGS			= $(CFLAGS_OPTIMIZE)  -pipe $/;"	m
CFLAGS_DEBUG	unix/Makefile	/^CFLAGS_DEBUG		= -g$/;"	m
CFLAGS_OPTIMIZE	unix/Makefile	/^CFLAGS_OPTIMIZE		= -O2$/;"	m
CFLAGS_WARNING	unix/Makefile	/^CFLAGS_WARNING		= -Wall$/;"	m
CFRAC	generic/tkImgPhInstance.c	1150;"	d	file:
CGColorRef	macosx/tkMacOSXInt.h	147;"	d
CGColorRef	macosx/tkMacOSXInt.h	50;"	d
CGContextRef	macosx/tkMacOSXInt.h	144;"	d
CGContextRef	macosx/tkMacOSXInt.h	47;"	d
CGFRAC	generic/tkImgPhInstance.c	1153;"	d	file:
CGFloat	macosx/tkMacOSXInt.h	139;"	d
CGFloat	macosx/tkMacOSXInt.h	39;"	d
CGFloat	macosx/tkMacOSXInt.h	41;"	d
CGSize	macosx/tkMacOSXInt.h	141;"	d
CGSize	macosx/tkMacOSXInt.h	44;"	d
CHECK_BUTTON	unix/tkUnixButton.c	125;"	d	file:
CHECK_BUTTON	unix/tkUnixMenu.c	42;"	d	file:
CHECK_BUTTON_DIM	unix/tkUnixButton.c	105;"	d	file:
CHECK_BUTTON_ENTRY	generic/tkMenu.h	240;"	d
CHECK_DISOFF_OFFSET	unix/tkUnixButton.c	111;"	d	file:
CHECK_DISON_OFFSET	unix/tkUnixButton.c	110;"	d	file:
CHECK_INDICATOR	unix/tkUnixDefault.h	34;"	d
CHECK_MENU	unix/tkUnixButton.c	126;"	d	file:
CHECK_MENU	unix/tkUnixMenu.c	43;"	d	file:
CHECK_MENU_DIM	unix/tkUnixButton.c	106;"	d	file:
CHECK_OFF_OFFSET	unix/tkUnixButton.c	109;"	d	file:
CHECK_ONLY	generic/tkGrid.c	26;"	d	file:
CHECK_ON_OFFSET	unix/tkUnixButton.c	108;"	d	file:
CHECK_SPACE	generic/tkGrid.c	27;"	d	file:
CHECK_START	unix/tkUnixButton.c	107;"	d	file:
CHECK_STYLE	win/tkWinButton.c	23;"	d	file:
CHILD_HEIGHT	generic/tkPlace.c	122;"	d	file:
CHILD_REL_HEIGHT	generic/tkPlace.c	123;"	d	file:
CHILD_REL_WIDTH	generic/tkPlace.c	121;"	d	file:
CHILD_WIDTH	generic/tkPlace.c	120;"	d	file:
CHOOSE_COMMAND	macosx/tkMacOSXDialog.c	/^    CHOOSE_TITLE, CHOOSE_COMMAND,$/;"	e	enum:chooseOptions	file:
CHOOSE_INITDIR	macosx/tkMacOSXDialog.c	/^    CHOOSE_INITDIR, CHOOSE_MESSAGE, CHOOSE_MUSTEXIST, CHOOSE_PARENT,$/;"	e	enum:chooseOptions	file:
CHOOSE_MESSAGE	macosx/tkMacOSXDialog.c	/^    CHOOSE_INITDIR, CHOOSE_MESSAGE, CHOOSE_MUSTEXIST, CHOOSE_PARENT,$/;"	e	enum:chooseOptions	file:
CHOOSE_MUSTEXIST	macosx/tkMacOSXDialog.c	/^    CHOOSE_INITDIR, CHOOSE_MESSAGE, CHOOSE_MUSTEXIST, CHOOSE_PARENT,$/;"	e	enum:chooseOptions	file:
CHOOSE_PARENT	macosx/tkMacOSXDialog.c	/^    CHOOSE_INITDIR, CHOOSE_MESSAGE, CHOOSE_MUSTEXIST, CHOOSE_PARENT,$/;"	e	enum:chooseOptions	file:
CHOOSE_TITLE	macosx/tkMacOSXDialog.c	/^    CHOOSE_TITLE, CHOOSE_COMMAND,$/;"	e	enum:chooseOptions	file:
CHORD_OUTLINE_PTS	generic/tkCanvArc.c	72;"	d	file:
CHORD_STYLE	generic/tkCanvArc.c	/^    PIESLICE_STYLE, CHORD_STYLE, ARC_STYLE$/;"	e	enum:__anon186	file:
CHUNK	win/nmakehlp.c	55;"	d	file:
CHUNK_IDAT	generic/tkImgPNG.c	49;"	d	file:
CHUNK_IEND	generic/tkImgPNG.c	50;"	d	file:
CHUNK_IHDR	generic/tkImgPNG.c	51;"	d	file:
CHUNK_PLTE	generic/tkImgPNG.c	52;"	d	file:
CHUNK_bKGD	generic/tkImgPNG.c	54;"	d	file:
CHUNK_cHRM	generic/tkImgPNG.c	55;"	d	file:
CHUNK_gAMA	generic/tkImgPNG.c	56;"	d	file:
CHUNK_hIST	generic/tkImgPNG.c	57;"	d	file:
CHUNK_iCCP	generic/tkImgPNG.c	58;"	d	file:
CHUNK_iTXt	generic/tkImgPNG.c	59;"	d	file:
CHUNK_oFFs	generic/tkImgPNG.c	62;"	d	file:
CHUNK_pCAL	generic/tkImgPNG.c	63;"	d	file:
CHUNK_pHYs	generic/tkImgPNG.c	65;"	d	file:
CHUNK_sBIT	generic/tkImgPNG.c	67;"	d	file:
CHUNK_sCAL	generic/tkImgPNG.c	68;"	d	file:
CHUNK_sPLT	generic/tkImgPNG.c	69;"	d	file:
CHUNK_sRGB	generic/tkImgPNG.c	71;"	d	file:
CHUNK_tEXt	generic/tkImgPNG.c	73;"	d	file:
CHUNK_tIME	generic/tkImgPNG.c	75;"	d	file:
CHUNK_tRNS	generic/tkImgPNG.c	76;"	d	file:
CHUNK_zTXt	generic/tkImgPNG.c	77;"	d	file:
CIRC	generic/tkBind.c	477;"	d	file:
CIRCREQ	generic/tkBind.c	485;"	d	file:
CLANG_ASSERT	generic/tkInt.h	974;"	d
CLANG_ASSERT	generic/tkInt.h	977;"	d
CLASS	generic/tkOption.c	92;"	d	file:
CMAPHEX	win/tkWinFont.c	2598;"	d	file:
CMAPTABLE	win/tkWinFont.c	/^typedef struct CMAPTABLE {$/;"	s	file:
CMAPTABLE	win/tkWinFont.c	/^} CMAPTABLE;$/;"	t	typeref:struct:CMAPTABLE	file:
CM_ALPHA	generic/tkImgGIF.c	160;"	d	file:
CM_BLUE	generic/tkImgGIF.c	159;"	d	file:
CM_GREEN	generic/tkImgGIF.c	158;"	d	file:
CM_RED	generic/tkImgGIF.c	157;"	d	file:
COLORMAP	generic/tkBind.c	479;"	d	file:
COLORREF	unix/tkUnixPort.h	118;"	d
COLOR_IMAGE	generic/tkImgPhoto.h	181;"	d
COLOR_INITIAL	macosx/tkMacOSXDialog.c	/^    COLOR_INITIAL, COLOR_PARENT, COLOR_TITLE$/;"	e	enum:colorOptions	file:
COLOR_MAGIC	generic/tkColor.h	26;"	d
COLOR_PARENT	macosx/tkMacOSXDialog.c	/^    COLOR_INITIAL, COLOR_PARENT, COLOR_TITLE$/;"	e	enum:colorOptions	file:
COLOR_TITLE	macosx/tkMacOSXDialog.c	/^    COLOR_INITIAL, COLOR_PARENT, COLOR_TITLE$/;"	e	enum:colorOptions	file:
COLOR_WINDOW	generic/tkImgPhoto.h	131;"	d
COLOR_WINDOW	generic/tkImgPhoto.h	135;"	d
COLUMN	generic/tkGrid.c	23;"	d	file:
COLUMNS_CHANGED	generic/ttk/ttkTreeview.c	433;"	d	file:
COMMAND_ACTIVATE	generic/tkListbox.c	/^    COMMAND_ACTIVATE, COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE,$/;"	e	enum:command	file:
COMMAND_BBOX	generic/tkEntry.c	/^    COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DELETE,$/;"	e	enum:entryCmd	file:
COMMAND_BBOX	generic/tkListbox.c	/^    COMMAND_ACTIVATE, COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE,$/;"	e	enum:command	file:
COMMAND_CGET	generic/tkButton.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DESELECT, COMMAND_FLASH,$/;"	e	enum:command	file:
COMMAND_CGET	generic/tkEntry.c	/^    COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DELETE,$/;"	e	enum:entryCmd	file:
COMMAND_CGET	generic/tkListbox.c	/^    COMMAND_ACTIVATE, COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE,$/;"	e	enum:command	file:
COMMAND_CGET	generic/tkMenubutton.c	/^    COMMAND_CGET, COMMAND_CONFIGURE$/;"	e	enum:command	file:
COMMAND_CGET	generic/tkScale.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_COORDS, COMMAND_GET,$/;"	e	enum:command	file:
COMMAND_CONFIGURE	generic/tkButton.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DESELECT, COMMAND_FLASH,$/;"	e	enum:command	file:
COMMAND_CONFIGURE	generic/tkEntry.c	/^    COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DELETE,$/;"	e	enum:entryCmd	file:
COMMAND_CONFIGURE	generic/tkListbox.c	/^    COMMAND_ACTIVATE, COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE,$/;"	e	enum:command	file:
COMMAND_CONFIGURE	generic/tkMenubutton.c	/^    COMMAND_CGET, COMMAND_CONFIGURE$/;"	e	enum:command	file:
COMMAND_CONFIGURE	generic/tkScale.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_COORDS, COMMAND_GET,$/;"	e	enum:command	file:
COMMAND_COORDS	generic/tkScale.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_COORDS, COMMAND_GET,$/;"	e	enum:command	file:
COMMAND_CURSELECTION	generic/tkListbox.c	/^    COMMAND_CURSELECTION, COMMAND_DELETE, COMMAND_GET, COMMAND_INDEX,$/;"	e	enum:command	file:
COMMAND_DELETE	generic/tkEntry.c	/^    COMMAND_BBOX, COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DELETE,$/;"	e	enum:entryCmd	file:
COMMAND_DELETE	generic/tkListbox.c	/^    COMMAND_CURSELECTION, COMMAND_DELETE, COMMAND_GET, COMMAND_INDEX,$/;"	e	enum:command	file:
COMMAND_DESELECT	generic/tkButton.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DESELECT, COMMAND_FLASH,$/;"	e	enum:command	file:
COMMAND_ENTRY	generic/tkMenu.h	241;"	d
COMMAND_FLASH	generic/tkButton.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_DESELECT, COMMAND_FLASH,$/;"	e	enum:command	file:
COMMAND_GET	generic/tkEntry.c	/^    COMMAND_GET, COMMAND_ICURSOR, COMMAND_INDEX, COMMAND_INSERT,$/;"	e	enum:entryCmd	file:
COMMAND_GET	generic/tkListbox.c	/^    COMMAND_CURSELECTION, COMMAND_DELETE, COMMAND_GET, COMMAND_INDEX,$/;"	e	enum:command	file:
COMMAND_GET	generic/tkScale.c	/^    COMMAND_CGET, COMMAND_CONFIGURE, COMMAND_COORDS, COMMAND_GET,$/;"	e	enum:command	file:
COMMAND_ICURSOR	generic/tkEntry.c	/^    COMMAND_GET, COMMAND_ICURSOR, COMMAND_INDEX, COMMAND_INSERT,$/;"	e	enum:entryCmd	file:
COMMAND_IDENTIFY	generic/tkScale.c	/^    COMMAND_IDENTIFY, COMMAND_SET$/;"	e	enum:command	file:
COMMAND_INDEX	generic/tkEntry.c	/^    COMMAND_GET, COMMAND_ICURSOR, COMMAND_INDEX, COMMAND_INSERT,$/;"	e	enum:entryCmd	file:
COMMAND_INDEX	generic/tkListbox.c	/^    COMMAND_CURSELECTION, COMMAND_DELETE, COMMAND_GET, COMMAND_INDEX,$/;"	e	enum:command	file:
COMMAND_INSERT	generic/tkEntry.c	/^    COMMAND_GET, COMMAND_ICURSOR, COMMAND_INDEX, COMMAND_INSERT,$/;"	e	enum:entryCmd	file:
COMMAND_INSERT	generic/tkListbox.c	/^    COMMAND_INSERT, COMMAND_ITEMCGET, COMMAND_ITEMCONFIGURE,$/;"	e	enum:command	file:
COMMAND_INVOKE	generic/tkButton.c	/^    COMMAND_INVOKE, COMMAND_SELECT, COMMAND_TOGGLE$/;"	e	enum:command	file:
COMMAND_ITEMCGET	generic/tkListbox.c	/^    COMMAND_INSERT, COMMAND_ITEMCGET, COMMAND_ITEMCONFIGURE,$/;"	e	enum:command	file:
COMMAND_ITEMCONFIGURE	generic/tkListbox.c	/^    COMMAND_INSERT, COMMAND_ITEMCGET, COMMAND_ITEMCONFIGURE,$/;"	e	enum:command	file:
COMMAND_MASK	macosx/tkMacOSXKeyboard.c	27;"	d	file:
COMMAND_NEAREST	generic/tkListbox.c	/^    COMMAND_NEAREST, COMMAND_SCAN, COMMAND_SEE, COMMAND_SELECTION,$/;"	e	enum:command	file:
COMMAND_SCAN	generic/tkEntry.c	/^    COMMAND_SCAN, COMMAND_SELECTION, COMMAND_VALIDATE, COMMAND_XVIEW$/;"	e	enum:entryCmd	file:
COMMAND_SCAN	generic/tkListbox.c	/^    COMMAND_NEAREST, COMMAND_SCAN, COMMAND_SEE, COMMAND_SELECTION,$/;"	e	enum:command	file:
COMMAND_SEE	generic/tkListbox.c	/^    COMMAND_NEAREST, COMMAND_SCAN, COMMAND_SEE, COMMAND_SELECTION,$/;"	e	enum:command	file:
COMMAND_SELECT	generic/tkButton.c	/^    COMMAND_INVOKE, COMMAND_SELECT, COMMAND_TOGGLE$/;"	e	enum:command	file:
COMMAND_SELECTION	generic/tkEntry.c	/^    COMMAND_SCAN, COMMAND_SELECTION, COMMAND_VALIDATE, COMMAND_XVIEW$/;"	e	enum:entryCmd	file:
COMMAND_SELECTION	generic/tkListbox.c	/^    COMMAND_NEAREST, COMMAND_SCAN, COMMAND_SEE, COMMAND_SELECTION,$/;"	e	enum:command	file:
COMMAND_SET	generic/tkScale.c	/^    COMMAND_IDENTIFY, COMMAND_SET$/;"	e	enum:command	file:
COMMAND_SIZE	generic/tkListbox.c	/^    COMMAND_SIZE, COMMAND_XVIEW, COMMAND_YVIEW$/;"	e	enum:command	file:
COMMAND_TOGGLE	generic/tkButton.c	/^    COMMAND_INVOKE, COMMAND_SELECT, COMMAND_TOGGLE$/;"	e	enum:command	file:
COMMAND_VALIDATE	generic/tkEntry.c	/^    COMMAND_SCAN, COMMAND_SELECTION, COMMAND_VALIDATE, COMMAND_XVIEW$/;"	e	enum:entryCmd	file:
COMMAND_XVIEW	generic/tkEntry.c	/^    COMMAND_SCAN, COMMAND_SELECTION, COMMAND_VALIDATE, COMMAND_XVIEW$/;"	e	enum:entryCmd	file:
COMMAND_XVIEW	generic/tkListbox.c	/^    COMMAND_SIZE, COMMAND_XVIEW, COMMAND_YVIEW$/;"	e	enum:command	file:
COMMAND_YVIEW	generic/tkListbox.c	/^    COMMAND_SIZE, COMMAND_XVIEW, COMMAND_YVIEW$/;"	e	enum:command	file:
COMPLEX_ALPHA	generic/tkImgPhoto.h	183;"	d
COMPONENT_SIGNATURE	macosx/tkMacOSXPrivate.h	89;"	d
COMPONENT_SIGNATURE	macosx/tkMacOSXPrivate.h	91;"	d
COMPOUND_BOTTOM	generic/tkButton.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_BOTTOM	generic/tkMenu.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_CENTER	generic/tkButton.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_CENTER	generic/tkMenu.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_LEFT	generic/tkButton.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_LEFT	generic/tkMenu.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_NONE	generic/tkButton.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_NONE	generic/tkMenu.h	/^    COMPOUND_BOTTOM, COMPOUND_CENTER, COMPOUND_LEFT, COMPOUND_NONE,$/;"	e	enum:compound
COMPOUND_RIGHT	generic/tkButton.h	/^	COMPOUND_RIGHT, COMPOUND_TOP$/;"	e	enum:compound
COMPOUND_RIGHT	generic/tkMenu.h	/^    COMPOUND_RIGHT, COMPOUND_TOP$/;"	e	enum:compound
COMPOUND_TOP	generic/tkButton.h	/^	COMPOUND_RIGHT, COMPOUND_TOP$/;"	e	enum:compound
COMPOUND_TOP	generic/tkMenu.h	/^    COMPOUND_RIGHT, COMPOUND_TOP$/;"	e	enum:compound
CONFIG	generic/tkBind.c	475;"	d	file:
CONFIGREQ	generic/tkBind.c	483;"	d	file:
CONFIGURE_ARGS	macosx/GNUmakefile	/^CONFIGURE_ARGS		=$/;"	m
CONFIG_INSTALL_DIR	unix/Makefile	/^CONFIG_INSTALL_DIR	= $(INSTALL_ROOT)$(libdir)$/;"	m
CONST84	generic/tk.h	25;"	d
CONST84_RETURN	generic/tk.h	26;"	d
CONST86	generic/tk.h	29;"	d
CONTROL_BODY_PIXEL	macosx/tkMacOSXPort.h	168;"	d
CONTROL_FRAME_PIXEL	macosx/tkMacOSXPort.h	169;"	d
CONTROL_TEXT_PIXEL	macosx/tkMacOSXPort.h	167;"	d
COPYBG	win/tkWinDraw.c	90;"	d	file:
COPYFG	win/tkWinDraw.c	89;"	d	file:
COUNT_CHARS	generic/tkText.h	880;"	d
COUNT_DISPLAY	generic/tkText.h	882;"	d
COUNT_DISPLAY_CHARS	generic/tkText.h	883;"	d
COUNT_DISPLAY_INDICES	generic/tkText.h	884;"	d
COUNT_INDICES	generic/tkText.h	881;"	d
CPPROG	macosx/GNUmakefile	/^export CPPROG		:= cp -p$/;"	m
CPadding	generic/ttk/ttkImage.c	/^static Ttk_Box CPadding(Ttk_Box b, Ttk_Padding p)$/;"	f	file:
CREATE	generic/tkBind.c	470;"	d	file:
CROSSING	generic/tkBind.c	466;"	d	file:
CSEG_SIZE	generic/tkTextBTree.c	143;"	d	file:
CURSORFONT	unix/tkUnixCursor.c	179;"	d	file:
CURSOR_MYARROW_DATA	unix/tkUnixCursor.c	140;"	d	file:
CURSOR_MYARROW_MASK	unix/tkUnixCursor.c	150;"	d	file:
CURSOR_NONE_DATA	unix/tkUnixCursor.c	121;"	d	file:
CURSOR_ON	generic/tkCanvas.h	271;"	d
CURSOR_ON	generic/tkEntry.h	261;"	d
CURSOR_ON	generic/ttk/ttkWidget.h	14;"	d
CWBackPixel	xlib/X11/X.h	348;"	d
CWBackPixmap	xlib/X11/X.h	347;"	d
CWBackingPixel	xlib/X11/X.h	355;"	d
CWBackingPlanes	xlib/X11/X.h	354;"	d
CWBackingStore	xlib/X11/X.h	353;"	d
CWBitGravity	xlib/X11/X.h	351;"	d
CWBorderPixel	xlib/X11/X.h	350;"	d
CWBorderPixmap	xlib/X11/X.h	349;"	d
CWBorderWidth	xlib/X11/X.h	369;"	d
CWColormap	xlib/X11/X.h	360;"	d
CWCursor	xlib/X11/X.h	361;"	d
CWDontPropagate	xlib/X11/X.h	359;"	d
CWEventMask	xlib/X11/X.h	358;"	d
CWHeight	xlib/X11/X.h	368;"	d
CWOverrideRedirect	xlib/X11/X.h	356;"	d
CWSaveUnder	xlib/X11/X.h	357;"	d
CWSibling	xlib/X11/X.h	370;"	d
CWStackMode	xlib/X11/X.h	371;"	d
CWWidth	xlib/X11/X.h	367;"	d
CWWinGravity	xlib/X11/X.h	352;"	d
CWX	xlib/X11/X.h	365;"	d
CWY	xlib/X11/X.h	366;"	d
CacheWinEventHandler	generic/ttk/ttkCache.c	/^static void CacheWinEventHandler(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
CalculateDisplayLineHeight	generic/tkTextDisp.c	/^CalculateDisplayLineHeight($/;"	f	file:
CallPendingReconfigureImmediately	win/tkWinMenu.c	/^CallPendingReconfigureImmediately($/;"	f	file:
CanUse	win/tkWinFont.c	/^typedef struct CanUse {$/;"	s	file:
CanUse	win/tkWinFont.c	/^} CanUse;$/;"	t	typeref:struct:CanUse	file:
CanUseFallback	unix/tkUnixFont.c	/^CanUseFallback($/;"	f	file:
CanUseFallback	win/tkWinFont.c	/^CanUseFallback($/;"	f	file:
CanUseFallbackWithAliases	unix/tkUnixFont.c	/^CanUseFallbackWithAliases($/;"	f	file:
CanUseFallbackWithAliases	win/tkWinFont.c	/^CanUseFallbackWithAliases($/;"	f	file:
Canvas	generic/tkCanvas.h	310;"	d
CanvasBindProc	generic/tkCanvas.c	/^CanvasBindProc($/;"	f	file:
CanvasBlinkProc	generic/tkCanvas.c	/^CanvasBlinkProc($/;"	f	file:
CanvasCmdDeletedProc	generic/tkCanvas.c	/^CanvasCmdDeletedProc($/;"	f	file:
CanvasDoEvent	generic/tkCanvas.c	/^CanvasDoEvent($/;"	f	file:
CanvasEventProc	generic/tkCanvas.c	/^CanvasEventProc($/;"	f	file:
CanvasFetchSelection	generic/tkCanvas.c	/^CanvasFetchSelection($/;"	f	file:
CanvasFindClosest	generic/tkCanvas.c	/^CanvasFindClosest($/;"	f	file:
CanvasFocusProc	generic/tkCanvas.c	/^CanvasFocusProc($/;"	f	file:
CanvasLostSelection	generic/tkCanvas.c	/^CanvasLostSelection($/;"	f	file:
CanvasPsWindow	generic/tkCanvWind.c	/^CanvasPsWindow($/;"	f	file:
CanvasSelectTo	generic/tkCanvas.c	/^CanvasSelectTo($/;"	f	file:
CanvasSetOrigin	generic/tkCanvas.c	/^CanvasSetOrigin($/;"	f	file:
CanvasUpdateScrollbars	generic/tkCanvas.c	/^CanvasUpdateScrollbars($/;"	f	file:
CanvasWidgetCmd	generic/tkCanvas.c	/^CanvasWidgetCmd($/;"	f	file:
CanvasWorldChanged	generic/tkCanvas.c	/^CanvasWorldChanged($/;"	f	file:
CapButt	xlib/X11/X.h	466;"	d
CapNotLast	xlib/X11/X.h	465;"	d
CapProjecting	xlib/X11/X.h	468;"	d
CapRound	xlib/X11/X.h	467;"	d
CaretCmd	generic/tkCmds.c	/^CaretCmd($/;"	f
CellsOfScreen	xlib/X11/Xlib.h	118;"	d
CenterGravity	xlib/X11/X.h	381;"	d
Centroid	library/demos/goldberg.tcl	/^proc Centroid {w item} {$/;"	p
ChangeListboxOffset	generic/tkListbox.c	/^ChangeListboxOffset($/;"	f	file:
ChangeListboxView	generic/tkListbox.c	/^ChangeListboxView($/;"	f	file:
ChangeNodeToggleCount	generic/tkTextBTree.c	/^ChangeNodeToggleCount($/;"	f	file:
ChangeScreen	generic/tkBind.c	/^ChangeScreen($/;"	f	file:
ChangeTagPriority	generic/tkTextTag.c	/^ChangeTagPriority($/;"	f	file:
ChannelData	generic/tkConsole.c	/^typedef struct ChannelData {$/;"	s	file:
ChannelData	generic/tkConsole.c	/^} ChannelData;$/;"	t	typeref:struct:ChannelData	file:
CharBboxProc	generic/tkTextDisp.c	/^CharBboxProc($/;"	f	file:
CharCheckProc	generic/tkTextBTree.c	/^CharCheckProc($/;"	f	file:
CharChunkMeasureChars	generic/tkTextDisp.c	/^CharChunkMeasureChars($/;"	f	file:
CharCleanupProc	generic/tkTextBTree.c	/^CharCleanupProc($/;"	f	file:
CharDeleteProc	generic/tkTextBTree.c	/^CharDeleteProc($/;"	f	file:
CharDisplayProc	generic/tkTextDisp.c	/^CharDisplayProc($/;"	f	file:
CharInfo	generic/tkTextDisp.c	/^typedef struct CharInfo {$/;"	s	file:
CharInfo	generic/tkTextDisp.c	/^} CharInfo;$/;"	t	typeref:struct:CharInfo	file:
CharInit	generic/tkImgGIF.c	/^CharInit($/;"	f	file:
CharMeasureProc	generic/tkTextDisp.c	/^CharMeasureProc($/;"	f	file:
CharOut	generic/tkImgGIF.c	/^CharOut($/;"	f	file:
CharSplitProc	generic/tkTextBTree.c	/^CharSplitProc($/;"	f	file:
CharUndisplayProc	generic/tkTextDisp.c	/^CharUndisplayProc($/;"	f	file:
CheckAnimation	generic/ttk/ttkProgress.c	/^static void CheckAnimation(Progressbar *pb)$/;"	f	file:
CheckBoxParams	macosx/ttkMacOSXTheme.c	/^    CheckBoxParams = { kThemeCheckBox, kThemeMetricCheckBoxHeight },$/;"	v	file:
CheckCRC	generic/tkImgPNG.c	/^CheckCRC($/;"	f	file:
CheckColor	generic/tkImgPNG.c	/^CheckColor($/;"	f	file:
CheckForCompilerFeature	win/nmakehlp.c	/^CheckForCompilerFeature($/;"	f	file:
CheckForLinkerFeature	win/nmakehlp.c	/^CheckForLinkerFeature($/;"	f	file:
CheckForSpecialMenu	macosx/tkMacOSXMenu.c	/^CheckForSpecialMenu($/;"	f	file:
CheckIndicatorElementDraw	generic/ttk/ttkClamTheme.c	/^static void CheckIndicatorElementDraw($/;"	f	file:
CheckIndicatorElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec CheckIndicatorElementSpec = {$/;"	v	file:
CheckNamedColor	generic/ttk/ttkCache.c	/^static Tcl_Obj *CheckNamedColor(Ttk_ResourceCache cache, Tcl_Obj *objPtr)$/;"	f	file:
CheckNetWmState	unix/tkUnixWm.c	/^CheckNetWmState($/;"	f	file:
CheckNodeConsistency	generic/tkTextBTree.c	/^CheckNodeConsistency($/;"	f	file:
CheckSlotData	generic/tkGrid.c	/^CheckSlotData($/;"	f	file:
CheckSquare	library/demos/knightstour.tcl	/^proc CheckSquare {square} {$/;"	p
Checkbutton	generic/ttk/ttkButton.c	/^} Checkbutton;$/;"	t	typeref:struct:__anon20	file:
CheckbuttonCleanup	generic/ttk/ttkButton.c	/^CheckbuttonCleanup(void *recordPtr)$/;"	f	file:
CheckbuttonCommands	generic/ttk/ttkButton.c	/^static const Ttk_Ensemble CheckbuttonCommands[] = {$/;"	v	file:
CheckbuttonConfigure	generic/ttk/ttkButton.c	/^CheckbuttonConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
CheckbuttonIndicatorElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec CheckbuttonIndicatorElementSpec = {$/;"	v	file:
CheckbuttonInitialize	generic/ttk/ttkButton.c	/^CheckbuttonInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
CheckbuttonInvokeCommand	generic/ttk/ttkButton.c	/^CheckbuttonInvokeCommand($/;"	f	file:
CheckbuttonOptionSpecs	generic/ttk/ttkButton.c	/^static Tk_OptionSpec CheckbuttonOptionSpecs[] =$/;"	v	file:
CheckbuttonPart	generic/ttk/ttkButton.c	/^} CheckbuttonPart;$/;"	t	typeref:struct:__anon19	file:
CheckbuttonPostConfigure	generic/ttk/ttkButton.c	/^CheckbuttonPostConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
CheckbuttonVariableChanged	generic/ttk/ttkButton.c	/^static void CheckbuttonVariableChanged(void *clientData, const char *value)$/;"	f	file:
CheckbuttonWidgetSpec	generic/ttk/ttkButton.c	/^static WidgetSpec CheckbuttonWidgetSpec =$/;"	v	file:
ChkErr	macosx/tkMacOSXPrivate.h	121;"	d
ChkErr	macosx/tkMacOSXPrivate.h	132;"	d
ChooseDir	win/tkWinDialog.c	/^} ChooseDir;$/;"	t	typeref:struct:__anon231	file:
ChooseDirectoryValidateProc	win/tkWinDialog.c	/^ChooseDirectoryValidateProc($/;"	f	file:
CirculateNotify	xlib/X11/X.h	165;"	d
CirculateRequest	xlib/X11/X.h	166;"	d
ClaimCursor	generic/ttk/ttkBlink.c	/^static void ClaimCursor(CursorManager *cm, WidgetCore *corePtr)$/;"	f	file:
CleanUpTkEvent	generic/tkEvent.c	/^CleanUpTkEvent($/;"	f	file:
Cleanup	generic/ttk/ttkTheme.c	/^} Cleanup;$/;"	t	typeref:struct:CleanupStruct	file:
CleanupLine	generic/tkTextBTree.c	/^CleanupLine($/;"	f	file:
CleanupOFNOptions	win/tkWinDialog.c	/^static void CleanupOFNOptions(OFNOpts *optsPtr)$/;"	f	file:
CleanupPNGImage	generic/tkImgPNG.c	/^CleanupPNGImage($/;"	f	file:
CleanupStruct	generic/ttk/ttkTheme.c	/^typedef struct CleanupStruct {$/;"	s	file:
ClearClientData	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *ClearClientData )( IFileDialog *);$/;"	m	struct:IFileDialogVtbl	file:
ClearClientData	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *ClearClientData )( IFileSaveDialog *);$/;"	m	struct:IFileSaveDialogVtbl	file:
ClearClientData	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *ClearClientData )($/;"	m	struct:IFileOpenDialogVtbl	file:
ClearForBlock	generic/tkImgGIF.c	/^ClearForBlock(			\/* Table clear for block compress. *\/$/;"	f	file:
ClearHashTable	generic/tkImgGIF.c	/^ClearHashTable(			\/* Reset code table. *\/$/;"	f	file:
ClearOptionTree	generic/tkOption.c	/^ClearOptionTree($/;"	f	file:
ClientElement	generic/ttk/ttkElements.c	/^typedef TabElement ClientElement;$/;"	t	file:
ClientElementDraw	generic/ttk/ttkClamTheme.c	/^static void ClientElementDraw($/;"	f	file:
ClientElementDraw	generic/ttk/ttkElements.c	/^static void ClientElementDraw($/;"	f	file:
ClientElementDraw	win/ttkWinTheme.c	/^static void ClientElementDraw($/;"	f	file:
ClientElementOptions	generic/ttk/ttkElements.c	1181;"	d	file:
ClientElementSize	generic/ttk/ttkClamTheme.c	/^static void ClientElementSize($/;"	f	file:
ClientElementSize	generic/ttk/ttkElements.c	/^static void ClientElementSize($/;"	f	file:
ClientElementSize	win/ttkWinTheme.c	/^static void ClientElementSize($/;"	f	file:
ClientElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec ClientElementSpec =$/;"	v	file:
ClientElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec ClientElementSpec = {$/;"	v	file:
ClientElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec ClientElementSpec = {$/;"	v	file:
ClientMessage	xlib/X11/X.h	172;"	d
ClipByChildren	xlib/X11/X.h	490;"	d
ClipToGC	macosx/tkMacOSXDraw.c	/^ClipToGC($/;"	f	file:
ClipboardAppHandler	generic/tkClipboard.c	/^ClipboardAppHandler($/;"	f	file:
ClipboardGetProc	generic/tkClipboard.c	/^ClipboardGetProc($/;"	f	file:
ClipboardHandler	generic/tkClipboard.c	/^ClipboardHandler($/;"	f	file:
ClipboardLostSel	generic/tkClipboard.c	/^ClipboardLostSel($/;"	f	file:
ClipboardWindowHandler	generic/tkClipboard.c	/^ClipboardWindowHandler($/;"	f	file:
CloneMenu	generic/tkMenu.c	/^CloneMenu($/;"	f	file:
Close	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Close )( IFileDialog *, HRESULT);$/;"	m	struct:IFileDialogVtbl	file:
Close	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Close )( IFileOpenDialog *, HRESULT);$/;"	m	struct:IFileOpenDialogVtbl	file:
Close	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Close )( IFileSaveDialog *, HRESULT);$/;"	m	struct:IFileSaveDialogVtbl	file:
CloseThemeData	win/ttkWinXPTheme.c	/^    CloseThemeDataProc			*CloseThemeData;$/;"	m	struct:__anon238	file:
CloseThemeDataProc	win/ttkWinXPTheme.c	/^typedef HRESULT (STDAPICALLTYPE CloseThemeDataProc)(HTHEME hTheme);$/;"	t	file:
ClsidFileOpenDialog	win/tkWinDialog.c	/^static const CLSID ClsidFileOpenDialog = {$/;"	v	file:
ClsidFileSaveDialog	win/tkWinDialog.c	/^static const CLSID ClsidFileSaveDialog = {$/;"	v	file:
CmdDeleteProc	win/tkWinSend.c	/^CmdDeleteProc($/;"	f	file:
ColorDlgHookProc	win/tkWinDialog.c	/^ColorDlgHookProc($/;"	f	file:
ColorInit	generic/tkColor.c	/^ColorInit($/;"	f	file:
ColorNumber	generic/tkImgGIF.c	/^ColorNumber($/;"	f	file:
ColorTable	generic/tkImgPhoto.h	/^struct ColorTable {$/;"	s
ColorTable	generic/tkImgPhoto.h	/^typedef struct ColorTable	ColorTable;$/;"	t	typeref:struct:ColorTable
ColorTableId	generic/tkImgPhoto.h	/^struct ColorTableId {$/;"	s
ColorTableId	generic/tkImgPhoto.h	/^typedef struct ColorTableId	ColorTableId;$/;"	t	typeref:struct:ColorTableId
Colormap	xlib/X11/X.h	/^typedef XID Colormap;$/;"	t
ColormapChangeMask	xlib/X11/X.h	134;"	d
ColormapInstalled	xlib/X11/X.h	269;"	d
ColormapNotify	xlib/X11/X.h	171;"	d
ColormapUninstalled	xlib/X11/X.h	268;"	d
Colors	win/tkWinWm.c	/^    UINT Width, Height, Colors;	\/* Width, Height and bpp *\/$/;"	m	struct:__anon233	file:
ColumnOptionSpecs	generic/ttk/ttkTreeview.c	/^static Tk_OptionSpec ColumnOptionSpecs[] = {$/;"	v	file:
Combobox	generic/ttk/ttkEntry.c	/^} Combobox;$/;"	t	typeref:struct:__anon29	file:
ComboboxCommands	generic/ttk/ttkEntry.c	/^static const Ttk_Ensemble ComboboxCommands[] = {$/;"	v	file:
ComboboxConfigure	generic/ttk/ttkEntry.c	/^ComboboxConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
ComboboxCurrentCommand	generic/ttk/ttkEntry.c	/^static int ComboboxCurrentCommand($/;"	f	file:
ComboboxElementDraw	macosx/ttkMacOSXTheme.c	/^static void ComboboxElementDraw($/;"	f	file:
ComboboxElementSize	macosx/ttkMacOSXTheme.c	/^static void ComboboxElementSize($/;"	f	file:
ComboboxElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec ComboboxElementSpec = {$/;"	v	file:
ComboboxFieldElementDraw	generic/ttk/ttkClamTheme.c	/^static void ComboboxFieldElementDraw($/;"	f	file:
ComboboxFieldElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec ComboboxFieldElementSpec = {$/;"	v	file:
ComboboxFocusElementDraw	win/ttkWinTheme.c	/^static void ComboboxFocusElementDraw($/;"	f	file:
ComboboxFocusElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec ComboboxFocusElementSpec = {$/;"	v	file:
ComboboxInitialize	generic/ttk/ttkEntry.c	/^ComboboxInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
ComboboxMargins	macosx/ttkMacOSXTheme.c	/^static Ttk_Padding ComboboxMargins = { 3, 3, 4, 4 };$/;"	v	file:
ComboboxOptionSpecs	generic/ttk/ttkEntry.c	/^static Tk_OptionSpec ComboboxOptionSpecs[] = {$/;"	v	file:
ComboboxPadding	macosx/ttkMacOSXTheme.c	/^static Ttk_Padding ComboboxPadding = { 2, 3, 17, 1 };$/;"	v	file:
ComboboxPart	generic/ttk/ttkEntry.c	/^} ComboboxPart;$/;"	t	typeref:struct:__anon28	file:
ComboboxWidgetSpec	generic/ttk/ttkEntry.c	/^static WidgetSpec ComboboxWidgetSpec = {$/;"	v	file:
CommandInfo	generic/tkSelect.c	/^} CommandInfo;$/;"	t	typeref:struct:__anon177	file:
CommonWriteGIF	generic/tkImgGIF.c	/^CommonWriteGIF($/;"	f	file:
Compare	win/tkWinDialog.c	/^    HRESULT (STDMETHODCALLTYPE *Compare)(IShellItem *, IShellItem *, SICHINTF, int *);$/;"	m	struct:IShellItemVtbl	file:
Complex	xlib/X11/X.h	507;"	d
Compress	generic/tkImgGIF.c	/^Compress($/;"	f	file:
ComputeArcBbox	generic/tkCanvArc.c	/^ComputeArcBbox($/;"	f	file:
ComputeArcOutline	generic/tkCanvArc.c	/^ComputeArcOutline($/;"	f	file:
ComputeBitmapBbox	generic/tkCanvBmap.c	/^ComputeBitmapBbox($/;"	f	file:
ComputeFormat	generic/tkEntry.c	/^ComputeFormat($/;"	f	file:
ComputeFormat	generic/tkScale.c	/^ComputeFormat($/;"	f	file:
ComputeFrameGeometry	generic/tkFrame.c	/^ComputeFrameGeometry($/;"	f	file:
ComputeGeometry	generic/tkPanedWindow.c	/^ComputeGeometry($/;"	f	file:
ComputeImageBbox	generic/tkCanvImg.c	/^ComputeImageBbox($/;"	f	file:
ComputeIncDecParameters	macosx/tkMacOSXEntry.c	/^ComputeIncDecParameters($/;"	f	file:
ComputeLineBbox	generic/tkCanvLine.c	/^ComputeLineBbox($/;"	f	file:
ComputeMenuGeometry	generic/tkMenuDraw.c	/^ComputeMenuGeometry($/;"	f	file:
ComputeMessageGeometry	generic/tkMessage.c	/^ComputeMessageGeometry($/;"	f	file:
ComputePolygonBbox	generic/tkCanvPoly.c	/^ComputePolygonBbox($/;"	f	file:
ComputeRectOvalBbox	generic/tkRectOval.c	/^ComputeRectOvalBbox($/;"	f	file:
ComputeReparentGeometry	unix/tkUnixWm.c	/^ComputeReparentGeometry($/;"	f	file:
ComputeScaleGeometry	generic/tkScale.c	/^ComputeScaleGeometry($/;"	f	file:
ComputeSlotAddress	generic/tkPanedWindow.c	/^ComputeSlotAddress($/;"	f	file:
ComputeTextBbox	generic/tkCanvText.c	/^ComputeTextBbox($/;"	f	file:
ComputeWindowBbox	generic/tkCanvWind.c	/^ComputeWindowBbox($/;"	f	file:
ConfigAttributesObj	generic/tkFont.c	/^ConfigAttributesObj($/;"	f	file:
ConfigureArc	generic/tkCanvArc.c	/^ConfigureArc($/;"	f	file:
ConfigureArrows	generic/tkCanvLine.c	/^ConfigureArrows($/;"	f	file:
ConfigureBitmap	generic/tkCanvBmap.c	/^ConfigureBitmap($/;"	f	file:
ConfigureBusy	generic/tkBusy.c	/^ConfigureBusy($/;"	f	file:
ConfigureButton	generic/tkButton.c	/^ConfigureButton($/;"	f	file:
ConfigureCanvas	generic/tkCanvas.c	/^ConfigureCanvas($/;"	f	file:
ConfigureColumn	generic/ttk/ttkTreeview.c	/^static int ConfigureColumn($/;"	f	file:
ConfigureEntry	generic/tkEntry.c	/^ConfigureEntry($/;"	f	file:
ConfigureEvent	unix/tkUnixWm.c	/^ConfigureEvent($/;"	f	file:
ConfigureFrame	generic/tkFrame.c	/^ConfigureFrame($/;"	f	file:
ConfigureHeading	generic/ttk/ttkTreeview.c	/^static int ConfigureHeading($/;"	f	file:
ConfigureImage	generic/tkCanvImg.c	/^ConfigureImage($/;"	f	file:
ConfigureItem	generic/ttk/ttkTreeview.c	/^static int ConfigureItem($/;"	f	file:
ConfigureLine	generic/tkCanvLine.c	/^ConfigureLine($/;"	f	file:
ConfigureListbox	generic/tkListbox.c	/^ConfigureListbox($/;"	f	file:
ConfigureListboxItem	generic/tkListbox.c	/^ConfigureListboxItem($/;"	f	file:
ConfigureMenu	generic/tkMenu.c	/^ConfigureMenu($/;"	f	file:
ConfigureMenuButton	generic/tkMenubutton.c	/^ConfigureMenuButton($/;"	f	file:
ConfigureMenuCloneEntries	generic/tkMenu.c	/^ConfigureMenuCloneEntries($/;"	f	file:
ConfigureMenuEntry	generic/tkMenu.c	/^ConfigureMenuEntry($/;"	f	file:
ConfigureMessage	generic/tkMessage.c	/^ConfigureMessage($/;"	f	file:
ConfigureNotify	xlib/X11/X.h	161;"	d
ConfigurePane	generic/ttk/ttkPanedwindow.c	/^static int ConfigurePane($/;"	f	file:
ConfigurePanedWindow	generic/tkPanedWindow.c	/^ConfigurePanedWindow($/;"	f	file:
ConfigurePolygon	generic/tkCanvPoly.c	/^ConfigurePolygon($/;"	f	file:
ConfigureRectOval	generic/tkRectOval.c	/^ConfigureRectOval($/;"	f	file:
ConfigureRequest	xlib/X11/X.h	162;"	d
ConfigureRestrictProc	macosx/tkMacOSXWindowEvent.c	/^ConfigureRestrictProc($/;"	f	file:
ConfigureScale	generic/tkScale.c	/^ConfigureScale($/;"	f	file:
ConfigureScrollbar	generic/tkScrollbar.c	/^ConfigureScrollbar($/;"	f	file:
ConfigureSlave	generic/tkPlace.c	/^ConfigureSlave($/;"	f	file:
ConfigureSlaves	generic/tkGrid.c	/^ConfigureSlaves($/;"	f	file:
ConfigureSlaves	generic/tkPack.c	/^ConfigureSlaves($/;"	f	file:
ConfigureSlaves	generic/tkPanedWindow.c	/^ConfigureSlaves($/;"	f	file:
ConfigureTab	generic/ttk/ttkNotebook.c	/^static int ConfigureTab($/;"	f	file:
ConfigureText	generic/tkCanvText.c	/^ConfigureText($/;"	f	file:
ConfigureText	generic/tkText.c	/^ConfigureText($/;"	f	file:
ConfigureTopLevel	win/tkWinWm.c	/^ConfigureTopLevel($/;"	f	file:
ConfigureWinItem	generic/tkCanvWind.c	/^ConfigureWinItem($/;"	f	file:
ConnectionNumber	xlib/X11/Xlib.h	71;"	d
ConsoleClose	generic/tkConsole.c	/^ConsoleClose($/;"	f	file:
ConsoleDeleteProc	generic/tkConsole.c	/^ConsoleDeleteProc($/;"	f	file:
ConsoleEventProc	generic/tkConsole.c	/^ConsoleEventProc($/;"	f	file:
ConsoleHandle	generic/tkConsole.c	/^ConsoleHandle($/;"	f	file:
ConsoleInfo	generic/tkConsole.c	/^typedef struct ConsoleInfo {$/;"	s	file:
ConsoleInfo	generic/tkConsole.c	/^} ConsoleInfo;$/;"	t	typeref:struct:ConsoleInfo	file:
ConsoleInput	generic/tkConsole.c	/^ConsoleInput($/;"	f	file:
ConsoleObjCmd	generic/tkConsole.c	/^ConsoleObjCmd($/;"	f	file:
ConsoleOutput	generic/tkConsole.c	/^ConsoleOutput($/;"	f	file:
ConsoleWatch	generic/tkConsole.c	/^ConsoleWatch($/;"	f	file:
Container	macosx/tkMacOSXEmbed.c	/^typedef struct Container {$/;"	s	file:
Container	macosx/tkMacOSXEmbed.c	/^} Container;$/;"	t	typeref:struct:Container	file:
Container	unix/tkUnixEmbed.c	/^typedef struct Container {$/;"	s	file:
Container	unix/tkUnixEmbed.c	/^} Container;$/;"	t	typeref:struct:Container	file:
Container	win/tkWinEmbed.c	/^typedef struct Container {$/;"	s	file:
Container	win/tkWinEmbed.c	/^} Container;$/;"	t	typeref:struct:Container	file:
ContainerEventProc	macosx/tkMacOSXEmbed.c	/^ContainerEventProc($/;"	f	file:
ContainerEventProc	unix/tkUnixEmbed.c	/^ContainerEventProc($/;"	f	file:
ContainerEventProc	win/tkWinEmbed.c	/^ContainerEventProc($/;"	f	file:
ControlMapIndex	xlib/X11/X.h	194;"	d
ControlMask	xlib/X11/X.h	182;"	d
ControlUtfProc	unix/tkUnixFont.c	/^ControlUtfProc($/;"	f	file:
ConvertExternalFilename	win/tkWinDialog.c	/^ConvertExternalFilename($/;"	f	file:
ConvertInfo	unix/tkUnixSelect.c	/^typedef struct ConvertInfo {$/;"	s	file:
ConvertInfo	unix/tkUnixSelect.c	/^} ConvertInfo;$/;"	t	typeref:struct:ConvertInfo	file:
ConvertPoints	win/tkWinDraw.c	/^ConvertPoints($/;"	f	file:
ConvertSelection	unix/tkUnixSelect.c	/^ConvertSelection($/;"	f	file:
Convex	xlib/X11/X.h	509;"	d
CoordModeOrigin	xlib/X11/X.h	502;"	d
CoordModePrevious	xlib/X11/X.h	503;"	d
CopyCachedColor	macosx/tkMacOSXColor.c	/^CopyCachedColor($/;"	f	file:
CopyFromParent	xlib/X11/X.h	81;"	d
CoreEventMask	generic/ttk/ttkWidget.c	/^static const unsigned CoreEventMask$/;"	v	file:
CoreEventProc	generic/ttk/ttkWidget.c	/^static void CoreEventProc(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
CountBits	generic/tkImgPhInstance.c	/^CountBits($/;"	f	file:
CountIndices	generic/tkText.c	/^CountIndices($/;"	f	file:
CountRows	generic/ttk/ttkTreeview.c	/^static int CountRows(TreeItem *item)$/;"	f	file:
CreateArc	generic/tkCanvArc.c	/^CreateArc($/;"	f	file:
CreateBusy	generic/tkBusy.c	/^CreateBusy($/;"	f	file:
CreateCGImageWithXImage	macosx/tkMacOSXDraw.c	/^CreateCGImageWithXImage($/;"	f
CreateClosestFont	unix/tkUnixFont.c	/^CreateClosestFont($/;"	f	file:
CreateCursorFromTableOrFile	unix/tkUnixCursor.c	/^CreateCursorFromTableOrFile($/;"	f	file:
CreateElement	generic/tkStyle.c	/^CreateElement($/;"	f	file:
CreateFrame	generic/tkFrame.c	/^CreateFrame($/;"	f	file:
CreateGUI	library/demos/knightstour.tcl	/^proc CreateGUI {} {$/;"	p
CreateImage	generic/tkCanvImg.c	/^CreateImage($/;"	f	file:
CreateLine	generic/tkCanvLine.c	/^CreateLine($/;"	f	file:
CreateMaster	generic/tkPlace.c	/^CreateMaster($/;"	f	file:
CreateNSImageWithPixmap	macosx/tkMacOSXDraw.c	/^CreateNSImageWithPixmap($/;"	f	file:
CreateNamedSystemFont	macosx/tkMacOSXFont.c	/^CreateNamedSystemFont($/;"	f	file:
CreateNamedSystemFont	win/tkWinFont.c	/^CreateNamedSystemFont($/;"	f	file:
CreateNamedSystemLogFont	win/tkWinFont.c	/^CreateNamedSystemLogFont($/;"	f	file:
CreateNotify	xlib/X11/X.h	155;"	d
CreatePane	generic/ttk/ttkPanedwindow.c	/^static Pane *CreatePane(Tcl_Interp *interp, Paned *pw, Tk_Window slaveWindow)$/;"	f	file:
CreatePolygon	generic/tkCanvPoly.c	/^CreatePolygon($/;"	f	file:
CreatePostscriptEncoding	library/mkpsenc.tcl	/^    proc CreatePostscriptEncoding {} {$/;"	p
CreateProc	win/tkWinButton.c	/^CreateProc($/;"	f	file:
CreateProc	win/tkWinScrlbr.c	/^CreateProc($/;"	f	file:
CreateRectOval	generic/tkRectOval.c	/^CreateRectOval($/;"	f	file:
CreateSlave	generic/tkPlace.c	/^CreateSlave($/;"	f	file:
CreateTab	generic/ttk/ttkNotebook.c	/^static Tab *CreateTab(Tcl_Interp *interp, Notebook *nb, Tk_Window slaveWindow)$/;"	f	file:
CreateText	generic/tkCanvText.c	/^CreateText($/;"	f	file:
CreateThemeMonitorWindow	win/ttkWinMonitor.c	/^CreateThemeMonitorWindow(HINSTANCE hinst, Tcl_Interp *interp)$/;"	f	file:
CreateTopLevelWindow	generic/tkWindow.c	/^CreateTopLevelWindow($/;"	f	file:
CreateVirtualEvent	generic/tkBind.c	/^CreateVirtualEvent($/;"	f	file:
CreateWidget	generic/tkText.c	/^CreateWidget($/;"	f	file:
CreateWinItem	generic/tkCanvWind.c	/^CreateWinItem($/;"	f	file:
CreateWrapper	unix/tkUnixWm.c	/^CreateWrapper($/;"	f	file:
CreateXIC	generic/tkEvent.c	/^CreateXIC($/;"	f	file:
CurrentTime	xlib/X11/X.h	99;"	d
Cursor	generic/tkPointer.c	23;"	d	file:
Cursor	xlib/X11/X.h	/^typedef XID Cursor;$/;"	t
Cursor	xlib/X11/X.h	37;"	d
Cursor	xlib/X11/X.h	673;"	d
Cursor	xlib/X11/Xlib.h	1201;"	d
Cursor	xlib/X11/Xlib.h	35;"	d
Cursor	xlib/xgc.c	27;"	d	file:
CursorBlinkProc	generic/ttk/ttkBlink.c	/^CursorBlinkProc(ClientData clientData)$/;"	f	file:
CursorEventMask	generic/ttk/ttkBlink.c	127;"	d	file:
CursorEventProc	generic/ttk/ttkBlink.c	/^CursorEventProc(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
CursorInit	generic/tkCursor.c	/^CursorInit($/;"	f	file:
CursorManager	generic/ttk/ttkBlink.c	/^} CursorManager;$/;"	t	typeref:struct:__anon99	file:
CursorManagerDeleteProc	generic/ttk/ttkBlink.c	/^static void CursorManagerDeleteProc(ClientData clientData, Tcl_Interp *interp)$/;"	f	file:
CursorName	macosx/tkMacOSXCursor.c	/^struct CursorName {$/;"	s	file:
CursorName	unix/tkUnixCursor.c	/^static const struct CursorName {$/;"	s	file:
CursorName	win/tkWinCursor.c	/^static struct CursorName {$/;"	s	file:
CursorShape	xlib/X11/X.h	587;"	d
CustomOptionFree	generic/tkTest.c	/^CustomOptionFree($/;"	f	file:
CustomOptionGet	generic/tkTest.c	/^CustomOptionGet($/;"	f	file:
CustomOptionRestore	generic/tkTest.c	/^CustomOptionRestore($/;"	f	file:
CustomOptionSet	generic/tkTest.c	/^CustomOptionSet($/;"	f	file:
DARK	generic/ttk/ttkDefaultTheme.c	/^enum BorderColor { FLAT = 1, LITE = 2, DARK = 3, BRDR = 4 };$/;"	e	enum:BorderColor	file:
DARKER_COLOR	generic/ttk/ttkClamTheme.c	29;"	d	file:
DARKEST_COLOR	generic/ttk/ttkClamTheme.c	30;"	d	file:
DARK_COLOR	generic/ttk/ttkClamTheme.c	28;"	d	file:
DCOLUMNS_CHANGED	generic/ttk/ttkTreeview.c	434;"	d	file:
DEBUG	generic/tkFocus.c	74;"	d	file:
DEBUG_ZOMBIES	macosx/tkMacOSXWm.c	24;"	d	file:
DECORATION_BORDER_WIDTH	generic/tkMenu.h	477;"	d
DEFAULTSTATE_CHANGED	generic/ttk/ttkButton.c	15;"	d	file:
DEFAULT_ACTIVE	generic/tkButton.h	/^    DEFAULT_ACTIVE, DEFAULT_DISABLED, DEFAULT_NORMAL$/;"	e	enum:defaultState
DEFAULT_ARROW_SIZE	generic/ttk/ttkClassicTheme.c	14;"	d	file:
DEFAULT_ARROW_SIZE	generic/ttk/ttkElements.c	15;"	d	file:
DEFAULT_BACKGROUND	generic/ttk/ttkTheme.h	32;"	d
DEFAULT_BACKGROUND_VALUE	generic/tkImgGIF.c	209;"	d	file:
DEFAULT_BORDERWIDTH	generic/ttk/ttkClassicTheme.c	13;"	d	file:
DEFAULT_BORDERWIDTH	generic/ttk/ttkElements.c	14;"	d	file:
DEFAULT_BORDERWIDTH	generic/ttk/ttkFrame.c	173;"	d	file:
DEFAULT_BORDERWIDTH	generic/ttk/ttkSquare.c	13;"	d	file:
DEFAULT_DISABLED	generic/tkButton.h	/^    DEFAULT_ACTIVE, DEFAULT_DISABLED, DEFAULT_NORMAL$/;"	e	enum:defaultState
DEFAULT_FONT	generic/ttk/ttkTheme.h	31;"	d
DEFAULT_FOREGROUND	generic/ttk/ttkTheme.h	33;"	d
DEFAULT_INDENT	generic/ttk/ttkTreeview.c	/^static const int DEFAULT_INDENT 	= 20;$/;"	v	file:
DEFAULT_LABELINSET	generic/ttk/ttkFrame.c	172;"	d	file:
DEFAULT_MIN_TAB_WIDTH	generic/ttk/ttkNotebook.c	21;"	d	file:
DEFAULT_NORMAL	generic/tkButton.h	/^    DEFAULT_ACTIVE, DEFAULT_DISABLED, DEFAULT_NORMAL$/;"	e	enum:defaultState
DEFAULT_PBAR_LENGTH	generic/ttk/ttkElements.c	1013;"	d	file:
DEFAULT_PBAR_THICKNESS	generic/ttk/ttkElements.c	1012;"	d	file:
DEFAULT_PRIMARY_PROMPT	generic/tkMain.c	48;"	d	file:
DEFAULT_ROWHEIGHT	generic/ttk/ttkTreeview.c	/^static const int DEFAULT_ROWHEIGHT 	= 20;$/;"	v	file:
DEFAULT_SASH_THICKNESS	generic/ttk/ttkPanedwindow.c	/^static const int DEFAULT_SASH_THICKNESS = 5;$/;"	v	file:
DEFAULT_SHOW	generic/ttk/ttkTreeview.c	322;"	d	file:
DEF_BUSY_CURSOR	macosx/tkMacOSXDefault.h	573;"	d
DEF_BUSY_CURSOR	unix/tkUnixDefault.h	531;"	d
DEF_BUSY_CURSOR	win/tkWinDefault.h	534;"	d
DEF_BUTTON_ACTIVE_BG_COLOR	macosx/tkMacOSXDefault.h	51;"	d
DEF_BUTTON_ACTIVE_BG_COLOR	unix/tkUnixDefault.h	43;"	d
DEF_BUTTON_ACTIVE_BG_COLOR	win/tkWinDefault.h	47;"	d
DEF_BUTTON_ACTIVE_BG_MONO	macosx/tkMacOSXDefault.h	52;"	d
DEF_BUTTON_ACTIVE_BG_MONO	unix/tkUnixDefault.h	44;"	d
DEF_BUTTON_ACTIVE_BG_MONO	win/tkWinDefault.h	48;"	d
DEF_BUTTON_ACTIVE_FG_COLOR	macosx/tkMacOSXDefault.h	53;"	d
DEF_BUTTON_ACTIVE_FG_COLOR	unix/tkUnixDefault.h	45;"	d
DEF_BUTTON_ACTIVE_FG_COLOR	win/tkWinDefault.h	49;"	d
DEF_BUTTON_ACTIVE_FG_MONO	macosx/tkMacOSXDefault.h	55;"	d
DEF_BUTTON_ACTIVE_FG_MONO	unix/tkUnixDefault.h	47;"	d
DEF_BUTTON_ACTIVE_FG_MONO	win/tkWinDefault.h	51;"	d
DEF_BUTTON_ANCHOR	macosx/tkMacOSXDefault.h	50;"	d
DEF_BUTTON_ANCHOR	unix/tkUnixDefault.h	42;"	d
DEF_BUTTON_ANCHOR	win/tkWinDefault.h	46;"	d
DEF_BUTTON_BG_COLOR	macosx/tkMacOSXDefault.h	57;"	d
DEF_BUTTON_BG_COLOR	unix/tkUnixDefault.h	48;"	d
DEF_BUTTON_BG_COLOR	win/tkWinDefault.h	52;"	d
DEF_BUTTON_BG_MONO	macosx/tkMacOSXDefault.h	58;"	d
DEF_BUTTON_BG_MONO	unix/tkUnixDefault.h	49;"	d
DEF_BUTTON_BG_MONO	win/tkWinDefault.h	53;"	d
DEF_BUTTON_BITMAP	macosx/tkMacOSXDefault.h	59;"	d
DEF_BUTTON_BITMAP	unix/tkUnixDefault.h	50;"	d
DEF_BUTTON_BITMAP	win/tkWinDefault.h	54;"	d
DEF_BUTTON_BORDER_WIDTH	macosx/tkMacOSXDefault.h	60;"	d
DEF_BUTTON_BORDER_WIDTH	unix/tkUnixDefault.h	51;"	d
DEF_BUTTON_BORDER_WIDTH	win/tkWinDefault.h	55;"	d
DEF_BUTTON_COMMAND	macosx/tkMacOSXDefault.h	62;"	d
DEF_BUTTON_COMMAND	unix/tkUnixDefault.h	54;"	d
DEF_BUTTON_COMMAND	win/tkWinDefault.h	57;"	d
DEF_BUTTON_COMPOUND	macosx/tkMacOSXDefault.h	63;"	d
DEF_BUTTON_COMPOUND	unix/tkUnixDefault.h	53;"	d
DEF_BUTTON_COMPOUND	win/tkWinDefault.h	58;"	d
DEF_BUTTON_CURSOR	macosx/tkMacOSXDefault.h	61;"	d
DEF_BUTTON_CURSOR	unix/tkUnixDefault.h	52;"	d
DEF_BUTTON_CURSOR	win/tkWinDefault.h	56;"	d
DEF_BUTTON_DEFAULT	macosx/tkMacOSXDefault.h	64;"	d
DEF_BUTTON_DEFAULT	unix/tkUnixDefault.h	55;"	d
DEF_BUTTON_DEFAULT	win/tkWinDefault.h	59;"	d
DEF_BUTTON_DISABLED_FG_COLOR	macosx/tkMacOSXDefault.h	65;"	d
DEF_BUTTON_DISABLED_FG_COLOR	unix/tkUnixDefault.h	56;"	d
DEF_BUTTON_DISABLED_FG_COLOR	win/tkWinDefault.h	60;"	d
DEF_BUTTON_DISABLED_FG_MONO	macosx/tkMacOSXDefault.h	66;"	d
DEF_BUTTON_DISABLED_FG_MONO	unix/tkUnixDefault.h	57;"	d
DEF_BUTTON_DISABLED_FG_MONO	win/tkWinDefault.h	61;"	d
DEF_BUTTON_FG	macosx/tkMacOSXDefault.h	67;"	d
DEF_BUTTON_FG	unix/tkUnixDefault.h	58;"	d
DEF_BUTTON_FG	win/tkWinDefault.h	62;"	d
DEF_BUTTON_FONT	macosx/tkMacOSXDefault.h	69;"	d
DEF_BUTTON_FONT	unix/tkUnixDefault.h	60;"	d
DEF_BUTTON_FONT	win/tkWinDefault.h	64;"	d
DEF_BUTTON_HEIGHT	macosx/tkMacOSXDefault.h	70;"	d
DEF_BUTTON_HEIGHT	unix/tkUnixDefault.h	61;"	d
DEF_BUTTON_HEIGHT	win/tkWinDefault.h	65;"	d
DEF_BUTTON_HIGHLIGHT	macosx/tkMacOSXDefault.h	73;"	d
DEF_BUTTON_HIGHLIGHT	unix/tkUnixDefault.h	64;"	d
DEF_BUTTON_HIGHLIGHT	win/tkWinDefault.h	68;"	d
DEF_BUTTON_HIGHLIGHT_BG_COLOR	macosx/tkMacOSXDefault.h	71;"	d
DEF_BUTTON_HIGHLIGHT_BG_COLOR	unix/tkUnixDefault.h	62;"	d
DEF_BUTTON_HIGHLIGHT_BG_COLOR	win/tkWinDefault.h	66;"	d
DEF_BUTTON_HIGHLIGHT_BG_MONO	macosx/tkMacOSXDefault.h	72;"	d
DEF_BUTTON_HIGHLIGHT_BG_MONO	unix/tkUnixDefault.h	63;"	d
DEF_BUTTON_HIGHLIGHT_BG_MONO	win/tkWinDefault.h	67;"	d
DEF_BUTTON_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	79;"	d
DEF_BUTTON_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	66;"	d
DEF_BUTTON_HIGHLIGHT_WIDTH	win/tkWinDefault.h	70;"	d
DEF_BUTTON_IMAGE	macosx/tkMacOSXDefault.h	81;"	d
DEF_BUTTON_IMAGE	unix/tkUnixDefault.h	67;"	d
DEF_BUTTON_IMAGE	win/tkWinDefault.h	71;"	d
DEF_BUTTON_INDICATOR	macosx/tkMacOSXDefault.h	82;"	d
DEF_BUTTON_INDICATOR	unix/tkUnixDefault.h	68;"	d
DEF_BUTTON_INDICATOR	win/tkWinDefault.h	72;"	d
DEF_BUTTON_JUSTIFY	macosx/tkMacOSXDefault.h	83;"	d
DEF_BUTTON_JUSTIFY	unix/tkUnixDefault.h	69;"	d
DEF_BUTTON_JUSTIFY	win/tkWinDefault.h	73;"	d
DEF_BUTTON_OFF_VALUE	macosx/tkMacOSXDefault.h	84;"	d
DEF_BUTTON_OFF_VALUE	unix/tkUnixDefault.h	70;"	d
DEF_BUTTON_OFF_VALUE	win/tkWinDefault.h	74;"	d
DEF_BUTTON_ON_VALUE	macosx/tkMacOSXDefault.h	85;"	d
DEF_BUTTON_ON_VALUE	unix/tkUnixDefault.h	71;"	d
DEF_BUTTON_ON_VALUE	win/tkWinDefault.h	75;"	d
DEF_BUTTON_OVER_RELIEF	macosx/tkMacOSXDefault.h	87;"	d
DEF_BUTTON_OVER_RELIEF	unix/tkUnixDefault.h	73;"	d
DEF_BUTTON_OVER_RELIEF	win/tkWinDefault.h	76;"	d
DEF_BUTTON_PADX	macosx/tkMacOSXDefault.h	92;"	d
DEF_BUTTON_PADX	unix/tkUnixDefault.h	74;"	d
DEF_BUTTON_PADX	win/tkWinDefault.h	77;"	d
DEF_BUTTON_PADY	macosx/tkMacOSXDefault.h	99;"	d
DEF_BUTTON_PADY	unix/tkUnixDefault.h	76;"	d
DEF_BUTTON_PADY	win/tkWinDefault.h	79;"	d
DEF_BUTTON_RELIEF	macosx/tkMacOSXDefault.h	102;"	d
DEF_BUTTON_RELIEF	unix/tkUnixDefault.h	78;"	d
DEF_BUTTON_RELIEF	win/tkWinDefault.h	81;"	d
DEF_BUTTON_REPEAT_DELAY	macosx/tkMacOSXDefault.h	104;"	d
DEF_BUTTON_REPEAT_DELAY	unix/tkUnixDefault.h	80;"	d
DEF_BUTTON_REPEAT_DELAY	win/tkWinDefault.h	83;"	d
DEF_BUTTON_REPEAT_INTERVAL	macosx/tkMacOSXDefault.h	105;"	d
DEF_BUTTON_REPEAT_INTERVAL	unix/tkUnixDefault.h	81;"	d
DEF_BUTTON_REPEAT_INTERVAL	win/tkWinDefault.h	84;"	d
DEF_BUTTON_SELECT_COLOR	macosx/tkMacOSXDefault.h	106;"	d
DEF_BUTTON_SELECT_COLOR	unix/tkUnixDefault.h	82;"	d
DEF_BUTTON_SELECT_COLOR	win/tkWinDefault.h	85;"	d
DEF_BUTTON_SELECT_IMAGE	macosx/tkMacOSXDefault.h	108;"	d
DEF_BUTTON_SELECT_IMAGE	unix/tkUnixDefault.h	84;"	d
DEF_BUTTON_SELECT_IMAGE	win/tkWinDefault.h	87;"	d
DEF_BUTTON_SELECT_MONO	macosx/tkMacOSXDefault.h	107;"	d
DEF_BUTTON_SELECT_MONO	unix/tkUnixDefault.h	83;"	d
DEF_BUTTON_SELECT_MONO	win/tkWinDefault.h	86;"	d
DEF_BUTTON_STATE	macosx/tkMacOSXDefault.h	109;"	d
DEF_BUTTON_STATE	unix/tkUnixDefault.h	85;"	d
DEF_BUTTON_STATE	win/tkWinDefault.h	88;"	d
DEF_BUTTON_TAKE_FOCUS	macosx/tkMacOSXDefault.h	111;"	d
DEF_BUTTON_TAKE_FOCUS	unix/tkUnixDefault.h	87;"	d
DEF_BUTTON_TAKE_FOCUS	win/tkWinDefault.h	90;"	d
DEF_BUTTON_TEXT	macosx/tkMacOSXDefault.h	112;"	d
DEF_BUTTON_TEXT	unix/tkUnixDefault.h	88;"	d
DEF_BUTTON_TEXT	win/tkWinDefault.h	91;"	d
DEF_BUTTON_TEXT_VARIABLE	macosx/tkMacOSXDefault.h	113;"	d
DEF_BUTTON_TEXT_VARIABLE	unix/tkUnixDefault.h	89;"	d
DEF_BUTTON_TEXT_VARIABLE	win/tkWinDefault.h	92;"	d
DEF_BUTTON_TRISTATE_VALUE	macosx/tkMacOSXDefault.h	86;"	d
DEF_BUTTON_TRISTATE_VALUE	unix/tkUnixDefault.h	72;"	d
DEF_BUTTON_TRISTATE_VALUE	win/tkWinDefault.h	93;"	d
DEF_BUTTON_UNDERLINE	macosx/tkMacOSXDefault.h	114;"	d
DEF_BUTTON_UNDERLINE	unix/tkUnixDefault.h	90;"	d
DEF_BUTTON_UNDERLINE	win/tkWinDefault.h	94;"	d
DEF_BUTTON_VALUE	macosx/tkMacOSXDefault.h	115;"	d
DEF_BUTTON_VALUE	unix/tkUnixDefault.h	91;"	d
DEF_BUTTON_VALUE	win/tkWinDefault.h	95;"	d
DEF_BUTTON_WIDTH	macosx/tkMacOSXDefault.h	116;"	d
DEF_BUTTON_WIDTH	unix/tkUnixDefault.h	92;"	d
DEF_BUTTON_WIDTH	win/tkWinDefault.h	96;"	d
DEF_BUTTON_WRAP_LENGTH	macosx/tkMacOSXDefault.h	117;"	d
DEF_BUTTON_WRAP_LENGTH	unix/tkUnixDefault.h	93;"	d
DEF_BUTTON_WRAP_LENGTH	win/tkWinDefault.h	97;"	d
DEF_CANVAS_BG_COLOR	macosx/tkMacOSXDefault.h	125;"	d
DEF_CANVAS_BG_COLOR	unix/tkUnixDefault.h	101;"	d
DEF_CANVAS_BG_COLOR	win/tkWinDefault.h	105;"	d
DEF_CANVAS_BG_MONO	macosx/tkMacOSXDefault.h	126;"	d
DEF_CANVAS_BG_MONO	unix/tkUnixDefault.h	102;"	d
DEF_CANVAS_BG_MONO	win/tkWinDefault.h	106;"	d
DEF_CANVAS_BORDER_WIDTH	macosx/tkMacOSXDefault.h	127;"	d
DEF_CANVAS_BORDER_WIDTH	unix/tkUnixDefault.h	103;"	d
DEF_CANVAS_BORDER_WIDTH	win/tkWinDefault.h	107;"	d
DEF_CANVAS_CLOSE_ENOUGH	macosx/tkMacOSXDefault.h	128;"	d
DEF_CANVAS_CLOSE_ENOUGH	unix/tkUnixDefault.h	104;"	d
DEF_CANVAS_CLOSE_ENOUGH	win/tkWinDefault.h	108;"	d
DEF_CANVAS_CONFINE	macosx/tkMacOSXDefault.h	129;"	d
DEF_CANVAS_CONFINE	unix/tkUnixDefault.h	105;"	d
DEF_CANVAS_CONFINE	win/tkWinDefault.h	109;"	d
DEF_CANVAS_CURSOR	macosx/tkMacOSXDefault.h	130;"	d
DEF_CANVAS_CURSOR	unix/tkUnixDefault.h	106;"	d
DEF_CANVAS_CURSOR	win/tkWinDefault.h	110;"	d
DEF_CANVAS_HEIGHT	macosx/tkMacOSXDefault.h	131;"	d
DEF_CANVAS_HEIGHT	unix/tkUnixDefault.h	107;"	d
DEF_CANVAS_HEIGHT	win/tkWinDefault.h	111;"	d
DEF_CANVAS_HIGHLIGHT	macosx/tkMacOSXDefault.h	133;"	d
DEF_CANVAS_HIGHLIGHT	unix/tkUnixDefault.h	109;"	d
DEF_CANVAS_HIGHLIGHT	win/tkWinDefault.h	113;"	d
DEF_CANVAS_HIGHLIGHT_BG	macosx/tkMacOSXDefault.h	132;"	d
DEF_CANVAS_HIGHLIGHT_BG	unix/tkUnixDefault.h	108;"	d
DEF_CANVAS_HIGHLIGHT_BG	win/tkWinDefault.h	112;"	d
DEF_CANVAS_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	134;"	d
DEF_CANVAS_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	110;"	d
DEF_CANVAS_HIGHLIGHT_WIDTH	win/tkWinDefault.h	114;"	d
DEF_CANVAS_INSERT_BD_COLOR	macosx/tkMacOSXDefault.h	136;"	d
DEF_CANVAS_INSERT_BD_COLOR	unix/tkUnixDefault.h	112;"	d
DEF_CANVAS_INSERT_BD_COLOR	win/tkWinDefault.h	116;"	d
DEF_CANVAS_INSERT_BD_MONO	macosx/tkMacOSXDefault.h	137;"	d
DEF_CANVAS_INSERT_BD_MONO	unix/tkUnixDefault.h	113;"	d
DEF_CANVAS_INSERT_BD_MONO	win/tkWinDefault.h	117;"	d
DEF_CANVAS_INSERT_BG	macosx/tkMacOSXDefault.h	135;"	d
DEF_CANVAS_INSERT_BG	unix/tkUnixDefault.h	111;"	d
DEF_CANVAS_INSERT_BG	win/tkWinDefault.h	115;"	d
DEF_CANVAS_INSERT_OFF_TIME	macosx/tkMacOSXDefault.h	138;"	d
DEF_CANVAS_INSERT_OFF_TIME	unix/tkUnixDefault.h	114;"	d
DEF_CANVAS_INSERT_OFF_TIME	win/tkWinDefault.h	118;"	d
DEF_CANVAS_INSERT_ON_TIME	macosx/tkMacOSXDefault.h	139;"	d
DEF_CANVAS_INSERT_ON_TIME	unix/tkUnixDefault.h	115;"	d
DEF_CANVAS_INSERT_ON_TIME	win/tkWinDefault.h	119;"	d
DEF_CANVAS_INSERT_WIDTH	macosx/tkMacOSXDefault.h	140;"	d
DEF_CANVAS_INSERT_WIDTH	unix/tkUnixDefault.h	116;"	d
DEF_CANVAS_INSERT_WIDTH	win/tkWinDefault.h	120;"	d
DEF_CANVAS_RELIEF	macosx/tkMacOSXDefault.h	141;"	d
DEF_CANVAS_RELIEF	unix/tkUnixDefault.h	117;"	d
DEF_CANVAS_RELIEF	win/tkWinDefault.h	121;"	d
DEF_CANVAS_SCROLL_REGION	macosx/tkMacOSXDefault.h	142;"	d
DEF_CANVAS_SCROLL_REGION	unix/tkUnixDefault.h	118;"	d
DEF_CANVAS_SCROLL_REGION	win/tkWinDefault.h	122;"	d
DEF_CANVAS_SELECT_BD_COLOR	macosx/tkMacOSXDefault.h	145;"	d
DEF_CANVAS_SELECT_BD_COLOR	unix/tkUnixDefault.h	121;"	d
DEF_CANVAS_SELECT_BD_COLOR	win/tkWinDefault.h	125;"	d
DEF_CANVAS_SELECT_BD_MONO	macosx/tkMacOSXDefault.h	146;"	d
DEF_CANVAS_SELECT_BD_MONO	unix/tkUnixDefault.h	122;"	d
DEF_CANVAS_SELECT_BD_MONO	win/tkWinDefault.h	126;"	d
DEF_CANVAS_SELECT_COLOR	macosx/tkMacOSXDefault.h	143;"	d
DEF_CANVAS_SELECT_COLOR	unix/tkUnixDefault.h	119;"	d
DEF_CANVAS_SELECT_COLOR	win/tkWinDefault.h	123;"	d
DEF_CANVAS_SELECT_FG_COLOR	macosx/tkMacOSXDefault.h	147;"	d
DEF_CANVAS_SELECT_FG_COLOR	unix/tkUnixDefault.h	123;"	d
DEF_CANVAS_SELECT_FG_COLOR	win/tkWinDefault.h	127;"	d
DEF_CANVAS_SELECT_FG_MONO	macosx/tkMacOSXDefault.h	148;"	d
DEF_CANVAS_SELECT_FG_MONO	unix/tkUnixDefault.h	124;"	d
DEF_CANVAS_SELECT_FG_MONO	win/tkWinDefault.h	128;"	d
DEF_CANVAS_SELECT_MONO	macosx/tkMacOSXDefault.h	144;"	d
DEF_CANVAS_SELECT_MONO	unix/tkUnixDefault.h	120;"	d
DEF_CANVAS_SELECT_MONO	win/tkWinDefault.h	124;"	d
DEF_CANVAS_TAKE_FOCUS	macosx/tkMacOSXDefault.h	149;"	d
DEF_CANVAS_TAKE_FOCUS	unix/tkUnixDefault.h	125;"	d
DEF_CANVAS_TAKE_FOCUS	win/tkWinDefault.h	129;"	d
DEF_CANVAS_WIDTH	macosx/tkMacOSXDefault.h	150;"	d
DEF_CANVAS_WIDTH	unix/tkUnixDefault.h	126;"	d
DEF_CANVAS_WIDTH	win/tkWinDefault.h	130;"	d
DEF_CANVAS_X_SCROLL_CMD	macosx/tkMacOSXDefault.h	151;"	d
DEF_CANVAS_X_SCROLL_CMD	unix/tkUnixDefault.h	127;"	d
DEF_CANVAS_X_SCROLL_CMD	win/tkWinDefault.h	131;"	d
DEF_CANVAS_X_SCROLL_INCREMENT	macosx/tkMacOSXDefault.h	152;"	d
DEF_CANVAS_X_SCROLL_INCREMENT	unix/tkUnixDefault.h	128;"	d
DEF_CANVAS_X_SCROLL_INCREMENT	win/tkWinDefault.h	132;"	d
DEF_CANVAS_Y_SCROLL_CMD	macosx/tkMacOSXDefault.h	153;"	d
DEF_CANVAS_Y_SCROLL_CMD	unix/tkUnixDefault.h	129;"	d
DEF_CANVAS_Y_SCROLL_CMD	win/tkWinDefault.h	133;"	d
DEF_CANVAS_Y_SCROLL_INCREMENT	macosx/tkMacOSXDefault.h	154;"	d
DEF_CANVAS_Y_SCROLL_INCREMENT	unix/tkUnixDefault.h	130;"	d
DEF_CANVAS_Y_SCROLL_INCREMENT	win/tkWinDefault.h	134;"	d
DEF_CANVTEXT_FONT	macosx/tkMacOSXDefault.h	557;"	d
DEF_CANVTEXT_FONT	unix/tkUnixDefault.h	515;"	d
DEF_CANVTEXT_FONT	win/tkWinDefault.h	518;"	d
DEF_CHECKBUTTON_VARIABLE	macosx/tkMacOSXDefault.h	119;"	d
DEF_CHECKBUTTON_VARIABLE	unix/tkUnixDefault.h	95;"	d
DEF_CHECKBUTTON_VARIABLE	win/tkWinDefault.h	99;"	d
DEF_CHKRAD_ACTIVE_FG_COLOR	macosx/tkMacOSXDefault.h	54;"	d
DEF_CHKRAD_ACTIVE_FG_COLOR	unix/tkUnixDefault.h	46;"	d
DEF_CHKRAD_ACTIVE_FG_COLOR	win/tkWinDefault.h	50;"	d
DEF_CHKRAD_FG	macosx/tkMacOSXDefault.h	68;"	d
DEF_CHKRAD_FG	unix/tkUnixDefault.h	59;"	d
DEF_CHKRAD_FG	win/tkWinDefault.h	63;"	d
DEF_COLWIDTH	generic/ttk/ttkTreeview.c	14;"	d	file:
DEF_CURSOR_OFF_TIME	generic/ttk/ttkBlink.c	22;"	d	file:
DEF_CURSOR_ON_TIME	generic/ttk/ttkBlink.c	21;"	d	file:
DEF_ENTRY_BG_COLOR	macosx/tkMacOSXDefault.h	172;"	d
DEF_ENTRY_BG_COLOR	unix/tkUnixDefault.h	136;"	d
DEF_ENTRY_BG_COLOR	win/tkWinDefault.h	140;"	d
DEF_ENTRY_BG_MONO	macosx/tkMacOSXDefault.h	173;"	d
DEF_ENTRY_BG_MONO	unix/tkUnixDefault.h	137;"	d
DEF_ENTRY_BG_MONO	win/tkWinDefault.h	141;"	d
DEF_ENTRY_BORDER_WIDTH	macosx/tkMacOSXDefault.h	174;"	d
DEF_ENTRY_BORDER_WIDTH	unix/tkUnixDefault.h	138;"	d
DEF_ENTRY_BORDER_WIDTH	win/tkWinDefault.h	142;"	d
DEF_ENTRY_CURSOR	macosx/tkMacOSXDefault.h	175;"	d
DEF_ENTRY_CURSOR	unix/tkUnixDefault.h	139;"	d
DEF_ENTRY_CURSOR	win/tkWinDefault.h	143;"	d
DEF_ENTRY_DISABLED_BG_COLOR	macosx/tkMacOSXDefault.h	176;"	d
DEF_ENTRY_DISABLED_BG_COLOR	unix/tkUnixDefault.h	140;"	d
DEF_ENTRY_DISABLED_BG_COLOR	win/tkWinDefault.h	144;"	d
DEF_ENTRY_DISABLED_BG_MONO	macosx/tkMacOSXDefault.h	177;"	d
DEF_ENTRY_DISABLED_BG_MONO	unix/tkUnixDefault.h	141;"	d
DEF_ENTRY_DISABLED_BG_MONO	win/tkWinDefault.h	145;"	d
DEF_ENTRY_DISABLED_FG	macosx/tkMacOSXDefault.h	178;"	d
DEF_ENTRY_DISABLED_FG	unix/tkUnixDefault.h	142;"	d
DEF_ENTRY_DISABLED_FG	win/tkWinDefault.h	146;"	d
DEF_ENTRY_EXPORT_SELECTION	macosx/tkMacOSXDefault.h	179;"	d
DEF_ENTRY_EXPORT_SELECTION	unix/tkUnixDefault.h	143;"	d
DEF_ENTRY_EXPORT_SELECTION	win/tkWinDefault.h	147;"	d
DEF_ENTRY_FG	macosx/tkMacOSXDefault.h	181;"	d
DEF_ENTRY_FG	unix/tkUnixDefault.h	145;"	d
DEF_ENTRY_FG	win/tkWinDefault.h	149;"	d
DEF_ENTRY_FONT	generic/ttk/ttkEntry.c	154;"	d	file:
DEF_ENTRY_FONT	macosx/tkMacOSXDefault.h	180;"	d
DEF_ENTRY_FONT	unix/tkUnixDefault.h	144;"	d
DEF_ENTRY_FONT	win/tkWinDefault.h	148;"	d
DEF_ENTRY_HIGHLIGHT	macosx/tkMacOSXDefault.h	183;"	d
DEF_ENTRY_HIGHLIGHT	unix/tkUnixDefault.h	147;"	d
DEF_ENTRY_HIGHLIGHT	win/tkWinDefault.h	151;"	d
DEF_ENTRY_HIGHLIGHT_BG	macosx/tkMacOSXDefault.h	182;"	d
DEF_ENTRY_HIGHLIGHT_BG	unix/tkUnixDefault.h	146;"	d
DEF_ENTRY_HIGHLIGHT_BG	win/tkWinDefault.h	150;"	d
DEF_ENTRY_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	185;"	d
DEF_ENTRY_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	148;"	d
DEF_ENTRY_HIGHLIGHT_WIDTH	win/tkWinDefault.h	152;"	d
DEF_ENTRY_INSERT_BD_COLOR	macosx/tkMacOSXDefault.h	187;"	d
DEF_ENTRY_INSERT_BD_COLOR	unix/tkUnixDefault.h	150;"	d
DEF_ENTRY_INSERT_BD_COLOR	win/tkWinDefault.h	154;"	d
DEF_ENTRY_INSERT_BD_MONO	macosx/tkMacOSXDefault.h	188;"	d
DEF_ENTRY_INSERT_BD_MONO	unix/tkUnixDefault.h	151;"	d
DEF_ENTRY_INSERT_BD_MONO	win/tkWinDefault.h	155;"	d
DEF_ENTRY_INSERT_BG	macosx/tkMacOSXDefault.h	186;"	d
DEF_ENTRY_INSERT_BG	unix/tkUnixDefault.h	149;"	d
DEF_ENTRY_INSERT_BG	win/tkWinDefault.h	153;"	d
DEF_ENTRY_INSERT_OFF_TIME	macosx/tkMacOSXDefault.h	189;"	d
DEF_ENTRY_INSERT_OFF_TIME	unix/tkUnixDefault.h	152;"	d
DEF_ENTRY_INSERT_OFF_TIME	win/tkWinDefault.h	156;"	d
DEF_ENTRY_INSERT_ON_TIME	macosx/tkMacOSXDefault.h	190;"	d
DEF_ENTRY_INSERT_ON_TIME	unix/tkUnixDefault.h	153;"	d
DEF_ENTRY_INSERT_ON_TIME	win/tkWinDefault.h	157;"	d
DEF_ENTRY_INSERT_WIDTH	macosx/tkMacOSXDefault.h	192;"	d
DEF_ENTRY_INSERT_WIDTH	unix/tkUnixDefault.h	154;"	d
DEF_ENTRY_INSERT_WIDTH	win/tkWinDefault.h	158;"	d
DEF_ENTRY_INVALIDCMD	generic/tkEntry.c	58;"	d	file:
DEF_ENTRY_JUSTIFY	macosx/tkMacOSXDefault.h	193;"	d
DEF_ENTRY_JUSTIFY	unix/tkUnixDefault.h	155;"	d
DEF_ENTRY_JUSTIFY	win/tkWinDefault.h	159;"	d
DEF_ENTRY_READONLY_BG_COLOR	macosx/tkMacOSXDefault.h	194;"	d
DEF_ENTRY_READONLY_BG_COLOR	unix/tkUnixDefault.h	156;"	d
DEF_ENTRY_READONLY_BG_COLOR	win/tkWinDefault.h	160;"	d
DEF_ENTRY_READONLY_BG_MONO	macosx/tkMacOSXDefault.h	195;"	d
DEF_ENTRY_READONLY_BG_MONO	unix/tkUnixDefault.h	157;"	d
DEF_ENTRY_READONLY_BG_MONO	win/tkWinDefault.h	161;"	d
DEF_ENTRY_RELIEF	macosx/tkMacOSXDefault.h	196;"	d
DEF_ENTRY_RELIEF	unix/tkUnixDefault.h	158;"	d
DEF_ENTRY_RELIEF	win/tkWinDefault.h	162;"	d
DEF_ENTRY_SCROLL_COMMAND	macosx/tkMacOSXDefault.h	198;"	d
DEF_ENTRY_SCROLL_COMMAND	unix/tkUnixDefault.h	159;"	d
DEF_ENTRY_SCROLL_COMMAND	win/tkWinDefault.h	163;"	d
DEF_ENTRY_SELECT_BD_COLOR	macosx/tkMacOSXDefault.h	201;"	d
DEF_ENTRY_SELECT_BD_COLOR	unix/tkUnixDefault.h	162;"	d
DEF_ENTRY_SELECT_BD_COLOR	win/tkWinDefault.h	166;"	d
DEF_ENTRY_SELECT_BD_MONO	macosx/tkMacOSXDefault.h	202;"	d
DEF_ENTRY_SELECT_BD_MONO	unix/tkUnixDefault.h	163;"	d
DEF_ENTRY_SELECT_BD_MONO	win/tkWinDefault.h	167;"	d
DEF_ENTRY_SELECT_COLOR	macosx/tkMacOSXDefault.h	199;"	d
DEF_ENTRY_SELECT_COLOR	unix/tkUnixDefault.h	160;"	d
DEF_ENTRY_SELECT_COLOR	win/tkWinDefault.h	164;"	d
DEF_ENTRY_SELECT_FG_COLOR	macosx/tkMacOSXDefault.h	203;"	d
DEF_ENTRY_SELECT_FG_COLOR	unix/tkUnixDefault.h	164;"	d
DEF_ENTRY_SELECT_FG_COLOR	win/tkWinDefault.h	168;"	d
DEF_ENTRY_SELECT_FG_MONO	macosx/tkMacOSXDefault.h	204;"	d
DEF_ENTRY_SELECT_FG_MONO	unix/tkUnixDefault.h	165;"	d
DEF_ENTRY_SELECT_FG_MONO	win/tkWinDefault.h	169;"	d
DEF_ENTRY_SELECT_MONO	macosx/tkMacOSXDefault.h	200;"	d
DEF_ENTRY_SELECT_MONO	unix/tkUnixDefault.h	161;"	d
DEF_ENTRY_SELECT_MONO	win/tkWinDefault.h	165;"	d
DEF_ENTRY_SHOW	macosx/tkMacOSXDefault.h	205;"	d
DEF_ENTRY_SHOW	unix/tkUnixDefault.h	166;"	d
DEF_ENTRY_SHOW	win/tkWinDefault.h	170;"	d
DEF_ENTRY_STATE	macosx/tkMacOSXDefault.h	206;"	d
DEF_ENTRY_STATE	unix/tkUnixDefault.h	167;"	d
DEF_ENTRY_STATE	win/tkWinDefault.h	171;"	d
DEF_ENTRY_TAKE_FOCUS	macosx/tkMacOSXDefault.h	207;"	d
DEF_ENTRY_TAKE_FOCUS	unix/tkUnixDefault.h	168;"	d
DEF_ENTRY_TAKE_FOCUS	win/tkWinDefault.h	172;"	d
DEF_ENTRY_TEXT_VARIABLE	macosx/tkMacOSXDefault.h	208;"	d
DEF_ENTRY_TEXT_VARIABLE	unix/tkUnixDefault.h	169;"	d
DEF_ENTRY_TEXT_VARIABLE	win/tkWinDefault.h	173;"	d
DEF_ENTRY_VALIDATE	generic/tkEntry.c	57;"	d	file:
DEF_ENTRY_WIDTH	generic/ttk/ttkEntry.c	153;"	d	file:
DEF_ENTRY_WIDTH	macosx/tkMacOSXDefault.h	209;"	d
DEF_ENTRY_WIDTH	unix/tkUnixDefault.h	170;"	d
DEF_ENTRY_WIDTH	win/tkWinDefault.h	174;"	d
DEF_FRAME_BG_COLOR	macosx/tkMacOSXDefault.h	215;"	d
DEF_FRAME_BG_COLOR	unix/tkUnixDefault.h	176;"	d
DEF_FRAME_BG_COLOR	win/tkWinDefault.h	180;"	d
DEF_FRAME_BG_MONO	macosx/tkMacOSXDefault.h	216;"	d
DEF_FRAME_BG_MONO	unix/tkUnixDefault.h	177;"	d
DEF_FRAME_BG_MONO	win/tkWinDefault.h	181;"	d
DEF_FRAME_BORDER_WIDTH	macosx/tkMacOSXDefault.h	217;"	d
DEF_FRAME_BORDER_WIDTH	unix/tkUnixDefault.h	178;"	d
DEF_FRAME_BORDER_WIDTH	win/tkWinDefault.h	182;"	d
DEF_FRAME_CLASS	macosx/tkMacOSXDefault.h	218;"	d
DEF_FRAME_CLASS	unix/tkUnixDefault.h	179;"	d
DEF_FRAME_CLASS	win/tkWinDefault.h	183;"	d
DEF_FRAME_COLORMAP	macosx/tkMacOSXDefault.h	219;"	d
DEF_FRAME_COLORMAP	unix/tkUnixDefault.h	180;"	d
DEF_FRAME_COLORMAP	win/tkWinDefault.h	184;"	d
DEF_FRAME_CONTAINER	macosx/tkMacOSXDefault.h	220;"	d
DEF_FRAME_CONTAINER	unix/tkUnixDefault.h	181;"	d
DEF_FRAME_CONTAINER	win/tkWinDefault.h	185;"	d
DEF_FRAME_CURSOR	macosx/tkMacOSXDefault.h	221;"	d
DEF_FRAME_CURSOR	unix/tkUnixDefault.h	182;"	d
DEF_FRAME_CURSOR	win/tkWinDefault.h	186;"	d
DEF_FRAME_HEIGHT	macosx/tkMacOSXDefault.h	222;"	d
DEF_FRAME_HEIGHT	unix/tkUnixDefault.h	183;"	d
DEF_FRAME_HEIGHT	win/tkWinDefault.h	187;"	d
DEF_FRAME_HIGHLIGHT	macosx/tkMacOSXDefault.h	224;"	d
DEF_FRAME_HIGHLIGHT	unix/tkUnixDefault.h	185;"	d
DEF_FRAME_HIGHLIGHT	win/tkWinDefault.h	189;"	d
DEF_FRAME_HIGHLIGHT_BG	macosx/tkMacOSXDefault.h	223;"	d
DEF_FRAME_HIGHLIGHT_BG	unix/tkUnixDefault.h	184;"	d
DEF_FRAME_HIGHLIGHT_BG	win/tkWinDefault.h	188;"	d
DEF_FRAME_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	225;"	d
DEF_FRAME_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	186;"	d
DEF_FRAME_HIGHLIGHT_WIDTH	win/tkWinDefault.h	190;"	d
DEF_FRAME_LABEL	unix/tkUnixDefault.h	187;"	d
DEF_FRAME_PADX	macosx/tkMacOSXDefault.h	226;"	d
DEF_FRAME_PADX	unix/tkUnixDefault.h	188;"	d
DEF_FRAME_PADX	win/tkWinDefault.h	191;"	d
DEF_FRAME_PADY	macosx/tkMacOSXDefault.h	227;"	d
DEF_FRAME_PADY	unix/tkUnixDefault.h	189;"	d
DEF_FRAME_PADY	win/tkWinDefault.h	192;"	d
DEF_FRAME_RELIEF	macosx/tkMacOSXDefault.h	228;"	d
DEF_FRAME_RELIEF	unix/tkUnixDefault.h	190;"	d
DEF_FRAME_RELIEF	win/tkWinDefault.h	193;"	d
DEF_FRAME_TAKE_FOCUS	macosx/tkMacOSXDefault.h	229;"	d
DEF_FRAME_TAKE_FOCUS	unix/tkUnixDefault.h	191;"	d
DEF_FRAME_TAKE_FOCUS	win/tkWinDefault.h	194;"	d
DEF_FRAME_VISUAL	macosx/tkMacOSXDefault.h	230;"	d
DEF_FRAME_VISUAL	unix/tkUnixDefault.h	192;"	d
DEF_FRAME_VISUAL	win/tkWinDefault.h	195;"	d
DEF_FRAME_WIDTH	macosx/tkMacOSXDefault.h	231;"	d
DEF_FRAME_WIDTH	unix/tkUnixDefault.h	193;"	d
DEF_FRAME_WIDTH	win/tkWinDefault.h	196;"	d
DEF_INSERT_BG	generic/ttk/ttkEntry.c	152;"	d	file:
DEF_INSET_BOTTOM	macosx/tkMacOSXButton.c	36;"	d	file:
DEF_INSET_LEFT	macosx/tkMacOSXButton.c	33;"	d	file:
DEF_INSET_RIGHT	macosx/tkMacOSXButton.c	34;"	d	file:
DEF_INSET_TOP	macosx/tkMacOSXButton.c	35;"	d	file:
DEF_LABCHKRAD_PADX	macosx/tkMacOSXDefault.h	94;"	d
DEF_LABCHKRAD_PADX	unix/tkUnixDefault.h	75;"	d
DEF_LABCHKRAD_PADX	win/tkWinDefault.h	78;"	d
DEF_LABCHKRAD_PADY	macosx/tkMacOSXDefault.h	101;"	d
DEF_LABCHKRAD_PADY	unix/tkUnixDefault.h	77;"	d
DEF_LABCHKRAD_PADY	win/tkWinDefault.h	80;"	d
DEF_LABCHKRAD_RELIEF	macosx/tkMacOSXDefault.h	103;"	d
DEF_LABCHKRAD_RELIEF	unix/tkUnixDefault.h	79;"	d
DEF_LABCHKRAD_RELIEF	win/tkWinDefault.h	82;"	d
DEF_LABELFRAME_BORDER_WIDTH	macosx/tkMacOSXDefault.h	237;"	d
DEF_LABELFRAME_BORDER_WIDTH	unix/tkUnixDefault.h	199;"	d
DEF_LABELFRAME_BORDER_WIDTH	win/tkWinDefault.h	202;"	d
DEF_LABELFRAME_CLASS	macosx/tkMacOSXDefault.h	238;"	d
DEF_LABELFRAME_CLASS	unix/tkUnixDefault.h	200;"	d
DEF_LABELFRAME_CLASS	win/tkWinDefault.h	203;"	d
DEF_LABELFRAME_FG	macosx/tkMacOSXDefault.h	240;"	d
DEF_LABELFRAME_FG	unix/tkUnixDefault.h	202;"	d
DEF_LABELFRAME_FG	win/tkWinDefault.h	205;"	d
DEF_LABELFRAME_FONT	macosx/tkMacOSXDefault.h	241;"	d
DEF_LABELFRAME_FONT	unix/tkUnixDefault.h	203;"	d
DEF_LABELFRAME_FONT	win/tkWinDefault.h	206;"	d
DEF_LABELFRAME_LABELANCHOR	macosx/tkMacOSXDefault.h	243;"	d
DEF_LABELFRAME_LABELANCHOR	unix/tkUnixDefault.h	205;"	d
DEF_LABELFRAME_LABELANCHOR	win/tkWinDefault.h	208;"	d
DEF_LABELFRAME_RELIEF	macosx/tkMacOSXDefault.h	239;"	d
DEF_LABELFRAME_RELIEF	unix/tkUnixDefault.h	201;"	d
DEF_LABELFRAME_RELIEF	win/tkWinDefault.h	204;"	d
DEF_LABELFRAME_TEXT	macosx/tkMacOSXDefault.h	242;"	d
DEF_LABELFRAME_TEXT	unix/tkUnixDefault.h	204;"	d
DEF_LABELFRAME_TEXT	win/tkWinDefault.h	207;"	d
DEF_LABEL_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	74;"	d
DEF_LABEL_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	65;"	d
DEF_LABEL_HIGHLIGHT_WIDTH	win/tkWinDefault.h	69;"	d
DEF_LABEL_TAKE_FOCUS	macosx/tkMacOSXDefault.h	110;"	d
DEF_LABEL_TAKE_FOCUS	unix/tkUnixDefault.h	86;"	d
DEF_LABEL_TAKE_FOCUS	win/tkWinDefault.h	89;"	d
DEF_LISTBOX_ACTIVE_STYLE	macosx/tkMacOSXDefault.h	249;"	d
DEF_LISTBOX_ACTIVE_STYLE	unix/tkUnixDefault.h	211;"	d
DEF_LISTBOX_ACTIVE_STYLE	win/tkWinDefault.h	214;"	d
DEF_LISTBOX_BG_COLOR	macosx/tkMacOSXDefault.h	250;"	d
DEF_LISTBOX_BG_COLOR	unix/tkUnixDefault.h	212;"	d
DEF_LISTBOX_BG_COLOR	win/tkWinDefault.h	215;"	d
DEF_LISTBOX_BG_MONO	macosx/tkMacOSXDefault.h	251;"	d
DEF_LISTBOX_BG_MONO	unix/tkUnixDefault.h	213;"	d
DEF_LISTBOX_BG_MONO	win/tkWinDefault.h	216;"	d
DEF_LISTBOX_BORDER_WIDTH	macosx/tkMacOSXDefault.h	252;"	d
DEF_LISTBOX_BORDER_WIDTH	unix/tkUnixDefault.h	214;"	d
DEF_LISTBOX_BORDER_WIDTH	win/tkWinDefault.h	217;"	d
DEF_LISTBOX_CURSOR	macosx/tkMacOSXDefault.h	253;"	d
DEF_LISTBOX_CURSOR	unix/tkUnixDefault.h	215;"	d
DEF_LISTBOX_CURSOR	win/tkWinDefault.h	218;"	d
DEF_LISTBOX_DISABLED_FG	macosx/tkMacOSXDefault.h	254;"	d
DEF_LISTBOX_DISABLED_FG	unix/tkUnixDefault.h	216;"	d
DEF_LISTBOX_DISABLED_FG	win/tkWinDefault.h	219;"	d
DEF_LISTBOX_EXPORT_SELECTION	macosx/tkMacOSXDefault.h	255;"	d
DEF_LISTBOX_EXPORT_SELECTION	unix/tkUnixDefault.h	217;"	d
DEF_LISTBOX_EXPORT_SELECTION	win/tkWinDefault.h	220;"	d
DEF_LISTBOX_FG	macosx/tkMacOSXDefault.h	257;"	d
DEF_LISTBOX_FG	unix/tkUnixDefault.h	219;"	d
DEF_LISTBOX_FG	win/tkWinDefault.h	222;"	d
DEF_LISTBOX_FONT	macosx/tkMacOSXDefault.h	256;"	d
DEF_LISTBOX_FONT	unix/tkUnixDefault.h	218;"	d
DEF_LISTBOX_FONT	win/tkWinDefault.h	221;"	d
DEF_LISTBOX_HEIGHT	macosx/tkMacOSXDefault.h	258;"	d
DEF_LISTBOX_HEIGHT	unix/tkUnixDefault.h	220;"	d
DEF_LISTBOX_HEIGHT	win/tkWinDefault.h	223;"	d
DEF_LISTBOX_HIGHLIGHT	macosx/tkMacOSXDefault.h	260;"	d
DEF_LISTBOX_HIGHLIGHT	unix/tkUnixDefault.h	222;"	d
DEF_LISTBOX_HIGHLIGHT	win/tkWinDefault.h	225;"	d
DEF_LISTBOX_HIGHLIGHT_BG	macosx/tkMacOSXDefault.h	259;"	d
DEF_LISTBOX_HIGHLIGHT_BG	unix/tkUnixDefault.h	221;"	d
DEF_LISTBOX_HIGHLIGHT_BG	win/tkWinDefault.h	224;"	d
DEF_LISTBOX_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	261;"	d
DEF_LISTBOX_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	223;"	d
DEF_LISTBOX_HIGHLIGHT_WIDTH	win/tkWinDefault.h	226;"	d
DEF_LISTBOX_JUSTIFY	macosx/tkMacOSXDefault.h	262;"	d
DEF_LISTBOX_JUSTIFY	unix/tkUnixDefault.h	224;"	d
DEF_LISTBOX_JUSTIFY	win/tkWinDefault.h	227;"	d
DEF_LISTBOX_LIST_VARIABLE	macosx/tkMacOSXDefault.h	265;"	d
DEF_LISTBOX_LIST_VARIABLE	unix/tkUnixDefault.h	227;"	d
DEF_LISTBOX_LIST_VARIABLE	win/tkWinDefault.h	230;"	d
DEF_LISTBOX_RELIEF	macosx/tkMacOSXDefault.h	263;"	d
DEF_LISTBOX_RELIEF	unix/tkUnixDefault.h	225;"	d
DEF_LISTBOX_RELIEF	win/tkWinDefault.h	228;"	d
DEF_LISTBOX_SCROLL_COMMAND	macosx/tkMacOSXDefault.h	264;"	d
DEF_LISTBOX_SCROLL_COMMAND	unix/tkUnixDefault.h	226;"	d
DEF_LISTBOX_SCROLL_COMMAND	win/tkWinDefault.h	229;"	d
DEF_LISTBOX_SELECT_BD	macosx/tkMacOSXDefault.h	268;"	d
DEF_LISTBOX_SELECT_BD	unix/tkUnixDefault.h	230;"	d
DEF_LISTBOX_SELECT_BD	win/tkWinDefault.h	233;"	d
DEF_LISTBOX_SELECT_COLOR	macosx/tkMacOSXDefault.h	266;"	d
DEF_LISTBOX_SELECT_COLOR	unix/tkUnixDefault.h	228;"	d
DEF_LISTBOX_SELECT_COLOR	win/tkWinDefault.h	231;"	d
DEF_LISTBOX_SELECT_FG_COLOR	macosx/tkMacOSXDefault.h	269;"	d
DEF_LISTBOX_SELECT_FG_COLOR	unix/tkUnixDefault.h	231;"	d
DEF_LISTBOX_SELECT_FG_COLOR	win/tkWinDefault.h	234;"	d
DEF_LISTBOX_SELECT_FG_MONO	macosx/tkMacOSXDefault.h	270;"	d
DEF_LISTBOX_SELECT_FG_MONO	unix/tkUnixDefault.h	232;"	d
DEF_LISTBOX_SELECT_FG_MONO	win/tkWinDefault.h	235;"	d
DEF_LISTBOX_SELECT_MODE	macosx/tkMacOSXDefault.h	271;"	d
DEF_LISTBOX_SELECT_MODE	unix/tkUnixDefault.h	233;"	d
DEF_LISTBOX_SELECT_MODE	win/tkWinDefault.h	236;"	d
DEF_LISTBOX_SELECT_MONO	macosx/tkMacOSXDefault.h	267;"	d
DEF_LISTBOX_SELECT_MONO	unix/tkUnixDefault.h	229;"	d
DEF_LISTBOX_SELECT_MONO	win/tkWinDefault.h	232;"	d
DEF_LISTBOX_SET_GRID	macosx/tkMacOSXDefault.h	272;"	d
DEF_LISTBOX_SET_GRID	unix/tkUnixDefault.h	234;"	d
DEF_LISTBOX_SET_GRID	win/tkWinDefault.h	237;"	d
DEF_LISTBOX_STATE	macosx/tkMacOSXDefault.h	273;"	d
DEF_LISTBOX_STATE	unix/tkUnixDefault.h	235;"	d
DEF_LISTBOX_STATE	win/tkWinDefault.h	238;"	d
DEF_LISTBOX_TAKE_FOCUS	macosx/tkMacOSXDefault.h	274;"	d
DEF_LISTBOX_TAKE_FOCUS	unix/tkUnixDefault.h	236;"	d
DEF_LISTBOX_TAKE_FOCUS	win/tkWinDefault.h	239;"	d
DEF_LISTBOX_WIDTH	macosx/tkMacOSXDefault.h	275;"	d
DEF_LISTBOX_WIDTH	unix/tkUnixDefault.h	237;"	d
DEF_LISTBOX_WIDTH	win/tkWinDefault.h	240;"	d
DEF_LIST_HEIGHT	generic/ttk/ttkEntry.c	155;"	d	file:
DEF_MENUBUTTON_ACTIVE_BG_COLOR	macosx/tkMacOSXDefault.h	343;"	d
DEF_MENUBUTTON_ACTIVE_BG_COLOR	unix/tkUnixDefault.h	300;"	d
DEF_MENUBUTTON_ACTIVE_BG_COLOR	win/tkWinDefault.h	303;"	d
DEF_MENUBUTTON_ACTIVE_BG_MONO	macosx/tkMacOSXDefault.h	344;"	d
DEF_MENUBUTTON_ACTIVE_BG_MONO	unix/tkUnixDefault.h	301;"	d
DEF_MENUBUTTON_ACTIVE_BG_MONO	win/tkWinDefault.h	304;"	d
DEF_MENUBUTTON_ACTIVE_FG_COLOR	macosx/tkMacOSXDefault.h	345;"	d
DEF_MENUBUTTON_ACTIVE_FG_COLOR	unix/tkUnixDefault.h	302;"	d
DEF_MENUBUTTON_ACTIVE_FG_COLOR	win/tkWinDefault.h	305;"	d
DEF_MENUBUTTON_ACTIVE_FG_MONO	macosx/tkMacOSXDefault.h	346;"	d
DEF_MENUBUTTON_ACTIVE_FG_MONO	unix/tkUnixDefault.h	303;"	d
DEF_MENUBUTTON_ACTIVE_FG_MONO	win/tkWinDefault.h	306;"	d
DEF_MENUBUTTON_ANCHOR	macosx/tkMacOSXDefault.h	342;"	d
DEF_MENUBUTTON_ANCHOR	unix/tkUnixDefault.h	299;"	d
DEF_MENUBUTTON_ANCHOR	win/tkWinDefault.h	302;"	d
DEF_MENUBUTTON_BG_COLOR	macosx/tkMacOSXDefault.h	347;"	d
DEF_MENUBUTTON_BG_COLOR	unix/tkUnixDefault.h	304;"	d
DEF_MENUBUTTON_BG_COLOR	win/tkWinDefault.h	307;"	d
DEF_MENUBUTTON_BG_MONO	macosx/tkMacOSXDefault.h	348;"	d
DEF_MENUBUTTON_BG_MONO	unix/tkUnixDefault.h	305;"	d
DEF_MENUBUTTON_BG_MONO	win/tkWinDefault.h	308;"	d
DEF_MENUBUTTON_BITMAP	macosx/tkMacOSXDefault.h	349;"	d
DEF_MENUBUTTON_BITMAP	unix/tkUnixDefault.h	306;"	d
DEF_MENUBUTTON_BITMAP	win/tkWinDefault.h	309;"	d
DEF_MENUBUTTON_BORDER_WIDTH	macosx/tkMacOSXDefault.h	350;"	d
DEF_MENUBUTTON_BORDER_WIDTH	unix/tkUnixDefault.h	307;"	d
DEF_MENUBUTTON_BORDER_WIDTH	win/tkWinDefault.h	310;"	d
DEF_MENUBUTTON_CURSOR	macosx/tkMacOSXDefault.h	351;"	d
DEF_MENUBUTTON_CURSOR	unix/tkUnixDefault.h	308;"	d
DEF_MENUBUTTON_CURSOR	win/tkWinDefault.h	311;"	d
DEF_MENUBUTTON_DIRECTION	macosx/tkMacOSXDefault.h	352;"	d
DEF_MENUBUTTON_DIRECTION	unix/tkUnixDefault.h	309;"	d
DEF_MENUBUTTON_DIRECTION	win/tkWinDefault.h	312;"	d
DEF_MENUBUTTON_DISABLED_FG_COLOR	macosx/tkMacOSXDefault.h	353;"	d
DEF_MENUBUTTON_DISABLED_FG_COLOR	unix/tkUnixDefault.h	310;"	d
DEF_MENUBUTTON_DISABLED_FG_COLOR	win/tkWinDefault.h	313;"	d
DEF_MENUBUTTON_DISABLED_FG_MONO	macosx/tkMacOSXDefault.h	354;"	d
DEF_MENUBUTTON_DISABLED_FG_MONO	unix/tkUnixDefault.h	311;"	d
DEF_MENUBUTTON_DISABLED_FG_MONO	win/tkWinDefault.h	314;"	d
DEF_MENUBUTTON_FG	macosx/tkMacOSXDefault.h	356;"	d
DEF_MENUBUTTON_FG	unix/tkUnixDefault.h	313;"	d
DEF_MENUBUTTON_FG	win/tkWinDefault.h	316;"	d
DEF_MENUBUTTON_FONT	macosx/tkMacOSXDefault.h	355;"	d
DEF_MENUBUTTON_FONT	unix/tkUnixDefault.h	312;"	d
DEF_MENUBUTTON_FONT	win/tkWinDefault.h	315;"	d
DEF_MENUBUTTON_HEIGHT	macosx/tkMacOSXDefault.h	357;"	d
DEF_MENUBUTTON_HEIGHT	unix/tkUnixDefault.h	314;"	d
DEF_MENUBUTTON_HEIGHT	win/tkWinDefault.h	317;"	d
DEF_MENUBUTTON_HIGHLIGHT	macosx/tkMacOSXDefault.h	360;"	d
DEF_MENUBUTTON_HIGHLIGHT	unix/tkUnixDefault.h	317;"	d
DEF_MENUBUTTON_HIGHLIGHT	win/tkWinDefault.h	320;"	d
DEF_MENUBUTTON_HIGHLIGHT_BG_COLOR	macosx/tkMacOSXDefault.h	358;"	d
DEF_MENUBUTTON_HIGHLIGHT_BG_COLOR	unix/tkUnixDefault.h	315;"	d
DEF_MENUBUTTON_HIGHLIGHT_BG_COLOR	win/tkWinDefault.h	318;"	d
DEF_MENUBUTTON_HIGHLIGHT_BG_MONO	macosx/tkMacOSXDefault.h	359;"	d
DEF_MENUBUTTON_HIGHLIGHT_BG_MONO	unix/tkUnixDefault.h	316;"	d
DEF_MENUBUTTON_HIGHLIGHT_BG_MONO	win/tkWinDefault.h	319;"	d
DEF_MENUBUTTON_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	361;"	d
DEF_MENUBUTTON_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	318;"	d
DEF_MENUBUTTON_HIGHLIGHT_WIDTH	win/tkWinDefault.h	321;"	d
DEF_MENUBUTTON_IMAGE	macosx/tkMacOSXDefault.h	362;"	d
DEF_MENUBUTTON_IMAGE	unix/tkUnixDefault.h	319;"	d
DEF_MENUBUTTON_IMAGE	win/tkWinDefault.h	322;"	d
DEF_MENUBUTTON_INDICATOR	macosx/tkMacOSXDefault.h	363;"	d
DEF_MENUBUTTON_INDICATOR	unix/tkUnixDefault.h	320;"	d
DEF_MENUBUTTON_INDICATOR	win/tkWinDefault.h	323;"	d
DEF_MENUBUTTON_JUSTIFY	macosx/tkMacOSXDefault.h	364;"	d
DEF_MENUBUTTON_JUSTIFY	unix/tkUnixDefault.h	321;"	d
DEF_MENUBUTTON_JUSTIFY	win/tkWinDefault.h	324;"	d
DEF_MENUBUTTON_MENU	macosx/tkMacOSXDefault.h	365;"	d
DEF_MENUBUTTON_MENU	unix/tkUnixDefault.h	322;"	d
DEF_MENUBUTTON_MENU	win/tkWinDefault.h	325;"	d
DEF_MENUBUTTON_PADX	macosx/tkMacOSXDefault.h	366;"	d
DEF_MENUBUTTON_PADX	unix/tkUnixDefault.h	323;"	d
DEF_MENUBUTTON_PADX	win/tkWinDefault.h	326;"	d
DEF_MENUBUTTON_PADY	macosx/tkMacOSXDefault.h	367;"	d
DEF_MENUBUTTON_PADY	unix/tkUnixDefault.h	324;"	d
DEF_MENUBUTTON_PADY	win/tkWinDefault.h	327;"	d
DEF_MENUBUTTON_RELIEF	macosx/tkMacOSXDefault.h	368;"	d
DEF_MENUBUTTON_RELIEF	unix/tkUnixDefault.h	325;"	d
DEF_MENUBUTTON_RELIEF	win/tkWinDefault.h	328;"	d
DEF_MENUBUTTON_STATE	macosx/tkMacOSXDefault.h	369;"	d
DEF_MENUBUTTON_STATE	unix/tkUnixDefault.h	326;"	d
DEF_MENUBUTTON_STATE	win/tkWinDefault.h	329;"	d
DEF_MENUBUTTON_TAKE_FOCUS	macosx/tkMacOSXDefault.h	370;"	d
DEF_MENUBUTTON_TAKE_FOCUS	unix/tkUnixDefault.h	327;"	d
DEF_MENUBUTTON_TAKE_FOCUS	win/tkWinDefault.h	330;"	d
DEF_MENUBUTTON_TEXT	macosx/tkMacOSXDefault.h	371;"	d
DEF_MENUBUTTON_TEXT	unix/tkUnixDefault.h	328;"	d
DEF_MENUBUTTON_TEXT	win/tkWinDefault.h	331;"	d
DEF_MENUBUTTON_TEXT_VARIABLE	macosx/tkMacOSXDefault.h	372;"	d
DEF_MENUBUTTON_TEXT_VARIABLE	unix/tkUnixDefault.h	329;"	d
DEF_MENUBUTTON_TEXT_VARIABLE	win/tkWinDefault.h	332;"	d
DEF_MENUBUTTON_UNDERLINE	macosx/tkMacOSXDefault.h	373;"	d
DEF_MENUBUTTON_UNDERLINE	unix/tkUnixDefault.h	330;"	d
DEF_MENUBUTTON_UNDERLINE	win/tkWinDefault.h	333;"	d
DEF_MENUBUTTON_WIDTH	macosx/tkMacOSXDefault.h	374;"	d
DEF_MENUBUTTON_WIDTH	unix/tkUnixDefault.h	331;"	d
DEF_MENUBUTTON_WIDTH	win/tkWinDefault.h	334;"	d
DEF_MENUBUTTON_WRAP_LENGTH	macosx/tkMacOSXDefault.h	375;"	d
DEF_MENUBUTTON_WRAP_LENGTH	unix/tkUnixDefault.h	332;"	d
DEF_MENUBUTTON_WRAP_LENGTH	win/tkWinDefault.h	335;"	d
DEF_MENU_ACTIVE_BG_COLOR	macosx/tkMacOSXDefault.h	310;"	d
DEF_MENU_ACTIVE_BG_COLOR	unix/tkUnixDefault.h	272;"	d
DEF_MENU_ACTIVE_BG_COLOR	win/tkWinDefault.h	275;"	d
DEF_MENU_ACTIVE_BG_MONO	macosx/tkMacOSXDefault.h	311;"	d
DEF_MENU_ACTIVE_BG_MONO	unix/tkUnixDefault.h	273;"	d
DEF_MENU_ACTIVE_BG_MONO	win/tkWinDefault.h	276;"	d
DEF_MENU_ACTIVE_BORDER_WIDTH	macosx/tkMacOSXDefault.h	312;"	d
DEF_MENU_ACTIVE_BORDER_WIDTH	unix/tkUnixDefault.h	274;"	d
DEF_MENU_ACTIVE_BORDER_WIDTH	win/tkWinDefault.h	277;"	d
DEF_MENU_ACTIVE_FG_COLOR	macosx/tkMacOSXDefault.h	313;"	d
DEF_MENU_ACTIVE_FG_COLOR	unix/tkUnixDefault.h	275;"	d
DEF_MENU_ACTIVE_FG_COLOR	win/tkWinDefault.h	278;"	d
DEF_MENU_ACTIVE_FG_MONO	macosx/tkMacOSXDefault.h	314;"	d
DEF_MENU_ACTIVE_FG_MONO	unix/tkUnixDefault.h	276;"	d
DEF_MENU_ACTIVE_FG_MONO	win/tkWinDefault.h	279;"	d
DEF_MENU_BG_COLOR	macosx/tkMacOSXDefault.h	315;"	d
DEF_MENU_BG_COLOR	unix/tkUnixDefault.h	277;"	d
DEF_MENU_BG_COLOR	win/tkWinDefault.h	280;"	d
DEF_MENU_BG_MONO	macosx/tkMacOSXDefault.h	316;"	d
DEF_MENU_BG_MONO	unix/tkUnixDefault.h	278;"	d
DEF_MENU_BG_MONO	win/tkWinDefault.h	281;"	d
DEF_MENU_BORDER_WIDTH	macosx/tkMacOSXDefault.h	317;"	d
DEF_MENU_BORDER_WIDTH	unix/tkUnixDefault.h	279;"	d
DEF_MENU_BORDER_WIDTH	win/tkWinDefault.h	282;"	d
DEF_MENU_CURSOR	macosx/tkMacOSXDefault.h	318;"	d
DEF_MENU_CURSOR	unix/tkUnixDefault.h	280;"	d
DEF_MENU_CURSOR	win/tkWinDefault.h	283;"	d
DEF_MENU_DISABLED_FG_COLOR	macosx/tkMacOSXDefault.h	319;"	d
DEF_MENU_DISABLED_FG_COLOR	unix/tkUnixDefault.h	281;"	d
DEF_MENU_DISABLED_FG_COLOR	win/tkWinDefault.h	284;"	d
DEF_MENU_DISABLED_FG_MONO	macosx/tkMacOSXDefault.h	320;"	d
DEF_MENU_DISABLED_FG_MONO	unix/tkUnixDefault.h	282;"	d
DEF_MENU_DISABLED_FG_MONO	win/tkWinDefault.h	285;"	d
DEF_MENU_ENTRY_ACCELERATOR	macosx/tkMacOSXDefault.h	283;"	d
DEF_MENU_ENTRY_ACCELERATOR	unix/tkUnixDefault.h	245;"	d
DEF_MENU_ENTRY_ACCELERATOR	win/tkWinDefault.h	248;"	d
DEF_MENU_ENTRY_ACTIVE_BG	macosx/tkMacOSXDefault.h	281;"	d
DEF_MENU_ENTRY_ACTIVE_BG	unix/tkUnixDefault.h	243;"	d
DEF_MENU_ENTRY_ACTIVE_BG	win/tkWinDefault.h	246;"	d
DEF_MENU_ENTRY_ACTIVE_FG	macosx/tkMacOSXDefault.h	282;"	d
DEF_MENU_ENTRY_ACTIVE_FG	unix/tkUnixDefault.h	244;"	d
DEF_MENU_ENTRY_ACTIVE_FG	win/tkWinDefault.h	247;"	d
DEF_MENU_ENTRY_BG	macosx/tkMacOSXDefault.h	284;"	d
DEF_MENU_ENTRY_BG	unix/tkUnixDefault.h	246;"	d
DEF_MENU_ENTRY_BG	win/tkWinDefault.h	249;"	d
DEF_MENU_ENTRY_BITMAP	macosx/tkMacOSXDefault.h	285;"	d
DEF_MENU_ENTRY_BITMAP	unix/tkUnixDefault.h	247;"	d
DEF_MENU_ENTRY_BITMAP	win/tkWinDefault.h	250;"	d
DEF_MENU_ENTRY_CHECK_VARIABLE	macosx/tkMacOSXDefault.h	301;"	d
DEF_MENU_ENTRY_CHECK_VARIABLE	unix/tkUnixDefault.h	263;"	d
DEF_MENU_ENTRY_CHECK_VARIABLE	win/tkWinDefault.h	266;"	d
DEF_MENU_ENTRY_COLUMN_BREAK	macosx/tkMacOSXDefault.h	286;"	d
DEF_MENU_ENTRY_COLUMN_BREAK	unix/tkUnixDefault.h	248;"	d
DEF_MENU_ENTRY_COLUMN_BREAK	win/tkWinDefault.h	251;"	d
DEF_MENU_ENTRY_COMMAND	macosx/tkMacOSXDefault.h	287;"	d
DEF_MENU_ENTRY_COMMAND	unix/tkUnixDefault.h	249;"	d
DEF_MENU_ENTRY_COMMAND	win/tkWinDefault.h	252;"	d
DEF_MENU_ENTRY_COMPOUND	macosx/tkMacOSXDefault.h	288;"	d
DEF_MENU_ENTRY_COMPOUND	unix/tkUnixDefault.h	250;"	d
DEF_MENU_ENTRY_COMPOUND	win/tkWinDefault.h	253;"	d
DEF_MENU_ENTRY_FG	macosx/tkMacOSXDefault.h	289;"	d
DEF_MENU_ENTRY_FG	unix/tkUnixDefault.h	251;"	d
DEF_MENU_ENTRY_FG	win/tkWinDefault.h	254;"	d
DEF_MENU_ENTRY_FONT	macosx/tkMacOSXDefault.h	290;"	d
DEF_MENU_ENTRY_FONT	unix/tkUnixDefault.h	252;"	d
DEF_MENU_ENTRY_FONT	win/tkWinDefault.h	255;"	d
DEF_MENU_ENTRY_HIDE_MARGIN	macosx/tkMacOSXDefault.h	291;"	d
DEF_MENU_ENTRY_HIDE_MARGIN	unix/tkUnixDefault.h	253;"	d
DEF_MENU_ENTRY_HIDE_MARGIN	win/tkWinDefault.h	256;"	d
DEF_MENU_ENTRY_IMAGE	macosx/tkMacOSXDefault.h	292;"	d
DEF_MENU_ENTRY_IMAGE	unix/tkUnixDefault.h	254;"	d
DEF_MENU_ENTRY_IMAGE	win/tkWinDefault.h	257;"	d
DEF_MENU_ENTRY_INDICATOR	macosx/tkMacOSXDefault.h	293;"	d
DEF_MENU_ENTRY_INDICATOR	unix/tkUnixDefault.h	255;"	d
DEF_MENU_ENTRY_INDICATOR	win/tkWinDefault.h	258;"	d
DEF_MENU_ENTRY_LABEL	macosx/tkMacOSXDefault.h	294;"	d
DEF_MENU_ENTRY_LABEL	unix/tkUnixDefault.h	256;"	d
DEF_MENU_ENTRY_LABEL	win/tkWinDefault.h	259;"	d
DEF_MENU_ENTRY_MENU	macosx/tkMacOSXDefault.h	295;"	d
DEF_MENU_ENTRY_MENU	unix/tkUnixDefault.h	257;"	d
DEF_MENU_ENTRY_MENU	win/tkWinDefault.h	260;"	d
DEF_MENU_ENTRY_OFF_VALUE	macosx/tkMacOSXDefault.h	296;"	d
DEF_MENU_ENTRY_OFF_VALUE	unix/tkUnixDefault.h	258;"	d
DEF_MENU_ENTRY_OFF_VALUE	win/tkWinDefault.h	261;"	d
DEF_MENU_ENTRY_ON_VALUE	macosx/tkMacOSXDefault.h	297;"	d
DEF_MENU_ENTRY_ON_VALUE	unix/tkUnixDefault.h	259;"	d
DEF_MENU_ENTRY_ON_VALUE	win/tkWinDefault.h	262;"	d
DEF_MENU_ENTRY_RADIO_VARIABLE	macosx/tkMacOSXDefault.h	302;"	d
DEF_MENU_ENTRY_RADIO_VARIABLE	unix/tkUnixDefault.h	264;"	d
DEF_MENU_ENTRY_RADIO_VARIABLE	win/tkWinDefault.h	267;"	d
DEF_MENU_ENTRY_SELECT	macosx/tkMacOSXDefault.h	303;"	d
DEF_MENU_ENTRY_SELECT	unix/tkUnixDefault.h	265;"	d
DEF_MENU_ENTRY_SELECT	win/tkWinDefault.h	268;"	d
DEF_MENU_ENTRY_SELECT_IMAGE	macosx/tkMacOSXDefault.h	298;"	d
DEF_MENU_ENTRY_SELECT_IMAGE	unix/tkUnixDefault.h	260;"	d
DEF_MENU_ENTRY_SELECT_IMAGE	win/tkWinDefault.h	263;"	d
DEF_MENU_ENTRY_STATE	macosx/tkMacOSXDefault.h	299;"	d
DEF_MENU_ENTRY_STATE	unix/tkUnixDefault.h	261;"	d
DEF_MENU_ENTRY_STATE	win/tkWinDefault.h	264;"	d
DEF_MENU_ENTRY_UNDERLINE	macosx/tkMacOSXDefault.h	304;"	d
DEF_MENU_ENTRY_UNDERLINE	unix/tkUnixDefault.h	266;"	d
DEF_MENU_ENTRY_UNDERLINE	win/tkWinDefault.h	269;"	d
DEF_MENU_ENTRY_VALUE	macosx/tkMacOSXDefault.h	300;"	d
DEF_MENU_ENTRY_VALUE	unix/tkUnixDefault.h	262;"	d
DEF_MENU_ENTRY_VALUE	win/tkWinDefault.h	265;"	d
DEF_MENU_FG	macosx/tkMacOSXDefault.h	322;"	d
DEF_MENU_FG	unix/tkUnixDefault.h	284;"	d
DEF_MENU_FG	win/tkWinDefault.h	287;"	d
DEF_MENU_FONT	macosx/tkMacOSXDefault.h	321;"	d
DEF_MENU_FONT	unix/tkUnixDefault.h	283;"	d
DEF_MENU_FONT	win/tkWinDefault.h	286;"	d
DEF_MENU_POST_COMMAND	macosx/tkMacOSXDefault.h	323;"	d
DEF_MENU_POST_COMMAND	unix/tkUnixDefault.h	285;"	d
DEF_MENU_POST_COMMAND	win/tkWinDefault.h	288;"	d
DEF_MENU_RELIEF	macosx/tkMacOSXDefault.h	324;"	d
DEF_MENU_RELIEF	unix/tkUnixDefault.h	286;"	d
DEF_MENU_RELIEF	win/tkWinDefault.h	289;"	d
DEF_MENU_SELECT_COLOR	macosx/tkMacOSXDefault.h	325;"	d
DEF_MENU_SELECT_COLOR	unix/tkUnixDefault.h	287;"	d
DEF_MENU_SELECT_COLOR	win/tkWinDefault.h	290;"	d
DEF_MENU_SELECT_MONO	macosx/tkMacOSXDefault.h	326;"	d
DEF_MENU_SELECT_MONO	unix/tkUnixDefault.h	288;"	d
DEF_MENU_SELECT_MONO	win/tkWinDefault.h	291;"	d
DEF_MENU_TAKE_FOCUS	macosx/tkMacOSXDefault.h	327;"	d
DEF_MENU_TAKE_FOCUS	unix/tkUnixDefault.h	289;"	d
DEF_MENU_TAKE_FOCUS	win/tkWinDefault.h	292;"	d
DEF_MENU_TEAROFF	macosx/tkMacOSXDefault.h	333;"	d
DEF_MENU_TEAROFF	unix/tkUnixDefault.h	290;"	d
DEF_MENU_TEAROFF	win/tkWinDefault.h	293;"	d
DEF_MENU_TEAROFF_CMD	macosx/tkMacOSXDefault.h	334;"	d
DEF_MENU_TEAROFF_CMD	unix/tkUnixDefault.h	291;"	d
DEF_MENU_TEAROFF_CMD	win/tkWinDefault.h	294;"	d
DEF_MENU_TITLE	macosx/tkMacOSXDefault.h	335;"	d
DEF_MENU_TITLE	unix/tkUnixDefault.h	292;"	d
DEF_MENU_TITLE	win/tkWinDefault.h	295;"	d
DEF_MENU_TYPE	macosx/tkMacOSXDefault.h	336;"	d
DEF_MENU_TYPE	unix/tkUnixDefault.h	293;"	d
DEF_MENU_TYPE	win/tkWinDefault.h	296;"	d
DEF_MESSAGE_ANCHOR	macosx/tkMacOSXDefault.h	381;"	d
DEF_MESSAGE_ANCHOR	unix/tkUnixDefault.h	338;"	d
DEF_MESSAGE_ANCHOR	win/tkWinDefault.h	341;"	d
DEF_MESSAGE_ASPECT	macosx/tkMacOSXDefault.h	382;"	d
DEF_MESSAGE_ASPECT	unix/tkUnixDefault.h	339;"	d
DEF_MESSAGE_ASPECT	win/tkWinDefault.h	342;"	d
DEF_MESSAGE_BG_COLOR	macosx/tkMacOSXDefault.h	383;"	d
DEF_MESSAGE_BG_COLOR	unix/tkUnixDefault.h	340;"	d
DEF_MESSAGE_BG_COLOR	win/tkWinDefault.h	343;"	d
DEF_MESSAGE_BG_MONO	macosx/tkMacOSXDefault.h	384;"	d
DEF_MESSAGE_BG_MONO	unix/tkUnixDefault.h	341;"	d
DEF_MESSAGE_BG_MONO	win/tkWinDefault.h	344;"	d
DEF_MESSAGE_BORDER_WIDTH	macosx/tkMacOSXDefault.h	385;"	d
DEF_MESSAGE_BORDER_WIDTH	unix/tkUnixDefault.h	342;"	d
DEF_MESSAGE_BORDER_WIDTH	win/tkWinDefault.h	345;"	d
DEF_MESSAGE_CURSOR	macosx/tkMacOSXDefault.h	386;"	d
DEF_MESSAGE_CURSOR	unix/tkUnixDefault.h	343;"	d
DEF_MESSAGE_CURSOR	win/tkWinDefault.h	346;"	d
DEF_MESSAGE_FG	macosx/tkMacOSXDefault.h	387;"	d
DEF_MESSAGE_FG	unix/tkUnixDefault.h	344;"	d
DEF_MESSAGE_FG	win/tkWinDefault.h	347;"	d
DEF_MESSAGE_FONT	macosx/tkMacOSXDefault.h	388;"	d
DEF_MESSAGE_FONT	unix/tkUnixDefault.h	345;"	d
DEF_MESSAGE_FONT	win/tkWinDefault.h	348;"	d
DEF_MESSAGE_HIGHLIGHT	macosx/tkMacOSXDefault.h	390;"	d
DEF_MESSAGE_HIGHLIGHT	unix/tkUnixDefault.h	347;"	d
DEF_MESSAGE_HIGHLIGHT	win/tkWinDefault.h	350;"	d
DEF_MESSAGE_HIGHLIGHT_BG	macosx/tkMacOSXDefault.h	389;"	d
DEF_MESSAGE_HIGHLIGHT_BG	unix/tkUnixDefault.h	346;"	d
DEF_MESSAGE_HIGHLIGHT_BG	win/tkWinDefault.h	349;"	d
DEF_MESSAGE_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	391;"	d
DEF_MESSAGE_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	348;"	d
DEF_MESSAGE_HIGHLIGHT_WIDTH	win/tkWinDefault.h	351;"	d
DEF_MESSAGE_JUSTIFY	macosx/tkMacOSXDefault.h	392;"	d
DEF_MESSAGE_JUSTIFY	unix/tkUnixDefault.h	349;"	d
DEF_MESSAGE_JUSTIFY	win/tkWinDefault.h	352;"	d
DEF_MESSAGE_PADX	macosx/tkMacOSXDefault.h	393;"	d
DEF_MESSAGE_PADX	unix/tkUnixDefault.h	350;"	d
DEF_MESSAGE_PADX	win/tkWinDefault.h	353;"	d
DEF_MESSAGE_PADY	macosx/tkMacOSXDefault.h	394;"	d
DEF_MESSAGE_PADY	unix/tkUnixDefault.h	351;"	d
DEF_MESSAGE_PADY	win/tkWinDefault.h	354;"	d
DEF_MESSAGE_RELIEF	macosx/tkMacOSXDefault.h	395;"	d
DEF_MESSAGE_RELIEF	unix/tkUnixDefault.h	352;"	d
DEF_MESSAGE_RELIEF	win/tkWinDefault.h	355;"	d
DEF_MESSAGE_TAKE_FOCUS	macosx/tkMacOSXDefault.h	396;"	d
DEF_MESSAGE_TAKE_FOCUS	unix/tkUnixDefault.h	353;"	d
DEF_MESSAGE_TAKE_FOCUS	win/tkWinDefault.h	356;"	d
DEF_MESSAGE_TEXT	macosx/tkMacOSXDefault.h	397;"	d
DEF_MESSAGE_TEXT	unix/tkUnixDefault.h	354;"	d
DEF_MESSAGE_TEXT	win/tkWinDefault.h	357;"	d
DEF_MESSAGE_TEXT_VARIABLE	macosx/tkMacOSXDefault.h	398;"	d
DEF_MESSAGE_TEXT_VARIABLE	unix/tkUnixDefault.h	355;"	d
DEF_MESSAGE_TEXT_VARIABLE	win/tkWinDefault.h	358;"	d
DEF_MESSAGE_WIDTH	macosx/tkMacOSXDefault.h	399;"	d
DEF_MESSAGE_WIDTH	unix/tkUnixDefault.h	356;"	d
DEF_MESSAGE_WIDTH	win/tkWinDefault.h	359;"	d
DEF_MINWIDTH	generic/ttk/ttkTreeview.c	15;"	d	file:
DEF_PANEDWINDOW_BG_COLOR	macosx/tkMacOSXDefault.h	404;"	d
DEF_PANEDWINDOW_BG_COLOR	unix/tkUnixDefault.h	362;"	d
DEF_PANEDWINDOW_BG_COLOR	win/tkWinDefault.h	365;"	d
DEF_PANEDWINDOW_BG_MONO	macosx/tkMacOSXDefault.h	405;"	d
DEF_PANEDWINDOW_BG_MONO	unix/tkUnixDefault.h	363;"	d
DEF_PANEDWINDOW_BG_MONO	win/tkWinDefault.h	366;"	d
DEF_PANEDWINDOW_BORDERWIDTH	macosx/tkMacOSXDefault.h	406;"	d
DEF_PANEDWINDOW_BORDERWIDTH	unix/tkUnixDefault.h	364;"	d
DEF_PANEDWINDOW_BORDERWIDTH	win/tkWinDefault.h	367;"	d
DEF_PANEDWINDOW_CURSOR	macosx/tkMacOSXDefault.h	407;"	d
DEF_PANEDWINDOW_CURSOR	unix/tkUnixDefault.h	365;"	d
DEF_PANEDWINDOW_CURSOR	win/tkWinDefault.h	368;"	d
DEF_PANEDWINDOW_HANDLEPAD	macosx/tkMacOSXDefault.h	408;"	d
DEF_PANEDWINDOW_HANDLEPAD	unix/tkUnixDefault.h	366;"	d
DEF_PANEDWINDOW_HANDLEPAD	win/tkWinDefault.h	369;"	d
DEF_PANEDWINDOW_HANDLESIZE	macosx/tkMacOSXDefault.h	409;"	d
DEF_PANEDWINDOW_HANDLESIZE	unix/tkUnixDefault.h	367;"	d
DEF_PANEDWINDOW_HANDLESIZE	win/tkWinDefault.h	370;"	d
DEF_PANEDWINDOW_HEIGHT	macosx/tkMacOSXDefault.h	410;"	d
DEF_PANEDWINDOW_HEIGHT	unix/tkUnixDefault.h	368;"	d
DEF_PANEDWINDOW_HEIGHT	win/tkWinDefault.h	371;"	d
DEF_PANEDWINDOW_OPAQUERESIZE	macosx/tkMacOSXDefault.h	411;"	d
DEF_PANEDWINDOW_OPAQUERESIZE	unix/tkUnixDefault.h	369;"	d
DEF_PANEDWINDOW_OPAQUERESIZE	win/tkWinDefault.h	372;"	d
DEF_PANEDWINDOW_ORIENT	macosx/tkMacOSXDefault.h	412;"	d
DEF_PANEDWINDOW_ORIENT	unix/tkUnixDefault.h	370;"	d
DEF_PANEDWINDOW_ORIENT	win/tkWinDefault.h	373;"	d
DEF_PANEDWINDOW_PANE_AFTER	macosx/tkMacOSXDefault.h	426;"	d
DEF_PANEDWINDOW_PANE_AFTER	unix/tkUnixDefault.h	384;"	d
DEF_PANEDWINDOW_PANE_AFTER	win/tkWinDefault.h	387;"	d
DEF_PANEDWINDOW_PANE_BEFORE	macosx/tkMacOSXDefault.h	427;"	d
DEF_PANEDWINDOW_PANE_BEFORE	unix/tkUnixDefault.h	385;"	d
DEF_PANEDWINDOW_PANE_BEFORE	win/tkWinDefault.h	388;"	d
DEF_PANEDWINDOW_PANE_HEIGHT	macosx/tkMacOSXDefault.h	428;"	d
DEF_PANEDWINDOW_PANE_HEIGHT	unix/tkUnixDefault.h	386;"	d
DEF_PANEDWINDOW_PANE_HEIGHT	win/tkWinDefault.h	389;"	d
DEF_PANEDWINDOW_PANE_HIDE	macosx/tkMacOSXDefault.h	434;"	d
DEF_PANEDWINDOW_PANE_HIDE	unix/tkUnixDefault.h	392;"	d
DEF_PANEDWINDOW_PANE_HIDE	win/tkWinDefault.h	395;"	d
DEF_PANEDWINDOW_PANE_MINSIZE	macosx/tkMacOSXDefault.h	429;"	d
DEF_PANEDWINDOW_PANE_MINSIZE	unix/tkUnixDefault.h	387;"	d
DEF_PANEDWINDOW_PANE_MINSIZE	win/tkWinDefault.h	390;"	d
DEF_PANEDWINDOW_PANE_PADX	macosx/tkMacOSXDefault.h	430;"	d
DEF_PANEDWINDOW_PANE_PADX	unix/tkUnixDefault.h	388;"	d
DEF_PANEDWINDOW_PANE_PADX	win/tkWinDefault.h	391;"	d
DEF_PANEDWINDOW_PANE_PADY	macosx/tkMacOSXDefault.h	431;"	d
DEF_PANEDWINDOW_PANE_PADY	unix/tkUnixDefault.h	389;"	d
DEF_PANEDWINDOW_PANE_PADY	win/tkWinDefault.h	392;"	d
DEF_PANEDWINDOW_PANE_STICKY	macosx/tkMacOSXDefault.h	432;"	d
DEF_PANEDWINDOW_PANE_STICKY	unix/tkUnixDefault.h	390;"	d
DEF_PANEDWINDOW_PANE_STICKY	win/tkWinDefault.h	393;"	d
DEF_PANEDWINDOW_PANE_STRETCH	macosx/tkMacOSXDefault.h	435;"	d
DEF_PANEDWINDOW_PANE_STRETCH	unix/tkUnixDefault.h	393;"	d
DEF_PANEDWINDOW_PANE_STRETCH	win/tkWinDefault.h	396;"	d
DEF_PANEDWINDOW_PANE_WIDTH	macosx/tkMacOSXDefault.h	433;"	d
DEF_PANEDWINDOW_PANE_WIDTH	unix/tkUnixDefault.h	391;"	d
DEF_PANEDWINDOW_PANE_WIDTH	win/tkWinDefault.h	394;"	d
DEF_PANEDWINDOW_PROXYBORDER	macosx/tkMacOSXDefault.h	413;"	d
DEF_PANEDWINDOW_PROXYBORDER	unix/tkUnixDefault.h	371;"	d
DEF_PANEDWINDOW_PROXYBORDER	win/tkWinDefault.h	374;"	d
DEF_PANEDWINDOW_RELIEF	macosx/tkMacOSXDefault.h	414;"	d
DEF_PANEDWINDOW_RELIEF	unix/tkUnixDefault.h	372;"	d
DEF_PANEDWINDOW_RELIEF	win/tkWinDefault.h	375;"	d
DEF_PANEDWINDOW_SASHCURSOR	macosx/tkMacOSXDefault.h	415;"	d
DEF_PANEDWINDOW_SASHCURSOR	unix/tkUnixDefault.h	373;"	d
DEF_PANEDWINDOW_SASHCURSOR	win/tkWinDefault.h	376;"	d
DEF_PANEDWINDOW_SASHPAD	macosx/tkMacOSXDefault.h	416;"	d
DEF_PANEDWINDOW_SASHPAD	unix/tkUnixDefault.h	374;"	d
DEF_PANEDWINDOW_SASHPAD	win/tkWinDefault.h	377;"	d
DEF_PANEDWINDOW_SASHRELIEF	macosx/tkMacOSXDefault.h	417;"	d
DEF_PANEDWINDOW_SASHRELIEF	unix/tkUnixDefault.h	375;"	d
DEF_PANEDWINDOW_SASHRELIEF	win/tkWinDefault.h	378;"	d
DEF_PANEDWINDOW_SASHWIDTH	macosx/tkMacOSXDefault.h	418;"	d
DEF_PANEDWINDOW_SASHWIDTH	unix/tkUnixDefault.h	376;"	d
DEF_PANEDWINDOW_SASHWIDTH	win/tkWinDefault.h	379;"	d
DEF_PANEDWINDOW_SHOWHANDLE	macosx/tkMacOSXDefault.h	419;"	d
DEF_PANEDWINDOW_SHOWHANDLE	unix/tkUnixDefault.h	377;"	d
DEF_PANEDWINDOW_SHOWHANDLE	win/tkWinDefault.h	380;"	d
DEF_PANEDWINDOW_WIDTH	macosx/tkMacOSXDefault.h	420;"	d
DEF_PANEDWINDOW_WIDTH	unix/tkUnixDefault.h	378;"	d
DEF_PANEDWINDOW_WIDTH	win/tkWinDefault.h	381;"	d
DEF_PHOTO_GAMMA	generic/tkImgPhoto.c	144;"	d	file:
DEF_PHOTO_HEIGHT	generic/tkImgPhoto.c	145;"	d	file:
DEF_PHOTO_PALETTE	generic/tkImgPhoto.c	146;"	d	file:
DEF_PHOTO_WIDTH	generic/tkImgPhoto.c	147;"	d	file:
DEF_PROGRESSBAR_LENGTH	generic/ttk/ttkProgress.c	17;"	d	file:
DEF_RADIOBUTTON_VARIABLE	macosx/tkMacOSXDefault.h	118;"	d
DEF_RADIOBUTTON_VARIABLE	unix/tkUnixDefault.h	94;"	d
DEF_RADIOBUTTON_VARIABLE	win/tkWinDefault.h	98;"	d
DEF_SCALE_ACTIVE_BG_COLOR	macosx/tkMacOSXDefault.h	441;"	d
DEF_SCALE_ACTIVE_BG_COLOR	unix/tkUnixDefault.h	399;"	d
DEF_SCALE_ACTIVE_BG_COLOR	win/tkWinDefault.h	402;"	d
DEF_SCALE_ACTIVE_BG_MONO	macosx/tkMacOSXDefault.h	442;"	d
DEF_SCALE_ACTIVE_BG_MONO	unix/tkUnixDefault.h	400;"	d
DEF_SCALE_ACTIVE_BG_MONO	win/tkWinDefault.h	403;"	d
DEF_SCALE_BG_COLOR	macosx/tkMacOSXDefault.h	443;"	d
DEF_SCALE_BG_COLOR	unix/tkUnixDefault.h	401;"	d
DEF_SCALE_BG_COLOR	win/tkWinDefault.h	404;"	d
DEF_SCALE_BG_MONO	macosx/tkMacOSXDefault.h	444;"	d
DEF_SCALE_BG_MONO	unix/tkUnixDefault.h	402;"	d
DEF_SCALE_BG_MONO	win/tkWinDefault.h	405;"	d
DEF_SCALE_BIG_INCREMENT	macosx/tkMacOSXDefault.h	445;"	d
DEF_SCALE_BIG_INCREMENT	unix/tkUnixDefault.h	403;"	d
DEF_SCALE_BIG_INCREMENT	win/tkWinDefault.h	406;"	d
DEF_SCALE_BORDER_WIDTH	macosx/tkMacOSXDefault.h	446;"	d
DEF_SCALE_BORDER_WIDTH	unix/tkUnixDefault.h	404;"	d
DEF_SCALE_BORDER_WIDTH	win/tkWinDefault.h	407;"	d
DEF_SCALE_COMMAND	macosx/tkMacOSXDefault.h	447;"	d
DEF_SCALE_COMMAND	unix/tkUnixDefault.h	405;"	d
DEF_SCALE_COMMAND	win/tkWinDefault.h	408;"	d
DEF_SCALE_CURSOR	macosx/tkMacOSXDefault.h	448;"	d
DEF_SCALE_CURSOR	unix/tkUnixDefault.h	406;"	d
DEF_SCALE_CURSOR	win/tkWinDefault.h	409;"	d
DEF_SCALE_DIGITS	macosx/tkMacOSXDefault.h	449;"	d
DEF_SCALE_DIGITS	unix/tkUnixDefault.h	407;"	d
DEF_SCALE_DIGITS	win/tkWinDefault.h	410;"	d
DEF_SCALE_FG_COLOR	macosx/tkMacOSXDefault.h	451;"	d
DEF_SCALE_FG_COLOR	unix/tkUnixDefault.h	409;"	d
DEF_SCALE_FG_COLOR	win/tkWinDefault.h	412;"	d
DEF_SCALE_FG_MONO	macosx/tkMacOSXDefault.h	452;"	d
DEF_SCALE_FG_MONO	unix/tkUnixDefault.h	410;"	d
DEF_SCALE_FG_MONO	win/tkWinDefault.h	413;"	d
DEF_SCALE_FONT	macosx/tkMacOSXDefault.h	450;"	d
DEF_SCALE_FONT	unix/tkUnixDefault.h	408;"	d
DEF_SCALE_FONT	win/tkWinDefault.h	411;"	d
DEF_SCALE_FROM	macosx/tkMacOSXDefault.h	453;"	d
DEF_SCALE_FROM	unix/tkUnixDefault.h	411;"	d
DEF_SCALE_FROM	win/tkWinDefault.h	414;"	d
DEF_SCALE_HIGHLIGHT	macosx/tkMacOSXDefault.h	456;"	d
DEF_SCALE_HIGHLIGHT	unix/tkUnixDefault.h	414;"	d
DEF_SCALE_HIGHLIGHT	win/tkWinDefault.h	417;"	d
DEF_SCALE_HIGHLIGHT_BG_COLOR	macosx/tkMacOSXDefault.h	454;"	d
DEF_SCALE_HIGHLIGHT_BG_COLOR	unix/tkUnixDefault.h	412;"	d
DEF_SCALE_HIGHLIGHT_BG_COLOR	win/tkWinDefault.h	415;"	d
DEF_SCALE_HIGHLIGHT_BG_MONO	macosx/tkMacOSXDefault.h	455;"	d
DEF_SCALE_HIGHLIGHT_BG_MONO	unix/tkUnixDefault.h	413;"	d
DEF_SCALE_HIGHLIGHT_BG_MONO	win/tkWinDefault.h	416;"	d
DEF_SCALE_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	457;"	d
DEF_SCALE_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	415;"	d
DEF_SCALE_HIGHLIGHT_WIDTH	win/tkWinDefault.h	418;"	d
DEF_SCALE_LABEL	macosx/tkMacOSXDefault.h	458;"	d
DEF_SCALE_LABEL	unix/tkUnixDefault.h	416;"	d
DEF_SCALE_LABEL	win/tkWinDefault.h	419;"	d
DEF_SCALE_LENGTH	generic/ttk/ttkScale.c	13;"	d	file:
DEF_SCALE_LENGTH	macosx/tkMacOSXDefault.h	459;"	d
DEF_SCALE_LENGTH	unix/tkUnixDefault.h	417;"	d
DEF_SCALE_LENGTH	win/tkWinDefault.h	420;"	d
DEF_SCALE_ORIENT	macosx/tkMacOSXDefault.h	460;"	d
DEF_SCALE_ORIENT	unix/tkUnixDefault.h	418;"	d
DEF_SCALE_ORIENT	win/tkWinDefault.h	421;"	d
DEF_SCALE_RELIEF	macosx/tkMacOSXDefault.h	461;"	d
DEF_SCALE_RELIEF	unix/tkUnixDefault.h	419;"	d
DEF_SCALE_RELIEF	win/tkWinDefault.h	422;"	d
DEF_SCALE_REPEAT_DELAY	macosx/tkMacOSXDefault.h	462;"	d
DEF_SCALE_REPEAT_DELAY	unix/tkUnixDefault.h	420;"	d
DEF_SCALE_REPEAT_DELAY	win/tkWinDefault.h	423;"	d
DEF_SCALE_REPEAT_INTERVAL	macosx/tkMacOSXDefault.h	463;"	d
DEF_SCALE_REPEAT_INTERVAL	unix/tkUnixDefault.h	421;"	d
DEF_SCALE_REPEAT_INTERVAL	win/tkWinDefault.h	424;"	d
DEF_SCALE_RESOLUTION	macosx/tkMacOSXDefault.h	464;"	d
DEF_SCALE_RESOLUTION	unix/tkUnixDefault.h	422;"	d
DEF_SCALE_RESOLUTION	win/tkWinDefault.h	425;"	d
DEF_SCALE_SHOW_VALUE	macosx/tkMacOSXDefault.h	467;"	d
DEF_SCALE_SHOW_VALUE	unix/tkUnixDefault.h	425;"	d
DEF_SCALE_SHOW_VALUE	win/tkWinDefault.h	428;"	d
DEF_SCALE_SLIDER_LENGTH	macosx/tkMacOSXDefault.h	468;"	d
DEF_SCALE_SLIDER_LENGTH	unix/tkUnixDefault.h	426;"	d
DEF_SCALE_SLIDER_LENGTH	win/tkWinDefault.h	429;"	d
DEF_SCALE_SLIDER_RELIEF	macosx/tkMacOSXDefault.h	469;"	d
DEF_SCALE_SLIDER_RELIEF	unix/tkUnixDefault.h	427;"	d
DEF_SCALE_SLIDER_RELIEF	win/tkWinDefault.h	430;"	d
DEF_SCALE_STATE	macosx/tkMacOSXDefault.h	470;"	d
DEF_SCALE_STATE	unix/tkUnixDefault.h	428;"	d
DEF_SCALE_STATE	win/tkWinDefault.h	431;"	d
DEF_SCALE_TAKE_FOCUS	macosx/tkMacOSXDefault.h	471;"	d
DEF_SCALE_TAKE_FOCUS	unix/tkUnixDefault.h	429;"	d
DEF_SCALE_TAKE_FOCUS	win/tkWinDefault.h	432;"	d
DEF_SCALE_TICK_INTERVAL	macosx/tkMacOSXDefault.h	472;"	d
DEF_SCALE_TICK_INTERVAL	unix/tkUnixDefault.h	430;"	d
DEF_SCALE_TICK_INTERVAL	win/tkWinDefault.h	433;"	d
DEF_SCALE_TO	macosx/tkMacOSXDefault.h	473;"	d
DEF_SCALE_TO	unix/tkUnixDefault.h	431;"	d
DEF_SCALE_TO	win/tkWinDefault.h	434;"	d
DEF_SCALE_TROUGH_COLOR	macosx/tkMacOSXDefault.h	465;"	d
DEF_SCALE_TROUGH_COLOR	unix/tkUnixDefault.h	423;"	d
DEF_SCALE_TROUGH_COLOR	win/tkWinDefault.h	426;"	d
DEF_SCALE_TROUGH_MONO	macosx/tkMacOSXDefault.h	466;"	d
DEF_SCALE_TROUGH_MONO	unix/tkUnixDefault.h	424;"	d
DEF_SCALE_TROUGH_MONO	win/tkWinDefault.h	427;"	d
DEF_SCALE_VARIABLE	macosx/tkMacOSXDefault.h	474;"	d
DEF_SCALE_VARIABLE	unix/tkUnixDefault.h	432;"	d
DEF_SCALE_VARIABLE	win/tkWinDefault.h	435;"	d
DEF_SCALE_WIDTH	macosx/tkMacOSXDefault.h	475;"	d
DEF_SCALE_WIDTH	unix/tkUnixDefault.h	433;"	d
DEF_SCALE_WIDTH	win/tkWinDefault.h	436;"	d
DEF_SCROLLBAR_ACTIVE_BG_COLOR	macosx/tkMacOSXDefault.h	481;"	d
DEF_SCROLLBAR_ACTIVE_BG_COLOR	unix/tkUnixDefault.h	439;"	d
DEF_SCROLLBAR_ACTIVE_BG_COLOR	win/tkWinDefault.h	442;"	d
DEF_SCROLLBAR_ACTIVE_BG_MONO	macosx/tkMacOSXDefault.h	482;"	d
DEF_SCROLLBAR_ACTIVE_BG_MONO	unix/tkUnixDefault.h	440;"	d
DEF_SCROLLBAR_ACTIVE_BG_MONO	win/tkWinDefault.h	443;"	d
DEF_SCROLLBAR_ACTIVE_RELIEF	macosx/tkMacOSXDefault.h	483;"	d
DEF_SCROLLBAR_ACTIVE_RELIEF	unix/tkUnixDefault.h	441;"	d
DEF_SCROLLBAR_ACTIVE_RELIEF	win/tkWinDefault.h	444;"	d
DEF_SCROLLBAR_BG_COLOR	macosx/tkMacOSXDefault.h	484;"	d
DEF_SCROLLBAR_BG_COLOR	unix/tkUnixDefault.h	442;"	d
DEF_SCROLLBAR_BG_COLOR	win/tkWinDefault.h	445;"	d
DEF_SCROLLBAR_BG_MONO	macosx/tkMacOSXDefault.h	485;"	d
DEF_SCROLLBAR_BG_MONO	unix/tkUnixDefault.h	443;"	d
DEF_SCROLLBAR_BG_MONO	win/tkWinDefault.h	446;"	d
DEF_SCROLLBAR_BORDER_WIDTH	macosx/tkMacOSXDefault.h	486;"	d
DEF_SCROLLBAR_BORDER_WIDTH	unix/tkUnixDefault.h	444;"	d
DEF_SCROLLBAR_BORDER_WIDTH	win/tkWinDefault.h	447;"	d
DEF_SCROLLBAR_COMMAND	macosx/tkMacOSXDefault.h	487;"	d
DEF_SCROLLBAR_COMMAND	unix/tkUnixDefault.h	445;"	d
DEF_SCROLLBAR_COMMAND	win/tkWinDefault.h	448;"	d
DEF_SCROLLBAR_CURSOR	macosx/tkMacOSXDefault.h	488;"	d
DEF_SCROLLBAR_CURSOR	unix/tkUnixDefault.h	446;"	d
DEF_SCROLLBAR_CURSOR	win/tkWinDefault.h	449;"	d
DEF_SCROLLBAR_EL_BORDER_WIDTH	macosx/tkMacOSXDefault.h	489;"	d
DEF_SCROLLBAR_EL_BORDER_WIDTH	unix/tkUnixDefault.h	447;"	d
DEF_SCROLLBAR_EL_BORDER_WIDTH	win/tkWinDefault.h	450;"	d
DEF_SCROLLBAR_HIGHLIGHT	macosx/tkMacOSXDefault.h	491;"	d
DEF_SCROLLBAR_HIGHLIGHT	unix/tkUnixDefault.h	449;"	d
DEF_SCROLLBAR_HIGHLIGHT	win/tkWinDefault.h	452;"	d
DEF_SCROLLBAR_HIGHLIGHT_BG	macosx/tkMacOSXDefault.h	490;"	d
DEF_SCROLLBAR_HIGHLIGHT_BG	unix/tkUnixDefault.h	448;"	d
DEF_SCROLLBAR_HIGHLIGHT_BG	win/tkWinDefault.h	451;"	d
DEF_SCROLLBAR_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	492;"	d
DEF_SCROLLBAR_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	450;"	d
DEF_SCROLLBAR_HIGHLIGHT_WIDTH	win/tkWinDefault.h	453;"	d
DEF_SCROLLBAR_JUMP	macosx/tkMacOSXDefault.h	493;"	d
DEF_SCROLLBAR_JUMP	unix/tkUnixDefault.h	451;"	d
DEF_SCROLLBAR_JUMP	win/tkWinDefault.h	454;"	d
DEF_SCROLLBAR_ORIENT	macosx/tkMacOSXDefault.h	494;"	d
DEF_SCROLLBAR_ORIENT	unix/tkUnixDefault.h	452;"	d
DEF_SCROLLBAR_ORIENT	win/tkWinDefault.h	455;"	d
DEF_SCROLLBAR_RELIEF	macosx/tkMacOSXDefault.h	495;"	d
DEF_SCROLLBAR_RELIEF	unix/tkUnixDefault.h	453;"	d
DEF_SCROLLBAR_RELIEF	win/tkWinDefault.h	456;"	d
DEF_SCROLLBAR_REPEAT_DELAY	macosx/tkMacOSXDefault.h	496;"	d
DEF_SCROLLBAR_REPEAT_DELAY	unix/tkUnixDefault.h	454;"	d
DEF_SCROLLBAR_REPEAT_DELAY	win/tkWinDefault.h	457;"	d
DEF_SCROLLBAR_REPEAT_INTERVAL	macosx/tkMacOSXDefault.h	497;"	d
DEF_SCROLLBAR_REPEAT_INTERVAL	unix/tkUnixDefault.h	455;"	d
DEF_SCROLLBAR_REPEAT_INTERVAL	win/tkWinDefault.h	458;"	d
DEF_SCROLLBAR_TAKE_FOCUS	macosx/tkMacOSXDefault.h	498;"	d
DEF_SCROLLBAR_TAKE_FOCUS	unix/tkUnixDefault.h	456;"	d
DEF_SCROLLBAR_TAKE_FOCUS	win/tkWinDefault.h	459;"	d
DEF_SCROLLBAR_TROUGH_COLOR	macosx/tkMacOSXDefault.h	499;"	d
DEF_SCROLLBAR_TROUGH_COLOR	unix/tkUnixDefault.h	457;"	d
DEF_SCROLLBAR_TROUGH_COLOR	win/tkWinDefault.h	460;"	d
DEF_SCROLLBAR_TROUGH_MONO	macosx/tkMacOSXDefault.h	500;"	d
DEF_SCROLLBAR_TROUGH_MONO	unix/tkUnixDefault.h	458;"	d
DEF_SCROLLBAR_TROUGH_MONO	win/tkWinDefault.h	461;"	d
DEF_SCROLLBAR_WIDTH	macosx/tkMacOSXDefault.h	501;"	d
DEF_SCROLLBAR_WIDTH	unix/tkUnixDefault.h	459;"	d
DEF_SCROLLBAR_WIDTH	win/tkWinDefault.h	462;"	d
DEF_SELECT_BG	generic/ttk/ttkEntry.c	150;"	d	file:
DEF_SELECT_FG	generic/ttk/ttkEntry.c	151;"	d	file:
DEF_SPINBOX_CMD	generic/tkEntry.c	171;"	d	file:
DEF_SPINBOX_FORMAT	generic/tkEntry.c	176;"	d	file:
DEF_SPINBOX_FROM	generic/tkEntry.c	173;"	d	file:
DEF_SPINBOX_INCREMENT	generic/tkEntry.c	175;"	d	file:
DEF_SPINBOX_REPEAT_DELAY	generic/tkEntry.c	168;"	d	file:
DEF_SPINBOX_REPEAT_INTERVAL	generic/tkEntry.c	169;"	d	file:
DEF_SPINBOX_TO	generic/tkEntry.c	174;"	d	file:
DEF_SPINBOX_VALUES	generic/tkEntry.c	178;"	d	file:
DEF_SPINBOX_WRAP	generic/tkEntry.c	179;"	d	file:
DEF_TEXT_AUTO_SEPARATORS	macosx/tkMacOSXDefault.h	507;"	d
DEF_TEXT_AUTO_SEPARATORS	unix/tkUnixDefault.h	465;"	d
DEF_TEXT_AUTO_SEPARATORS	win/tkWinDefault.h	468;"	d
DEF_TEXT_BG_COLOR	macosx/tkMacOSXDefault.h	508;"	d
DEF_TEXT_BG_COLOR	unix/tkUnixDefault.h	466;"	d
DEF_TEXT_BG_COLOR	win/tkWinDefault.h	469;"	d
DEF_TEXT_BG_MONO	macosx/tkMacOSXDefault.h	509;"	d
DEF_TEXT_BG_MONO	unix/tkUnixDefault.h	467;"	d
DEF_TEXT_BG_MONO	win/tkWinDefault.h	470;"	d
DEF_TEXT_BLOCK_CURSOR	macosx/tkMacOSXDefault.h	510;"	d
DEF_TEXT_BLOCK_CURSOR	unix/tkUnixDefault.h	468;"	d
DEF_TEXT_BLOCK_CURSOR	win/tkWinDefault.h	471;"	d
DEF_TEXT_BORDER_WIDTH	macosx/tkMacOSXDefault.h	511;"	d
DEF_TEXT_BORDER_WIDTH	unix/tkUnixDefault.h	469;"	d
DEF_TEXT_BORDER_WIDTH	win/tkWinDefault.h	472;"	d
DEF_TEXT_CURSOR	macosx/tkMacOSXDefault.h	512;"	d
DEF_TEXT_CURSOR	unix/tkUnixDefault.h	470;"	d
DEF_TEXT_CURSOR	win/tkWinDefault.h	473;"	d
DEF_TEXT_EXPORT_SELECTION	macosx/tkMacOSXDefault.h	514;"	d
DEF_TEXT_EXPORT_SELECTION	unix/tkUnixDefault.h	472;"	d
DEF_TEXT_EXPORT_SELECTION	win/tkWinDefault.h	475;"	d
DEF_TEXT_FG	macosx/tkMacOSXDefault.h	513;"	d
DEF_TEXT_FG	unix/tkUnixDefault.h	471;"	d
DEF_TEXT_FG	win/tkWinDefault.h	474;"	d
DEF_TEXT_FONT	macosx/tkMacOSXDefault.h	515;"	d
DEF_TEXT_FONT	unix/tkUnixDefault.h	473;"	d
DEF_TEXT_FONT	win/tkWinDefault.h	476;"	d
DEF_TEXT_HEIGHT	macosx/tkMacOSXDefault.h	516;"	d
DEF_TEXT_HEIGHT	unix/tkUnixDefault.h	474;"	d
DEF_TEXT_HEIGHT	win/tkWinDefault.h	477;"	d
DEF_TEXT_HIGHLIGHT	macosx/tkMacOSXDefault.h	518;"	d
DEF_TEXT_HIGHLIGHT	unix/tkUnixDefault.h	476;"	d
DEF_TEXT_HIGHLIGHT	win/tkWinDefault.h	479;"	d
DEF_TEXT_HIGHLIGHT_BG	macosx/tkMacOSXDefault.h	517;"	d
DEF_TEXT_HIGHLIGHT_BG	unix/tkUnixDefault.h	475;"	d
DEF_TEXT_HIGHLIGHT_BG	win/tkWinDefault.h	478;"	d
DEF_TEXT_HIGHLIGHT_WIDTH	macosx/tkMacOSXDefault.h	519;"	d
DEF_TEXT_HIGHLIGHT_WIDTH	unix/tkUnixDefault.h	477;"	d
DEF_TEXT_HIGHLIGHT_WIDTH	win/tkWinDefault.h	480;"	d
DEF_TEXT_INACTIVE_SELECT_COLOR	macosx/tkMacOSXDefault.h	531;"	d
DEF_TEXT_INACTIVE_SELECT_COLOR	unix/tkUnixDefault.h	489;"	d
DEF_TEXT_INACTIVE_SELECT_COLOR	win/tkWinDefault.h	492;"	d
DEF_TEXT_INSERT_BD_COLOR	macosx/tkMacOSXDefault.h	521;"	d
DEF_TEXT_INSERT_BD_COLOR	unix/tkUnixDefault.h	479;"	d
DEF_TEXT_INSERT_BD_COLOR	win/tkWinDefault.h	482;"	d
DEF_TEXT_INSERT_BD_MONO	macosx/tkMacOSXDefault.h	522;"	d
DEF_TEXT_INSERT_BD_MONO	unix/tkUnixDefault.h	480;"	d
DEF_TEXT_INSERT_BD_MONO	win/tkWinDefault.h	483;"	d
DEF_TEXT_INSERT_BG	macosx/tkMacOSXDefault.h	520;"	d
DEF_TEXT_INSERT_BG	unix/tkUnixDefault.h	478;"	d
DEF_TEXT_INSERT_BG	win/tkWinDefault.h	481;"	d
DEF_TEXT_INSERT_OFF_TIME	macosx/tkMacOSXDefault.h	523;"	d
DEF_TEXT_INSERT_OFF_TIME	unix/tkUnixDefault.h	481;"	d
DEF_TEXT_INSERT_OFF_TIME	win/tkWinDefault.h	484;"	d
DEF_TEXT_INSERT_ON_TIME	macosx/tkMacOSXDefault.h	524;"	d
DEF_TEXT_INSERT_ON_TIME	unix/tkUnixDefault.h	482;"	d
DEF_TEXT_INSERT_ON_TIME	win/tkWinDefault.h	485;"	d
DEF_TEXT_INSERT_UNFOCUSSED	macosx/tkMacOSXDefault.h	525;"	d
DEF_TEXT_INSERT_UNFOCUSSED	unix/tkUnixDefault.h	483;"	d
DEF_TEXT_INSERT_UNFOCUSSED	win/tkWinDefault.h	486;"	d
DEF_TEXT_INSERT_WIDTH	macosx/tkMacOSXDefault.h	526;"	d
DEF_TEXT_INSERT_WIDTH	unix/tkUnixDefault.h	484;"	d
DEF_TEXT_INSERT_WIDTH	win/tkWinDefault.h	487;"	d
DEF_TEXT_MAX_UNDO	macosx/tkMacOSXDefault.h	527;"	d
DEF_TEXT_MAX_UNDO	unix/tkUnixDefault.h	485;"	d
DEF_TEXT_MAX_UNDO	win/tkWinDefault.h	488;"	d
DEF_TEXT_PADX	macosx/tkMacOSXDefault.h	528;"	d
DEF_TEXT_PADX	unix/tkUnixDefault.h	486;"	d
DEF_TEXT_PADX	win/tkWinDefault.h	489;"	d
DEF_TEXT_PADY	macosx/tkMacOSXDefault.h	529;"	d
DEF_TEXT_PADY	unix/tkUnixDefault.h	487;"	d
DEF_TEXT_PADY	win/tkWinDefault.h	490;"	d
DEF_TEXT_RELIEF	macosx/tkMacOSXDefault.h	530;"	d
DEF_TEXT_RELIEF	unix/tkUnixDefault.h	488;"	d
DEF_TEXT_RELIEF	win/tkWinDefault.h	491;"	d
DEF_TEXT_SELECT_BD_COLOR	macosx/tkMacOSXDefault.h	534;"	d
DEF_TEXT_SELECT_BD_COLOR	unix/tkUnixDefault.h	492;"	d
DEF_TEXT_SELECT_BD_COLOR	win/tkWinDefault.h	495;"	d
DEF_TEXT_SELECT_BD_MONO	macosx/tkMacOSXDefault.h	535;"	d
DEF_TEXT_SELECT_BD_MONO	unix/tkUnixDefault.h	493;"	d
DEF_TEXT_SELECT_BD_MONO	win/tkWinDefault.h	496;"	d
DEF_TEXT_SELECT_COLOR	macosx/tkMacOSXDefault.h	532;"	d
DEF_TEXT_SELECT_COLOR	unix/tkUnixDefault.h	490;"	d
DEF_TEXT_SELECT_COLOR	win/tkWinDefault.h	493;"	d
DEF_TEXT_SELECT_FG_COLOR	macosx/tkMacOSXDefault.h	536;"	d
DEF_TEXT_SELECT_FG_COLOR	unix/tkUnixDefault.h	494;"	d
DEF_TEXT_SELECT_FG_COLOR	win/tkWinDefault.h	497;"	d
DEF_TEXT_SELECT_FG_MONO	macosx/tkMacOSXDefault.h	537;"	d
DEF_TEXT_SELECT_FG_MONO	unix/tkUnixDefault.h	495;"	d
DEF_TEXT_SELECT_FG_MONO	win/tkWinDefault.h	498;"	d
DEF_TEXT_SELECT_MONO	macosx/tkMacOSXDefault.h	533;"	d
DEF_TEXT_SELECT_MONO	unix/tkUnixDefault.h	491;"	d
DEF_TEXT_SELECT_MONO	win/tkWinDefault.h	494;"	d
DEF_TEXT_SELECT_RELIEF	macosx/tkMacOSXDefault.h	538;"	d
DEF_TEXT_SELECT_RELIEF	unix/tkUnixDefault.h	496;"	d
DEF_TEXT_SELECT_RELIEF	win/tkWinDefault.h	499;"	d
DEF_TEXT_SET_GRID	macosx/tkMacOSXDefault.h	539;"	d
DEF_TEXT_SET_GRID	unix/tkUnixDefault.h	497;"	d
DEF_TEXT_SET_GRID	win/tkWinDefault.h	500;"	d
DEF_TEXT_SPACING1	macosx/tkMacOSXDefault.h	540;"	d
DEF_TEXT_SPACING1	unix/tkUnixDefault.h	498;"	d
DEF_TEXT_SPACING1	win/tkWinDefault.h	501;"	d
DEF_TEXT_SPACING2	macosx/tkMacOSXDefault.h	541;"	d
DEF_TEXT_SPACING2	unix/tkUnixDefault.h	499;"	d
DEF_TEXT_SPACING2	win/tkWinDefault.h	502;"	d
DEF_TEXT_SPACING3	macosx/tkMacOSXDefault.h	542;"	d
DEF_TEXT_SPACING3	unix/tkUnixDefault.h	500;"	d
DEF_TEXT_SPACING3	win/tkWinDefault.h	503;"	d
DEF_TEXT_STATE	macosx/tkMacOSXDefault.h	543;"	d
DEF_TEXT_STATE	unix/tkUnixDefault.h	501;"	d
DEF_TEXT_STATE	win/tkWinDefault.h	504;"	d
DEF_TEXT_TABS	macosx/tkMacOSXDefault.h	544;"	d
DEF_TEXT_TABS	unix/tkUnixDefault.h	502;"	d
DEF_TEXT_TABS	win/tkWinDefault.h	505;"	d
DEF_TEXT_TABSTYLE	macosx/tkMacOSXDefault.h	545;"	d
DEF_TEXT_TABSTYLE	unix/tkUnixDefault.h	503;"	d
DEF_TEXT_TABSTYLE	win/tkWinDefault.h	506;"	d
DEF_TEXT_TAKE_FOCUS	macosx/tkMacOSXDefault.h	546;"	d
DEF_TEXT_TAKE_FOCUS	unix/tkUnixDefault.h	504;"	d
DEF_TEXT_TAKE_FOCUS	win/tkWinDefault.h	507;"	d
DEF_TEXT_UNDO	macosx/tkMacOSXDefault.h	547;"	d
DEF_TEXT_UNDO	unix/tkUnixDefault.h	505;"	d
DEF_TEXT_UNDO	win/tkWinDefault.h	508;"	d
DEF_TEXT_WIDTH	macosx/tkMacOSXDefault.h	548;"	d
DEF_TEXT_WIDTH	unix/tkUnixDefault.h	506;"	d
DEF_TEXT_WIDTH	win/tkWinDefault.h	509;"	d
DEF_TEXT_WRAP	macosx/tkMacOSXDefault.h	549;"	d
DEF_TEXT_WRAP	unix/tkUnixDefault.h	507;"	d
DEF_TEXT_WRAP	win/tkWinDefault.h	510;"	d
DEF_TEXT_XSCROLL_COMMAND	macosx/tkMacOSXDefault.h	550;"	d
DEF_TEXT_XSCROLL_COMMAND	unix/tkUnixDefault.h	508;"	d
DEF_TEXT_XSCROLL_COMMAND	win/tkWinDefault.h	511;"	d
DEF_TEXT_YSCROLL_COMMAND	macosx/tkMacOSXDefault.h	551;"	d
DEF_TEXT_YSCROLL_COMMAND	unix/tkUnixDefault.h	509;"	d
DEF_TEXT_YSCROLL_COMMAND	win/tkWinDefault.h	512;"	d
DEF_TOPLEVEL_CLASS	macosx/tkMacOSXDefault.h	564;"	d
DEF_TOPLEVEL_CLASS	unix/tkUnixDefault.h	522;"	d
DEF_TOPLEVEL_CLASS	win/tkWinDefault.h	525;"	d
DEF_TOPLEVEL_MENU	macosx/tkMacOSXDefault.h	565;"	d
DEF_TOPLEVEL_MENU	unix/tkUnixDefault.h	523;"	d
DEF_TOPLEVEL_MENU	win/tkWinDefault.h	526;"	d
DEF_TOPLEVEL_SCREEN	macosx/tkMacOSXDefault.h	566;"	d
DEF_TOPLEVEL_SCREEN	unix/tkUnixDefault.h	524;"	d
DEF_TOPLEVEL_SCREEN	win/tkWinDefault.h	527;"	d
DEF_TOPLEVEL_USE	macosx/tkMacOSXDefault.h	567;"	d
DEF_TOPLEVEL_USE	unix/tkUnixDefault.h	525;"	d
DEF_TOPLEVEL_USE	win/tkWinDefault.h	528;"	d
DEF_TREE_ROWS	generic/ttk/ttkTreeview.c	13;"	d	file:
DEMOPROGS	unix/Makefile	/^DEMOPROGS = browse hello ixset rmt rolodex square tcolor timer widget$/;"	m
DEMO_INSTALL_DIR	unix/Makefile	/^DEMO_INSTALL_DIR	= $(INSTALL_ROOT)$(TK_LIBRARY)\/demos$/;"	m
DEPEND_SWITCHES	unix/Makefile	/^DEPEND_SWITCHES = ${CFLAGS} -I${UNIX_DIR} -I${GENERIC_DIR} -I${BMAP_DIR} \\$/;"	m
DESTDIR	macosx/GNUmakefile	/^DESTDIR			?=$/;"	m
DESTROY	generic/tkBind.c	471;"	d	file:
DESTROYED	generic/tkText.h	819;"	d
DFCS_HOT	win/ttkWinTheme.c	11;"	d	file:
DIBNumColors	win/tkWinWm.c	/^DIBNumColors($/;"	f	file:
DINFO_OUT_OF_DATE	generic/tkTextDisp.c	472;"	d	file:
DIRECTION_ABOVE	generic/tkMenubutton.h	/^    DIRECTION_ABOVE, DIRECTION_BELOW, DIRECTION_FLUSH,$/;"	e	enum:direction
DIRECTION_BELOW	generic/tkMenubutton.h	/^    DIRECTION_ABOVE, DIRECTION_BELOW, DIRECTION_FLUSH,$/;"	e	enum:direction
DIRECTION_FLUSH	generic/tkMenubutton.h	/^    DIRECTION_ABOVE, DIRECTION_BELOW, DIRECTION_FLUSH,$/;"	e	enum:direction
DIRECTION_LEFT	generic/tkMenubutton.h	/^    DIRECTION_LEFT, DIRECTION_RIGHT$/;"	e	enum:direction
DIRECTION_RIGHT	generic/tkMenubutton.h	/^    DIRECTION_LEFT, DIRECTION_RIGHT$/;"	e	enum:direction
DISABLED	macosx/tkMacOSXDefault.h	44;"	d
DISABLED	unix/tkUnixDefault.h	36;"	d
DISABLED	win/tkWinDefault.h	37;"	d
DISPOSE_PENDING	generic/tkImgPhoto.h	136;"	d
DISTDIR	unix/Makefile	/^DISTDIR	 = $(DISTROOT)\/$(DISTNAME)$/;"	m
DISTNAME	unix/Makefile	/^DISTNAME = tk${VERSION}${PATCH_LEVEL}$/;"	m
DISTROOT	unix/Makefile	/^DISTROOT = \/tmp\/dist$/;"	m
DInfo	generic/tkText.c	23;"	d	file:
DLINE_FREE	generic/tkTextDisp.c	487;"	d	file:
DLINE_FREE_TEMP	generic/tkTextDisp.c	489;"	d	file:
DLINE_UNLINK	generic/tkTextDisp.c	488;"	d	file:
DLL_INSTALL_DIR	unix/Makefile	/^DLL_INSTALL_DIR		= $(LIB_INSTALL_DIR)$/;"	m
DLine	generic/tkTextDisp.c	/^typedef struct DLine {$/;"	s	file:
DLine	generic/tkTextDisp.c	/^} DLine;$/;"	t	typeref:struct:DLine	file:
DONT_PROPAGATE	generic/tkGrid.c	249;"	d	file:
DONT_PROPAGATE	generic/tkPack.c	99;"	d	file:
DOUBLE	generic/tkBind.c	355;"	d	file:
DOUBLES_EQ	generic/tkEntry.c	35;"	d	file:
DO_MAKE	macosx/GNUmakefile	/^DO_MAKE			= +${MAKE} -C "${OBJ_DIR}" ${target} ${MAKE_ARGS_V} ${MAKE_ARGS} ${EXTRA_MAKE_ARGS}$/;"	m
DRAW_BEVEL	macosx/tkMacOSXButton.c	45;"	d	file:
DRAW_CONTROL	macosx/tkMacOSXButton.c	43;"	d	file:
DRAW_CUSTOM	macosx/tkMacOSXButton.c	44;"	d	file:
DRAW_LABEL	macosx/tkMacOSXButton.c	42;"	d	file:
DRAW_MENU_ENTRY_ARROW	generic/tkMenu.h	/^    DRAW_MENU_ENTRY_ARROW = (1<<0),$/;"	e	enum:drawingParameters
DRAW_MENU_ENTRY_NOUNDERLINE	generic/tkMenu.h	/^    DRAW_MENU_ENTRY_NOUNDERLINE = (1<<1)$/;"	e	enum:drawingParameters
DYLD_FRAMEWORK_PATH	macosx/GNUmakefile	/^export DYLD_FRAMEWORK_PATH := ${TCL_FRAMEWORK_DIR}$/;"	m
DYLIB_INSTALL_DIR	unix/Makefile	/^DYLIB_INSTALL_DIR	= ${LIB_RUNTIME_DIR}$/;"	m
DashConvert	generic/tkCanvUtil.c	/^DashConvert($/;"	f	file:
DataKey	generic/tkBitmap.c	/^} DataKey;$/;"	t	typeref:struct:__anon2	file:
DataKey	generic/tkCursor.c	/^} DataKey;$/;"	t	typeref:struct:__anon1	file:
DeactivateNotify	generic/tk.h	652;"	d
Debugger	macosx/tkMacOSXXStubs.c	31;"	d	file:
DebuggerObjCmd	macosx/tkMacOSXTest.c	/^DebuggerObjCmd($/;"	f	file:
DecodeLine	generic/tkImgPNG.c	/^DecodeLine($/;"	f	file:
DecodePNG	generic/tkImgPNG.c	/^DecodePNG($/;"	f	file:
DecrIconRefCount	win/tkWinWm.c	/^DecrIconRefCount($/;"	f	file:
DefaultBlanking	xlib/X11/X.h	627;"	d
DefaultColormap	xlib/X11/Xlib.h	94;"	d
DefaultColormapOfScreen	xlib/X11/Xlib.h	109;"	d
DefaultDepth	xlib/X11/Xlib.h	93;"	d
DefaultDepthOfScreen	xlib/X11/Xlib.h	110;"	d
DefaultErrorHandler	macosx/tkMacOSXXStubs.c	/^DefaultErrorHandler($/;"	f	file:
DefaultExposures	xlib/X11/X.h	634;"	d
DefaultGC	xlib/X11/Xlib.h	76;"	d
DefaultGCOfScreen	xlib/X11/Xlib.h	111;"	d
DefaultRootWindow	xlib/X11/Xlib.h	74;"	d
DefaultScreen	xlib/X11/Xlib.h	73;"	d
DefaultScreenOfDisplay	xlib/X11/Xlib.h	104;"	d
DefaultVisual	xlib/X11/Xlib.h	75;"	d
DefaultVisualOfScreen	xlib/X11/Xlib.h	112;"	d
DelayedMotionProc	generic/tkEvent.c	/^DelayedMotionProc($/;"	f	file:
DeleteArc	generic/tkCanvArc.c	/^DeleteArc($/;"	f	file:
DeleteBitmap	generic/tkCanvBmap.c	/^DeleteBitmap($/;"	f	file:
DeleteChars	generic/tkEntry.c	/^DeleteChars($/;"	f	file:
DeleteChars	generic/ttk/ttkEntry.c	/^DeleteChars($/;"	f	file:
DeleteConsoleInterp	generic/tkConsole.c	/^DeleteConsoleInterp($/;"	f	file:
DeleteFontchooserData	macosx/tkMacOSXDialog.c	/^DeleteFontchooserData($/;"	f	file:
DeleteHookData	win/tkWinDialog.c	/^DeleteHookData(ClientData clientData, Tcl_Interp *interp)$/;"	f	file:
DeleteImage	generic/tkCanvImg.c	/^DeleteImage($/;"	f	file:
DeleteImage	generic/tkImage.c	/^DeleteImage($/;"	f	file:
DeleteIndexRange	generic/tkText.c	/^DeleteIndexRange($/;"	f	file:
DeleteItems	generic/ttk/ttkTreeview.c	/^static TreeItem *DeleteItems(TreeItem *item, TreeItem *delq)$/;"	f	file:
DeleteLine	generic/tkCanvLine.c	/^DeleteLine($/;"	f	file:
DeleteMenuCloneEntries	generic/tkMenu.c	/^DeleteMenuCloneEntries($/;"	f	file:
DeletePolygon	generic/tkCanvPoly.c	/^DeletePolygon($/;"	f	file:
DeleteProc	unix/tkUnixSend.c	/^DeleteProc($/;"	f	file:
DeleteRectOval	generic/tkRectOval.c	/^DeleteRectOval($/;"	f	file:
DeleteSlave	generic/ttk/ttkManager.c	/^static void DeleteSlave(Ttk_Slave *slave)$/;"	f	file:
DeleteSpecCacheTable	generic/tkOldConfig.c	/^DeleteSpecCacheTable($/;"	f	file:
DeleteStressedCmap	unix/tkUnixColor.c	/^DeleteStressedCmap($/;"	f	file:
DeleteSummaries	generic/tkTextBTree.c	/^DeleteSummaries($/;"	f	file:
DeleteTag	generic/ttk/ttkTagSet.c	/^static void DeleteTag(Ttk_TagTable tagTable, Ttk_Tag tag)$/;"	f	file:
DeleteText	generic/tkCanvText.c	/^DeleteText($/;"	f	file:
DeleteVirtualEvent	generic/tkBind.c	/^DeleteVirtualEvent($/;"	f	file:
DeleteVirtualEventTable	generic/tkBind.c	/^DeleteVirtualEventTable($/;"	f	file:
DeleteWinItem	generic/tkCanvWind.c	/^DeleteWinItem($/;"	f	file:
DeleteWindowsExitProc	generic/tkWindow.c	/^DeleteWindowsExitProc($/;"	f	file:
DepositSlack	generic/ttk/ttkTreeview.c	/^static void DepositSlack(Treeview *tv, int extra)$/;"	f	file:
Depth	xlib/X11/Xlib.h	/^} Depth;$/;"	t	typeref:struct:__anon270
DestroyAll	xlib/X11/X.h	411;"	d
DestroyBusy	generic/tkBusy.c	/^DestroyBusy($/;"	f	file:
DestroyButton	generic/tkButton.c	/^DestroyButton($/;"	f	file:
DestroyCanvas	generic/tkCanvas.c	/^DestroyCanvas($/;"	f	file:
DestroyElementData	win/ttkWinXPTheme.c	/^static void DestroyElementData(void *clientData)$/;"	f	file:
DestroyEntry	generic/tkEntry.c	/^DestroyEntry($/;"	f	file:
DestroyFrame	generic/tkFrame.c	/^DestroyFrame($/;"	f	file:
DestroyFramePartly	generic/tkFrame.c	/^DestroyFramePartly($/;"	f	file:
DestroyGrid	generic/tkGrid.c	/^DestroyGrid($/;"	f	file:
DestroyImage	macosx/tkMacOSXXStubs.c	/^DestroyImage($/;"	f	file:
DestroyImage	win/tkWinImage.c	/^DestroyImage($/;"	f	file:
DestroyListbox	generic/tkListbox.c	/^DestroyListbox($/;"	f	file:
DestroyListboxOptionTables	generic/tkListbox.c	/^DestroyListboxOptionTables($/;"	f	file:
DestroyMenuButton	generic/tkMenubutton.c	/^DestroyMenuButton($/;"	f	file:
DestroyMenuEntry	generic/tkMenu.c	/^DestroyMenuEntry($/;"	f	file:
DestroyMenuHashTable	generic/tkMenu.c	/^DestroyMenuHashTable($/;"	f	file:
DestroyMenuInstance	generic/tkMenu.c	/^DestroyMenuInstance($/;"	f	file:
DestroyMessage	generic/tkMessage.c	/^DestroyMessage($/;"	f	file:
DestroyNode	generic/tkTextBTree.c	/^DestroyNode($/;"	f	file:
DestroyNotify	xlib/X11/X.h	156;"	d
DestroyOptionTables	generic/tkPanedWindow.c	/^DestroyOptionTables($/;"	f	file:
DestroyPacker	generic/tkPack.c	/^DestroyPacker($/;"	f	file:
DestroyPane	generic/ttk/ttkPanedwindow.c	/^static void DestroyPane(Paned *pw, Pane *pane)$/;"	f	file:
DestroyPanedWindow	generic/tkPanedWindow.c	/^DestroyPanedWindow($/;"	f	file:
DestroyScale	generic/tkScale.c	/^DestroyScale($/;"	f	file:
DestroyTab	generic/ttk/ttkNotebook.c	/^static void DestroyTab(Notebook *nb, Tab *tab)$/;"	f	file:
DestroyText	generic/tkText.c	/^DestroyText($/;"	f	file:
DestroyThemeMonitorWindow	win/ttkWinMonitor.c	/^DestroyThemeMonitorWindow(void *clientData)$/;"	f	file:
DestroyWidget	generic/ttk/ttkWidget.c	/^DestroyWidget(WidgetCore *corePtr)$/;"	f	file:
DetachItem	generic/ttk/ttkTreeview.c	/^static void DetachItem(TreeItem *item)$/;"	f	file:
Detail	generic/tkBind.c	/^} Detail;$/;"	t	typeref:union:__anon166	file:
DiamondIndicatorElementDraw	generic/ttk/ttkElements.c	/^static void DiamondIndicatorElementDraw($/;"	f	file:
DiamondIndicatorElementSize	generic/ttk/ttkElements.c	/^static void DiamondIndicatorElementSize($/;"	f	file:
DirectColor	xlib/X11/X.h	664;"	d
DisableAccess	xlib/X11/X.h	653;"	d
DisableScreenInterval	xlib/X11/X.h	630;"	d
DisableScreenSaver	xlib/X11/X.h	629;"	d
DisclosureElementDraw	macosx/ttkMacOSXTheme.c	/^static void DisclosureElementDraw($/;"	f	file:
DisclosureElementSize	macosx/ttkMacOSXTheme.c	/^static void DisclosureElementSize($/;"	f	file:
DisclosureElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec DisclosureElementSpec = {$/;"	v	file:
DisclosureParams	macosx/ttkMacOSXTheme.c	/^    DisclosureParams = { kThemeDisclosureButton, kThemeMetricDisclosureTriangleHeight },$/;"	v	file:
DisclosureValueTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable DisclosureValueTable[] = {$/;"	v	file:
Display	xlib/X11/Xlib.h	/^} Display;$/;"	t	typeref:struct:_XDisplay
DisplayArc	generic/tkCanvArc.c	/^DisplayArc($/;"	f	file:
DisplayBitmap	generic/tkCanvBmap.c	/^DisplayBitmap($/;"	f	file:
DisplayCanvText	generic/tkCanvText.c	/^DisplayCanvText($/;"	f	file:
DisplayCanvas	generic/tkCanvas.c	/^DisplayCanvas($/;"	f	file:
DisplayCells	xlib/X11/Xlib.h	86;"	d
DisplayCheckProc	unix/tkUnixEvent.c	/^DisplayCheckProc($/;"	f	file:
DisplayDLine	generic/tkTextDisp.c	/^DisplayDLine($/;"	f	file:
DisplayEntry	generic/tkEntry.c	/^DisplayEntry($/;"	f	file:
DisplayExitHandler	unix/tkUnixEvent.c	/^DisplayExitHandler($/;"	f	file:
DisplayFileProc	unix/tkUnixEvent.c	/^DisplayFileProc($/;"	f	file:
DisplayFocusInfo	generic/tkFocus.c	/^} DisplayFocusInfo;$/;"	t	typeref:struct:TkDisplayFocusInfo	file:
DisplayFrame	generic/tkFrame.c	/^DisplayFrame($/;"	f	file:
DisplayHeight	xlib/X11/Xlib.h	82;"	d
DisplayHeightMM	xlib/X11/Xlib.h	84;"	d
DisplayHorizontalScale	unix/tkUnixScale.c	/^DisplayHorizontalScale($/;"	f	file:
DisplayHorizontalValue	unix/tkUnixScale.c	/^DisplayHorizontalValue($/;"	f	file:
DisplayImage	generic/tkCanvImg.c	/^DisplayImage($/;"	f	file:
DisplayItem	generic/ttk/ttkTreeview.c	/^} DisplayItem;$/;"	t	typeref:struct:__anon81	file:
DisplayLayout	generic/ttk/ttkTreeview.c	/^static void DisplayLayout($/;"	f	file:
DisplayLine	generic/tkCanvLine.c	/^DisplayLine($/;"	f	file:
DisplayLineBackground	generic/tkTextDisp.c	/^DisplayLineBackground($/;"	f	file:
DisplayListbox	generic/tkListbox.c	/^DisplayListbox($/;"	f	file:
DisplayMenu	generic/tkMenuDraw.c	/^DisplayMenu($/;"	f	file:
DisplayMessage	generic/tkMessage.c	/^DisplayMessage($/;"	f	file:
DisplayOfScreen	xlib/X11/Xlib.h	105;"	d
DisplayPanedWindow	generic/tkPanedWindow.c	/^DisplayPanedWindow($/;"	f	file:
DisplayPlanes	xlib/X11/Xlib.h	85;"	d
DisplayPolygon	generic/tkCanvPoly.c	/^DisplayPolygon($/;"	f	file:
DisplayProxyWindow	generic/tkPanedWindow.c	/^DisplayProxyWindow($/;"	f	file:
DisplayRectOval	generic/tkRectOval.c	/^DisplayRectOval($/;"	f	file:
DisplaySetupProc	unix/tkUnixEvent.c	/^DisplaySetupProc($/;"	f	file:
DisplayString	xlib/X11/Xlib.h	92;"	d
DisplayTab	generic/ttk/ttkNotebook.c	/^static void DisplayTab(Notebook *nb, int index, Drawable d)$/;"	f	file:
DisplayText	generic/tkTextDisp.c	/^DisplayText($/;"	f	file:
DisplayVerticalScale	unix/tkUnixScale.c	/^DisplayVerticalScale($/;"	f	file:
DisplayVerticalValue	unix/tkUnixScale.c	/^DisplayVerticalValue($/;"	f	file:
DisplayWidth	xlib/X11/Xlib.h	81;"	d
DisplayWidthMM	xlib/X11/Xlib.h	83;"	d
DisplayWinItem	generic/tkCanvWind.c	/^DisplayWinItem($/;"	f	file:
DisposeColorTable	generic/tkImgPhInstance.c	/^DisposeColorTable($/;"	f	file:
DistributeWidth	generic/ttk/ttkTreeview.c	/^static int DistributeWidth(Treeview *tv, int n)$/;"	f	file:
DlineIndexOfX	generic/tkTextDisp.c	/^DlineIndexOfX($/;"	f	file:
DlineXOfIndex	generic/tkTextDisp.c	/^DlineXOfIndex($/;"	f	file:
DllEntryPoint	win/tkWin32Dll.c	/^DllEntryPoint($/;"	f
DllMain	win/tkWin32Dll.c	/^DllMain($/;"	f
DoBlue	xlib/X11/X.h	579;"	d
DoButton	library/demos/goldberg.tcl	/^proc DoButton {w what} {$/;"	p
DoConfig	generic/tkOldConfig.c	/^DoConfig($/;"	f	file:
DoConfigureNotify	generic/tkBusy.c	/^DoConfigureNotify($/;"	f	file:
DoCtrlFrame	library/demos/goldberg.tcl	/^proc DoCtrlFrame {w} {$/;"	p
DoDetailFrame	library/demos/goldberg.tcl	/^proc DoDetailFrame {w} {$/;"	p
DoDisplay	library/demos/goldberg.tcl	/^proc DoDisplay {w} {$/;"	p
DoExtension	generic/tkImgGIF.c	/^DoExtension($/;"	f	file:
DoGreen	xlib/X11/X.h	578;"	d
DoItem	generic/tkCanvas.c	/^DoItem($/;"	f	file:
DoObjConfig	generic/tkConfig.c	/^DoObjConfig($/;"	f	file:
DoRed	xlib/X11/X.h	577;"	d
DoWarp	generic/tkBind.c	/^DoWarp($/;"	f	file:
DoWindowActivate	macosx/tkMacOSXWindowEvent.c	/^DoWindowActivate($/;"	f
DoesBackingStore	xlib/X11/Xlib.h	122;"	d
DoesSaveUnders	xlib/X11/Xlib.h	121;"	d
DontAllowExposures	xlib/X11/X.h	632;"	d
DontCareState	xlib/X11/Xutil.h	124;"	d
DontPreferBlanking	xlib/X11/X.h	625;"	d
DragColumn	generic/ttk/ttkTreeview.c	/^static void DragColumn(Treeview *tv, int i, int delta)$/;"	f	file:
DragEnd	library/demos/knightstour.tcl	/^proc DragEnd {w x y} {$/;"	p
DragMotion	library/demos/knightstour.tcl	/^proc DragMotion {w x y} {$/;"	p
DragStart	library/demos/knightstour.tcl	/^proc DragStart {w x y} {$/;"	p
Draw0	library/demos/goldberg.tcl	/^proc Draw0 {w} {$/;"	p
Draw1	library/demos/goldberg.tcl	/^proc Draw1 {w} {$/;"	p
Draw10	library/demos/goldberg.tcl	/^proc Draw10 {w} {$/;"	p
Draw11	library/demos/goldberg.tcl	/^proc Draw11 {w} {$/;"	p
Draw12	library/demos/goldberg.tcl	/^proc Draw12 {w} {$/;"	p
Draw13	library/demos/goldberg.tcl	/^proc Draw13 {w} {$/;"	p
Draw14	library/demos/goldberg.tcl	/^proc Draw14 {w} {$/;"	p
Draw14a	library/demos/goldberg.tcl	/^proc Draw14a {w side} {$/;"	p
Draw15	library/demos/goldberg.tcl	/^proc Draw15 {w} {$/;"	p
Draw16	library/demos/goldberg.tcl	/^proc Draw16 {w} {$/;"	p
Draw17	library/demos/goldberg.tcl	/^proc Draw17 {w} {$/;"	p
Draw18	library/demos/goldberg.tcl	/^proc Draw18 {w} {$/;"	p
Draw19	library/demos/goldberg.tcl	/^proc Draw19 {w} {$/;"	p
Draw2	library/demos/goldberg.tcl	/^proc Draw2 {w} {$/;"	p
Draw20	library/demos/goldberg.tcl	/^proc Draw20 {w} {$/;"	p
Draw21	library/demos/goldberg.tcl	/^proc Draw21 {w} {$/;"	p
Draw22	library/demos/goldberg.tcl	/^proc Draw22 {w} {$/;"	p
Draw23	library/demos/goldberg.tcl	/^proc Draw23 {w} {$/;"	p
Draw24	library/demos/goldberg.tcl	/^proc Draw24 {w} {$/;"	p
Draw3	library/demos/goldberg.tcl	/^proc Draw3 {w} {$/;"	p
Draw4	library/demos/goldberg.tcl	/^proc Draw4 {w} {$/;"	p
Draw5	library/demos/goldberg.tcl	/^proc Draw5 {w} {$/;"	p
Draw6	library/demos/goldberg.tcl	/^proc Draw6 {w} {$/;"	p
Draw6a	library/demos/goldberg.tcl	/^proc Draw6a {w beta} {$/;"	p
Draw7	library/demos/goldberg.tcl	/^proc Draw7 {w} {$/;"	p
Draw8	library/demos/goldberg.tcl	/^proc Draw8 {w} {$/;"	p
Draw9	library/demos/goldberg.tcl	/^proc Draw9 {w} {$/;"	p
DrawAll	library/demos/goldberg.tcl	/^proc DrawAll {w} {$/;"	p
DrawBorder	generic/ttk/ttkDefaultTheme.c	/^static void DrawBorder($/;"	f	file:
DrawButtonImageAndText	macosx/tkMacOSXButton.c	/^DrawButtonImageAndText($/;"	f	file:
DrawCGImage	macosx/tkMacOSXDraw.c	/^DrawCGImage($/;"	f
DrawCells	generic/ttk/ttkTreeview.c	/^static void DrawCells($/;"	f	file:
DrawCharsInContext	macosx/tkMacOSXFont.c	/^DrawCharsInContext($/;"	f	file:
DrawCompound	generic/ttk/ttkLabel.c	/^static void DrawCompound($/;"	f	file:
DrawCorner	generic/ttk/ttkDefaultTheme.c	/^static void DrawCorner($/;"	f	file:
DrawFieldBorder	generic/ttk/ttkDefaultTheme.c	/^static void DrawFieldBorder($/;"	f	file:
DrawFocusRing	generic/ttk/ttkElements.c	/^static void DrawFocusRing($/;"	f	file:
DrawForest	generic/ttk/ttkTreeview.c	/^static int DrawForest($/;"	f	file:
DrawHeadings	generic/ttk/ttkTreeview.c	/^static void DrawHeadings(Treeview *tv, Drawable d)$/;"	f	file:
DrawItem	generic/ttk/ttkTreeview.c	/^static void DrawItem($/;"	f	file:
DrawMenuButtonImageAndText	macosx/tkMacOSXMenubutton.c	/^DrawMenuButtonImageAndText($/;"	f
DrawMenuEntryAccelerator	unix/tkUnixMenu.c	/^DrawMenuEntryAccelerator($/;"	f	file:
DrawMenuEntryAccelerator	win/tkWinMenu.c	/^DrawMenuEntryAccelerator($/;"	f
DrawMenuEntryArrow	win/tkWinMenu.c	/^DrawMenuEntryArrow($/;"	f
DrawMenuEntryBackground	unix/tkUnixMenu.c	/^DrawMenuEntryBackground($/;"	f	file:
DrawMenuEntryBackground	win/tkWinMenu.c	/^DrawMenuEntryBackground($/;"	f	file:
DrawMenuEntryIndicator	unix/tkUnixMenu.c	/^DrawMenuEntryIndicator($/;"	f	file:
DrawMenuEntryIndicator	win/tkWinMenu.c	/^DrawMenuEntryIndicator($/;"	f
DrawMenuEntryLabel	unix/tkUnixMenu.c	/^DrawMenuEntryLabel($/;"	f	file:
DrawMenuEntryLabel	win/tkWinMenu.c	/^DrawMenuEntryLabel($/;"	f	file:
DrawMenuSeparator	unix/tkUnixMenu.c	/^DrawMenuSeparator($/;"	f	file:
DrawMenuSeparator	win/tkWinMenu.c	/^DrawMenuSeparator($/;"	f
DrawMenuUnderline	unix/tkUnixMenu.c	/^DrawMenuUnderline($/;"	f	file:
DrawMenuUnderline	win/tkWinMenu.c	/^DrawMenuUnderline($/;"	f	file:
DrawOrFillArc	win/tkWinDraw.c	/^DrawOrFillArc($/;"	f	file:
DrawParams	macosx/tkMacOSXButton.c	/^} DrawParams;$/;"	t	typeref:struct:__anon201	file:
DrawParams	macosx/tkMacOSXMenubutton.c	/^} DrawParams;$/;"	t	typeref:struct:__anon204	file:
DrawSash	generic/ttk/ttkPanedwindow.c	/^static void DrawSash(Paned *pw, int index, Drawable d)$/;"	f	file:
DrawSmoothBorder	generic/ttk/ttkClamTheme.c	/^static void DrawSmoothBorder($/;"	f	file:
DrawSubtree	generic/ttk/ttkTreeview.c	/^static int DrawSubtree($/;"	f	file:
DrawTearoffEntry	unix/tkUnixMenu.c	/^DrawTearoffEntry($/;"	f	file:
DrawTearoffEntry	win/tkWinMenu.c	/^DrawTearoffEntry($/;"	f
DrawThemeBackground	win/ttkWinXPTheme.c	/^    DrawThemeBackgroundProc		*DrawThemeBackground;$/;"	m	struct:__anon238	file:
DrawThemeBackgroundProc	win/ttkWinXPTheme.c	/^typedef HRESULT (STDAPICALLTYPE DrawThemeBackgroundProc)(HTHEME hTheme,$/;"	t	file:
DrawThemeText	win/ttkWinXPTheme.c	/^    DrawThemeTextProc		        *DrawThemeText;$/;"	m	struct:__anon238	file:
DrawThemeTextProc	win/ttkWinXPTheme.c	/^typedef HRESULT (STDAPICALLTYPE DrawThemeTextProc)(HTHEME hTheme, HDC hdc,$/;"	t	file:
DrawWidget	generic/ttk/ttkWidget.c	/^static void DrawWidget(ClientData recordPtr)$/;"	f	file:
DrawWindowsSystemBitmap	win/tkWinMenu.c	/^DrawWindowsSystemBitmap($/;"	f	file:
Drawable	xlib/X11/X.h	/^typedef XID Drawable;$/;"	t
DumpLine	generic/tkText.c	/^DumpLine($/;"	f	file:
DumpSegment	generic/tkText.c	/^DumpSegment($/;"	f	file:
DupBitmapObjProc	generic/tkBitmap.c	/^DupBitmapObjProc($/;"	f	file:
DupBorderObjProc	generic/tk3d.c	/^DupBorderObjProc($/;"	f	file:
DupColorObjProc	generic/tkColor.c	/^DupColorObjProc($/;"	f	file:
DupCursorObjProc	generic/tkCursor.c	/^DupCursorObjProc($/;"	f	file:
DupFontObjProc	generic/tkFont.c	/^DupFontObjProc($/;"	f	file:
DupMMInternalRep	generic/tkObj.c	/^DupMMInternalRep($/;"	f	file:
DupOptionInternalRep	generic/tkConfig.c	/^DupOptionInternalRep($/;"	f	file:
DupPixelInternalRep	generic/tkObj.c	/^DupPixelInternalRep($/;"	f	file:
DupStyleObjProc	generic/tkStyle.c	/^DupStyleObjProc($/;"	f	file:
DupTextIndexInternalRep	generic/tkTextIndex.c	/^DupTextIndexInternalRep($/;"	f	file:
DupWindowInternalRep	generic/tkObj.c	/^DupWindowInternalRep($/;"	f	file:
EDIT_ACTION	macosx/tkMacOSXMenus.c	255;"	d	file:
EDIT_ACTION	macosx/tkMacOSXMenus.c	268;"	d	file:
EI_SEG_SIZE	generic/tkTextImage.c	20;"	d	file:
EL_ARRAY_SIZE	generic/tkOption.c	124;"	d	file:
EMBEDDED_APP_WANTS_FOCUS	generic/tkInt.h	908;"	d
EMBEDDED_MENU_CLASS_NAME	win/tkWinMenu.c	23;"	d	file:
ENCODINGTABLE	win/tkWinFont.c	/^typedef struct ENCODINGTABLE {$/;"	s	file:
ENCODINGTABLE	win/tkWinFont.c	/^} ENCODINGTABLE;$/;"	t	typeref:struct:ENCODINGTABLE	file:
END_DRAWING	macosx/ttkMacOSXTheme.c	42;"	d	file:
ENTRY_ACTIVE	generic/tkMenu.h	250;"	d
ENTRY_APPLE_MENU	macosx/tkMacOSXMenu.c	30;"	d	file:
ENTRY_DELETED	generic/tkEntry.h	265;"	d
ENTRY_DISABLED	generic/tkMenu.h	252;"	d
ENTRY_HELP_MENU	macosx/tkMacOSXMenu.c	29;"	d	file:
ENTRY_HELP_MENU	unix/tkUnixMenu.c	27;"	d	file:
ENTRY_LAST_COLUMN	generic/tkMenu.h	229;"	d
ENTRY_NEEDS_REDISPLAY	generic/tkMenu.h	228;"	d
ENTRY_NORMAL	generic/tkMenu.h	251;"	d
ENTRY_PLATFORM_FLAG1	generic/tkMenu.h	230;"	d
ENTRY_PLATFORM_FLAG2	generic/tkMenu.h	231;"	d
ENTRY_PLATFORM_FLAG3	generic/tkMenu.h	232;"	d
ENTRY_PLATFORM_FLAG4	generic/tkMenu.h	233;"	d
ENTRY_SELECTED	generic/tkMenu.h	227;"	d
ENTRY_VAR_TRACED	generic/tkEntry.h	269;"	d
ENTRY_WINDOWS_MENU	macosx/tkMacOSXMenu.c	31;"	d	file:
EVEN	generic/tkTest.c	120;"	d	file:
EVENT_BUFFER_SIZE	generic/tkBind.c	78;"	d	file:
EVEN_TYPE	generic/tkTest.c	/^    EVEN_TYPE$/;"	e	enum:__anon147	file:
EW_SEG_SIZE	generic/tkTextWind.c	38;"	d	file:
EXACT_LEAF_CLASS	generic/tkOption.c	97;"	d	file:
EXACT_LEAF_NAME	generic/tkOption.c	96;"	d	file:
EXACT_NODE_CLASS	generic/tkOption.c	99;"	d	file:
EXACT_NODE_NAME	generic/tkOption.c	98;"	d	file:
EXE_SUFFIX	unix/Makefile	/^EXE_SUFFIX		= $/;"	m
EXPAND	generic/tkPack.c	97;"	d	file:
EXPOSE	generic/tkBind.c	468;"	d	file:
EXTENDED_MASK	generic/tkInt.h	918;"	d
EXTERN	generic/tk.h	32;"	d
EXTRA_CONFIGURE_ARGS	macosx/GNUmakefile	/^EXTRA_CONFIGURE_ARGS	?=$/;"	m
EXTRA_MAKE_ARGS	macosx/GNUmakefile	/^EXTRA_MAKE_ARGS		?=$/;"	m
EX_FULLSCREEN_STYLE	win/tkWinWm.c	347;"	d	file:
EX_OVERRIDE_STYLE	win/tkWinWm.c	344;"	d	file:
EX_TOPLEVEL_STYLE	win/tkWinWm.c	350;"	d	file:
EX_TRANSIENT_STYLE	win/tkWinWm.c	354;"	d	file:
EastGravity	xlib/X11/X.h	382;"	d
EatGrabEvents	generic/tkGrab.c	/^EatGrabEvents($/;"	f	file:
EatSpuriousMessageBugFix	win/tkWinDialog.c	/^EatSpuriousMessageBugFix(void)$/;"	f	file:
Edgemost	library/demos/knightstour.tcl	/^proc Edgemost {a b} {$/;"	p
ElArray	generic/tkOption.c	/^typedef struct ElArray {$/;"	s	file:
ElArray	generic/tkOption.c	/^} ElArray;$/;"	t	typeref:struct:ElArray	file:
Element	generic/tkOption.c	/^typedef struct Element {$/;"	s	file:
Element	generic/tkOption.c	/^} Element;$/;"	t	typeref:struct:Element	file:
Element	generic/tkStyle.c	/^typedef struct Element {$/;"	s	file:
Element	generic/tkStyle.c	/^} Element;$/;"	t	typeref:struct:Element	file:
ElementData	win/ttkWinXPTheme.c	/^} ElementData;$/;"	t	typeref:struct:__anon241	file:
ElementInfo	win/ttkWinXPTheme.c	/^} ElementInfo;$/;"	t	typeref:struct:__anon240	file:
ElementInfoTable	win/ttkWinXPTheme.c	/^static ElementInfo ElementInfoTable[] = {$/;"	v	file:
ElementStateEventProc	generic/ttk/ttkTrack.c	/^ElementStateEventProc(ClientData clientData, XEvent *ev)$/;"	f	file:
ElementStateMask	generic/ttk/ttkTrack.c	/^static const unsigned ElementStateMask =$/;"	v	file:
ElementStateTracker	generic/ttk/ttkTrack.c	/^} ElementStateTracker;$/;"	t	typeref:struct:__anon50	file:
ElideBboxProc	generic/tkTextDisp.c	/^ElideBboxProc($/;"	f	file:
ElideMeasureProc	generic/tkTextDisp.c	/^ElideMeasureProc($/;"	f	file:
EmbImageBboxProc	generic/tkTextImage.c	/^EmbImageBboxProc($/;"	f	file:
EmbImageCheckProc	generic/tkTextImage.c	/^EmbImageCheckProc($/;"	f	file:
EmbImageCleanupProc	generic/tkTextImage.c	/^EmbImageCleanupProc($/;"	f	file:
EmbImageConfigure	generic/tkTextImage.c	/^EmbImageConfigure($/;"	f	file:
EmbImageDeleteProc	generic/tkTextImage.c	/^EmbImageDeleteProc($/;"	f	file:
EmbImageDisplayProc	generic/tkTextImage.c	/^EmbImageDisplayProc($/;"	f	file:
EmbImageLayoutProc	generic/tkTextImage.c	/^EmbImageLayoutProc($/;"	f	file:
EmbImageProc	generic/tkTextImage.c	/^EmbImageProc($/;"	f	file:
EmbWinBboxProc	generic/tkTextWind.c	/^EmbWinBboxProc($/;"	f	file:
EmbWinCheckProc	generic/tkTextWind.c	/^EmbWinCheckProc($/;"	f	file:
EmbWinCleanupProc	generic/tkTextWind.c	/^EmbWinCleanupProc($/;"	f	file:
EmbWinConfigure	generic/tkTextWind.c	/^EmbWinConfigure($/;"	f	file:
EmbWinDelayedUnmap	generic/tkTextWind.c	/^EmbWinDelayedUnmap($/;"	f	file:
EmbWinDeleteProc	generic/tkTextWind.c	/^EmbWinDeleteProc($/;"	f	file:
EmbWinGetClient	generic/tkTextWind.c	/^EmbWinGetClient($/;"	f	file:
EmbWinLayoutProc	generic/tkTextWind.c	/^EmbWinLayoutProc($/;"	f	file:
EmbWinLostSlaveProc	generic/tkTextWind.c	/^EmbWinLostSlaveProc($/;"	f	file:
EmbWinRequestProc	generic/tkTextWind.c	/^EmbWinRequestProc($/;"	f	file:
EmbWinStructureProc	generic/tkTextWind.c	/^EmbWinStructureProc($/;"	f	file:
EmbWinUndisplayProc	generic/tkTextWind.c	/^EmbWinUndisplayProc($/;"	f	file:
EmbedActivateProc	macosx/tkMacOSXEmbed.c	/^EmbedActivateProc($/;"	f	file:
EmbedErrorProc	unix/tkUnixEmbed.c	/^EmbedErrorProc($/;"	f	file:
EmbedFocusProc	macosx/tkMacOSXEmbed.c	/^EmbedFocusProc($/;"	f	file:
EmbedFocusProc	unix/tkUnixEmbed.c	/^EmbedFocusProc($/;"	f	file:
EmbedGeometryRequest	macosx/tkMacOSXEmbed.c	/^EmbedGeometryRequest($/;"	f	file:
EmbedGeometryRequest	unix/tkUnixEmbed.c	/^EmbedGeometryRequest($/;"	f	file:
EmbedGeometryRequest	win/tkWinEmbed.c	/^EmbedGeometryRequest($/;"	f
EmbedSendConfigure	macosx/tkMacOSXEmbed.c	/^EmbedSendConfigure($/;"	f	file:
EmbedSendConfigure	unix/tkUnixEmbed.c	/^EmbedSendConfigure($/;"	f	file:
EmbedStructureProc	macosx/tkMacOSXEmbed.c	/^EmbedStructureProc($/;"	f	file:
EmbedStructureProc	unix/tkUnixEmbed.c	/^EmbedStructureProc($/;"	f	file:
EmbedWindowDeleted	macosx/tkMacOSXEmbed.c	/^EmbedWindowDeleted($/;"	f	file:
EmbedWindowDeleted	unix/tkUnixEmbed.c	/^EmbedWindowDeleted($/;"	f	file:
EmbedWindowDeleted	win/tkWinEmbed.c	/^EmbedWindowDeleted($/;"	f	file:
EmbeddedEventProc	macosx/tkMacOSXEmbed.c	/^EmbeddedEventProc($/;"	f	file:
EmbeddedEventProc	unix/tkUnixEmbed.c	/^EmbeddedEventProc($/;"	f	file:
EnableAccess	xlib/X11/X.h	652;"	d
EncodePNG	generic/tkImgPNG.c	/^EncodePNG($/;"	f	file:
EncodingAlias	unix/tkUnixFont.c	/^typedef struct EncodingAlias {$/;"	s	file:
EncodingAlias	unix/tkUnixFont.c	/^} EncodingAlias;$/;"	t	typeref:struct:EncodingAlias	file:
EndDrawing	generic/ttk/ttkWidget.c	/^static void EndDrawing(Tk_Window tkwin, Drawable d) { }$/;"	f	file:
EndDrawing	generic/ttk/ttkWidget.c	/^static void EndDrawing(Tk_Window tkwin, Drawable d)$/;"	f	file:
EndPosition	generic/ttk/ttkTreeview.c	/^static TreeItem *EndPosition(Treeview *tv, TreeItem *parent)$/;"	f	file:
EnterNotify	xlib/X11/X.h	146;"	d
EnterWindowMask	xlib/X11/X.h	115;"	d
Entry	generic/tkEntry.h	/^} Entry;$/;"	t	typeref:struct:__anon183
Entry	generic/ttk/ttkEntry.c	/^} Entry;$/;"	t	typeref:struct:__anon27	file:
EntryBBoxCommand	generic/ttk/ttkEntry.c	/^EntryBBoxCommand($/;"	f	file:
EntryBlinkProc	generic/tkEntry.c	/^EntryBlinkProc($/;"	f	file:
EntryCharPosition	generic/ttk/ttkEntry.c	/^EntryCharPosition(Entry *entryPtr, int index)$/;"	f	file:
EntryCleanup	generic/ttk/ttkEntry.c	/^EntryCleanup(void *recordPtr)$/;"	f	file:
EntryCmdDeletedProc	generic/tkEntry.c	/^EntryCmdDeletedProc($/;"	f	file:
EntryCommands	generic/ttk/ttkEntry.c	/^static const Ttk_Ensemble EntryCommands[] = {$/;"	v	file:
EntryComputeGeometry	generic/tkEntry.c	/^EntryComputeGeometry($/;"	f	file:
EntryConfigure	generic/ttk/ttkEntry.c	/^static int EntryConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
EntryDeleteCommand	generic/ttk/ttkEntry.c	/^EntryDeleteCommand($/;"	f	file:
EntryDisplay	generic/ttk/ttkEntry.c	/^static void EntryDisplay(void *clientData, Drawable d)$/;"	f	file:
EntryDisplayString	generic/ttk/ttkEntry.c	/^static char *EntryDisplayString(const char *showChar, int numChars)$/;"	f	file:
EntryDoLayout	generic/ttk/ttkEntry.c	/^EntryDoLayout(void *recordPtr)$/;"	f	file:
EntryEditable	generic/ttk/ttkEntry.c	/^EntryEditable(Entry *entryPtr)$/;"	f	file:
EntryElement	macosx/ttkMacOSXTheme.c	/^} EntryElement;$/;"	t	typeref:struct:__anon210	file:
EntryElementDraw	macosx/ttkMacOSXTheme.c	/^static void EntryElementDraw($/;"	f	file:
EntryElementOptions	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementOptionSpec EntryElementOptions[] = {$/;"	v	file:
EntryElementSize	macosx/ttkMacOSXTheme.c	/^static void EntryElementSize($/;"	f	file:
EntryElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec EntryElementSpec = {$/;"	v	file:
EntryEventMask	generic/ttk/ttkEntry.c	896;"	d	file:
EntryEventProc	generic/tkEntry.c	/^EntryEventProc($/;"	f	file:
EntryEventProc	generic/ttk/ttkEntry.c	/^EntryEventProc(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
EntryFetchSelection	generic/tkEntry.c	/^EntryFetchSelection($/;"	f	file:
EntryFetchSelection	generic/ttk/ttkEntry.c	/^EntryFetchSelection($/;"	f	file:
EntryFocusProc	generic/tkEntry.c	/^EntryFocusProc($/;"	f	file:
EntryFreeStyleDefaults	generic/ttk/ttkEntry.c	/^static void EntryFreeStyleDefaults(EntryStyleData *es)$/;"	f	file:
EntryGetCommand	generic/ttk/ttkEntry.c	/^EntryGetCommand($/;"	f	file:
EntryGetGC	generic/ttk/ttkEntry.c	/^static GC EntryGetGC(Entry *entryPtr, Tcl_Obj *colorObj, TkRegion clip)$/;"	f	file:
EntryICursorCommand	generic/ttk/ttkEntry.c	/^EntryICursorCommand($/;"	f	file:
EntryIndex	generic/ttk/ttkEntry.c	/^EntryIndex($/;"	f	file:
EntryIndexCommand	generic/ttk/ttkEntry.c	/^EntryIndexCommand($/;"	f	file:
EntryInitStyleData	generic/ttk/ttkEntry.c	/^static void EntryInitStyleData(Entry *entryPtr, EntryStyleData *es)$/;"	f	file:
EntryInitStyleDefaults	generic/ttk/ttkEntry.c	/^static void EntryInitStyleDefaults(EntryStyleData *es)$/;"	f	file:
EntryInitialize	generic/ttk/ttkEntry.c	/^EntryInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
EntryInsertCommand	generic/ttk/ttkEntry.c	/^EntryInsertCommand($/;"	f	file:
EntryLostSelection	generic/tkEntry.c	/^EntryLostSelection($/;"	f	file:
EntryLostSelection	generic/ttk/ttkEntry.c	/^static void EntryLostSelection(ClientData clientData)$/;"	f	file:
EntryNeedsValidation	generic/ttk/ttkEntry.c	/^static int EntryNeedsValidation(VMODE vmode, VREASON reason)$/;"	f	file:
EntryOptionSpecs	generic/ttk/ttkEntry.c	/^static Tk_OptionSpec EntryOptionSpecs[] = {$/;"	v	file:
EntryOwnSelection	generic/ttk/ttkEntry.c	/^static void EntryOwnSelection(Entry *entryPtr)$/;"	f	file:
EntryPart	generic/ttk/ttkEntry.c	/^} EntryPart;$/;"	t	typeref:struct:__anon26	file:
EntryPostConfigure	generic/ttk/ttkEntry.c	/^static int EntryPostConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
EntryRevalidate	generic/ttk/ttkEntry.c	/^static int EntryRevalidate(Tcl_Interp *interp, Entry *entryPtr, VREASON reason)$/;"	f	file:
EntryRevalidateBG	generic/ttk/ttkEntry.c	/^static void EntryRevalidateBG(Entry *entryPtr, VREASON reason)$/;"	f	file:
EntryScanTo	generic/tkEntry.c	/^EntryScanTo($/;"	f	file:
EntrySelectTo	generic/tkEntry.c	/^EntrySelectTo($/;"	f	file:
EntrySelectionClearCommand	generic/ttk/ttkEntry.c	/^static int EntrySelectionClearCommand($/;"	f	file:
EntrySelectionCommands	generic/ttk/ttkEntry.c	/^static const Ttk_Ensemble EntrySelectionCommands[] = {$/;"	v	file:
EntrySelectionPresentCommand	generic/ttk/ttkEntry.c	/^static int EntrySelectionPresentCommand($/;"	f	file:
EntrySelectionRangeCommand	generic/ttk/ttkEntry.c	/^static int EntrySelectionRangeCommand($/;"	f	file:
EntrySetCommand	generic/ttk/ttkEntry.c	/^static int EntrySetCommand($/;"	f	file:
EntrySetValue	generic/tkEntry.c	/^EntrySetValue($/;"	f	file:
EntrySetValue	generic/ttk/ttkEntry.c	/^static int EntrySetValue(Entry *entryPtr, const char *value)$/;"	f	file:
EntryStoreValue	generic/ttk/ttkEntry.c	/^EntryStoreValue(Entry *entryPtr, const char *value)$/;"	f	file:
EntryStyleData	generic/ttk/ttkEntry.c	/^} EntryStyleData;$/;"	t	typeref:struct:__anon25	file:
EntryTextVarProc	generic/tkEntry.c	/^EntryTextVarProc($/;"	f	file:
EntryTextVariableTrace	generic/ttk/ttkEntry.c	/^static void EntryTextVariableTrace(void *recordPtr, const char *value)$/;"	f	file:
EntryType	generic/tkEntry.h	/^enum EntryType {$/;"	g
EntryUpdateScrollbar	generic/tkEntry.c	/^EntryUpdateScrollbar($/;"	f	file:
EntryUpdateTextLayout	generic/ttk/ttkEntry.c	/^static void EntryUpdateTextLayout(Entry *entryPtr)$/;"	f	file:
EntryValidate	generic/tkEntry.c	/^EntryValidate($/;"	f	file:
EntryValidateChange	generic/tkEntry.c	/^EntryValidateChange($/;"	f	file:
EntryValidateChange	generic/ttk/ttkEntry.c	/^EntryValidateChange($/;"	f	file:
EntryValidateCommand	generic/ttk/ttkEntry.c	/^static int EntryValidateCommand($/;"	f	file:
EntryValueChanged	generic/tkEntry.c	/^EntryValueChanged($/;"	f	file:
EntryVisibleRange	generic/tkEntry.c	/^EntryVisibleRange($/;"	f	file:
EntryWidgetObjCmd	generic/tkEntry.c	/^EntryWidgetObjCmd($/;"	f	file:
EntryWidgetSpec	generic/ttk/ttkEntry.c	/^static WidgetSpec EntryWidgetSpec = {$/;"	v	file:
EntryWidth	generic/ttk/ttkEntry.c	1316;"	d	file:
EntryWorldChanged	generic/tkEntry.c	/^EntryWorldChanged($/;"	f	file:
EntryXViewCommand	generic/ttk/ttkEntry.c	/^static int EntryXViewCommand($/;"	f	file:
EnumChildrenProc	win/tkWinTest.c	/^EnumChildrenProc($/;"	f	file:
EnumItems	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *EnumItems )($/;"	m	struct:IShellItemArrayVtbl	file:
Err	win/nmakehlp.c	/^pipeinfo Err = {INVALID_HANDLE_VALUE, '\\0'};$/;"	v
ErrorProc	generic/tkError.c	/^ErrorProc($/;"	f	file:
EvalObjv	unix/tkUnixDialog.c	/^EvalObjv($/;"	f	file:
EvaluateActionList	generic/tkUndo.c	/^EvaluateActionList($/;"	f	file:
EvenOddRule	xlib/X11/X.h	485;"	d
EventInfo	generic/tkBind.c	/^} EventInfo;$/;"	t	typeref:struct:__anon174	file:
EventMaskOfScreen	xlib/X11/Xlib.h	123;"	d
EventuallyDeleteImage	generic/tkImage.c	/^EventuallyDeleteImage($/;"	f	file:
EventuallyRedraw	generic/tkEntry.c	/^EventuallyRedraw($/;"	f	file:
EventuallyRedrawItem	generic/tkCanvas.c	/^EventuallyRedrawItem($/;"	f	file:
EventuallyRedrawRange	generic/tkListbox.c	/^EventuallyRedrawRange($/;"	f	file:
Exit	library/demos/knightstour.tcl	/^proc Exit {dlg} {$/;"	p
ExitHandler	generic/tkEvent.c	/^typedef struct ExitHandler {$/;"	s	file:
ExitHandler	generic/tkEvent.c	/^} ExitHandler;$/;"	t	typeref:struct:ExitHandler	file:
ExpandPercents	generic/tkBind.c	/^ExpandPercents($/;"	f	file:
ExpandPercents	generic/tkEntry.c	/^ExpandPercents($/;"	f	file:
ExpandPercents	generic/ttk/ttkEntry.c	/^ExpandPercents($/;"	f	file:
Export	tests/constraints.tcl	/^	proc Export {internal as external} {$/;"	p
Expose	xlib/X11/X.h	151;"	d
ExposeRestrictProc	macosx/tkMacOSXWindowEvent.c	/^ExposeRestrictProc($/;"	f	file:
ExposureMask	xlib/X11/X.h	126;"	d
ExtendArray	generic/tkOption.c	/^ExtendArray($/;"	f	file:
ExtendStacks	generic/tkOption.c	/^ExtendStacks($/;"	f	file:
FDAP	win/tkWinDialog.c	/^typedef enum FDAP {$/;"	g	file:
FDAP	win/tkWinDialog.c	/^} FDAP;$/;"	t	typeref:enum:FDAP	file:
FDAP_BOTTOM	win/tkWinDialog.c	/^    FDAP_BOTTOM	= 0,$/;"	e	enum:FDAP	file:
FDAP_TOP	win/tkWinDialog.c	/^    FDAP_TOP	= 1$/;"	e	enum:FDAP	file:
FDLG_STATE_INIT	win/tkWinDialog.c	63;"	d	file:
FDLG_STATE_USE_NEW	win/tkWinDialog.c	64;"	d	file:
FDLG_STATE_USE_OLD	win/tkWinDialog.c	65;"	d	file:
FD_SETSIZE	macosx/tkMacOSXPort.h	82;"	d
FD_SETSIZE	macosx/tkMacOSXPort.h	84;"	d
FD_SETSIZE	unix/tkUnixPort.h	91;"	d
FD_SETSIZE	unix/tkUnixPort.h	93;"	d
FIELD_SIZE	generic/tkBind.c	3795;"	d	file:
FILEOPENDIALOGOPTIONS	win/tkWinDialog.c	/^typedef DWORD FILEOPENDIALOGOPTIONS;$/;"	t	file:
FILLX	generic/tkPack.c	95;"	d	file:
FILLY	generic/tkPack.c	96;"	d	file:
FIND_ITEMS	generic/tkCanvas.c	340;"	d	file:
FIND_ITEMS	generic/tkCanvas.c	356;"	d	file:
FIRST_CANVAS_ITEM_MATCHING	generic/tkCanvas.c	335;"	d	file:
FIRST_CANVAS_ITEM_MATCHING	generic/tkCanvas.c	345;"	d	file:
FIRST_DRAW	macosx/tkMacOSXButton.c	25;"	d	file:
FIRST_DRAW	macosx/tkMacOSXMenubutton.c	24;"	d	file:
FIXEDSIZE	win/ttkWinTheme.c	107;"	d	file:
FIXED_SIZE	generic/tkWindow.c	743;"	d	file:
FIXED_SPACE	generic/tkWindow.c	1168;"	d	file:
FLAT	generic/ttk/ttkDefaultTheme.c	/^enum BorderColor { FLAT = 1, LITE = 2, DARK = 3, BRDR = 4 };$/;"	e	enum:BorderColor	file:
FMWK_DIR	macosx/GNUmakefile	/^FMWK_DIR		:= ${LIBDIR}$/;"	m
FMWK_DIR	macosx/GNUmakefile	/^FMWK_DIR		:= .$/;"	m
FOCUS	generic/tkBind.c	467;"	d	file:
FONTMAP_BITSPERPAGE	unix/tkUnixFont.c	41;"	d	file:
FONTMAP_BITSPERPAGE	win/tkWinFont.c	32;"	d	file:
FONTMAP_PAGES	unix/tkUnixFont.c	40;"	d	file:
FONTMAP_PAGES	win/tkWinFont.c	31;"	d	file:
FONTMAP_SHIFT	unix/tkUnixFont.c	38;"	d	file:
FONTMAP_SHIFT	win/tkWinFont.c	29;"	d	file:
FONT_FAMILY	generic/tkFont.c	176;"	d	file:
FONT_NUMFIELDS	generic/tkFont.c	182;"	d	file:
FONT_OBJS	unix/Makefile	/^FONT_OBJS = tkUnixFont.o$/;"	m
FONT_OVERSTRIKE	generic/tkFont.c	181;"	d	file:
FONT_SIZE	generic/tkFont.c	177;"	d	file:
FONT_SLANT	generic/tkFont.c	179;"	d	file:
FONT_UNDERLINE	generic/tkFont.c	180;"	d	file:
FONT_WEIGHT	generic/tkFont.c	178;"	d	file:
FORCE_REDRAW	generic/tkCanvas.h	286;"	d
FOR_EVERY_CANVAS_ITEM_MATCHING	generic/tkCanvas.c	337;"	d	file:
FOR_EVERY_CANVAS_ITEM_MATCHING	generic/tkCanvas.c	350;"	d	file:
FOS_ALLNONSTORAGEITEMS	win/tkWinDialog.c	/^    FOS_ALLNONSTORAGEITEMS	= 0x80,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_ALLOWMULTISELECT	win/tkWinDialog.c	/^    FOS_ALLOWMULTISELECT	= 0x200,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_CREATEPROMPT	win/tkWinDialog.c	/^    FOS_CREATEPROMPT	= 0x2000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_DEFAULTNOMINIMODE	win/tkWinDialog.c	/^    FOS_DEFAULTNOMINIMODE	= 0x20000000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_DONTADDTORECENT	win/tkWinDialog.c	/^    FOS_DONTADDTORECENT	= 0x2000000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_FILEMUSTEXIST	win/tkWinDialog.c	/^    FOS_FILEMUSTEXIST	= 0x1000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_FORCEFILESYSTEM	win/tkWinDialog.c	/^    FOS_FORCEFILESYSTEM	= 0x40,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_FORCEPREVIEWPANEON	win/tkWinDialog.c	/^    FOS_FORCEPREVIEWPANEON	= 0x40000000$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_FORCESHOWHIDDEN	win/tkWinDialog.c	/^    FOS_FORCESHOWHIDDEN	= 0x10000000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_HIDEMRUPLACES	win/tkWinDialog.c	/^    FOS_HIDEMRUPLACES	= 0x20000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_HIDEPINNEDPLACES	win/tkWinDialog.c	/^    FOS_HIDEPINNEDPLACES	= 0x40000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_NOCHANGEDIR	win/tkWinDialog.c	/^    FOS_NOCHANGEDIR	= 0x8,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_NODEREFERENCELINKS	win/tkWinDialog.c	/^    FOS_NODEREFERENCELINKS	= 0x100000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_NOREADONLYRETURN	win/tkWinDialog.c	/^    FOS_NOREADONLYRETURN	= 0x8000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_NOTESTFILECREATE	win/tkWinDialog.c	/^    FOS_NOTESTFILECREATE	= 0x10000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_NOVALIDATE	win/tkWinDialog.c	/^    FOS_NOVALIDATE	= 0x100,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_OVERWRITEPROMPT	win/tkWinDialog.c	/^    FOS_OVERWRITEPROMPT	= 0x2,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_PATHMUSTEXIST	win/tkWinDialog.c	/^    FOS_PATHMUSTEXIST	= 0x800,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_PICKFOLDERS	win/tkWinDialog.c	/^    FOS_PICKFOLDERS	= 0x20,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_SHAREAWARE	win/tkWinDialog.c	/^    FOS_SHAREAWARE	= 0x4000,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FOS_STRICTFILETYPES	win/tkWinDialog.c	/^    FOS_STRICTFILETYPES	= 0x4,$/;"	e	enum:_FILEOPENDIALOGOPTIONS	file:
FP_EQUAL_SCALE	generic/tkTextDisp.c	194;"	d	file:
FRAME_COLOR	generic/ttk/ttkClamTheme.c	26;"	d	file:
FactoryRec	generic/ttk/ttkTheme.c	/^} FactoryRec;$/;"	t	typeref:struct:__anon114	file:
False	xlib/X11/Xlib.h	65;"	d
FamilyChaos	xlib/X11/X.h	259;"	d
FamilyDECnet	xlib/X11/X.h	258;"	d
FamilyExists	win/tkWinFont.c	/^FamilyExists($/;"	f	file:
FamilyInternet	xlib/X11/X.h	257;"	d
FamilyOrAliasExists	win/tkWinFont.c	/^FamilyOrAliasExists($/;"	f	file:
FcFontSort	unix/configure	/^FcFontSort ();$/;"	f
FieldElement	generic/ttk/ttkClamTheme.c	/^} FieldElement;$/;"	t	typeref:struct:__anon54	file:
FieldElement	generic/ttk/ttkDefaultTheme.c	/^} FieldElement;$/;"	t	typeref:struct:__anon89	file:
FieldElement	generic/ttk/ttkElements.c	/^} FieldElement;$/;"	t	typeref:struct:__anon35	file:
FieldElement	win/ttkWinTheme.c	/^} FieldElement;$/;"	t	typeref:struct:__anon246	file:
FieldElementDraw	generic/ttk/ttkClamTheme.c	/^static void FieldElementDraw($/;"	f	file:
FieldElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void FieldElementDraw($/;"	f	file:
FieldElementDraw	generic/ttk/ttkElements.c	/^static void FieldElementDraw($/;"	f	file:
FieldElementDraw	win/ttkWinTheme.c	/^static void FieldElementDraw($/;"	f	file:
FieldElementOptions	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementOptionSpec FieldElementOptions[] = {$/;"	v	file:
FieldElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec FieldElementOptions[] = {$/;"	v	file:
FieldElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec FieldElementOptions[] = {$/;"	v	file:
FieldElementOptions	win/ttkWinTheme.c	/^static Ttk_ElementOptionSpec FieldElementOptions[] = {$/;"	v	file:
FieldElementSize	generic/ttk/ttkClamTheme.c	/^static void FieldElementSize($/;"	f	file:
FieldElementSize	generic/ttk/ttkDefaultTheme.c	/^static void FieldElementSize($/;"	f	file:
FieldElementSize	generic/ttk/ttkElements.c	/^static void FieldElementSize($/;"	f	file:
FieldElementSize	win/ttkWinTheme.c	/^static void FieldElementSize($/;"	f	file:
FieldElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec FieldElementSpec = {$/;"	v	file:
FieldElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec FieldElementSpec = {$/;"	v	file:
FieldElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec FieldElementSpec = {$/;"	v	file:
FieldElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec FieldElementSpec = {$/;"	v	file:
FieldSpecified	generic/tkFont.c	/^FieldSpecified($/;"	f	file:
FileFilter	generic/tkFileFilter.h	/^typedef struct FileFilter {$/;"	s
FileFilter	generic/tkFileFilter.h	/^} FileFilter;$/;"	t	typeref:struct:FileFilter
FileFilterClause	generic/tkFileFilter.h	/^typedef struct FileFilterClause {$/;"	s
FileFilterClause	generic/tkFileFilter.h	/^} FileFilterClause;$/;"	t	typeref:struct:FileFilterClause
FileFilterList	generic/tkFileFilter.h	/^typedef struct FileFilterList {$/;"	s
FileFilterList	generic/tkFileFilter.h	/^} FileFilterList;$/;"	t	typeref:struct:FileFilterList
FileMatchGIF	generic/tkImgGIF.c	/^FileMatchGIF($/;"	f	file:
FileMatchPNG	generic/tkImgPNG.c	/^FileMatchPNG($/;"	f	file:
FileMatchPPM	generic/tkImgPPM.c	/^FileMatchPPM($/;"	f	file:
FilePanelCallbackInfo	macosx/tkMacOSXDialog.c	/^} FilePanelCallbackInfo;$/;"	t	typeref:struct:__anon191	file:
FilePostscript	tests/canvPsImg.tcl	/^proc FilePostscript { canvas } {$/;"	p
FileReadGIF	generic/tkImgGIF.c	/^FileReadGIF($/;"	f	file:
FileReadPNG	generic/tkImgPNG.c	/^FileReadPNG($/;"	f	file:
FileReadPPM	generic/tkImgPPM.c	/^FileReadPPM($/;"	f	file:
FileWriteGIF	generic/tkImgGIF.c	/^FileWriteGIF($/;"	f	file:
FileWritePNG	generic/tkImgPNG.c	/^FileWritePNG($/;"	f	file:
FileWritePPM	generic/tkImgPPM.c	/^FileWritePPM($/;"	f	file:
FillElementDraw	generic/ttk/ttkElements.c	/^static void FillElementDraw($/;"	f	file:
FillElementDraw	macosx/ttkMacOSXTheme.c	/^static void FillElementDraw($/;"	f	file:
FillElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec FillElementSpec = {$/;"	v	file:
FillElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec FillElementSpec = {$/;"	v	file:
FillFocusElement	win/ttkWinTheme.c	/^} FillFocusElement;$/;"	t	typeref:struct:__anon248	file:
FillFocusElementDraw	win/ttkWinTheme.c	/^static void FillFocusElementDraw($/;"	f	file:
FillFocusElementOptions	win/ttkWinTheme.c	/^static Ttk_ElementOptionSpec FillFocusElementOptions[] = {$/;"	v	file:
FillOpaqueStippled	xlib/X11/X.h	481;"	d
FillSolid	xlib/X11/X.h	478;"	d
FillStippled	xlib/X11/X.h	480;"	d
FillTiled	xlib/X11/X.h	479;"	d
FinalizeBaseChunk	generic/tkTextDisp.c	/^FinalizeBaseChunk($/;"	f	file:
FindArea	generic/tkCanvas.c	/^FindArea($/;"	f	file:
FindClosestColor	unix/tkUnixColor.c	/^FindClosestColor($/;"	f	file:
FindColumn	generic/ttk/ttkTreeview.c	/^static TreeColumn *FindColumn($/;"	f	file:
FindCommonAncestor	generic/tkGrab.c	/^FindCommonAncestor($/;"	f	file:
FindConfigSpec	generic/tkOldConfig.c	/^FindConfigSpec($/;"	f	file:
FindCursorByName	macosx/tkMacOSXCursor.c	/^FindCursorByName($/;"	f
FindDIBBits	win/tkWinWm.c	/^FindDIBBits($/;"	f	file:
FindDLine	generic/tkTextDisp.c	/^FindDLine($/;"	f	file:
FindDisplayFocusInfo	generic/tkFocus.c	/^FindDisplayFocusInfo($/;"	f	file:
FindInterpreterObject	win/tkWinSend.c	/^FindInterpreterObject($/;"	f	file:
FindItem	generic/ttk/ttkTreeview.c	/^static TreeItem *FindItem($/;"	f	file:
FindItems	generic/tkCanvas.c	/^FindItems($/;"	f	file:
FindMaster	generic/tkPlace.c	/^FindMaster($/;"	f	file:
FindNSFont	macosx/tkMacOSXFont.c	/^FindNSFont($/;"	f	file:
FindNode	generic/ttk/ttkLayout.c	/^FindNode(Ttk_Element node, const char *nodeName)$/;"	f	file:
FindSequence	generic/tkBind.c	/^FindSequence($/;"	f	file:
FindSlave	generic/tkPlace.c	/^FindSlave($/;"	f	file:
FindSubFontForChar	unix/tkUnixFont.c	/^FindSubFontForChar($/;"	f	file:
FindSubFontForChar	win/tkWinFont.c	/^FindSubFontForChar($/;"	f	file:
FindSystemColor	win/tkWinColor.c	/^FindSystemColor($/;"	f	file:
FindTabIndex	generic/ttk/ttkNotebook.c	/^static int FindTabIndex($/;"	f	file:
FindTag	generic/tkTextTag.c	/^FindTag($/;"	f	file:
FindTagEnd	generic/tkTextBTree.c	/^FindTagEnd($/;"	f	file:
FindTagStart	generic/tkTextBTree.c	/^FindTagStart($/;"	f	file:
FinishedWithFont	unix/tkUnixRFont.c	/^FinishedWithFont($/;"	f	file:
FirstChild	generic/tkBusy.c	/^FirstChild($/;"	f	file:
FirstColumn	generic/ttk/ttkTreeview.c	761;"	d	file:
FirstExtensionError	xlib/X11/X.h	332;"	d
FlipColor	win/tkWinButton.c	43;"	d	file:
FlushChar	generic/tkImgGIF.c	/^FlushChar($/;"	f	file:
FocusChangeMask	xlib/X11/X.h	132;"	d
FocusElement	generic/ttk/ttkElements.c	/^} FocusElement;$/;"	t	typeref:struct:__anon37	file:
FocusElementDraw	generic/ttk/ttkElements.c	/^static void FocusElementDraw($/;"	f	file:
FocusElementDraw	win/ttkWinTheme.c	/^static void FocusElementDraw($/;"	f	file:
FocusElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec FocusElementOptions[] = {$/;"	v	file:
FocusElementSize	generic/ttk/ttkElements.c	/^static void FocusElementSize($/;"	f	file:
FocusElementSize	win/ttkWinTheme.c	/^static void FocusElementSize($/;"	f	file:
FocusElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec FocusElementSpec = {$/;"	v	file:
FocusElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec FocusElementSpec = {$/;"	v	file:
FocusIn	xlib/X11/X.h	148;"	d
FocusMapProc	generic/tkFocus.c	/^FocusMapProc($/;"	f	file:
FocusOut	xlib/X11/X.h	149;"	d
Font	xlib/X11/X.h	/^typedef XID Font;$/;"	t
FontAttributes	unix/tkUnixFont.c	/^typedef struct FontAttributes {$/;"	s	file:
FontAttributes	unix/tkUnixFont.c	/^} FontAttributes;$/;"	t	typeref:struct:FontAttributes	file:
FontChange	xlib/X11/X.h	553;"	d
FontFamily	unix/tkUnixFont.c	/^typedef struct FontFamily {$/;"	s	file:
FontFamily	unix/tkUnixFont.c	/^} FontFamily;$/;"	t	typeref:struct:FontFamily	file:
FontFamily	win/tkWinFont.c	/^typedef struct FontFamily {$/;"	s	file:
FontFamily	win/tkWinFont.c	/^} FontFamily;$/;"	t	typeref:struct:FontFamily	file:
FontLeftToRight	xlib/X11/X.h	550;"	d
FontMapInsert	unix/tkUnixFont.c	/^FontMapInsert($/;"	f	file:
FontMapInsert	win/tkWinFont.c	/^FontMapInsert($/;"	f	file:
FontMapLoadPage	unix/tkUnixFont.c	/^FontMapLoadPage($/;"	f	file:
FontMapLoadPage	win/tkWinFont.c	/^FontMapLoadPage($/;"	f	file:
FontMapLookup	unix/tkUnixFont.c	/^FontMapLookup($/;"	f	file:
FontMapLookup	win/tkWinFont.c	/^FontMapLookup($/;"	f	file:
FontPkgCleanup	unix/tkUnixFont.c	/^FontPkgCleanup($/;"	f	file:
FontRightToLeft	xlib/X11/X.h	551;"	d
FontchooserCget	macosx/tkMacOSXDialog.c	/^FontchooserCget($/;"	f	file:
FontchooserCget	win/tkWinDialog.c	/^FontchooserCget($/;"	f	file:
FontchooserClosed	macosx/tkMacOSXDialog.c	/^enum FontchooserEvent { FontchooserClosed, FontchooserSelection };$/;"	e	enum:FontchooserEvent	file:
FontchooserCmd	macosx/tkMacOSXDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserCmd	win/tkWinDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserConfigureCmd	macosx/tkMacOSXDialog.c	/^FontchooserConfigureCmd($/;"	f	file:
FontchooserConfigureCmd	win/tkWinDialog.c	/^FontchooserConfigureCmd($/;"	f	file:
FontchooserData	macosx/tkMacOSXDialog.c	/^typedef struct FontchooserData {$/;"	s	file:
FontchooserData	macosx/tkMacOSXDialog.c	/^} FontchooserData;$/;"	t	typeref:struct:FontchooserData	file:
FontchooserEvent	macosx/tkMacOSXDialog.c	/^FontchooserEvent($/;"	f	file:
FontchooserEvent	macosx/tkMacOSXDialog.c	/^enum FontchooserEvent { FontchooserClosed, FontchooserSelection };$/;"	g	file:
FontchooserFont	macosx/tkMacOSXDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserFont	win/tkWinDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserHideCmd	macosx/tkMacOSXDialog.c	/^FontchooserHideCmd($/;"	f	file:
FontchooserHideCmd	win/tkWinDialog.c	/^FontchooserHideCmd($/;"	f	file:
FontchooserOption	macosx/tkMacOSXDialog.c	/^enum FontchooserOption {$/;"	g	file:
FontchooserOption	win/tkWinDialog.c	/^enum FontchooserOption {$/;"	g	file:
FontchooserParent	macosx/tkMacOSXDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserParent	win/tkWinDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserParentEventHandler	macosx/tkMacOSXDialog.c	/^FontchooserParentEventHandler($/;"	f	file:
FontchooserSelection	macosx/tkMacOSXDialog.c	/^enum FontchooserEvent { FontchooserClosed, FontchooserSelection };$/;"	e	enum:FontchooserEvent	file:
FontchooserShowCmd	macosx/tkMacOSXDialog.c	/^FontchooserShowCmd($/;"	f	file:
FontchooserShowCmd	win/tkWinDialog.c	/^FontchooserShowCmd($/;"	f	file:
FontchooserTitle	macosx/tkMacOSXDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserTitle	win/tkWinDialog.c	/^    FontchooserParent, FontchooserTitle, FontchooserFont, FontchooserCmd,$/;"	e	enum:FontchooserOption	file:
FontchooserVisible	macosx/tkMacOSXDialog.c	/^    FontchooserVisible$/;"	e	enum:FontchooserOption	file:
FontchooserVisible	win/tkWinDialog.c	/^    FontchooserVisible$/;"	e	enum:FontchooserOption	file:
ForceAttributes	macosx/tkMacOSXWm.c	145;"	d	file:
ForgetGravity	xlib/X11/X.h	376;"	d
FormatConfigInfo	generic/tkOldConfig.c	/^FormatConfigInfo($/;"	f	file:
FormatConfigValue	generic/tkOldConfig.c	/^FormatConfigValue($/;"	f	file:
ForwBack	generic/tkTextIndex.c	/^ForwBack($/;"	f	file:
Frame	generic/tkFrame.c	/^} Frame;$/;"	t	typeref:struct:__anon145	file:
Frame	generic/ttk/ttkFrame.c	/^} Frame;$/;"	t	typeref:struct:__anon119	file:
FrameCmdDeletedProc	generic/tkFrame.c	/^FrameCmdDeletedProc($/;"	f	file:
FrameCommands	generic/ttk/ttkFrame.c	/^static const Ttk_Ensemble FrameCommands[] = {$/;"	v	file:
FrameConfigure	generic/ttk/ttkFrame.c	/^static int FrameConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
FrameControlElementData	win/ttkWinTheme.c	/^} FrameControlElementData;$/;"	t	typeref:struct:__anon244	file:
FrameControlElementDraw	win/ttkWinTheme.c	/^static void FrameControlElementDraw($/;"	f	file:
FrameControlElementSize	win/ttkWinTheme.c	/^static void FrameControlElementSize($/;"	f	file:
FrameControlElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec FrameControlElementSpec = {$/;"	v	file:
FrameControlElements	win/ttkWinTheme.c	/^static FrameControlElementData FrameControlElements[] = {$/;"	v	file:
FrameEventProc	generic/tkFrame.c	/^FrameEventProc($/;"	f	file:
FrameLostSlaveProc	generic/tkFrame.c	/^FrameLostSlaveProc($/;"	f	file:
FrameMargins	generic/ttk/ttkFrame.c	/^static Ttk_Padding FrameMargins(Frame *framePtr)$/;"	f	file:
FrameOptionSpecs	generic/ttk/ttkFrame.c	/^static Tk_OptionSpec FrameOptionSpecs[] = {$/;"	v	file:
FramePart	generic/ttk/ttkFrame.c	/^} FramePart;$/;"	t	typeref:struct:__anon118	file:
FrameRequestProc	generic/tkFrame.c	/^FrameRequestProc($/;"	f	file:
FrameSize	generic/ttk/ttkFrame.c	/^static int FrameSize(void *recordPtr, int *widthPtr, int *heightPtr)$/;"	f	file:
FrameStructureProc	generic/tkFrame.c	/^FrameStructureProc($/;"	f	file:
FrameType	generic/tkFrame.c	/^enum FrameType {$/;"	g	file:
FrameWidgetObjCmd	generic/tkFrame.c	/^FrameWidgetObjCmd($/;"	f	file:
FrameWidgetSpec	generic/ttk/ttkFrame.c	/^static WidgetSpec FrameWidgetSpec = {$/;"	v	file:
FrameWorldChanged	generic/tkFrame.c	/^FrameWorldChanged($/;"	f	file:
Fread	generic/tkImgGIF.c	/^Fread($/;"	f	file:
FreeBaseChunk	generic/tkTextDisp.c	/^FreeBaseChunk($/;"	f	file:
FreeBitmap	generic/tkBitmap.c	/^FreeBitmap($/;"	f	file:
FreeBitmapObj	generic/tkBitmap.c	/^FreeBitmapObj($/;"	f	file:
FreeBitmapObjProc	generic/tkBitmap.c	/^FreeBitmapObjProc($/;"	f	file:
FreeBorderObj	generic/tk3d.c	/^FreeBorderObj($/;"	f	file:
FreeBorderObjProc	generic/tk3d.c	/^FreeBorderObjProc($/;"	f	file:
FreeClipMask	xlib/xgc.c	/^static void FreeClipMask(GC gc) {$/;"	f	file:
FreeColorObj	generic/tkColor.c	/^FreeColorObj($/;"	f	file:
FreeColorObjProc	generic/tkColor.c	/^FreeColorObjProc($/;"	f	file:
FreeColorTable	generic/tkImgPhInstance.c	/^FreeColorTable($/;"	f	file:
FreeColumn	generic/ttk/ttkTreeview.c	/^static void FreeColumn(TreeColumn *column)$/;"	f	file:
FreeCursor	generic/tkCursor.c	/^FreeCursor($/;"	f	file:
FreeCursorObj	generic/tkCursor.c	/^FreeCursorObj($/;"	f	file:
FreeCursorObjProc	generic/tkCursor.c	/^FreeCursorObjProc($/;"	f	file:
FreeDLines	generic/tkTextDisp.c	/^FreeDLines($/;"	f	file:
FreeElement	generic/tkStyle.c	/^FreeElement($/;"	f	file:
FreeElementClass	generic/ttk/ttkTheme.c	/^static void FreeElementClass(Ttk_ElementClass *elementClass)$/;"	f	file:
FreeElementData	win/ttkWinXPTheme.c	/^FreeElementData(ElementData *elementData)$/;"	f	file:
FreeFilterVista	win/tkWinDialog.c	/^static void FreeFilterVista(DWORD count, TCLCOMDLG_FILTERSPEC *dlgFilterPtr)$/;"	f	file:
FreeFontFamily	unix/tkUnixFont.c	/^FreeFontFamily($/;"	f	file:
FreeFontFamily	win/tkWinFont.c	/^FreeFontFamily($/;"	f	file:
FreeFontObj	generic/tkFont.c	/^FreeFontObj($/;"	f	file:
FreeFontObjProc	generic/tkFont.c	/^FreeFontObjProc($/;"	f	file:
FreeID	win/tkWinMenu.c	/^FreeID($/;"	f	file:
FreeIconBlock	win/tkWinWm.c	/^FreeIconBlock($/;"	f	file:
FreeImageData	generic/ttk/ttkImage.c	/^static void FreeImageData(void *clientData)$/;"	f	file:
FreeItem	generic/ttk/ttkTreeview.c	/^static void FreeItem(TreeItem *item)$/;"	f	file:
FreeItemCB	generic/ttk/ttkTreeview.c	/^static void FreeItemCB(void *clientData) { FreeItem(clientData); }$/;"	f	file:
FreeMMInternalRep	generic/tkObj.c	/^FreeMMInternalRep($/;"	f	file:
FreeOptionInternalRep	generic/tkConfig.c	/^FreeOptionInternalRep($/;"	f	file:
FreePixelInternalRep	generic/tkObj.c	/^FreePixelInternalRep($/;"	f	file:
FreeResources	generic/tkConfig.c	/^FreeResources($/;"	f	file:
FreeSlave	generic/tkPlace.c	/^FreeSlave($/;"	f	file:
FreeStyle	generic/tkTextDisp.c	/^FreeStyle($/;"	f	file:
FreeStyle	generic/ttk/ttkTheme.c	/^static void FreeStyle(Style *stylePtr)$/;"	f	file:
FreeStyleEngine	generic/tkStyle.c	/^FreeStyleEngine($/;"	f	file:
FreeStyleObjProc	generic/tkStyle.c	/^FreeStyleObjProc($/;"	f	file:
FreeStyledElement	generic/tkStyle.c	/^FreeStyledElement($/;"	f	file:
FreeTextIndexInternalRep	generic/tkTextIndex.c	/^FreeTextIndexInternalRep($/;"	f	file:
FreeTheme	generic/ttk/ttkTheme.c	/^static void FreeTheme(Theme *themePtr)$/;"	f	file:
FreeUidThreadExitProc	generic/tkGet.c	/^FreeUidThreadExitProc($/;"	f	file:
FreeWidget	generic/ttk/ttkWidget.c	/^FreeWidget(void *memPtr)$/;"	f	file:
FreeWidgetSpec	generic/tkStyle.c	/^FreeWidgetSpec($/;"	f	file:
FreeWindowInternalRep	generic/tkObj.c	/^FreeWindowInternalRep($/;"	f	file:
FrontWindowAtPoint	macosx/tkMacOSXWm.c	/^FrontWindowAtPoint($/;"	f	file:
GC	xlib/X11/Xlib.h	/^typedef XGCValues *GC;$/;"	t
GCArcMode	xlib/X11/X.h	541;"	d
GCBackground	xlib/X11/X.h	522;"	d
GCCapStyle	xlib/X11/X.h	525;"	d
GCClipMask	xlib/X11/X.h	538;"	d
GCClipXOrigin	xlib/X11/X.h	536;"	d
GCClipYOrigin	xlib/X11/X.h	537;"	d
GCDashList	xlib/X11/X.h	540;"	d
GCDashOffset	xlib/X11/X.h	539;"	d
GCFillRule	xlib/X11/X.h	528;"	d
GCFillStyle	xlib/X11/X.h	527;"	d
GCFont	xlib/X11/X.h	533;"	d
GCForeground	xlib/X11/X.h	521;"	d
GCFunction	xlib/X11/X.h	519;"	d
GCGraphicsExposures	xlib/X11/X.h	535;"	d
GCInit	generic/tkGC.c	/^GCInit($/;"	f	file:
GCJoinStyle	xlib/X11/X.h	526;"	d
GCLP_HICON	win/tkWinInt.h	229;"	d
GCLP_HICONSM	win/tkWinInt.h	232;"	d
GCLastBit	xlib/X11/X.h	543;"	d
GCLineStyle	xlib/X11/X.h	524;"	d
GCLineWidth	xlib/X11/X.h	523;"	d
GCPlaneMask	xlib/X11/X.h	520;"	d
GCStipple	xlib/X11/X.h	530;"	d
GCSubwindowMode	xlib/X11/X.h	534;"	d
GCTile	xlib/X11/X.h	529;"	d
GCTileStipXOrigin	xlib/X11/X.h	531;"	d
GCTileStipYOrigin	xlib/X11/X.h	532;"	d
GContext	xlib/X11/X.h	/^typedef XID GContext;$/;"	t
GENERATED_FOCUS_EVENT_MAGIC	generic/tkInt.h	986;"	d
GENERATED_GRAB_EVENT_MAGIC	generic/tkGrab.c	135;"	d	file:
GENERIC_DIR	unix/Makefile	/^GENERIC_DIR		= $(TOP_DIR)\/generic$/;"	m
GENERIC_OBJS	unix/Makefile	/^GENERIC_OBJS = tk3d.o tkArgv.o tkAtom.o tkBind.o tkBitmap.o tkBusy.o \\$/;"	m
GENERIC_SRCS	unix/Makefile	/^GENERIC_SRCS = \\$/;"	m
GEOMETRY	generic/tkPanedWindow.c	260;"	d	file:
GEOMETRY_CHANGED	generic/ttk/ttkWidget.h	22;"	d
GETMETRIC	win/ttkWinTheme.c	109;"	d	file:
GET_COMPLEXPIXEL	generic/tkObj.c	39;"	d	file:
GET_INDEXEPOCH	generic/tkTextIndex.c	62;"	d	file:
GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS	generic/tkStubInit.c	84;"	d	file:
GET_SIMPLEPIXEL	generic/tkObj.c	32;"	d	file:
GET_TEXTINDEX	generic/tkTextIndex.c	60;"	d	file:
GIF87a	generic/tkImgGIF.c	/^static const char GIF87a[] = {			\/* ASCII GIF87a *\/$/;"	v	file:
GIF89a	generic/tkImgGIF.c	/^static const char GIF89a[] = {			\/* ASCII GIF89a *\/$/;"	v	file:
GIFBITS	generic/tkImgGIF.c	206;"	d	file:
GIFImageConfig	generic/tkImgGIF.c	/^} GIFImageConfig;$/;"	t	typeref:struct:__anon127	file:
GIFState_t	generic/tkImgGIF.c	/^} GIFState_t;$/;"	t	typeref:struct:__anon130	file:
GIF_BAD	generic/tkImgGIF.c	46;"	d	file:
GIF_DONE	generic/tkImgGIF.c	47;"	d	file:
GIF_EXTENSION	generic/tkImgGIF.c	78;"	d	file:
GIF_PAD	generic/tkImgGIF.c	44;"	d	file:
GIF_SPACE	generic/tkImgGIF.c	45;"	d	file:
GIF_SPECIAL	generic/tkImgGIF.c	43;"	d	file:
GIF_START	generic/tkImgGIF.c	79;"	d	file:
GIF_TERMINATOR	generic/tkImgGIF.c	77;"	d	file:
GOT_FOCUS	generic/tkButton.h	286;"	d
GOT_FOCUS	generic/tkCanvas.h	270;"	d
GOT_FOCUS	generic/tkEntry.h	262;"	d
GOT_FOCUS	generic/tkFrame.c	150;"	d	file:
GOT_FOCUS	generic/tkListbox.c	209;"	d	file:
GOT_FOCUS	generic/tkMenubutton.h	195;"	d
GOT_FOCUS	generic/tkMessage.c	103;"	d	file:
GOT_FOCUS	generic/tkScale.h	197;"	d
GOT_FOCUS	generic/tkScrollbar.h	157;"	d
GOT_FOCUS	generic/tkText.h	814;"	d
GOT_SELECTION	generic/tkEntry.h	264;"	d
GOT_SELECTION	generic/tkText.h	812;"	d
GOT_SELECTION	generic/ttk/ttkEntry.c	22;"	d	file:
GRAB_GLOBAL	generic/tkGrab.c	109;"	d	file:
GRAB_TEMP_GLOBAL	generic/tkGrab.c	110;"	d	file:
GRAVITY	generic/tkBind.c	476;"	d	file:
GREEN	xlib/xcolors.c	333;"	d	file:
GRID_DEFAULT_ANCHOR	generic/tkGrid.c	66;"	d	file:
GWLP_HINSTANCE	win/tkWinInt.h	250;"	d
GWLP_HWNDPARENT	win/tkWinInt.h	251;"	d
GWLP_ID	win/tkWinInt.h	253;"	d
GWLP_USERDATA	win/tkWinInt.h	252;"	d
GWLP_WNDPROC	win/tkWinInt.h	249;"	d
GXand	xlib/X11/X.h	441;"	d
GXandInverted	xlib/X11/X.h	444;"	d
GXandReverse	xlib/X11/X.h	442;"	d
GXclear	xlib/X11/X.h	440;"	d
GXcopy	xlib/X11/X.h	443;"	d
GXcopyInverted	xlib/X11/X.h	452;"	d
GXequiv	xlib/X11/X.h	449;"	d
GXinvert	xlib/X11/X.h	450;"	d
GXnand	xlib/X11/X.h	454;"	d
GXnoop	xlib/X11/X.h	445;"	d
GXnor	xlib/X11/X.h	448;"	d
GXor	xlib/X11/X.h	447;"	d
GXorInverted	xlib/X11/X.h	453;"	d
GXorReverse	xlib/X11/X.h	451;"	d
GXset	xlib/X11/X.h	455;"	d
GXxor	xlib/X11/X.h	446;"	d
GeneralSeparatorElementDraw	generic/ttk/ttkElements.c	/^static void GeneralSeparatorElementDraw($/;"	f	file:
GenerateActivateEvent	win/tkWinWm.c	/^GenerateActivateEvent(TkWindow * winPtr, const int *flagPtr)$/;"	f	file:
GenerateActivateEvents	macosx/tkMacOSXWindowEvent.c	/^GenerateActivateEvents($/;"	f
GenerateButtonEvent	macosx/tkMacOSXMouseEvent.c	/^GenerateButtonEvent($/;"	f	file:
GenerateConfigureNotify	macosx/tkMacOSXSubwindows.c	/^GenerateConfigureNotify($/;"	f	file:
GenerateConfigureNotify	win/tkWinWm.c	/^GenerateConfigureNotify($/;"	f	file:
GenerateEditEvent	macosx/tkMacOSXMenus.c	/^GenerateEditEvent($/;"	f	file:
GenerateEnterLeave	generic/tkPointer.c	/^GenerateEnterLeave($/;"	f	file:
GenerateFocusEvents	generic/tkFocus.c	/^GenerateFocusEvents($/;"	f	file:
GenerateListboxSelectEvent	generic/tkListbox.c	/^GenerateListboxSelectEvent($/;"	f	file:
GenerateMenuSelectEvent	macosx/tkMacOSXMenu.c	/^GenerateMenuSelectEvent($/;"	f
GenerateModifiedEvent	generic/tkText.c	/^GenerateModifiedEvent($/;"	f	file:
GenerateUpdates	macosx/tkMacOSXWindowEvent.c	/^GenerateUpdates($/;"	f	file:
GenerateWidgetViewSyncEvent	generic/tkTextDisp.c	/^GenerateWidgetViewSyncEvent($/;"	f	file:
GenerateXEvent	win/tkWinX.c	/^GenerateXEvent($/;"	f	file:
GenericElementDraw	win/ttkWinXPTheme.c	/^static void GenericElementDraw($/;"	f	file:
GenericElementSize	win/ttkWinXPTheme.c	/^static void GenericElementSize($/;"	f	file:
GenericElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec GenericElementSpec =$/;"	v	file:
GenericHandler	generic/tkEvent.c	/^typedef struct GenericHandler {$/;"	s	file:
GenericHandler	generic/tkEvent.c	/^} GenericHandler;$/;"	t	typeref:struct:GenericHandler	file:
GenericSizedElementSize	win/ttkWinXPTheme.c	/^GenericSizedElementSize($/;"	f	file:
GenericSizedElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec GenericSizedElementSpec = {$/;"	v	file:
GetAllVirtualEvents	generic/tkBind.c	/^GetAllVirtualEvents($/;"	f	file:
GetAttributeInfoObj	generic/tkFont.c	/^GetAttributeInfoObj($/;"	f	file:
GetAttributes	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetAttributes )(IShellItemArray *,$/;"	m	struct:IShellItemArrayVtbl	file:
GetAttributes	win/tkWinDialog.c	/^    HRESULT (STDMETHODCALLTYPE *GetAttributes)(IShellItem *, SFGAOF, SFGAOF *);$/;"	m	struct:IShellItemVtbl	file:
GetBValue	generic/tkCanvPs.c	1185;"	d	file:
GetBValue	generic/tkImgPhInstance.c	413;"	d	file:
GetBitmap	generic/tkBitmap.c	/^GetBitmap($/;"	f	file:
GetBitmapForIcon	macosx/tkMacOSXBitmap.c	/^GetBitmapForIcon($/;"	f	file:
GetBitmapFromObj	generic/tkBitmap.c	/^GetBitmapFromObj($/;"	f	file:
GetBusy	generic/tkBusy.c	/^GetBusy($/;"	f	file:
GetButtonMask	generic/tkEvent.c	/^GetButtonMask($/;"	f	file:
GetByte	generic/tkImgBmap.c	/^GetByte($/;"	f	file:
GetCGContextForDrawable	macosx/tkMacOSXDraw.c	/^GetCGContextForDrawable($/;"	f
GetCachedSpecs	generic/tkOldConfig.c	/^GetCachedSpecs($/;"	f	file:
GetClassLongPtr	win/tkWinInt.h	221;"	d
GetClassLongPtr	win/tkWinInt.h	224;"	d
GetClassLongPtrA	win/tkWinInt.h	216;"	d
GetClassLongPtrW	win/tkWinInt.h	217;"	d
GetCode	generic/tkImgGIF.c	/^GetCode($/;"	f	file:
GetColorTable	generic/tkImgPhInstance.c	/^GetColorTable($/;"	f	file:
GetColumn	generic/ttk/ttkTreeview.c	/^static TreeColumn *GetColumn($/;"	f	file:
GetConfigList	generic/tkConfig.c	/^GetConfigList($/;"	f	file:
GetCount	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetCount )($/;"	m	struct:IShellItemArrayVtbl	file:
GetCurrentSelection	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetCurrentSelection )($/;"	m	struct:IFileDialogVtbl	file:
GetCurrentSelection	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetCurrentSelection )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetCurrentSelection	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetCurrentSelection )($/;"	m	struct:IFileSaveDialogVtbl	file:
GetCursorFromObj	generic/tkCursor.c	/^GetCursorFromObj($/;"	f	file:
GetCursorManager	generic/ttk/ttkBlink.c	/^static CursorManager *GetCursorManager(Tcl_Interp *interp)$/;"	f	file:
GetDataBlock	generic/tkImgGIF.c	/^GetDataBlock($/;"	f	file:
GetDefaultOptions	generic/tkOption.c	/^GetDefaultOptions($/;"	f	file:
GetDisplayName	win/tkWinDialog.c	/^    HRESULT (STDMETHODCALLTYPE *GetDisplayName)(IShellItem *, SIGDN, LPOLESTR *);$/;"	m	struct:IShellItemVtbl	file:
GetEncodingAlias	unix/tkUnixFont.c	/^GetEncodingAlias($/;"	f	file:
GetEntryIndex	generic/tkEntry.c	/^GetEntryIndex($/;"	f	file:
GetEntryText	win/tkWinMenu.c	/^GetEntryText($/;"	f	file:
GetEnumSetFromObj	generic/ttk/ttkTreeview.c	/^static int GetEnumSetFromObj($/;"	f	file:
GetEventMaskFromXEvent	generic/tkEvent.c	/^GetEventMaskFromXEvent($/;"	f	file:
GetExtension	generic/tkImgPhoto.c	/^GetExtension($/;"	f	file:
GetField	generic/tkBind.c	/^GetField($/;"	f	file:
GetFileName	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFileName )($/;"	m	struct:IFileDialogVtbl	file:
GetFileName	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFileName )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetFileName	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFileName )($/;"	m	struct:IFileSaveDialogVtbl	file:
GetFileName	win/tkWinDialog.c	/^GetFileName($/;"	f	file:
GetFileNameVista	win/tkWinDialog.c	/^static int GetFileNameVista(Tcl_Interp *interp, OFNOpts *optsPtr,$/;"	f	file:
GetFileNameXP	win/tkWinDialog.c	/^static int GetFileNameXP(Tcl_Interp *interp, OFNOpts *optsPtr, enum OFNOper oper)$/;"	f	file:
GetFileTypeIndex	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFileTypeIndex )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetFileTypeIndex	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFileTypeIndex )($/;"	m	struct:IFileSaveDialogVtbl	file:
GetFileTypeIndex	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFileTypeIndex )(IFileDialog *, UINT *);$/;"	m	struct:IFileDialogVtbl	file:
GetFilter	generic/tkFileFilter.c	/^GetFilter($/;"	f	file:
GetFirstLastVisiblePane	generic/tkPanedWindow.c	/^GetFirstLastVisiblePane($/;"	f	file:
GetFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFolder )($/;"	m	struct:IFileDialogVtbl	file:
GetFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFolder )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetFolder )($/;"	m	struct:IFileSaveDialogVtbl	file:
GetFont	unix/tkUnixRFont.c	/^GetFont($/;"	f	file:
GetFontAttributes	generic/tkFont.c	316;"	d	file:
GetFontAttributes	unix/tkUnixFont.c	/^GetFontAttributes($/;"	f	file:
GetFontMetrics	generic/tkFont.c	319;"	d	file:
GetFontObj	win/tkWinDialog.c	/^GetFontObj($/;"	f	file:
GetGValue	generic/tkCanvPs.c	1184;"	d	file:
GetGValue	generic/tkImgPhInstance.c	412;"	d	file:
GetGrid	generic/tkGrid.c	/^GetGrid($/;"	f	file:
GetIcon	win/tkWinWm.c	/^GetIcon($/;"	f	file:
GetIconFromPixmap	win/tkWinWm.c	/^GetIconFromPixmap($/;"	f	file:
GetImageOfText	unix/tkUnixFont.c	/^GetImageOfText($/;"	f	file:
GetIndex	generic/tkTextIndex.c	/^GetIndex($/;"	f	file:
GetIndexFromCoords	generic/tkMenu.c	/^GetIndexFromCoords($/;"	f	file:
GetItemAt	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetItemAt )($/;"	m	struct:IShellItemArrayVtbl	file:
GetItemListFromObj	generic/ttk/ttkTreeview.c	/^static TreeItem **GetItemListFromObj($/;"	f	file:
GetLibraryPath	unix/tkUnixInit.c	/^GetLibraryPath($/;"	f	file:
GetLibraryPath	unix/tkUnixInit.c	17;"	d	file:
GetLineIndex	generic/tkCanvLine.c	/^GetLineIndex($/;"	f	file:
GetLineStartEnd	generic/tkText.c	/^GetLineStartEnd($/;"	f	file:
GetListboxIndex	generic/tkListbox.c	/^GetListboxIndex($/;"	f	file:
GetMarkName	generic/tkTextMark.c	/^GetMarkName($/;"	f	file:
GetMaxOffset	generic/tkListbox.c	/^static int GetMaxOffset($/;"	f	file:
GetMaxSize	macosx/tkMacOSXWm.c	/^GetMaxSize($/;"	f	file:
GetMaxSize	unix/tkUnixWm.c	/^GetMaxSize($/;"	f	file:
GetMaxSize	win/tkWinWm.c	/^GetMaxSize($/;"	f	file:
GetMenuAccelGeometry	unix/tkUnixMenu.c	/^GetMenuAccelGeometry($/;"	f	file:
GetMenuAccelGeometry	win/tkWinMenu.c	/^GetMenuAccelGeometry($/;"	f
GetMenuIndicatorGeometry	unix/tkUnixMenu.c	/^GetMenuIndicatorGeometry($/;"	f	file:
GetMenuIndicatorGeometry	win/tkWinMenu.c	/^GetMenuIndicatorGeometry($/;"	f
GetMenuLabelGeometry	unix/tkUnixMenu.c	/^GetMenuLabelGeometry($/;"	f	file:
GetMenuLabelGeometry	win/tkWinMenu.c	/^GetMenuLabelGeometry($/;"	f	file:
GetMenuSeparatorGeometry	unix/tkUnixMenu.c	/^GetMenuSeparatorGeometry($/;"	f	file:
GetMenuSeparatorGeometry	win/tkWinMenu.c	/^GetMenuSeparatorGeometry($/;"	f
GetMinSize	macosx/tkMacOSXWm.c	/^GetMinSize($/;"	f	file:
GetMinSize	win/tkWinWm.c	/^GetMinSize($/;"	f	file:
GetNSFontTraitsFromTkFontAttributes	macosx/tkMacOSXFont.c	115;"	d	file:
GetNetWmType	unix/tkUnixWm.c	/^GetNetWmType($/;"	f	file:
GetNewID	win/tkWinMenu.c	/^GetNewID($/;"	f	file:
GetObjectForOption	generic/tkConfig.c	/^GetObjectForOption($/;"	f	file:
GetOption	generic/tkConfig.c	/^GetOption($/;"	f	file:
GetOptionFromObj	generic/tkConfig.c	/^GetOptionFromObj($/;"	f	file:
GetOptionMap	generic/ttk/ttkTheme.c	/^GetOptionMap(Ttk_ElementClass *elementClass, Tk_OptionTable optionTable)$/;"	f	file:
GetOptions	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetOptions )($/;"	m	struct:IFileDialogVtbl	file:
GetOptions	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetOptions )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetOptions	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetOptions )($/;"	m	struct:IFileSaveDialogVtbl	file:
GetPacker	generic/tkPack.c	/^GetPacker($/;"	f	file:
GetPane	generic/tkPanedWindow.c	/^GetPane($/;"	f	file:
GetParent	win/tkWinDialog.c	/^    HRESULT (STDMETHODCALLTYPE *GetParent)(IShellItem *, IShellItem **);$/;"	m	struct:IShellItemVtbl	file:
GetPatternObj	generic/tkBind.c	/^GetPatternObj($/;"	f	file:
GetPixelsFromObjEx	generic/tkObj.c	/^GetPixelsFromObjEx($/;"	f	file:
GetPolygonIndex	generic/tkCanvPoly.c	/^GetPolygonIndex($/;"	f	file:
GetPostscriptBuffer	generic/tkCanvPs.c	/^GetPostscriptBuffer($/;"	f	file:
GetPostscriptBuffer	generic/tkCanvUtil.c	/^GetPostscriptBuffer($/;"	f	file:
GetPostscriptPoints	generic/tkCanvPs.c	/^GetPostscriptPoints($/;"	f	file:
GetProperties	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetProperties )($/;"	m	struct:IFileSaveDialogVtbl	file:
GetPropertyDescriptionList	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetPropertyDescriptionList )($/;"	m	struct:IShellItemArrayVtbl	file:
GetPropertyStore	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetPropertyStore )($/;"	m	struct:IShellItemArrayVtbl	file:
GetRValue	generic/tkCanvPs.c	1183;"	d	file:
GetRValue	generic/tkImgPhInstance.c	411;"	d	file:
GetResult	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetResult )($/;"	m	struct:IFileDialogVtbl	file:
GetResult	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetResult )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetResult	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetResult )($/;"	m	struct:IFileSaveDialogVtbl	file:
GetResults	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetResults )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetRunLoopMode	macosx/tkMacOSXNotify.c	/^GetRunLoopMode(NSModalSession modalSession)$/;"	f	file:
GetScreen	generic/tkWindow.c	/^GetScreen($/;"	f	file:
GetScreenFont	unix/tkUnixFont.c	/^GetScreenFont($/;"	f	file:
GetScreenFont	win/tkWinFont.c	/^GetScreenFont($/;"	f	file:
GetSelText	generic/tkCanvText.c	/^GetSelText($/;"	f	file:
GetSelectedItems	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *GetSelectedItems )($/;"	m	struct:IFileOpenDialogVtbl	file:
GetSpinboxElement	generic/tkEntry.c	/^GetSpinboxElement($/;"	f	file:
GetState	win/tkWinX.c	/^GetState($/;"	f	file:
GetStaticUids	generic/tkCanvas.c	/^GetStaticUids(void)$/;"	f	file:
GetStep	library/demos/goldberg.tcl	/^proc GetStep {who step} {$/;"	p
GetSticky	generic/tkPanedWindow.c	/^GetSticky($/;"	f	file:
GetStyle	generic/tkTextDisp.c	/^GetStyle($/;"	f	file:
GetStylePackageData	generic/ttk/ttkTheme.c	/^static StylePackageData *GetStylePackageData(Tcl_Interp *interp)$/;"	f	file:
GetStyledElement	generic/tkStyle.c	/^GetStyledElement($/;"	f	file:
GetSublayout	generic/ttk/ttkTreeview.c	/^static Ttk_Layout GetSublayout($/;"	f	file:
GetSysFlagFromObj	win/ttkWinXPTheme.c	/^GetSysFlagFromObj(Tcl_Interp *interp, Tcl_Obj *objPtr, int *resultPtr)$/;"	f	file:
GetSystemFont	unix/tkUnixFont.c	/^GetSystemFont($/;"	f	file:
GetTabIndex	generic/ttk/ttkNotebook.c	/^static int GetTabIndex($/;"	f	file:
GetTearoffEntryGeometry	unix/tkUnixMenu.c	/^GetTearoffEntryGeometry($/;"	f	file:
GetTearoffEntryGeometry	win/tkWinMenu.c	/^GetTearoffEntryGeometry($/;"	f
GetTextIndex	generic/tkCanvText.c	/^GetTextIndex($/;"	f	file:
GetThemeColor	macosx/tkMacOSXColor.c	/^GetThemeColor($/;"	f	file:
GetThemeFromPixelCode	macosx/tkMacOSXColor.c	/^GetThemeFromPixelCode($/;"	f	file:
GetThemePartSize	win/ttkWinXPTheme.c	/^    GetThemePartSizeProc		*GetThemePartSize;$/;"	m	struct:__anon238	file:
GetThemePartSizeProc	win/ttkWinXPTheme.c	/^typedef HRESULT	(STDAPICALLTYPE GetThemePartSizeProc)(HTHEME,HDC,$/;"	t	file:
GetThemeSysSize	win/ttkWinXPTheme.c	/^    GetThemeSysSizeProc			*GetThemeSysSize;$/;"	m	struct:__anon238	file:
GetThemeSysSizeProc	win/ttkWinXPTheme.c	/^typedef int     (STDAPICALLTYPE GetThemeSysSizeProc)(HTHEME,int);$/;"	t	file:
GetThemeTextExtent	win/ttkWinXPTheme.c	/^    GetThemeTextExtentProc		*GetThemeTextExtent;$/;"	m	struct:__anon238	file:
GetThemeTextExtentProc	win/ttkWinXPTheme.c	/^typedef HRESULT (STDAPICALLTYPE GetThemeTextExtentProc)(HTHEME hTheme, HDC hdc,$/;"	t	file:
GetTkFontAttributes	unix/tkUnixRFont.c	/^GetTkFontAttributes($/;"	f	file:
GetTkFontAttributesForNSFont	macosx/tkMacOSXFont.c	/^GetTkFontAttributesForNSFont($/;"	f	file:
GetTkFontMetrics	unix/tkUnixRFont.c	/^GetTkFontMetrics($/;"	f	file:
GetTkWindowFromXEvent	generic/tkEvent.c	/^GetTkWindowFromXEvent($/;"	f	file:
GetTopHierarchy	generic/tkCmds.c	/^GetTopHierarchy($/;"	f	file:
GetTopLevel	win/tkWinWm.c	/^GetTopLevel($/;"	f	file:
GetTranslatedKey	win/tkWinX.c	/^GetTranslatedKey($/;"	f	file:
GetTypeCache	generic/tkObj.c	/^GetTypeCache(void)$/;"	f	file:
GetVersionFromFile	win/nmakehlp.c	/^GetVersionFromFile($/;"	f	file:
GetVirtualEvent	generic/tkBind.c	/^GetVirtualEvent($/;"	f	file:
GetVirtualEventUid	generic/tkBind.c	/^GetVirtualEventUid($/;"	f	file:
GetWidgetDemoPath	macosx/tkMacOSXMenus.c	/^GetWidgetDemoPath($/;"	f	file:
GetWidgetSpec	generic/tkStyle.c	/^GetWidgetSpec($/;"	f	file:
GetWindowLongPtr	win/tkWinInt.h	241;"	d
GetWindowLongPtr	win/tkWinInt.h	244;"	d
GetWindowLongPtrA	win/tkWinInt.h	236;"	d
GetWindowLongPtrW	win/tkWinInt.h	237;"	d
GetWindowProperty	unix/tkUnixWm.c	285;"	d	file:
GetXView	generic/tkTextDisp.c	/^GetXView($/;"	f	file:
GetYPixelCount	generic/tkTextDisp.c	/^GetYPixelCount($/;"	f	file:
GetYView	generic/tkTextDisp.c	/^GetYView($/;"	f	file:
GifWriterState	generic/tkImgGIF.c	/^} GifWriterState;$/;"	t	typeref:struct:__anon129	file:
GlobPattern	generic/tkFileFilter.h	/^typedef struct GlobPattern {$/;"	s
GlobPattern	generic/tkFileFilter.h	/^} GlobPattern;$/;"	t	typeref:struct:GlobPattern
Go	library/demos/goldberg.tcl	/^proc Go {w {who {}}} {$/;"	p
GrabFrozen	xlib/X11/X.h	282;"	d
GrabInfo	generic/tkGrab.c	/^} GrabInfo;$/;"	t	typeref:struct:__anon143	file:
GrabInvalidTime	xlib/X11/X.h	280;"	d
GrabModeAsync	xlib/X11/X.h	274;"	d
GrabModeSync	xlib/X11/X.h	273;"	d
GrabNotViewable	xlib/X11/X.h	281;"	d
GrabRestrictProc	generic/tkGrab.c	/^GrabRestrictProc($/;"	f	file:
GrabRestrictProc	generic/tkGrab.c	/^static Tk_RestrictProc GrabRestrictProc;$/;"	v	file:
GrabSuccess	xlib/X11/X.h	278;"	d
GrabWinEventProc	generic/tkGrab.c	/^GrabWinEventProc($/;"	f	file:
GraphicsExpose	xlib/X11/X.h	152;"	d
GravityNotify	xlib/X11/X.h	163;"	d
GrayScale	xlib/X11/X.h	660;"	d
GridAlign	generic/tkCanvas.c	/^GridAlign($/;"	f	file:
GridAnchorCommand	generic/tkGrid.c	/^GridAnchorCommand($/;"	f	file:
GridBboxCommand	generic/tkGrid.c	/^GridBboxCommand($/;"	f	file:
GridForgetRemoveCommand	generic/tkGrid.c	/^GridForgetRemoveCommand($/;"	f	file:
GridInfoCommand	generic/tkGrid.c	/^GridInfoCommand($/;"	f	file:
GridLayout	generic/tkGrid.c	/^typedef struct GridLayout {$/;"	s	file:
GridLayout	generic/tkGrid.c	/^} GridLayout;$/;"	t	typeref:struct:GridLayout	file:
GridLocationCommand	generic/tkGrid.c	/^GridLocationCommand($/;"	f	file:
GridLostSlaveProc	generic/tkGrid.c	/^GridLostSlaveProc($/;"	f	file:
GridMaster	generic/tkGrid.c	/^} GridMaster;$/;"	t	typeref:struct:__anon135	file:
GridPropagateCommand	generic/tkGrid.c	/^GridPropagateCommand($/;"	f	file:
GridReqProc	generic/tkGrid.c	/^GridReqProc($/;"	f	file:
GridRowColumnConfigureCommand	generic/tkGrid.c	/^GridRowColumnConfigureCommand($/;"	f	file:
GridSizeCommand	generic/tkGrid.c	/^GridSizeCommand($/;"	f	file:
GridSlavesCommand	generic/tkGrid.c	/^GridSlavesCommand($/;"	f	file:
GridStructureProc	generic/tkGrid.c	/^GridStructureProc($/;"	f	file:
Gridder	generic/tkGrid.c	/^typedef struct Gridder {$/;"	s	file:
Gridder	generic/tkGrid.c	/^} Gridder;$/;"	t	typeref:struct:Gridder	file:
GripClientData	generic/ttk/ttkClamTheme.c	/^static Ttk_Orient GripClientData[] = {$/;"	v	file:
GripElement	generic/ttk/ttkClamTheme.c	/^} GripElement;$/;"	t	typeref:struct:__anon57	file:
GripElementDraw	generic/ttk/ttkClamTheme.c	/^static void GripElementDraw($/;"	f	file:
GripElementOptions	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementOptionSpec GripElementOptions[] = {$/;"	v	file:
GripElementSize	generic/ttk/ttkClamTheme.c	/^static void GripElementSize($/;"	f	file:
GripElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec GripElementSpec = {$/;"	v	file:
GroupElementDraw	macosx/ttkMacOSXTheme.c	/^static void GroupElementDraw($/;"	f	file:
GroupElementSize	macosx/ttkMacOSXTheme.c	/^static void GroupElementSize($/;"	f	file:
GroupElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec GroupElementSpec = {$/;"	v	file:
H2O	library/demos/goldberg.tcl	/^proc H2O {w y f} {$/;"	p
HALFMETRIC	win/ttkWinTheme.c	108;"	d	file:
HALF_HEIGHT	win/ttkWinXPTheme.c	387;"	d	file:
HALF_WIDTH	win/ttkWinXPTheme.c	388;"	d	file:
HALO	generic/ttk/ttkTreeview.c	/^static const int HALO   		= 4;	\/* separator *\/$/;"	v	file:
HANDLER_SIZE	macosx/tkMacOSXWm.h	39;"	d
HANDLER_SIZE	unix/tkUnixWm.c	38;"	d	file:
HANDLER_SIZE	win/tkWinWm.c	68;"	d	file:
HAS_3D_BORDER	generic/tkTextDisp.c	282;"	d	file:
HDC	unix/tkUnixPort.h	116;"	d
HD_CLEANUP	generic/tkWindow.c	28;"	d	file:
HD_DESTROY_COUNT	generic/tkWindow.c	31;"	d	file:
HD_DESTROY_EVENT	generic/tkWindow.c	32;"	d	file:
HD_FOCUS	generic/tkWindow.c	29;"	d	file:
HD_MAIN_WIN	generic/tkWindow.c	30;"	d	file:
HEAP_ELEMENT	win/ttkWinXPTheme.c	386;"	d	file:
HIBYTETABLE	win/tkWinFont.c	/^typedef struct HIBYTETABLE {$/;"	s	file:
HIBYTETABLE	win/tkWinFont.c	/^} HIBYTETABLE;$/;"	t	typeref:struct:HIBYTETABLE	file:
HIGHLIGHT	win/tkWinDefault.h	40;"	d
HIGHLIGHT_ALTERNATE_PIXEL	macosx/tkMacOSXPort.h	166;"	d
HIGHLIGHT_PIXEL	macosx/tkMacOSXPort.h	163;"	d
HIGHLIGHT_SECONDARY_PIXEL	macosx/tkMacOSXPort.h	164;"	d
HIGHLIGHT_TEXT_PIXEL	macosx/tkMacOSXPort.h	165;"	d
HINSTANCE	unix/tkUnixPort.h	117;"	d
HIOrientation	macosx/tkMacOSXEntry.c	19;"	d	file:
HIOrientation	macosx/ttkMacOSXTheme.c	45;"	d	file:
HIShapeRef	macosx/tkMacOSXInt.h	150;"	d
HIShapeRef	macosx/tkMacOSXInt.h	53;"	d
HMENU	unix/tkUnixPort.h	119;"	d
HPALETTE	unix/tkUnixPort.h	121;"	d
HSIZE	generic/tkImgGIF.c	207;"	d	file:
HTML_DIR	unix/Makefile	/^HTML_DIR		= $(DISTDIR)\/html$/;"	m
HTML_INSTALL_DIR	unix/Makefile	/^HTML_INSTALL_DIR	= $(INSTALL_ROOT)$(HTML_DIR)$/;"	m
HWND	unix/tkUnixPort.h	115;"	d
HandleEventGenerate	generic/tkBind.c	/^HandleEventGenerate($/;"	f	file:
HandleIMEComposition	win/tkWinX.c	/^HandleIMEComposition($/;"	f	file:
HandleTclCommand	generic/tkSelect.c	/^HandleTclCommand($/;"	f	file:
HashEntryIterator	generic/ttk/ttkTreeview.c	/^typedef void (*HashEntryIterator)(void *hashValue);$/;"	t	file:
HashTableToDict	generic/ttk/ttkTheme.c	/^static Tcl_Obj* HashTableToDict(Tcl_HashTable *ht)$/;"	f	file:
HaveXSSLibrary	unix/tkUnix.c	19;"	d	file:
HaveXSSLibrary	unix/tkUnix.c	22;"	d	file:
HeadingOptionSpecs	generic/ttk/ttkTreeview.c	/^static Tk_OptionSpec HeadingOptionSpecs[] = {$/;"	v	file:
Height	win/tkWinWm.c	/^    UINT Width, Height, Colors;	\/* Width, Height and bpp *\/$/;"	m	struct:__anon233	file:
HeightMMOfScreen	xlib/X11/Xlib.h	116;"	d
HeightOfScreen	xlib/X11/Xlib.h	114;"	d
HeightValue	xlib/X11/Xutil.h	44;"	d
HighlightElement	generic/ttk/ttkClassicTheme.c	/^} HighlightElement;$/;"	t	typeref:struct:__anon103	file:
HighlightElementDraw	generic/ttk/ttkClassicTheme.c	/^static void HighlightElementDraw($/;"	f	file:
HighlightElementOptions	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementOptionSpec HighlightElementOptions[] = {$/;"	v	file:
HighlightElementSize	generic/ttk/ttkClassicTheme.c	/^static void HighlightElementSize($/;"	f	file:
HighlightElementSpec	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementSpec HighlightElementSpec =$/;"	v	file:
HoldBusy	generic/tkBusy.c	/^HoldBusy($/;"	f	file:
HookData	win/tkWinDialog.c	/^typedef struct HookData {$/;"	s	file:
HookData	win/tkWinDialog.c	/^} HookData;$/;"	t	typeref:struct:HookData	file:
HookProc	win/tkWinDialog.c	/^HookProc($/;"	f	file:
HorizLineToArc	generic/tkCanvArc.c	/^HorizLineToArc($/;"	f	file:
HorizontalSeparatorElementDraw	generic/ttk/ttkElements.c	/^static void HorizontalSeparatorElementDraw($/;"	f	file:
HorizontalSeparatorElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec HorizontalSeparatorElementSpec = {$/;"	v	file:
HostDelete	xlib/X11/X.h	648;"	d
HostInsert	xlib/X11/X.h	647;"	d
ICONDIR	win/tkWinWm.c	/^} ICONDIR, *LPICONDIR;$/;"	t	typeref:struct:__anon236	file:
ICONDIRENTRY	win/tkWinWm.c	/^} ICONDIRENTRY, *LPICONDIRENTRY;$/;"	t	typeref:struct:__anon235	file:
ICONIMAGE	win/tkWinWm.c	/^} ICONIMAGE, *LPICONIMAGE;$/;"	t	typeref:struct:__anon233	file:
ICON_ERROR	macosx/tkMacOSXDialog.c	/^    ICON_ERROR, ICON_INFO, ICON_QUESTION, ICON_WARNING$/;"	e	enum:alertIconOptions	file:
ICON_FILE	macosx/tkMacOSXBitmap.c	/^    ICON_FILE, ICON_FILETYPE, ICON_OSTYPE, ICON_SYSTEMTYPE, ICON_NAMEDIMAGE,$/;"	e	enum:iconBitmapOptions	file:
ICON_FILETYPE	macosx/tkMacOSXBitmap.c	/^    ICON_FILE, ICON_FILETYPE, ICON_OSTYPE, ICON_SYSTEMTYPE, ICON_NAMEDIMAGE,$/;"	e	enum:iconBitmapOptions	file:
ICON_IMAGEFILE	macosx/tkMacOSXBitmap.c	/^    ICON_IMAGEFILE,$/;"	e	enum:iconBitmapOptions	file:
ICON_INFO	macosx/tkMacOSXDialog.c	/^    ICON_ERROR, ICON_INFO, ICON_QUESTION, ICON_WARNING$/;"	e	enum:alertIconOptions	file:
ICON_NAMEDIMAGE	macosx/tkMacOSXBitmap.c	/^    ICON_FILE, ICON_FILETYPE, ICON_OSTYPE, ICON_SYSTEMTYPE, ICON_NAMEDIMAGE,$/;"	e	enum:iconBitmapOptions	file:
ICON_OSTYPE	macosx/tkMacOSXBitmap.c	/^    ICON_FILE, ICON_FILETYPE, ICON_OSTYPE, ICON_SYSTEMTYPE, ICON_NAMEDIMAGE,$/;"	e	enum:iconBitmapOptions	file:
ICON_QUESTION	macosx/tkMacOSXDialog.c	/^    ICON_ERROR, ICON_INFO, ICON_QUESTION, ICON_WARNING$/;"	e	enum:alertIconOptions	file:
ICON_SYSTEMTYPE	macosx/tkMacOSXBitmap.c	/^    ICON_FILE, ICON_FILETYPE, ICON_OSTYPE, ICON_SYSTEMTYPE, ICON_NAMEDIMAGE,$/;"	e	enum:iconBitmapOptions	file:
ICON_WARNING	macosx/tkMacOSXDialog.c	/^    ICON_ERROR, ICON_INFO, ICON_QUESTION, ICON_WARNING$/;"	e	enum:alertIconOptions	file:
IDC_HAND	win/tkWinCursor.c	31;"	d	file:
IDC_HELP	win/tkWinCursor.c	34;"	d	file:
IFileDialog	win/tkWinDialog.c	/^struct IFileDialog {$/;"	s	file:
IFileDialog	win/tkWinDialog.c	/^typedef struct IFileDialog IFileDialog;$/;"	t	typeref:struct:IFileDialog	file:
IFileDialogVtbl	win/tkWinDialog.c	/^typedef struct IFileDialogVtbl$/;"	s	file:
IFileDialogVtbl	win/tkWinDialog.c	/^} IFileDialogVtbl;$/;"	t	typeref:struct:IFileDialogVtbl	file:
IFileOpenDialog	win/tkWinDialog.c	/^struct IFileOpenDialog$/;"	s	file:
IFileOpenDialog	win/tkWinDialog.c	/^typedef struct IFileOpenDialog IFileOpenDialog;$/;"	t	typeref:struct:IFileOpenDialog	file:
IFileOpenDialogVtbl	win/tkWinDialog.c	/^typedef struct IFileOpenDialogVtbl {$/;"	s	file:
IFileOpenDialogVtbl	win/tkWinDialog.c	/^} IFileOpenDialogVtbl;$/;"	t	typeref:struct:IFileOpenDialogVtbl	file:
IFileOperationProgressSink	win/tkWinDialog.c	/^typedef struct IFileOperationProgressSink IFileOperationProgressSink;$/;"	t	typeref:struct:IFileOperationProgressSink	file:
IFileSaveDialog	win/tkWinDialog.c	/^struct IFileSaveDialog {$/;"	s	file:
IFileSaveDialog	win/tkWinDialog.c	/^typedef struct IFileSaveDialog IFileSaveDialog;$/;"	t	typeref:struct:IFileSaveDialog	file:
IFileSaveDialogVtbl	win/tkWinDialog.c	/^typedef struct IFileSaveDialogVtbl {$/;"	s	file:
IFileSaveDialogVtbl	win/tkWinDialog.c	/^} IFileSaveDialogVtbl;$/;"	t	typeref:struct:IFileSaveDialogVtbl	file:
IGNORE_THEMESIZE	win/ttkWinXPTheme.c	384;"	d	file:
IIDIFileOpenDialog	win/tkWinDialog.c	/^static const IID IIDIFileOpenDialog = {$/;"	v	file:
IIDIFileSaveDialog	win/tkWinDialog.c	/^static const IID IIDIFileSaveDialog = {$/;"	v	file:
IIDIShellItem	win/tkWinDialog.c	/^static const IID IIDIShellItem = {$/;"	v	file:
IMAGEBITMAP	macosx/tkMacOSXCursor.c	26;"	d	file:
IMAGENAMED	macosx/tkMacOSXCursor.c	24;"	d	file:
IMAGEPATH	macosx/tkMacOSXCursor.c	25;"	d	file:
IMAGE_CHANGED	generic/tkImgPhoto.h	182;"	d
IMAGE_OBJS	unix/Makefile	/^IMAGE_OBJS = tkImage.o tkImgBmap.o tkImgGIF.o tkImgPNG.o tkImgPPM.o \\$/;"	m
INACTIVE_SELECT_BG	macosx/tkMacOSXDefault.h	41;"	d
INCLUDE_INSTALL_DIR	unix/Makefile	/^INCLUDE_INSTALL_DIR	= $(INSTALL_ROOT)$(includedir)$/;"	m
INDEX_ACTIVE	generic/tkListbox.c	/^    INDEX_ACTIVE, INDEX_ANCHOR, INDEX_END$/;"	e	enum:indices	file:
INDEX_ANCHOR	generic/tkListbox.c	/^    INDEX_ACTIVE, INDEX_ANCHOR, INDEX_END$/;"	e	enum:indices	file:
INDEX_END	generic/tkListbox.c	/^    INDEX_ACTIVE, INDEX_ANCHOR, INDEX_END$/;"	e	enum:indices	file:
INDICATOR	macosx/tkMacOSXDefault.h	43;"	d
INDICATOR	win/tkWinDefault.h	36;"	d
INDICATOR_HEIGHT	generic/tkMenubutton.h	204;"	d
INDICATOR_WIDTH	generic/tkMenubutton.h	203;"	d
INIT	generic/tkOldConfig.c	26;"	d	file:
INIT	generic/ttk/ttkEntry.c	216;"	d	file:
INIT	generic/ttk/ttkEntry.c	225;"	d	file:
INIT	generic/ttk/ttkEntry.c	253;"	d	file:
INIT	generic/ttk/ttkEntry.c	262;"	d	file:
INITIAL_SIZE	generic/tkOption.c	126;"	d	file:
INLINE_DATA_BASE64	generic/tkImgGIF.c	88;"	d	file:
INLINE_DATA_BINARY	generic/tkImgGIF.c	87;"	d	file:
INSERT_ON	generic/tkText.h	813;"	d
INSTALL	unix/Makefile	/^INSTALL			= $(SHELL) $(UNIX_DIR)\/install-sh -c$/;"	m
INSTALLDIR	win/buildall.vc.bat	/^if "%INSTALLDIR%" == "" set INSTALLDIR=C:\\Program Files\\Tcl$/;"	v
INSTALL_BASE_TARGETS	unix/Makefile	/^INSTALL_BASE_TARGETS = install-binaries install-libraries$/;"	m
INSTALL_DATA	unix/Makefile	/^INSTALL_DATA		= ${INSTALL} -m 644$/;"	m
INSTALL_DATA_DIR	unix/Makefile	/^INSTALL_DATA_DIR	= ${INSTALL} -d -m 755$/;"	m
INSTALL_DEMO_TARGETS	unix/Makefile	/^INSTALL_DEMO_TARGETS = install-demos$/;"	m
INSTALL_DEV_TARGETS	unix/Makefile	/^INSTALL_DEV_TARGETS = install-headers$/;"	m
INSTALL_DOC_TARGETS	unix/Makefile	/^INSTALL_DOC_TARGETS = install-doc$/;"	m
INSTALL_EXTRA_TARGETS	unix/Makefile	/^INSTALL_EXTRA_TARGETS = $/;"	m
INSTALL_LIBRARY	unix/Makefile	/^INSTALL_LIBRARY		= ${INSTALL}$/;"	m
INSTALL_MANPAGES	macosx/GNUmakefile	/^INSTALL_MANPAGES	?=$/;"	m
INSTALL_PATH	macosx/GNUmakefile	/^INSTALL_PATH		?= \/Library\/Frameworks$/;"	m
INSTALL_PROGRAM	unix/Makefile	/^INSTALL_PROGRAM		= ${INSTALL}$/;"	m
INSTALL_ROOT	macosx/GNUmakefile	/^INSTALL_ROOT		?= ${DESTDIR}$/;"	m
INSTALL_ROOT	unix/Makefile	/^INSTALL_ROOT		= $(DESTDIR)$/;"	m
INSTALL_STRIP_LIBRARY	unix/Makefile	/^INSTALL_STRIP_LIBRARY   = -S -x$/;"	m
INSTALL_STRIP_PROGRAM	unix/Makefile	/^INSTALL_STRIP_PROGRAM   = -s$/;"	m
INSTALL_TARGET	macosx/GNUmakefile	/^INSTALL_TARGET		:= install$/;"	m
INSTALL_TARGETS	macosx/GNUmakefile	/^INSTALL_TARGETS		= install-binaries install-libraries$/;"	m
INSTALL_TARGETS	unix/Makefile	/^INSTALL_TARGETS = $(INSTALL_BASE_TARGETS) $(INSTALL_DOC_TARGETS) $(INSTALL_DEV_TARGETS) \\$/;"	m
INT2PTR	generic/tkInt.h	70;"	d
INT2PTR	generic/tkInt.h	73;"	d
INTERLACE	generic/tkImgGIF.c	153;"	d	file:
INVOKE_COMMAND	generic/tkScale.h	194;"	d
IN_MASK	generic/tkPlace.c	81;"	d	file:
IN_MODAL_LOOP	win/tkWinScrlbr.c	46;"	d	file:
IPropertyDescriptionList	win/tkWinDialog.c	/^typedef struct IPropertyDescriptionList IPropertyDescriptionList;$/;"	t	typeref:struct:IPropertyDescriptionList	file:
IPropertyStore	win/tkWinDialog.c	/^typedef struct IPropertyStore IPropertyStore;$/;"	t	typeref:struct:IPropertyStore	file:
ISSAFE	generic/tkWindow.c	98;"	d	file:
IShellItem	win/tkWinDialog.c	/^struct IShellItem {$/;"	s	file:
IShellItem	win/tkWinDialog.c	/^typedef struct IShellItem IShellItem;$/;"	t	typeref:struct:IShellItem	file:
IShellItemArray	win/tkWinDialog.c	/^struct IShellItemArray {$/;"	s	file:
IShellItemArray	win/tkWinDialog.c	/^typedef struct IShellItemArray IShellItemArray;$/;"	t	typeref:struct:IShellItemArray	file:
IShellItemArrayVtbl	win/tkWinDialog.c	/^typedef struct IShellItemArrayVtbl$/;"	s	file:
IShellItemArrayVtbl	win/tkWinDialog.c	/^} IShellItemArrayVtbl;$/;"	t	typeref:struct:IShellItemArrayVtbl	file:
IShellItemVtbl	win/tkWinDialog.c	/^typedef struct IShellItemVtbl$/;"	s	file:
IShellItemVtbl	win/tkWinDialog.c	/^} IShellItemVtbl;$/;"	t	typeref:struct:IShellItemVtbl	file:
ISupportErrorInfo_InterfaceSupportsErrorInfo	win/tkWinSendCom.c	/^ISupportErrorInfo_InterfaceSupportsErrorInfo($/;"	f	file:
ISupportErrorInfo_QueryInterface	win/tkWinSendCom.c	/^ISupportErrorInfo_QueryInterface($/;"	f	file:
ITEM_OPTION_IMAGE_CHANGED	generic/ttk/ttkTreeview.c	62;"	d	file:
ITEM_OPTION_TAGS_CHANGED	generic/ttk/ttkTreeview.c	61;"	d	file:
IconBitmap	macosx/tkMacOSXBitmap.c	/^} IconBitmap;$/;"	t	typeref:struct:__anon188	file:
IconImages	win/tkWinWm.c	/^    ICONIMAGE IconImages[1];	\/* Image entries *\/$/;"	m	struct:__anon234	file:
IconMaskHint	xlib/X11/Xutil.h	111;"	d
IconPixmapHint	xlib/X11/Xutil.h	108;"	d
IconPositionHint	xlib/X11/Xutil.h	110;"	d
IconWindowHint	xlib/X11/Xutil.h	109;"	d
IconicState	xlib/X11/Xutil.h	119;"	d
IdentifyDisplayColumn	generic/ttk/ttkTreeview.c	/^static int IdentifyDisplayColumn(Treeview *tv, int x, int *x1)$/;"	f	file:
IdentifyItem	generic/ttk/ttkTreeview.c	/^static TreeItem *IdentifyItem(Treeview *tv, int y)$/;"	f	file:
IdentifyNode	generic/ttk/ttkLayout.c	/^static Ttk_Element IdentifyNode(Ttk_Element node, int x, int y)$/;"	f	file:
IdentifyRegion	generic/ttk/ttkTreeview.c	/^static TreeRegion IdentifyRegion(Treeview *tv, int x, int y)$/;"	f	file:
IdentifyRow	generic/ttk/ttkTreeview.c	/^static TreeItem *IdentifyRow($/;"	f	file:
IdentifySymbolEncodings	unix/tkUnixFont.c	/^IdentifySymbolEncodings($/;"	f	file:
IdentifyTab	generic/ttk/ttkNotebook.c	/^static int IdentifyTab(Notebook *nb, int x, int y)$/;"	f	file:
Image	generic/tkImage.c	/^typedef struct Image {$/;"	s	file:
Image	generic/tkImage.c	/^} Image;$/;"	t	typeref:struct:Image	file:
ImageByteOrder	xlib/X11/Xlib.h	98;"	d
ImageChangedProc	generic/tkCanvImg.c	/^ImageChangedProc($/;"	f	file:
ImageCleanup	generic/ttk/ttkLabel.c	/^static void ImageCleanup(ImageElement *image)$/;"	f	file:
ImageCoords	generic/tkCanvImg.c	/^ImageCoords($/;"	f	file:
ImageCreate	generic/tkOldTest.c	/^ImageCreate($/;"	f	file:
ImageCreate	generic/tkTest.c	/^ImageCreate($/;"	f	file:
ImageData	generic/ttk/ttkImage.c	/^} ImageData;$/;"	t	typeref:struct:__anon60	file:
ImageDelete	generic/tkOldTest.c	/^ImageDelete($/;"	f	file:
ImageDelete	generic/tkTest.c	/^ImageDelete($/;"	f	file:
ImageDisplay	generic/tkOldTest.c	/^ImageDisplay($/;"	f	file:
ImageDisplay	generic/tkTest.c	/^ImageDisplay($/;"	f	file:
ImageDraw	generic/ttk/ttkLabel.c	/^static void ImageDraw($/;"	f	file:
ImageElement	generic/ttk/ttkLabel.c	/^} ImageElement;$/;"	t	typeref:struct:__anon62	file:
ImageElementDraw	generic/ttk/ttkImage.c	/^static void ImageElementDraw($/;"	f	file:
ImageElementDraw	generic/ttk/ttkLabel.c	/^static void ImageElementDraw($/;"	f	file:
ImageElementOptions	generic/ttk/ttkLabel.c	/^static Ttk_ElementOptionSpec ImageElementOptions[] = {$/;"	v	file:
ImageElementSize	generic/ttk/ttkImage.c	/^static void ImageElementSize($/;"	f	file:
ImageElementSize	generic/ttk/ttkLabel.c	/^static void ImageElementSize($/;"	f	file:
ImageElementSpec	generic/ttk/ttkImage.c	/^static Ttk_ElementSpec ImageElementSpec =$/;"	v	file:
ImageElementSpec	generic/ttk/ttkLabel.c	/^static Ttk_ElementSpec ImageElementSpec = {$/;"	v	file:
ImageFree	generic/tkOldTest.c	/^ImageFree($/;"	f	file:
ImageFree	generic/tkTest.c	/^ImageFree($/;"	f	file:
ImageGet	generic/tkOldTest.c	/^ImageGet($/;"	f	file:
ImageGet	generic/tkTest.c	/^ImageGet($/;"	f	file:
ImageGetPixel	macosx/tkMacOSXXStubs.c	/^ImageGetPixel($/;"	f	file:
ImageGetPixel	win/tkWinImage.c	/^ImageGetPixel($/;"	f	file:
ImageItem	generic/tkCanvImg.c	/^typedef struct ImageItem  {$/;"	s	file:
ImageItem	generic/tkCanvImg.c	/^} ImageItem;$/;"	t	typeref:struct:ImageItem	file:
ImageMaster	generic/tkImage.c	/^typedef struct ImageMaster {$/;"	s	file:
ImageMaster	generic/tkImage.c	/^} ImageMaster;$/;"	t	typeref:struct:ImageMaster	file:
ImageObjCmd	generic/tkOldTest.c	/^ImageObjCmd($/;"	f	file:
ImageObjCmd	generic/tkTest.c	/^ImageObjCmd($/;"	f	file:
ImagePutPixel	macosx/tkMacOSXXStubs.c	/^ImagePutPixel($/;"	f	file:
ImageSetup	generic/ttk/ttkLabel.c	/^static int ImageSetup($/;"	f	file:
ImageToArea	generic/tkCanvImg.c	/^ImageToArea($/;"	f	file:
ImageToPoint	generic/tkCanvImg.c	/^ImageToPoint($/;"	f	file:
ImageToPostscript	generic/tkCanvImg.c	/^ImageToPostscript($/;"	f	file:
ImageTypeThreadExitProc	generic/tkImage.c	/^ImageTypeThreadExitProc($/;"	f	file:
ImgBmapCmd	generic/tkImgBmap.c	/^ImgBmapCmd($/;"	f	file:
ImgBmapCmdDeletedProc	generic/tkImgBmap.c	/^ImgBmapCmdDeletedProc($/;"	f	file:
ImgBmapConfigureInstance	generic/tkImgBmap.c	/^ImgBmapConfigureInstance($/;"	f	file:
ImgBmapConfigureMaster	generic/tkImgBmap.c	/^ImgBmapConfigureMaster($/;"	f	file:
ImgBmapCreate	generic/tkImgBmap.c	/^ImgBmapCreate($/;"	f	file:
ImgBmapDelete	generic/tkImgBmap.c	/^ImgBmapDelete($/;"	f	file:
ImgBmapDisplay	generic/tkImgBmap.c	/^ImgBmapDisplay($/;"	f	file:
ImgBmapFree	generic/tkImgBmap.c	/^ImgBmapFree($/;"	f	file:
ImgBmapGet	generic/tkImgBmap.c	/^ImgBmapGet($/;"	f	file:
ImgBmapPostscript	generic/tkImgBmap.c	/^ImgBmapPostscript($/;"	f	file:
ImgBmapPsImagemask	generic/tkImgBmap.c	/^ImgBmapPsImagemask($/;"	f	file:
ImgGetPhoto	generic/tkImgPhoto.c	/^ImgGetPhoto($/;"	f	file:
ImgPhotoCmd	generic/tkImgPhoto.c	/^ImgPhotoCmd($/;"	f	file:
ImgPhotoCmdDeletedProc	generic/tkImgPhoto.c	/^ImgPhotoCmdDeletedProc($/;"	f	file:
ImgPhotoConfigureMaster	generic/tkImgPhoto.c	/^ImgPhotoConfigureMaster($/;"	f	file:
ImgPhotoCreate	generic/tkImgPhoto.c	/^ImgPhotoCreate($/;"	f	file:
ImgPhotoDelete	generic/tkImgPhoto.c	/^ImgPhotoDelete($/;"	f	file:
ImgPhotoPostscript	generic/tkImgPhoto.c	/^ImgPhotoPostscript($/;"	f	file:
ImgPhotoSetSize	generic/tkImgPhoto.c	/^ImgPhotoSetSize($/;"	f	file:
ImgStringWrite	generic/tkImgPhoto.c	/^ImgStringWrite($/;"	f	file:
InProgress	generic/tkEvent.c	/^typedef struct InProgress {$/;"	s	file:
InProgress	generic/tkEvent.c	/^} InProgress;$/;"	t	typeref:struct:InProgress	file:
InactiveCmd	generic/tkCmds.c	/^InactiveCmd($/;"	f
InactiveState	xlib/X11/Xutil.h	126;"	d
IncCount	generic/tkTextBTree.c	/^IncCount($/;"	f	file:
IncludeInferiors	xlib/X11/X.h	491;"	d
IncrInfo	unix/tkUnixSelect.c	/^typedef struct IncrInfo {$/;"	s	file:
IncrInfo	unix/tkUnixSelect.c	/^} IncrInfo;$/;"	t	typeref:struct:IncrInfo	file:
IncrTimeoutProc	unix/tkUnixSelect.c	/^IncrTimeoutProc($/;"	f	file:
IndexCountBytesOrdered	generic/tkTextIndex.c	/^IndexCountBytesOrdered($/;"	f	file:
IndicatorElement	generic/ttk/ttkClamTheme.c	/^} IndicatorElement;$/;"	t	typeref:struct:__anon55	file:
IndicatorElement	generic/ttk/ttkDefaultTheme.c	/^} IndicatorElement;$/;"	t	typeref:struct:__anon91	file:
IndicatorElement	generic/ttk/ttkElements.c	/^} IndicatorElement;$/;"	t	typeref:struct:__anon40	file:
IndicatorElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void IndicatorElementDraw($/;"	f	file:
IndicatorElementOptions	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementOptionSpec IndicatorElementOptions[] = {$/;"	v	file:
IndicatorElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec IndicatorElementOptions[] = {$/;"	v	file:
IndicatorElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec IndicatorElementOptions[] = {$/;"	v	file:
IndicatorElementSize	generic/ttk/ttkClamTheme.c	/^static void IndicatorElementSize($/;"	f	file:
IndicatorElementSize	generic/ttk/ttkDefaultTheme.c	/^static void IndicatorElementSize($/;"	f	file:
IndicatorElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec IndicatorElementSpec = {$/;"	v	file:
IndicatorSpec	generic/ttk/ttkDefaultTheme.c	/^} IndicatorSpec;$/;"	t	typeref:struct:__anon90	file:
InitBitmapObj	generic/tkBitmap.c	/^InitBitmapObj($/;"	f	file:
InitBorderObj	generic/tk3d.c	/^InitBorderObj($/;"	f	file:
InitBoxes	win/tkWinButton.c	/^InitBoxes(void)$/;"	f	file:
InitCacheWindow	generic/ttk/ttkCache.c	/^static void InitCacheWindow(Ttk_ResourceCache cache, Tk_Window tkwin)$/;"	f	file:
InitCanvas	generic/tkCanvas.c	/^InitCanvas(void)$/;"	f	file:
InitColorObj	generic/tkColor.c	/^InitColorObj($/;"	f	file:
InitColumn	generic/ttk/ttkTreeview.c	/^static void InitColumn(TreeColumn *column)$/;"	f	file:
InitCursorObj	generic/tkCursor.c	/^InitCursorObj($/;"	f	file:
InitDestImage	unix/tkUnixFont.c	/^InitDestImage($/;"	f	file:
InitElement	generic/tkStyle.c	/^InitElement($/;"	f	file:
InitElementData	win/ttkWinXPTheme.c	/^InitElementData(ElementData *elementData, Tk_Window tkwin, Drawable d)$/;"	f	file:
InitField	xlib/xgc.c	131;"	d	file:
InitFont	macosx/tkMacOSXFont.c	/^InitFont($/;"	f	file:
InitFont	unix/tkUnixFont.c	/^InitFont($/;"	f	file:
InitFont	unix/tkUnixRFont.c	/^InitFont($/;"	f	file:
InitFont	win/tkWinFont.c	/^InitFont($/;"	f	file:
InitKeyMaps	macosx/tkMacOSXKeyboard.c	/^InitKeyMaps(void)$/;"	f	file:
InitLatin1Table	macosx/tkMacOSXKeyboard.c	/^InitLatin1Table($/;"	f	file:
InitMasterData	generic/tkGrid.c	/^InitMasterData($/;"	f	file:
InitPNGImage	generic/tkImgPNG.c	/^InitPNGImage($/;"	f	file:
InitSmoothMethods	generic/tkCanvUtil.c	/^InitSmoothMethods($/;"	f	file:
InitStyle	generic/tkStyle.c	/^InitStyle($/;"	f	file:
InitStyleEngine	generic/tkStyle.c	/^InitStyleEngine($/;"	f	file:
InitStyledElement	generic/tkStyle.c	/^InitStyledElement($/;"	f	file:
InitSubFont	unix/tkUnixFont.c	/^InitSubFont($/;"	f	file:
InitSubFont	win/tkWinFont.c	/^InitSubFont($/;"	f	file:
InitVirtualEventTable	generic/tkBind.c	/^InitVirtualEventTable($/;"	f	file:
InitWidgetSpec	generic/tkStyle.c	/^InitWidgetSpec($/;"	f	file:
InitWindowClass	win/tkWinWm.c	/^InitWindowClass($/;"	f	file:
InitWm	win/tkWinWm.c	/^InitWm(void)$/;"	f	file:
InitialWindowBounds	macosx/tkMacOSXWm.c	/^InitialWindowBounds($/;"	f	file:
Initialize	generic/tkWindow.c	/^Initialize($/;"	f	file:
InitializeElementRecord	generic/ttk/ttkTheme.c	/^int InitializeElementRecord($/;"	f	file:
InitializeEvent	generic/tkPointer.c	/^InitializeEvent($/;"	f	file:
InputFocus	xlib/X11/X.h	87;"	d
InputHint	xlib/X11/Xutil.h	106;"	d
InputOnly	xlib/X11/X.h	343;"	d
InputOutput	xlib/X11/X.h	342;"	d
InsertChars	generic/tkEntry.c	/^InsertChars($/;"	f	file:
InsertChars	generic/tkText.c	/^InsertChars($/;"	f	file:
InsertChars	generic/ttk/ttkEntry.c	/^InsertChars($/;"	f	file:
InsertItem	generic/ttk/ttkTreeview.c	/^static void InsertItem(TreeItem *parent, TreeItem *prev, TreeItem *item)$/;"	f	file:
InsertPosition	generic/ttk/ttkTreeview.c	/^static TreeItem *InsertPosition(TreeItem *parent, int index)$/;"	f	file:
InsertSlave	generic/ttk/ttkManager.c	/^static void InsertSlave(Ttk_Manager *mgr, Ttk_Slave *slave, int index)$/;"	f	file:
InsertUndisplayProc	generic/tkTextMark.c	/^InsertUndisplayProc($/;"	f	file:
InstallColormaps	win/tkWinWm.c	/^InstallColormaps($/;"	f	file:
InteractiveState	generic/tkMain.c	/^typedef struct InteractiveState {$/;"	s	file:
InteractiveState	generic/tkMain.c	/^} InteractiveState;$/;"	t	typeref:struct:InteractiveState	file:
InterpDeleteProc	generic/tkConsole.c	/^InterpDeleteProc($/;"	f	file:
InterpDeleteProc	win/tkWinSend.c	/^InterpDeleteProc($/;"	f	file:
InterpreterObjCmd	generic/tkConsole.c	/^InterpreterObjCmd($/;"	f	file:
Intersect	generic/tk3d.c	/^Intersect($/;"	f	file:
InvalViewRect	macosx/tkMacOSXSubwindows.c	/^InvalViewRect(int msg, HIShapeRef rgn, const CGRect *rect, void *ref) {$/;"	f	file:
InvalidateSubTree	win/tkWinWm.c	/^InvalidateSubTree($/;"	f	file:
InvalidateSubTreeDepth	win/tkWinWm.c	/^InvalidateSubTreeDepth($/;"	f	file:
InvokeClientMessageHandlers	generic/tkEvent.c	/^InvokeClientMessageHandlers($/;"	f	file:
InvokeFocusHandlers	generic/tkEvent.c	/^InvokeFocusHandlers($/;"	f	file:
InvokeGenericHandlers	generic/tkEvent.c	/^InvokeGenericHandlers($/;"	f	file:
InvokeMouseHandlers	generic/tkEvent.c	/^InvokeMouseHandlers($/;"	f	file:
IsAppThemed	win/ttkWinXPTheme.c	/^    IsAppThemedProc			*IsAppThemed;$/;"	m	struct:__anon238	file:
IsAppThemedProc	win/ttkWinXPTheme.c	/^typedef BOOL    (STDAPICALLTYPE IsAppThemedProc)(void);$/;"	t	file:
IsCursorKey	xlib/X11/Xutil.h	192;"	d
IsFunctionKey	xlib/X11/Xutil.h	198;"	d
IsIn	win/nmakehlp.c	/^IsIn($/;"	f	file:
IsKeypadKey	xlib/X11/Xutil.h	189;"	d
IsMiscFunctionKey	xlib/X11/Xutil.h	201;"	d
IsModifierKey	xlib/X11/Xutil.h	204;"	d
IsNewColor	generic/tkImgGIF.c	/^IsNewColor($/;"	f	file:
IsPFKey	xlib/X11/Xutil.h	195;"	d
IsSameFGStyle	generic/tkTextDisp.c	/^IsSameFGStyle($/;"	f	file:
IsStartOfNotMergedLine	generic/tkTextDisp.c	/^IsStartOfNotMergedLine($/;"	f	file:
IsStretchable	generic/tkPanedWindow.c	65;"	d	file:
IsThemeActive	win/ttkWinXPTheme.c	/^    IsThemeActiveProc			*IsThemeActive;$/;"	m	struct:__anon238	file:
IsThemeActiveProc	win/ttkWinXPTheme.c	/^typedef BOOL    (STDAPICALLTYPE IsThemeActiveProc)(void);$/;"	t	file:
IsUnmapped	xlib/X11/X.h	400;"	d
IsUnviewable	xlib/X11/X.h	401;"	d
IsValidPalette	generic/tkImgPhInstance.c	/^IsValidPalette($/;"	f	file:
IsViewable	xlib/X11/X.h	402;"	d
ItemAttr	generic/tkListbox.c	/^} ItemAttr;$/;"	t	typeref:struct:__anon150	file:
ItemConfigInfo	generic/tkCanvas.c	/^ItemConfigInfo($/;"	f	file:
ItemConfigValue	generic/tkCanvas.c	/^ItemConfigValue($/;"	f	file:
ItemConfigure	generic/tkCanvas.c	/^ItemConfigure($/;"	f	file:
ItemCoords	generic/tkCanvas.c	/^ItemCoords($/;"	f	file:
ItemCreate	generic/tkCanvas.c	/^ItemCreate($/;"	f	file:
ItemCursor	generic/tkCanvas.c	/^ItemCursor($/;"	f	file:
ItemDelChars	generic/tkCanvas.c	/^ItemDelChars($/;"	f	file:
ItemDelete	generic/tkCanvas.c	/^ItemDelete($/;"	f	file:
ItemDepth	generic/ttk/ttkTreeview.c	/^static int ItemDepth(TreeItem *item)$/;"	f	file:
ItemDisplay	generic/tkCanvas.c	/^ItemDisplay($/;"	f	file:
ItemID	generic/ttk/ttkTreeview.c	/^static Tcl_Obj *ItemID(Treeview *tv, TreeItem *item)$/;"	f	file:
ItemIndex	generic/tkCanvas.c	/^ItemIndex($/;"	f	file:
ItemInsert	generic/tkCanvas.c	/^ItemInsert($/;"	f	file:
ItemName	generic/ttk/ttkTreeview.c	/^static const char *ItemName(Treeview *tv, TreeItem *item)$/;"	f	file:
ItemOptionSpecs	generic/ttk/ttkTreeview.c	/^static Tk_OptionSpec ItemOptionSpecs[] = {$/;"	v	file:
ItemOverlap	generic/tkCanvas.c	/^ItemOverlap($/;"	f	file:
ItemPoint	generic/tkCanvas.c	/^ItemPoint($/;"	f	file:
ItemRow	generic/ttk/ttkTreeview.c	/^static int ItemRow(Treeview *tv, TreeItem *p)$/;"	f	file:
ItemScale	generic/tkCanvas.c	/^ItemScale($/;"	f	file:
ItemSelection	generic/tkCanvas.c	/^ItemSelection($/;"	f	file:
ItemState	generic/ttk/ttkTreeview.c	/^static Ttk_State ItemState(Treeview *tv, TreeItem *item)$/;"	f	file:
ItemTranslate	generic/tkCanvas.c	/^ItemTranslate($/;"	f	file:
JOIN	generic/tk.h	45;"	d
JOIN1	generic/tk.h	46;"	d
JoinBevel	xlib/X11/X.h	474;"	d
JoinMiter	xlib/X11/X.h	472;"	d
JoinRound	xlib/X11/X.h	473;"	d
KBAutoRepeatMode	xlib/X11/X.h	611;"	d
KBBellDuration	xlib/X11/X.h	607;"	d
KBBellPercent	xlib/X11/X.h	605;"	d
KBBellPitch	xlib/X11/X.h	606;"	d
KBKey	xlib/X11/X.h	610;"	d
KBKeyClickPercent	xlib/X11/X.h	604;"	d
KBLed	xlib/X11/X.h	608;"	d
KBLedMode	xlib/X11/X.h	609;"	d
KEY	generic/tkBind.c	463;"	d	file:
KEY	generic/tkListbox.c	177;"	d	file:
KEYCODE_ARRAY_SIZE	unix/tkUnixKey.c	398;"	d	file:
KEYCODE_ARRAY_SIZE	win/tkWinKey.c	445;"	d	file:
KEYSYM_FLAGS	unix/Makefile	/^KEYSYM_FLAGS		=$/;"	m
KEY_BUTTON_MOTION_CROSSING	generic/tkBind.c	488;"	d	file:
KEY_BUTTON_MOTION_VIRTUAL	generic/tkBind.c	487;"	d	file:
KeepInWindow	generic/tkSquare.c	/^KeepInWindow($/;"	f	file:
KeyCode	xlib/X11/X.h	/^typedef unsigned long KeyCode;	\/* In order to use IME, the Macintosh needs$/;"	t
KeyInfo	macosx/tkMacOSXKeyboard.c	/^} KeyInfo;$/;"	t	typeref:struct:__anon193	file:
KeyPress	xlib/X11/X.h	141;"	d
KeyPressMask	xlib/X11/X.h	111;"	d
KeyRelease	xlib/X11/X.h	142;"	d
KeyReleaseMask	xlib/X11/X.h	112;"	d
KeySym	xlib/X11/X.h	/^typedef XID KeySym;$/;"	t
KeySymInfo	generic/tkBind.c	/^} KeySymInfo;$/;"	t	typeref:struct:__anon172	file:
KeycodeToKeysym	win/tkWinKey.c	/^KeycodeToKeysym($/;"	f	file:
KeycodeToUnicode	macosx/tkMacOSXKeyboard.c	/^KeycodeToUnicode($/;"	f	file:
KeymapNotify	xlib/X11/X.h	150;"	d
KeymapStateMask	xlib/X11/X.h	125;"	d
KillEvent	macosx/tkMacOSXHLEvents.c	/^typedef struct KillEvent {$/;"	s	file:
KillEvent	macosx/tkMacOSXHLEvents.c	/^} KillEvent;$/;"	t	typeref:struct:KillEvent	file:
LABELANCHOR_E	generic/tkFrame.c	/^    LABELANCHOR_E, LABELANCHOR_EN, LABELANCHOR_ES,$/;"	e	enum:labelanchor	file:
LABELANCHOR_EN	generic/tkFrame.c	/^    LABELANCHOR_E, LABELANCHOR_EN, LABELANCHOR_ES,$/;"	e	enum:labelanchor	file:
LABELANCHOR_ES	generic/tkFrame.c	/^    LABELANCHOR_E, LABELANCHOR_EN, LABELANCHOR_ES,$/;"	e	enum:labelanchor	file:
LABELANCHOR_N	generic/tkFrame.c	/^    LABELANCHOR_N, LABELANCHOR_NE, LABELANCHOR_NW,$/;"	e	enum:labelanchor	file:
LABELANCHOR_NE	generic/tkFrame.c	/^    LABELANCHOR_N, LABELANCHOR_NE, LABELANCHOR_NW,$/;"	e	enum:labelanchor	file:
LABELANCHOR_NW	generic/tkFrame.c	/^    LABELANCHOR_N, LABELANCHOR_NE, LABELANCHOR_NW,$/;"	e	enum:labelanchor	file:
LABELANCHOR_S	generic/tkFrame.c	/^    LABELANCHOR_S, LABELANCHOR_SE, LABELANCHOR_SW,$/;"	e	enum:labelanchor	file:
LABELANCHOR_SE	generic/tkFrame.c	/^    LABELANCHOR_S, LABELANCHOR_SE, LABELANCHOR_SW,$/;"	e	enum:labelanchor	file:
LABELANCHOR_SW	generic/tkFrame.c	/^    LABELANCHOR_S, LABELANCHOR_SE, LABELANCHOR_SW,$/;"	e	enum:labelanchor	file:
LABELANCHOR_W	generic/tkFrame.c	/^    LABELANCHOR_W, LABELANCHOR_WN, LABELANCHOR_WS$/;"	e	enum:labelanchor	file:
LABELANCHOR_WN	generic/tkFrame.c	/^    LABELANCHOR_W, LABELANCHOR_WN, LABELANCHOR_WS$/;"	e	enum:labelanchor	file:
LABELANCHOR_WS	generic/tkFrame.c	/^    LABELANCHOR_W, LABELANCHOR_WN, LABELANCHOR_WS$/;"	e	enum:labelanchor	file:
LABELMARGIN	generic/tkFrame.c	138;"	d	file:
LABELSPACING	generic/tkFrame.c	137;"	d	file:
LABELWIDGET_CHANGED	generic/ttk/ttkFrame.c	249;"	d	file:
LABEL_STYLE	win/tkWinButton.c	21;"	d	file:
LASTEvent	xlib/X11/X.h	174;"	d
LAST_CHAR	generic/tkTextIndex.c	22;"	d	file:
LAST_PLUS_ONE_OK	generic/tkEntry.c	386;"	d	file:
LATIN1_MAX	macosx/tkMacOSXKeyboard.c	24;"	d	file:
LDFLAGS	unix/Makefile	/^LDFLAGS			= $(LDFLAGS_OPTIMIZE)  -Wl,--export-dynamic $/;"	m
LDFLAGS_DEBUG	unix/Makefile	/^LDFLAGS_DEBUG		= $/;"	m
LDFLAGS_OPTIMIZE	unix/Makefile	/^LDFLAGS_OPTIMIZE	= $/;"	m
LD_SEARCH_FLAGS	unix/Makefile	/^LD_SEARCH_FLAGS	= -Wl,-rpath,${LIB_RUNTIME_DIR}$/;"	m
LEFT	generic/tkPack.c	/^typedef enum {TOP, BOTTOM, LEFT, RIGHT} Side;$/;"	e	enum:__anon151	file:
LEFT	generic/tkText.h	/^typedef enum {LEFT, RIGHT, CENTER, NUMERIC} TkTextTabAlign;$/;"	e	enum:__anon160
LEFT_GRABBED_ITEM	generic/tkCanvas.h	273;"	d
LIBDIR	macosx/GNUmakefile	/^LIBDIR			?= ${INSTALL_PATH}$/;"	m
LIBS	unix/Makefile	/^LIBS =  -lpthread $(X11_LIB_SWITCHES) -ldl -lz  -lpthread -lieee -lm$/;"	m
LIB_FILE	unix/Makefile	/^LIB_FILE		= ${TK_LIB_FILE}$/;"	m
LIB_INSTALL_DIR	unix/Makefile	/^LIB_INSTALL_DIR		= $(INSTALL_ROOT)$(libdir)$/;"	m
LIB_RUNTIME_DIR	unix/Makefile	/^LIB_RUNTIME_DIR		= $(libdir):\/usr\/lib$/;"	m
LIGHT_COLOR	generic/ttk/ttkClamTheme.c	27;"	d	file:
LISTBOX_DELETED	generic/tkListbox.c	211;"	d	file:
LITE	generic/ttk/ttkDefaultTheme.c	/^enum BorderColor { FLAT = 1, LITE = 2, DARK = 3, BRDR = 4 };$/;"	e	enum:BorderColor	file:
LM_to_uint	generic/tkImgGIF.c	162;"	d	file:
LOADPROC	win/ttkWinXPTheme.c	110;"	d	file:
LOADPROC	win/ttkWinXPTheme.c	126;"	d	file:
LOCALCOLORMAP	generic/tkImgGIF.c	154;"	d	file:
LOCALES	unix/Makefile	/^LOCALES			= cs da de el en en_gb eo es fr hu it nl pl pt ru sv$/;"	m
LOG	generic/tkTextDisp.c	201;"	d	file:
LONGBITS	win/tkWinImage.c	231;"	d	file:
LOTSA_TAGS	generic/tkText.h	893;"	d
LOTS_OF_MATCHES	generic/tkText.c	5612;"	d	file:
LPARAM	unix/tkUnixPort.h	124;"	d
LPICONDIR	win/tkWinWm.c	/^} ICONDIR, *LPICONDIR;$/;"	t	typeref:struct:__anon236	file:
LPICONDIRENTRY	win/tkWinWm.c	/^} ICONDIRENTRY, *LPICONDIRENTRY;$/;"	t	typeref:struct:__anon235	file:
LPICONIMAGE	win/tkWinWm.c	/^} ICONIMAGE, *LPICONIMAGE;$/;"	t	typeref:struct:__anon233	file:
LPadding	generic/ttk/ttkImage.c	/^static Ttk_Box LPadding(Ttk_Box b, Ttk_Padding p)$/;"	f	file:
LRESULT	unix/tkUnixPort.h	125;"	d
LSB	generic/tkImgGIF.c	203;"	d	file:
LSBFirst	xlib/X11/X.h	669;"	d
LU_CAPS	generic/tkInt.h	/^    enum {LU_IGNORE, LU_CAPS, LU_SHIFT} lockUsage;$/;"	e	enum:TkDisplay::__anon131
LU_IGNORE	generic/tkInt.h	/^    enum {LU_IGNORE, LU_CAPS, LU_SHIFT} lockUsage;$/;"	e	enum:TkDisplay::__anon131
LU_SHIFT	generic/tkInt.h	/^    enum {LU_IGNORE, LU_CAPS, LU_SHIFT} lockUsage;$/;"	e	enum:TkDisplay::__anon131
LWA_ALPHA	win/tkWinWm.c	30;"	d	file:
LWA_COLORKEY	win/tkWinWm.c	27;"	d	file:
Label	generic/ttk/ttkButton.c	/^} Label;$/;"	t	typeref:struct:__anon16	file:
LabelAnchorSide	generic/ttk/ttkFrame.c	/^static Ttk_Side LabelAnchorSide(Ttk_PositionSpec flags)$/;"	f	file:
LabelCleanup	generic/ttk/ttkLabel.c	/^static void LabelCleanup(LabelElement *c)$/;"	f	file:
LabelCommands	generic/ttk/ttkButton.c	/^static const Ttk_Ensemble LabelCommands[] = {$/;"	v	file:
LabelElement	generic/ttk/ttkLabel.c	/^} LabelElement;$/;"	t	typeref:struct:__anon63	file:
LabelElementDraw	generic/ttk/ttkLabel.c	/^static void LabelElementDraw($/;"	f	file:
LabelElementOptions	generic/ttk/ttkLabel.c	/^static Ttk_ElementOptionSpec LabelElementOptions[] = {$/;"	v	file:
LabelElementSize	generic/ttk/ttkLabel.c	/^static void LabelElementSize($/;"	f	file:
LabelElementSpec	generic/ttk/ttkLabel.c	/^static Ttk_ElementSpec LabelElementSpec = {$/;"	v	file:
LabelOptionSpecs	generic/ttk/ttkButton.c	/^static Tk_OptionSpec LabelOptionSpecs[] =$/;"	v	file:
LabelPart	generic/ttk/ttkButton.c	/^} LabelPart;$/;"	t	typeref:struct:__anon15	file:
LabelRemoved	generic/ttk/ttkFrame.c	/^static void LabelRemoved(void *managerData, int slaveIndex)$/;"	f	file:
LabelRequest	generic/ttk/ttkFrame.c	/^static int LabelRequest(void *managerData, int index, int width, int height)$/;"	f	file:
LabelSetup	generic/ttk/ttkLabel.c	/^static void LabelSetup($/;"	f	file:
LabelWidgetSpec	generic/ttk/ttkButton.c	/^static WidgetSpec LabelWidgetSpec =$/;"	v	file:
Labelframe	generic/tkFrame.c	/^} Labelframe;$/;"	t	typeref:struct:__anon146	file:
Labelframe	generic/ttk/ttkFrame.c	/^} Labelframe;$/;"	t	typeref:struct:__anon121	file:
LabelframeCleanup	generic/ttk/ttkFrame.c	/^static void LabelframeCleanup(void *recordPtr)$/;"	f	file:
LabelframeConfigure	generic/ttk/ttkFrame.c	/^static int LabelframeConfigure(Tcl_Interp *interp,void *recordPtr,int mask)$/;"	f	file:
LabelframeDisplay	generic/ttk/ttkFrame.c	/^static void LabelframeDisplay(void *recordPtr, Drawable d)$/;"	f	file:
LabelframeDoLayout	generic/ttk/ttkFrame.c	/^static void LabelframeDoLayout(void *recordPtr)$/;"	f	file:
LabelframeGetLayout	generic/ttk/ttkFrame.c	/^static Ttk_Layout LabelframeGetLayout($/;"	f	file:
LabelframeInitialize	generic/ttk/ttkFrame.c	/^static void LabelframeInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
LabelframeLabelSize	generic/ttk/ttkFrame.c	/^LabelframeLabelSize(Labelframe *lframePtr, int *widthPtr, int *heightPtr)$/;"	f	file:
LabelframeManagerSpec	generic/ttk/ttkFrame.c	/^static Ttk_ManagerSpec LabelframeManagerSpec = {$/;"	v	file:
LabelframeOptionSpecs	generic/ttk/ttkFrame.c	/^static Tk_OptionSpec LabelframeOptionSpecs[] = {$/;"	v	file:
LabelframePart	generic/ttk/ttkFrame.c	/^} LabelframePart;$/;"	t	typeref:struct:__anon120	file:
LabelframePlaceSlaves	generic/ttk/ttkFrame.c	/^static void LabelframePlaceSlaves(void *recordPtr)$/;"	f	file:
LabelframeSize	generic/ttk/ttkFrame.c	/^static int LabelframeSize(void *recordPtr, int *widthPtr, int *heightPtr)$/;"	f	file:
LabelframeStyle	generic/ttk/ttkFrame.c	/^} LabelframeStyle;$/;"	t	typeref:struct:__anon122	file:
LabelframeStyleOptions	generic/ttk/ttkFrame.c	/^static void LabelframeStyleOptions(Labelframe *lf, LabelframeStyle *style)$/;"	f	file:
LabelframeWidgetSpec	generic/ttk/ttkFrame.c	/^static WidgetSpec LabelframeWidgetSpec = {$/;"	v	file:
LastExtensionError	xlib/X11/X.h	333;"	d
LastKnownRequestProcessed	xlib/X11/Xlib.h	100;"	d
LayoutChunk	generic/tkFont.c	/^typedef struct LayoutChunk {$/;"	s	file:
LayoutChunk	generic/tkFont.c	/^} LayoutChunk;$/;"	t	typeref:struct:LayoutChunk	file:
LayoutDLine	generic/tkTextDisp.c	/^LayoutDLine($/;"	f	file:
LeaveNotify	xlib/X11/X.h	147;"	d
LeaveWindowMask	xlib/X11/X.h	116;"	d
LedModeOff	xlib/X11/X.h	599;"	d
LedModeOn	xlib/X11/X.h	600;"	d
LineCoords	generic/tkCanvLine.c	/^LineCoords($/;"	f	file:
LineDeleteCoords	generic/tkCanvLine.c	/^LineDeleteCoords($/;"	f	file:
LineDoubleDash	xlib/X11/X.h	461;"	d
LineInsert	generic/tkCanvLine.c	/^LineInsert($/;"	f	file:
LineItem	generic/tkCanvLine.c	/^typedef struct LineItem {$/;"	s	file:
LineItem	generic/tkCanvLine.c	/^} LineItem;$/;"	t	typeref:struct:LineItem	file:
LineOnOffDash	xlib/X11/X.h	460;"	d
LineSolid	xlib/X11/X.h	459;"	d
LineToArea	generic/tkCanvLine.c	/^LineToArea($/;"	f	file:
LineToPoint	generic/tkCanvLine.c	/^LineToPoint($/;"	f	file:
LineToPostscript	generic/tkCanvLine.c	/^LineToPostscript($/;"	f	file:
ListFontOrAlias	unix/tkUnixFont.c	/^ListFontOrAlias($/;"	f	file:
ListFonts	unix/tkUnixFont.c	/^ListFonts($/;"	f	file:
ListHeaderParams	macosx/ttkMacOSXTheme.c	/^    ListHeaderParams = { kThemeListHeaderButton, kThemeMetricListHeaderHeight };$/;"	v	file:
Listbox	generic/tkListbox.c	/^} Listbox;$/;"	t	typeref:struct:__anon149	file:
ListboxBboxSubCmd	generic/tkListbox.c	/^ListboxBboxSubCmd($/;"	f	file:
ListboxCmdDeletedProc	generic/tkListbox.c	/^ListboxCmdDeletedProc($/;"	f	file:
ListboxComputeGeometry	generic/tkListbox.c	/^ListboxComputeGeometry($/;"	f	file:
ListboxDeleteSubCmd	generic/tkListbox.c	/^ListboxDeleteSubCmd($/;"	f	file:
ListboxEventProc	generic/tkListbox.c	/^ListboxEventProc($/;"	f	file:
ListboxFetchSelection	generic/tkListbox.c	/^ListboxFetchSelection($/;"	f	file:
ListboxGetItemAttributes	generic/tkListbox.c	/^ListboxGetItemAttributes($/;"	f	file:
ListboxInsertSubCmd	generic/tkListbox.c	/^ListboxInsertSubCmd($/;"	f	file:
ListboxListVarProc	generic/tkListbox.c	/^ListboxListVarProc($/;"	f	file:
ListboxLostSelection	generic/tkListbox.c	/^ListboxLostSelection($/;"	f	file:
ListboxOptionTables	generic/tkListbox.c	/^} ListboxOptionTables;$/;"	t	typeref:struct:__anon148	file:
ListboxScanTo	generic/tkListbox.c	/^ListboxScanTo($/;"	f	file:
ListboxSelect	generic/tkListbox.c	/^ListboxSelect($/;"	f	file:
ListboxSelectionSubCmd	generic/tkListbox.c	/^ListboxSelectionSubCmd($/;"	f	file:
ListboxUpdateHScrollbar	generic/tkListbox.c	/^ListboxUpdateHScrollbar($/;"	f	file:
ListboxUpdateVScrollbar	generic/tkListbox.c	/^ListboxUpdateVScrollbar($/;"	f	file:
ListboxWidgetObjCmd	generic/tkListbox.c	/^ListboxWidgetObjCmd($/;"	f	file:
ListboxWorldChanged	generic/tkListbox.c	/^ListboxWorldChanged($/;"	f	file:
ListboxXviewSubCmd	generic/tkListbox.c	/^ListboxXviewSubCmd($/;"	f	file:
ListboxYviewSubCmd	generic/tkListbox.c	/^ListboxYviewSubCmd($/;"	f	file:
LoadFontRanges	win/tkWinFont.c	/^LoadFontRanges($/;"	f	file:
LoadShellProcs	win/tkWinDialog.c	/^static void LoadShellProcs()$/;"	f	file:
LoadXPThemeProcs	win/ttkWinXPTheme.c	/^LoadXPThemeProcs(HINSTANCE *phlib)$/;"	f	file:
LockMapIndex	xlib/X11/X.h	193;"	d
LockMask	xlib/X11/X.h	181;"	d
LookupTheme	generic/ttk/ttkTheme.c	/^static Ttk_Theme LookupTheme($/;"	f	file:
LoseCursor	generic/ttk/ttkBlink.c	/^static void LoseCursor(CursorManager *cm, WidgetCore *corePtr)$/;"	f	file:
LostCommand	generic/tkSelect.c	/^typedef struct LostCommand {$/;"	s	file:
LostCommand	generic/tkSelect.c	/^} LostCommand;$/;"	t	typeref:struct:LostCommand	file:
LostSelection	generic/tkSelect.c	/^LostSelection($/;"	f	file:
LowerHighest	xlib/X11/X.h	426;"	d
MAC_KEYCODE_MASK	macosx/tkMacOSXKeyboard.c	26;"	d	file:
MAC_KEYCODE_MAX	macosx/tkMacOSXKeyboard.c	25;"	d	file:
MAC_OSX_DIR	unix/Makefile	/^MAC_OSX_DIR		= $(TOP_DIR)\/macosx$/;"	m
MAC_OSX_ENTRY_BORDER	macosx/tkMacOSXDefault.h	168;"	d
MAC_OSX_ENTRY_RELIEF	macosx/tkMacOSXDefault.h	169;"	d
MAC_OSX_ENTRY_SELECT_RELIEF	macosx/tkMacOSXDefault.h	170;"	d
MAC_OSX_FOCUS_WIDTH	macosx/tkMacOSXDefault.h	167;"	d
MAC_OSX_SCROLL_WIDTH	macosx/tkMacOSXScale.c	226;"	d	file:
MAJOR_VERSION	unix/Makefile	/^MAJOR_VERSION		= 8$/;"	m
MAKE_ARGS_V	macosx/GNUmakefile	/^MAKE_ARGS_V		= $(foreach v,${MAKE_VARS},$v='${$v}')$/;"	m
MAKE_VARS	macosx/GNUmakefile	/^MAKE_VARS		:= TCL_EXE$/;"	m
MAKE_VARS	macosx/GNUmakefile	/^MAKE_VARS		:=$/;"	m
MAN1_INSTALL_DIR	unix/Makefile	/^MAN1_INSTALL_DIR	= $(MAN_INSTALL_DIR)\/man1$/;"	m
MAN3_INSTALL_DIR	unix/Makefile	/^MAN3_INSTALL_DIR	= $(MAN_INSTALL_DIR)\/man3$/;"	m
MANDIR	macosx/GNUmakefile	/^MANDIR			?= ${PREFIX}\/man$/;"	m
MANN_INSTALL_DIR	unix/Makefile	/^MANN_INSTALL_DIR	= $(MAN_INSTALL_DIR)\/mann$/;"	m
MAN_FLAGS	unix/Makefile	/^MAN_FLAGS               = $/;"	m
MAN_INSTALL_DIR	unix/Makefile	/^MAN_INSTALL_DIR		= $(INSTALL_ROOT)$(mandir)$/;"	m
MAP	generic/tkBind.c	473;"	d	file:
MAPREQ	generic/tkBind.c	482;"	d	file:
MAP_COLORS	generic/tkImgPhoto.h	137;"	d
MASKPAT	win/tkWinDraw.c	82;"	d	file:
MASK_SIZE	macosx/tkMacOSXPort.h	93;"	d
MASK_SIZE	unix/tkUnixPort.h	102;"	d
MASTER_MENU	generic/tkMenu.h	467;"	d
MAX	generic/tkGrid.c	19;"	d	file:
MAX	generic/tkGrid.c	21;"	d	file:
MAX	generic/tkImgPhoto.h	233;"	d
MAX	generic/tkImgPhoto.h	234;"	d
MAX	generic/tkTrig.c	20;"	d	file:
MAX	generic/tkTrig.c	21;"	d	file:
MAX	generic/ttk/ttkLabel.c	491;"	d	file:
MAX	generic/ttk/ttkLabel.c	492;"	d	file:
MAX	generic/ttk/ttkLayout.c	13;"	d	file:
MAX	generic/ttk/ttkNotebook.c	15;"	d	file:
MAX	generic/ttk/ttkScale.c	15;"	d	file:
MAX	win/tkWinDraw.c	97;"	d	file:
MAXCODE	generic/tkImgGIF.c	231;"	d	file:
MAXCOLORMAPSIZE	generic/tkImgGIF.c	156;"	d	file:
MAXWIDTH_IS_STALE	generic/tkListbox.c	210;"	d	file:
MAX_CHILDREN	generic/tkTextBTree.c	94;"	d	file:
MAX_DASH_LIST_SIZE	xlib/xgc.c	124;"	d	file:
MAX_ELEMENT	generic/tkGrid.c	52;"	d	file:
MAX_INTENSITY	generic/tk3d.h	75;"	d
MAX_KEYCODE	win/tkWinKey.c	24;"	d	file:
MAX_LWZ_BITS	generic/tkImgGIF.c	161;"	d	file:
MAX_MEMORY	generic/tkImgPPM.c	24;"	d	file:
MAX_OBJS	generic/tkCmds.c	266;"	d	file:
MAX_PIXELCODE	macosx/tkMacOSXColor.c	173;"	d	file:
MAX_PIXELS	generic/tkImgPhoto.h	63;"	d
MAX_PROP_WORDS	macosx/tkMacOSXSend.c	168;"	d	file:
MAX_PROP_WORDS	unix/tkUnixSelect.c	81;"	d	file:
MAX_PROP_WORDS	unix/tkUnixSend.c	200;"	d	file:
MAX_SCROLL	win/tkWinScrlbr.c	23;"	d	file:
MAX_STATIC_POINTS	generic/tkCanvLine.c	251;"	d	file:
MAX_STATIC_POINTS	generic/tkCanvPoly.c	220;"	d	file:
MAX_WORD_LENGTH	generic/tkImgBmap.c	131;"	d	file:
MBEDDED_BUILD	macosx/GNUmakefile	/^override EMBEDDED_BUILD :=$/;"	m
MEM_DEBUG_FLAGS	unix/Makefile	/^MEM_DEBUG_FLAGS		=$/;"	m
MENUBAR	generic/tkMenu.h	469;"	d
MENUBUTTON_ARROW_SIZE	generic/ttk/ttkClamTheme.c	394;"	d	file:
MENUBUTTON_ARROW_SIZE	generic/ttk/ttkDefaultTheme.c	675;"	d	file:
MENUITEMFONT_NAME	macosx/tkMacOSXFont.c	56;"	d	file:
MENU_ACTIVATE	generic/tkMenu.c	/^    MENU_ACTIVATE, MENU_ADD, MENU_CGET, MENU_CLONE, MENU_CONFIGURE,$/;"	e	enum:options	file:
MENU_ACTIVE_PIXEL	macosx/tkMacOSXPort.h	171;"	d
MENU_ACTIVE_TEXT_PIXEL	macosx/tkMacOSXPort.h	172;"	d
MENU_ADD	generic/tkMenu.c	/^    MENU_ACTIVATE, MENU_ADD, MENU_CGET, MENU_CLONE, MENU_CONFIGURE,$/;"	e	enum:options	file:
MENU_BACKGROUND_PIXEL	macosx/tkMacOSXPort.h	173;"	d
MENU_BG	win/tkWinDefault.h	38;"	d
MENU_CGET	generic/tkMenu.c	/^    MENU_ACTIVATE, MENU_ADD, MENU_CGET, MENU_CLONE, MENU_CONFIGURE,$/;"	e	enum:options	file:
MENU_CLASS_NAME	win/tkWinMenu.c	22;"	d	file:
MENU_CLONE	generic/tkMenu.c	/^    MENU_ACTIVATE, MENU_ADD, MENU_CGET, MENU_CLONE, MENU_CONFIGURE,$/;"	e	enum:options	file:
MENU_CONFIGURE	generic/tkMenu.c	/^    MENU_ACTIVATE, MENU_ADD, MENU_CGET, MENU_CLONE, MENU_CONFIGURE,$/;"	e	enum:options	file:
MENU_DELETE	generic/tkMenu.c	/^    MENU_DELETE, MENU_ENTRYCGET, MENU_ENTRYCONFIGURE, MENU_INDEX,$/;"	e	enum:options	file:
MENU_DELETION_PENDING	generic/tkMenu.h	451;"	d
MENU_DISABLED_PIXEL	macosx/tkMacOSXPort.h	174;"	d
MENU_DIVIDER_HEIGHT	unix/tkUnixMenu.c	21;"	d	file:
MENU_ENTRYCGET	generic/tkMenu.c	/^    MENU_DELETE, MENU_ENTRYCGET, MENU_ENTRYCONFIGURE, MENU_INDEX,$/;"	e	enum:options	file:
MENU_ENTRYCONFIGURE	generic/tkMenu.c	/^    MENU_DELETE, MENU_ENTRYCGET, MENU_ENTRYCONFIGURE, MENU_INDEX,$/;"	e	enum:options	file:
MENU_FG	win/tkWinDefault.h	39;"	d
MENU_HASH_KEY	generic/tkMenu.c	78;"	d	file:
MENU_INDEX	generic/tkMenu.c	/^    MENU_DELETE, MENU_ENTRYCGET, MENU_ENTRYCONFIGURE, MENU_INDEX,$/;"	e	enum:options	file:
MENU_INDICATOR	unix/tkUnixDefault.h	35;"	d
MENU_INSERT	generic/tkMenu.c	/^    MENU_INSERT, MENU_INVOKE, MENU_POST, MENU_POSTCASCADE, MENU_TYPE,$/;"	e	enum:options	file:
MENU_INVOKE	generic/tkMenu.c	/^    MENU_INSERT, MENU_INVOKE, MENU_POST, MENU_POSTCASCADE, MENU_TYPE,$/;"	e	enum:options	file:
MENU_MARGIN_WIDTH	unix/tkUnixMenu.c	20;"	d	file:
MENU_PLATFORM_FLAG1	generic/tkMenu.h	453;"	d
MENU_PLATFORM_FLAG2	generic/tkMenu.h	454;"	d
MENU_PLATFORM_FLAG3	generic/tkMenu.h	455;"	d
MENU_POST	generic/tkMenu.c	/^    MENU_INSERT, MENU_INVOKE, MENU_POST, MENU_POSTCASCADE, MENU_TYPE,$/;"	e	enum:options	file:
MENU_POSTCASCADE	generic/tkMenu.c	/^    MENU_INSERT, MENU_INVOKE, MENU_POST, MENU_POSTCASCADE, MENU_TYPE,$/;"	e	enum:options	file:
MENU_RECONFIGURE_PENDING	win/tkWinMenu.c	47;"	d	file:
MENU_SYSTEM_MENU	win/tkWinMenu.c	46;"	d	file:
MENU_TEXT_PIXEL	macosx/tkMacOSXPort.h	175;"	d
MENU_TYPE	generic/tkMenu.c	/^    MENU_INSERT, MENU_INVOKE, MENU_POST, MENU_POSTCASCADE, MENU_TYPE,$/;"	e	enum:options	file:
MENU_UNPOST	generic/tkMenu.c	/^    MENU_UNPOST, MENU_XPOSITION, MENU_YPOSITION$/;"	e	enum:options	file:
MENU_WIN_DESTRUCTION_PENDING	generic/tkMenu.h	452;"	d
MENU_XPOSITION	generic/tkMenu.c	/^    MENU_UNPOST, MENU_XPOSITION, MENU_YPOSITION$/;"	e	enum:options	file:
MENU_YPOSITION	generic/tkMenu.c	/^    MENU_UNPOST, MENU_XPOSITION, MENU_YPOSITION$/;"	e	enum:options	file:
MESSAGE_DELETED	generic/tkMessage.c	104;"	d	file:
META_MASK	generic/tkInt.h	916;"	d
MFile	generic/tkImgGIF.c	/^} MFile;$/;"	t	typeref:struct:mFile	file:
MGR_RELAYOUT_REQUIRED	generic/ttk/ttkManager.c	73;"	d	file:
MGR_RESIZE_REQUIRED	generic/ttk/ttkManager.c	72;"	d	file:
MGR_UPDATE_PENDING	generic/ttk/ttkManager.c	71;"	d	file:
MIN	generic/tkImgPhoto.h	231;"	d
MIN	generic/tkImgPhoto.h	232;"	d
MIN	generic/tkTrig.c	18;"	d	file:
MIN	generic/tkTrig.c	19;"	d	file:
MIN	generic/ttk/ttkImage.c	17;"	d	file:
MIN	generic/ttk/ttkLayout.c	14;"	d	file:
MIN	generic/ttk/ttkNotebook.c	14;"	d	file:
MIN	generic/ttk/ttkScale.c	16;"	d	file:
MIN	win/tkWinDraw.c	96;"	d	file:
MINOR_VERSION	unix/Makefile	/^MINOR_VERSION		= 6$/;"	m
MIN_CHILDREN	generic/tkTextBTree.c	95;"	d	file:
MIN_DBL_VAL	generic/tkEntry.c	34;"	d	file:
MIN_PIXELCODE	macosx/tkMacOSXColor.c	33;"	d	file:
MIN_SCROLLBAR_VALUE	macosx/tkMacOSXScrlbr.c	20;"	d	file:
MIN_SLIDER_LENGTH	unix/tkUnixScrlbr.c	21;"	d	file:
MIN_THUMB_SIZE	generic/ttk/ttkDefaultTheme.c	23;"	d	file:
MIN_THUMB_SIZE	generic/ttk/ttkElements.c	16;"	d	file:
MK_E_MONIKERALREADYREGISTERED	win/tkWinSend.c	30;"	d	file:
MMRep	generic/tkObj.c	/^typedef struct MMRep {$/;"	s	file:
MMRep	generic/tkObj.c	/^} MMRep;$/;"	t	typeref:struct:MMRep	file:
MODIFIER	macosx/tkMacOSXMenu.c	47;"	d	file:
MODIFIER	macosx/tkMacOSXMenu.c	62;"	d	file:
MODULE_SCOPE	generic/tkInt.h	56;"	d
MODULE_SCOPE	generic/tkInt.h	58;"	d
MODULE_SCOPE	generic/ttk/ttkTheme.h	16;"	d
MODULE_SCOPE	generic/ttk/ttkTheme.h	18;"	d
MODULE_SCOPE	unix/tkAppInit.c	33;"	d	file:
MODULE_SCOPE	win/winMain.c	57;"	d	file:
MOTION	generic/tkBind.c	465;"	d	file:
MOUNTAIN_LION_STYLE	macosx/tkMacOSXScrlbr.c	29;"	d	file:
MOUSE_TIMER_INTERVAL	win/tkWinPointer.c	19;"	d	file:
MPadding	generic/ttk/ttkImage.c	/^static Ttk_Box MPadding(Ttk_Box b, Ttk_Padding p)$/;"	f	file:
MSB	generic/tkImgGIF.c	204;"	d	file:
MSBFirst	xlib/X11/X.h	670;"	d
MSEG_SIZE	generic/tkTextMark.c	22;"	d	file:
MULT_CLICKS	generic/tkBind.c	358;"	d	file:
MacButton	macosx/tkMacOSXButton.c	/^} MacButton;$/;"	t	typeref:struct:__anon202	file:
MacCursorData	macosx/tkMacOSXCursor.c	53;"	d	file:
MacDrawable	macosx/tkMacOSXInt.h	/^typedef struct TkWindowPrivate MacDrawable;$/;"	t	typeref:struct:TkWindowPrivate
MacFileType	generic/tkFileFilter.h	/^typedef struct MacFileType {$/;"	s
MacFileType	generic/tkFileFilter.h	/^} MacFileType;$/;"	t	typeref:struct:MacFileType
MacFont	macosx/tkMacOSXFont.c	/^} MacFont;$/;"	t	typeref:struct:__anon203	file:
MacMenuButton	macosx/tkMacOSXMenubutton.c	/^typedef struct MacMenuButton {$/;"	s	file:
MacMenuButton	macosx/tkMacOSXMenubutton.c	/^} MacMenuButton;$/;"	t	typeref:struct:MacMenuButton	file:
MacScale	macosx/tkMacOSXScale.c	/^typedef struct MacScale {$/;"	s	file:
MacScale	macosx/tkMacOSXScale.c	/^} MacScale;$/;"	t	typeref:struct:MacScale	file:
MacScaleEventProc	macosx/tkMacOSXScale.c	/^MacScaleEventProc($/;"	f	file:
MacScrollbar	macosx/tkMacOSXScrlbr.c	/^typedef struct MacScrollbar {$/;"	s	file:
MacScrollbar	macosx/tkMacOSXScrlbr.c	/^} MacScrollbar;$/;"	t	typeref:struct:MacScrollbar	file:
MacXCursorData	macosx/tkMacOSXCursor.c	54;"	d	file:
MacXIdAlloc	macosx/tkMacOSXXStubs.c	/^MacXIdAlloc($/;"	f	file:
MaintainCheckProc	generic/tkGeometry.c	/^MaintainCheckProc($/;"	f	file:
MaintainMaster	generic/tkGeometry.c	/^typedef struct MaintainMaster {$/;"	s	file:
MaintainMaster	generic/tkGeometry.c	/^} MaintainMaster;$/;"	t	typeref:struct:MaintainMaster	file:
MaintainMasterProc	generic/tkGeometry.c	/^MaintainMasterProc($/;"	f	file:
MaintainSlave	generic/tkGeometry.c	/^typedef struct MaintainSlave {$/;"	s	file:
MaintainSlave	generic/tkGeometry.c	/^} MaintainSlave;$/;"	t	typeref:struct:MaintainSlave	file:
MaintainSlaveProc	generic/tkGeometry.c	/^MaintainSlaveProc($/;"	f	file:
MakeFilter	win/tkWinDialog.c	/^MakeFilter($/;"	f	file:
MakeFilterVista	win/tkWinDialog.c	/^static int MakeFilterVista($/;"	f	file:
MakeIconOrCursorFromResource	win/tkWinWm.c	/^MakeIconOrCursorFromResource($/;"	f	file:
MakeObjIndex	generic/tkTextIndex.c	/^MakeObjIndex($/;"	f	file:
MakeTransparentWindowExist	generic/tkBusy.c	/^MakeTransparentWindowExist($/;"	f	file:
ManagerEventHandler	generic/ttk/ttkManager.c	/^static void ManagerEventHandler(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
ManagerEventMask	generic/ttk/ttkManager.c	/^static const int ManagerEventMask = StructureNotifyMask;$/;"	v	file:
ManagerIdleProc	generic/ttk/ttkManager.c	/^static void ManagerIdleProc(ClientData clientData)$/;"	f	file:
MapFrame	generic/tkFrame.c	/^MapFrame($/;"	f	file:
MapNotify	xlib/X11/X.h	158;"	d
MapRequest	xlib/X11/X.h	159;"	d
MappingBusy	xlib/X11/X.h	614;"	d
MappingFailed	xlib/X11/X.h	615;"	d
MappingKeyboard	xlib/X11/X.h	618;"	d
MappingModifier	xlib/X11/X.h	617;"	d
MappingNotify	xlib/X11/X.h	173;"	d
MappingPointer	xlib/X11/X.h	619;"	d
MappingSuccess	xlib/X11/X.h	613;"	d
MarkCheckProc	generic/tkTextMark.c	/^MarkCheckProc($/;"	f	file:
MarkCleanupProc	generic/tkTextMark.c	/^MarkCleanupProc($/;"	f	file:
MarkDeleteProc	generic/tkTextMark.c	/^MarkDeleteProc($/;"	f	file:
MarkFindNext	generic/tkTextMark.c	/^MarkFindNext($/;"	f	file:
MarkFindPrev	generic/tkTextMark.c	/^MarkFindPrev($/;"	f	file:
MarkLayoutProc	generic/tkTextMark.c	/^MarkLayoutProc($/;"	f	file:
Mask	xlib/X11/X.h	/^typedef unsigned long Mask;$/;"	t
Master	generic/tkPlace.c	/^typedef struct Master {$/;"	s	file:
Master	generic/tkPlace.c	/^} Master;$/;"	t	typeref:struct:Master	file:
MasterStructureProc	generic/tkPlace.c	/^MasterStructureProc($/;"	f	file:
MatchFileFormat	generic/tkImgPhoto.c	/^MatchFileFormat($/;"	f	file:
MatchPatterns	generic/tkBind.c	/^MatchPatterns($/;"	f	file:
MatchStringFormat	generic/tkImgPhoto.c	/^MatchStringFormat($/;"	f	file:
MaxCmapsOfScreen	xlib/X11/Xlib.h	120;"	d
MeasureChars	generic/tkTextDisp.c	/^MeasureChars($/;"	f	file:
MeasureUp	generic/tkTextDisp.c	/^MeasureUp($/;"	f	file:
MenuAddOrInsert	generic/tkMenu.c	/^MenuAddOrInsert($/;"	f	file:
MenuButtonBackgroundDrawCB	macosx/tkMacOSXMenubutton.c	/^MenuButtonBackgroundDrawCB ($/;"	f	file:
MenuButtonCmdDeletedProc	generic/tkMenubutton.c	/^MenuButtonCmdDeletedProc($/;"	f	file:
MenuButtonContentDrawCB	macosx/tkMacOSXMenubutton.c	/^MenuButtonContentDrawCB ($/;"	f	file:
MenuButtonEventProc	generic/tkMenubutton.c	/^MenuButtonEventProc($/;"	f	file:
MenuButtonEventProc	macosx/tkMacOSXMenubutton.c	/^MenuButtonEventProc($/;"	f	file:
MenuButtonImageProc	generic/tkMenubutton.c	/^MenuButtonImageProc($/;"	f	file:
MenuButtonTextVarProc	generic/tkMenubutton.c	/^MenuButtonTextVarProc($/;"	f	file:
MenuButtonWidgetObjCmd	generic/tkMenubutton.c	/^MenuButtonWidgetObjCmd($/;"	f	file:
MenuCmdDeletedProc	generic/tkMenu.c	/^MenuCmdDeletedProc($/;"	f	file:
MenuDoXPosition	generic/tkMenu.c	/^MenuDoXPosition($/;"	f	file:
MenuDoYPosition	generic/tkMenu.c	/^MenuDoYPosition($/;"	f	file:
MenuExitHandler	win/tkWinMenu.c	/^MenuExitHandler($/;"	f	file:
MenuIndicatorElement	generic/ttk/ttkClamTheme.c	/^} MenuIndicatorElement;$/;"	t	typeref:struct:__anon56	file:
MenuIndicatorElement	generic/ttk/ttkElements.c	/^} MenuIndicatorElement;$/;"	t	typeref:struct:__anon41	file:
MenuIndicatorElementDraw	generic/ttk/ttkClamTheme.c	/^static void MenuIndicatorElementDraw($/;"	f	file:
MenuIndicatorElementDraw	generic/ttk/ttkElements.c	/^static void MenuIndicatorElementDraw($/;"	f	file:
MenuIndicatorElementOptions	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementOptionSpec MenuIndicatorElementOptions[] =$/;"	v	file:
MenuIndicatorElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec MenuIndicatorElementOptions[] = {$/;"	v	file:
MenuIndicatorElementSize	generic/ttk/ttkClamTheme.c	/^static void MenuIndicatorElementSize($/;"	f	file:
MenuIndicatorElementSize	generic/ttk/ttkElements.c	/^static void MenuIndicatorElementSize($/;"	f	file:
MenuIndicatorElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec MenuIndicatorElementSpec =$/;"	v	file:
MenuIndicatorElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec MenuIndicatorElementSpec = {$/;"	v	file:
MenuNewEntry	generic/tkMenu.c	/^MenuNewEntry($/;"	f	file:
MenuSelectEvent	macosx/tkMacOSXMenu.c	/^MenuSelectEvent($/;"	f
MenuSelectEvent	win/tkWinMenu.c	/^MenuSelectEvent($/;"	f	file:
MenuThreadExitHandler	win/tkWinMenu.c	/^MenuThreadExitHandler($/;"	f	file:
MenuVarProc	generic/tkMenu.c	/^MenuVarProc($/;"	f	file:
MenuWidgetObjCmd	generic/tkMenu.c	/^MenuWidgetObjCmd($/;"	f	file:
MenuWorldChanged	generic/tkMenu.c	/^MenuWorldChanged($/;"	f	file:
MenubarDestroyProc	unix/tkUnixWm.c	/^MenubarDestroyProc($/;"	f	file:
MenubarReqProc	unix/tkUnixWm.c	/^MenubarReqProc($/;"	f	file:
Menubutton	generic/ttk/ttkButton.c	/^} Menubutton;$/;"	t	typeref:struct:__anon24	file:
MenubuttonArrowElement	generic/ttk/ttkDefaultTheme.c	/^} MenubuttonArrowElement;$/;"	t	typeref:struct:__anon93	file:
MenubuttonArrowElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void MenubuttonArrowElementDraw($/;"	f	file:
MenubuttonArrowElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec MenubuttonArrowElementOptions[] = {$/;"	v	file:
MenubuttonArrowElementSize	generic/ttk/ttkDefaultTheme.c	/^static void MenubuttonArrowElementSize($/;"	f	file:
MenubuttonArrowElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec MenubuttonArrowElementSpec = {$/;"	v	file:
MenubuttonArrowPadding	generic/ttk/ttkDefaultTheme.c	/^static Ttk_Padding MenubuttonArrowPadding = { 3, 0, 3, 0 };$/;"	v	file:
MenubuttonCommands	generic/ttk/ttkButton.c	/^static const Ttk_Ensemble MenubuttonCommands[] = {$/;"	v	file:
MenubuttonOptionSpecs	generic/ttk/ttkButton.c	/^static Tk_OptionSpec MenubuttonOptionSpecs[] =$/;"	v	file:
MenubuttonPart	generic/ttk/ttkButton.c	/^} MenubuttonPart;$/;"	t	typeref:struct:__anon23	file:
MenubuttonWidgetSpec	generic/ttk/ttkButton.c	/^static WidgetSpec MenubuttonWidgetSpec =$/;"	v	file:
Message	generic/tkMessage.c	/^} Message;$/;"	t	typeref:struct:__anon153	file:
MessageCmdDeletedProc	generic/tkMessage.c	/^MessageCmdDeletedProc($/;"	f	file:
MessageEventProc	generic/tkMessage.c	/^MessageEventProc($/;"	f	file:
MessageTextVarProc	generic/tkMessage.c	/^MessageTextVarProc($/;"	f	file:
MessageWidgetObjCmd	generic/tkMessage.c	/^MessageWidgetObjCmd($/;"	f	file:
MessageWorldChanged	generic/tkMessage.c	/^MessageWorldChanged($/;"	f	file:
Mgetc	generic/tkImgGIF.c	/^Mgetc($/;"	f	file:
MigrateHashEntries	generic/tkListbox.c	/^MigrateHashEntries($/;"	f	file:
MinCmapsOfScreen	xlib/X11/Xlib.h	119;"	d
MissedAnyParameters	macosx/tkMacOSXHLEvents.c	/^MissedAnyParameters($/;"	f	file:
Mod1MapIndex	xlib/X11/X.h	195;"	d
Mod1Mask	xlib/X11/X.h	183;"	d
Mod2MapIndex	xlib/X11/X.h	196;"	d
Mod2Mask	xlib/X11/X.h	184;"	d
Mod3MapIndex	xlib/X11/X.h	197;"	d
Mod3Mask	xlib/X11/X.h	185;"	d
Mod4MapIndex	xlib/X11/X.h	198;"	d
Mod4Mask	xlib/X11/X.h	186;"	d
Mod5MapIndex	xlib/X11/X.h	199;"	d
Mod5Mask	xlib/X11/X.h	187;"	d
ModInfo	generic/tkBind.c	/^} ModInfo;$/;"	t	typeref:struct:__anon173	file:
ModalLoop	win/tkWinScrlbr.c	/^ModalLoop($/;"	f	file:
ModifierCharWidth	macosx/tkMacOSXMenu.c	/^ModifierCharWidth($/;"	f	file:
ModifyField	xlib/xgc.c	217;"	d	file:
MotionNotify	xlib/X11/X.h	145;"	d
MouseEventData	macosx/tkMacOSXMouseEvent.c	/^} MouseEventData;$/;"	t	typeref:struct:__anon194	file:
MouseTimerProc	win/tkWinPointer.c	/^MouseTimerProc($/;"	f
MouseWheelEvent	generic/tk.h	653;"	d
MouseWheelMask	generic/tk.h	656;"	d
Move0	library/demos/goldberg.tcl	/^proc Move0 {w {step {}}} {$/;"	p
Move1	library/demos/goldberg.tcl	/^proc Move1 {w {step {}}} {$/;"	p
Move10	library/demos/goldberg.tcl	/^proc Move10 {w {step {}}} {$/;"	p
Move11	library/demos/goldberg.tcl	/^proc Move11 {w {step {}}} {$/;"	p
Move12	library/demos/goldberg.tcl	/^proc Move12 {w {step {}}} {$/;"	p
Move13	library/demos/goldberg.tcl	/^proc Move13 {w {step {}}} {$/;"	p
Move14	library/demos/goldberg.tcl	/^proc Move14 {w {step {}}} {$/;"	p
Move15	library/demos/goldberg.tcl	/^proc Move15 {w {step {}}} {$/;"	p
Move15a	library/demos/goldberg.tcl	/^proc Move15a {w} {$/;"	p
Move16	library/demos/goldberg.tcl	/^proc Move16 {w {step {}}} {$/;"	p
Move17	library/demos/goldberg.tcl	/^proc Move17 {w {step {}}} {$/;"	p
Move18	library/demos/goldberg.tcl	/^proc Move18 {w {step {}}} {$/;"	p
Move19	library/demos/goldberg.tcl	/^proc Move19 {w {step {}}} {$/;"	p
Move2	library/demos/goldberg.tcl	/^proc Move2 {w {step {}}} {$/;"	p
Move20	library/demos/goldberg.tcl	/^proc Move20 {w {step {}}} {$/;"	p
Move21	library/demos/goldberg.tcl	/^proc Move21 {w {step {}}} {$/;"	p
Move22	library/demos/goldberg.tcl	/^proc Move22 {w {step {}}} {$/;"	p
Move23	library/demos/goldberg.tcl	/^proc Move23 {w {step {}}} {$/;"	p
Move24	library/demos/goldberg.tcl	/^proc Move24 {w {step {}}} {$/;"	p
Move25	library/demos/goldberg.tcl	/^proc Move25 {w {step {}}} {$/;"	p
Move26	library/demos/goldberg.tcl	/^proc Move26 {w {step {}}} {$/;"	p
Move3	library/demos/goldberg.tcl	/^proc Move3 {w {step {}}} {$/;"	p
Move4	library/demos/goldberg.tcl	/^proc Move4 {w {step {}}} {$/;"	p
Move5	library/demos/goldberg.tcl	/^proc Move5 {w {step {}}} {$/;"	p
Move6	library/demos/goldberg.tcl	/^proc Move6 {w {step {}}} {$/;"	p
Move7	library/demos/goldberg.tcl	/^proc Move7 {w {step {}}} {$/;"	p
Move8	library/demos/goldberg.tcl	/^proc Move8 {w {step {}}} {$/;"	p
Move9	library/demos/goldberg.tcl	/^proc Move9 {w {step {}}} {$/;"	p
MoveAbs	library/demos/goldberg.tcl	/^proc MoveAbs {w item xy} {$/;"	p
MovePiece	library/demos/knightstour.tcl	/^proc MovePiece {dlg last square} {$/;"	p
MovePointer2	generic/tkGrab.c	/^MovePointer2($/;"	f	file:
MoveResizeWindow	macosx/tkMacOSXSubwindows.c	/^MoveResizeWindow($/;"	f	file:
MoveSash	generic/tkPanedWindow.c	/^MoveSash($/;"	f	file:
Mread	generic/tkImgGIF.c	/^Mread($/;"	f	file:
MsgBoxCBTProc	win/tkWinDialog.c	/^MsgBoxCBTProc($/;"	f	file:
MultiFontTextOut	win/tkWinFont.c	/^MultiFontTextOut($/;"	f	file:
N	library/demos/knightstour.tcl	/^proc N {square} {$/;"	p
NBBY	macosx/tkMacOSXPort.h	100;"	d
NBBY	unix/tkUnixPort.h	109;"	d
NBBY	win/tkWinPort.h	77;"	d
NEARBY_MS	generic/tkBind.c	237;"	d	file:
NEARBY_PIXELS	generic/tkBind.c	236;"	d	file:
NEED_REPICK	generic/tkText.h	817;"	d
NET_WM_STATE_MAX_ATOMS	unix/tkUnixWm.c	5099;"	d	file:
NEVER_SET	generic/tkScale.h	196;"	d
NEW_LAYOUT	generic/tkTextDisp.c	283;"	d	file:
NEW_STYLE_COMMANDS	generic/tkScrollbar.h	156;"	d
NFDBITS	macosx/tkMacOSXPort.h	91;"	d
NFDBITS	unix/tkUnixPort.h	100;"	d
NODE	generic/tkOption.c	93;"	d	file:
NONE	generic/tkTest.c	/^    NONE,$/;"	e	enum:__anon147	file:
NONE	macosx/tkMacOSXCursor.c	22;"	d	file:
NON_AA_CG_OFFSET	macosx/tkMacOSXDraw.c	35;"	d	file:
NOPAD	win/ttkWinXPTheme.c	942;"	d	file:
NORMAL_BG	macosx/tkMacOSXDefault.h	36;"	d
NORMAL_BG	unix/tkUnixDefault.h	30;"	d
NORMAL_BG	win/tkWinDefault.h	29;"	d
NORMAL_FG	win/tkWinDefault.h	30;"	d
NOTSRCAND	win/tkWinDraw.c	52;"	d	file:
NOTSRCINVERT	win/tkWinDraw.c	53;"	d	file:
NO_DEPRECATED_FLAGS	unix/Makefile	/^NO_DEPRECATED_FLAGS	= -DTCL_NO_DEPRECATED$/;"	m
NO_SHLWAPI_GDI	win/nmakehlp.c	17;"	d	file:
NO_SHLWAPI_REG	win/nmakehlp.c	19;"	d	file:
NO_SHLWAPI_STREAM	win/nmakehlp.c	18;"	d	file:
NSMenu	macosx/tkMacOSXMenus.c	/^@implementation NSMenu(TKUtils)$/;"	f
NSMenuItem	macosx/tkMacOSXMenus.c	/^@implementation NSMenuItem(TKUtils)$/;"	f
NSTextInputContextKeyboardSelectionDidChangeNotification	macosx/tkMacOSXInit.c	36;"	d	file:
NSView	macosx/tkMacOSXInt.h	153;"	d
NSView	macosx/tkMacOSXInt.h	56;"	d
NSWindow	macosx/tkMacOSXWm.c	/^@implementation NSWindow(TKWm)$/;"	f
NSWindowDidEndLiveResizeNotification	macosx/tkMacOSXWindowEvent.c	47;"	d	file:
NSWindowWillMoveEventType	macosx/tkMacOSXEvent.c	/^    NSWindowWillMoveEventType = 20$/;"	e	enum:__anon207	file:
NSWindowWillMoveEventType	macosx/tkMacOSXMouseEvent.c	/^    NSWindowWillMoveEventType = 20$/;"	e	enum:__anon195	file:
NSWindowWillStartLiveResizeNotification	macosx/tkMacOSXWindowEvent.c	46;"	d	file:
NS_KEYLOG	macosx/tkMacOSXKeyEvent.c	24;"	d	file:
NULL	compat/unistd.h	20;"	d
NUMERIC	generic/tkText.h	/^typedef enum {LEFT, RIGHT, CENTER, NUMERIC} TkTextTabAlign;$/;"	e	enum:__anon160
NUM_BIND_TAGS	generic/tkTextTag.c	1718;"	d	file:
NUM_SIZE	generic/tkBind.c	1917;"	d	file:
NUM_SPEC	unix/tkUnixRFont.c	740;"	d	file:
NUM_STACKS	generic/tkOption.c	163;"	d	file:
NUM_STATIC	generic/tkCanvas.c	5125;"	d	file:
NUM_TAG_INFOS	generic/tkTextBTree.c	3353;"	d	file:
NUM_TYPES	win/tkWinDialog.c	116;"	d	file:
N_COLOR_HASH	generic/tkImgPhInstance.c	51;"	d	file:
NameRegistry	macosx/tkMacOSXSend.c	/^typedef struct NameRegistry {$/;"	s	file:
NameRegistry	macosx/tkMacOSXSend.c	/^} NameRegistry;$/;"	t	typeref:struct:NameRegistry	file:
NameRegistry	unix/tkUnixSend.c	/^typedef struct NameRegistry {$/;"	s	file:
NameRegistry	unix/tkUnixSend.c	/^} NameRegistry;$/;"	t	typeref:struct:NameRegistry	file:
NameToWindow	generic/tkBind.c	/^NameToWindow($/;"	f	file:
NameWindow	generic/tkWindow.c	/^NameWindow($/;"	f	file:
NamedFont	generic/tkFont.c	/^typedef struct NamedFont {$/;"	s	file:
NamedFont	generic/tkFont.c	/^} NamedFont;$/;"	t	typeref:struct:NamedFont	file:
NearestListboxElement	generic/tkListbox.c	/^NearestListboxElement($/;"	f	file:
NeedFunctionPrototypes	xlib/X11/Xfuncproto.h	23;"	d
NeedNestedPrototypes	xlib/X11/Xfuncproto.h	33;"	d
NeedVarargsPrototypes	xlib/X11/Xfuncproto.h	27;"	d
NeedWidePrototypes	xlib/X11/Xfuncproto.h	42;"	d
NeedWidePrototypes	xlib/X11/Xfuncproto.h	44;"	d
NewApp	generic/tkTest.c	/^typedef struct NewApp {$/;"	s	file:
NewApp	generic/tkTest.c	/^} NewApp;$/;"	t	typeref:struct:NewApp	file:
NewArray	generic/tkOption.c	/^NewArray($/;"	f	file:
NewChunk	generic/tkFont.c	/^NewChunk($/;"	f	file:
NewElementClass	generic/ttk/ttkTheme.c	/^NewElementClass(const char *name, Ttk_ElementSpec *specPtr,void *clientData)$/;"	f	file:
NewElementData	win/ttkWinXPTheme.c	/^NewElementData(XPThemeProcs *procs, ElementInfo *info)$/;"	f	file:
NewGrabWinEvent	generic/tkGrab.c	/^typedef struct NewGrabWinEvent {$/;"	s	file:
NewGrabWinEvent	generic/tkGrab.c	/^} NewGrabWinEvent;$/;"	t	typeref:struct:NewGrabWinEvent	file:
NewItem	generic/ttk/ttkTreeview.c	/^static TreeItem *NewItem(void)$/;"	f	file:
NewNativeObj	generic/tkMain.c	/^    static Tcl_Obj *NewNativeObj(char *string, int length) {$/;"	f	file:
NewNativeObj	generic/tkMain.c	87;"	d	file:
NewPairObj	generic/tkGrid.c	/^NewPairObj($/;"	f	file:
NewQuadObj	generic/tkGrid.c	/^NewQuadObj($/;"	f	file:
NewSlave	generic/ttk/ttkManager.c	/^static Ttk_Slave *NewSlave($/;"	f	file:
NewStyle	generic/ttk/ttkTheme.c	/^static Style *NewStyle()$/;"	f	file:
NewTag	generic/ttk/ttkTagSet.c	/^static Ttk_Tag NewTag(Ttk_TagTable tagTable, const char *tagName)$/;"	f	file:
NewTheme	generic/ttk/ttkTheme.c	/^static Theme *NewTheme(Ttk_ResourceCache cache, Ttk_Theme parent)$/;"	f	file:
Next	library/demos/knightstour.tcl	/^proc Next {square} {$/;"	p
NextBitmapWord	generic/tkImgBmap.c	/^NextBitmapWord($/;"	f	file:
NextChild	generic/tkBusy.c	/^NextChild($/;"	f	file:
NextItem	generic/tkCanvas.c	/^NextItem($/;"	f	file:
NextPreorder	generic/ttk/ttkTreeview.c	/^static TreeItem *NextPreorder(TreeItem *item)$/;"	f	file:
NextRequest	xlib/X11/Xlib.h	99;"	d
NextStep	library/demos/goldberg.tcl	/^proc NextStep {w} {$/;"	p
NextTab	generic/ttk/ttkNotebook.c	/^static int NextTab(Notebook *nb, int index)$/;"	f	file:
NextTabStop	generic/tkTextDisp.c	/^NextTabStop($/;"	f	file:
NoEventMask	xlib/X11/X.h	110;"	d
NoExpose	xlib/X11/X.h	153;"	d
NoSymbol	xlib/X11/X.h	101;"	d
NoThemeMetric	macosx/ttkMacOSXTheme.c	105;"	d	file:
NoValue	xlib/X11/Xutil.h	40;"	d
Node	generic/tkTextBTree.c	/^typedef struct Node {$/;"	s	file:
Node	generic/tkTextBTree.c	/^} Node;$/;"	t	typeref:struct:Node	file:
Nonconvex	xlib/X11/X.h	508;"	d
None	xlib/X11/X.h	76;"	d
NormalState	xlib/X11/Xutil.h	118;"	d
NorthEastGravity	xlib/X11/X.h	379;"	d
NorthGravity	xlib/X11/X.h	378;"	d
NorthWestGravity	xlib/X11/X.h	377;"	d
NotUseful	xlib/X11/X.h	394;"	d
Notebook	generic/ttk/ttkNotebook.c	/^} Notebook;$/;"	t	typeref:struct:__anon67	file:
NotebookAddCommand	generic/ttk/ttkNotebook.c	/^static int NotebookAddCommand($/;"	f	file:
NotebookCleanup	generic/ttk/ttkNotebook.c	/^static void NotebookCleanup(void *recordPtr)$/;"	f	file:
NotebookCommands	generic/ttk/ttkNotebook.c	/^static const Ttk_Ensemble NotebookCommands[] = {$/;"	v	file:
NotebookConfigure	generic/ttk/ttkNotebook.c	/^static int NotebookConfigure(Tcl_Interp *interp, void *clientData, int mask)$/;"	f	file:
NotebookDisplay	generic/ttk/ttkNotebook.c	/^static void NotebookDisplay(void *clientData, Drawable d)$/;"	f	file:
NotebookDoLayout	generic/ttk/ttkNotebook.c	/^static void NotebookDoLayout(void *recordPtr)$/;"	f	file:
NotebookElement	generic/ttk/ttkClamTheme.c	/^} NotebookElement;$/;"	t	typeref:struct:__anon59	file:
NotebookElementOptions	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementOptionSpec NotebookElementOptions[] = {$/;"	v	file:
NotebookEventHandler	generic/ttk/ttkNotebook.c	/^static void NotebookEventHandler(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
NotebookEventMask	generic/ttk/ttkNotebook.c	/^static const int NotebookEventMask$/;"	v	file:
NotebookForgetCommand	generic/ttk/ttkNotebook.c	/^static int NotebookForgetCommand($/;"	f	file:
NotebookGetLayout	generic/ttk/ttkNotebook.c	/^static Ttk_Layout NotebookGetLayout($/;"	f	file:
NotebookHideCommand	generic/ttk/ttkNotebook.c	/^static int NotebookHideCommand($/;"	f	file:
NotebookIdentifyCommand	generic/ttk/ttkNotebook.c	/^static int NotebookIdentifyCommand($/;"	f	file:
NotebookIndexCommand	generic/ttk/ttkNotebook.c	/^static int NotebookIndexCommand($/;"	f	file:
NotebookInitialize	generic/ttk/ttkNotebook.c	/^static void NotebookInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
NotebookInsertCommand	generic/ttk/ttkNotebook.c	/^static int NotebookInsertCommand($/;"	f	file:
NotebookManagerSpec	generic/ttk/ttkNotebook.c	/^static Ttk_ManagerSpec NotebookManagerSpec = {$/;"	v	file:
NotebookOptionSpecs	generic/ttk/ttkNotebook.c	/^static Tk_OptionSpec NotebookOptionSpecs[] =$/;"	v	file:
NotebookPart	generic/ttk/ttkNotebook.c	/^} NotebookPart;$/;"	t	typeref:struct:__anon66	file:
NotebookPlaceSlave	generic/ttk/ttkNotebook.c	/^static void NotebookPlaceSlave(Notebook *nb, int slaveIndex)$/;"	f	file:
NotebookPlaceSlaves	generic/ttk/ttkNotebook.c	/^static void NotebookPlaceSlaves(void *recordPtr)$/;"	f	file:
NotebookSelectCommand	generic/ttk/ttkNotebook.c	/^static int NotebookSelectCommand($/;"	f	file:
NotebookSize	generic/ttk/ttkNotebook.c	/^static int NotebookSize(void *clientData, int *widthPtr, int *heightPtr)$/;"	f	file:
NotebookStyle	generic/ttk/ttkNotebook.c	/^} NotebookStyle;$/;"	t	typeref:struct:__anon68	file:
NotebookStyleOptions	generic/ttk/ttkNotebook.c	/^static void NotebookStyleOptions(Notebook *nb, NotebookStyle *nbstyle)$/;"	f	file:
NotebookTabCommand	generic/ttk/ttkNotebook.c	/^static int NotebookTabCommand($/;"	f	file:
NotebookTabsCommand	generic/ttk/ttkNotebook.c	/^static int NotebookTabsCommand($/;"	f	file:
NotebookWidgetSpec	generic/ttk/ttkNotebook.c	/^static WidgetSpec NotebookWidgetSpec =$/;"	v	file:
NotifyAncestor	xlib/X11/X.h	235;"	d
NotifyDetailNone	xlib/X11/X.h	242;"	d
NotifyGrab	xlib/X11/X.h	227;"	d
NotifyHint	xlib/X11/X.h	231;"	d
NotifyInferior	xlib/X11/X.h	237;"	d
NotifyNonlinear	xlib/X11/X.h	238;"	d
NotifyNonlinearVirtual	xlib/X11/X.h	239;"	d
NotifyNormal	xlib/X11/X.h	226;"	d
NotifyPointer	xlib/X11/X.h	240;"	d
NotifyPointerRoot	xlib/X11/X.h	241;"	d
NotifyUngrab	xlib/X11/X.h	228;"	d
NotifyVirtual	xlib/X11/X.h	236;"	d
NotifyVisibility	macosx/tkMacOSXSubwindows.c	/^NotifyVisibility($/;"	f	file:
NotifyVisibility	win/tkWinWindow.c	/^NotifyVisibility($/;"	f	file:
NotifyWhileGrabbed	xlib/X11/X.h	229;"	d
NullElement	generic/ttk/ttkTheme.h	/^} NullElement;$/;"	t	typeref:struct:__anon75
NullImageChanged	generic/ttk/ttkCache.c	/^static void NullImageChanged(ClientData clientData,$/;"	f	file:
NullImageChanged	generic/ttk/ttkImage.c	/^static void NullImageChanged(ClientData clientData,$/;"	f	file:
OBJROOT	macosx/GNUmakefile	/^OBJROOT			?= ${SYMROOT}$/;"	m
OBJS	unix/Makefile	/^OBJS =  $(GENERIC_OBJS) $(WIDG_OBJS) $(CANV_OBJS) $(IMAGE_OBJS) $(TEXT_OBJS) \\$/;"	m
OBJ_AT	generic/ttk/ttkTagSet.c	265;"	d	file:
OBJ_DIR	macosx/GNUmakefile	/^OBJ_DIR			= ${OBJROOT}\/${BUILD_STYLE}$/;"	m
ODD	generic/tkTest.c	119;"	d	file:
ODD_TYPE	generic/tkTest.c	/^    ODD_TYPE,$/;"	e	enum:__anon147	file:
ODS_NOACCEL	win/tkWinMenu.c	59;"	d	file:
OEMRESOURCE	win/tkWinButton.c	13;"	d	file:
OEMRESOURCE	win/tkWinMenu.c	14;"	d	file:
OFNData	win/tkWinDialog.c	/^typedef struct OFNData {$/;"	s	file:
OFNData	win/tkWinDialog.c	/^} OFNData;$/;"	t	typeref:struct:OFNData	file:
OFNHookProc	win/tkWinDialog.c	/^OFNHookProc($/;"	f	file:
OFNOper	win/tkWinDialog.c	/^enum OFNOper {$/;"	g	file:
OFNOpts	win/tkWinDialog.c	/^typedef struct OFNOpts {$/;"	s	file:
OFNOpts	win/tkWinDialog.c	/^} OFNOpts;$/;"	t	typeref:struct:OFNOpts	file:
OFN_DIR_CHOOSE	win/tkWinDialog.c	/^    OFN_DIR_CHOOSE              \/* tk_chooseDirectory *\/$/;"	e	enum:OFNOper	file:
OFN_FILE_OPEN	win/tkWinDialog.c	/^    OFN_FILE_OPEN,              \/* tk_getSaveFile *\/$/;"	e	enum:OFNOper	file:
OFN_FILE_SAVE	win/tkWinDialog.c	/^    OFN_FILE_SAVE,              \/* tk_getOpenFile *\/$/;"	e	enum:OFNOper	file:
OLD_STYLE	generic/tkPack.c	98;"	d	file:
OLD_Y_INVALID	generic/tkTextDisp.c	286;"	d	file:
ONFIGURE_ARGS	macosx/GNUmakefile	/^override CONFIGURE_ARGS := ${CONFIGURE_ARGS} --enable-aqua$/;"	m
ONFIGURE_ARGS	macosx/GNUmakefile	/^override CONFIGURE_ARGS := ${CONFIGURE_ARGS} --enable-xft$/;"	m
OPEN_COMMAND	macosx/tkMacOSXDialog.c	/^    OPEN_TYPEVARIABLE, OPEN_COMMAND,$/;"	e	enum:openOptions	file:
OPEN_DEFAULT	macosx/tkMacOSXDialog.c	/^    OPEN_DEFAULT, OPEN_FILETYPES, OPEN_INITDIR, OPEN_INITFILE,$/;"	e	enum:openOptions	file:
OPEN_FILETYPES	macosx/tkMacOSXDialog.c	/^    OPEN_DEFAULT, OPEN_FILETYPES, OPEN_INITDIR, OPEN_INITFILE,$/;"	e	enum:openOptions	file:
OPEN_INITDIR	macosx/tkMacOSXDialog.c	/^    OPEN_DEFAULT, OPEN_FILETYPES, OPEN_INITDIR, OPEN_INITFILE,$/;"	e	enum:openOptions	file:
OPEN_INITFILE	macosx/tkMacOSXDialog.c	/^    OPEN_DEFAULT, OPEN_FILETYPES, OPEN_INITDIR, OPEN_INITFILE,$/;"	e	enum:openOptions	file:
OPEN_MAX	win/tkWinPort.h	80;"	d
OPEN_MESSAGE	macosx/tkMacOSXDialog.c	/^    OPEN_MESSAGE, OPEN_MULTIPLE, OPEN_PARENT, OPEN_TITLE,$/;"	e	enum:openOptions	file:
OPEN_MULTIPLE	macosx/tkMacOSXDialog.c	/^    OPEN_MESSAGE, OPEN_MULTIPLE, OPEN_PARENT, OPEN_TITLE,$/;"	e	enum:openOptions	file:
OPEN_PARENT	macosx/tkMacOSXDialog.c	/^    OPEN_MESSAGE, OPEN_MULTIPLE, OPEN_PARENT, OPEN_TITLE,$/;"	e	enum:openOptions	file:
OPEN_TITLE	macosx/tkMacOSXDialog.c	/^    OPEN_MESSAGE, OPEN_MULTIPLE, OPEN_PARENT, OPEN_TITLE,$/;"	e	enum:openOptions	file:
OPEN_TYPEVARIABLE	macosx/tkMacOSXDialog.c	/^    OPEN_TYPEVARIABLE, OPEN_COMMAND,$/;"	e	enum:openOptions	file:
OPTIONS	win/buildall.vc.bat	/^:OPTIONS$/;"	l
OPTIONS_DONE	win/buildall.vc.bat	/^:OPTIONS_DONE$/;"	l
OPTIONS_FREED	generic/tkText.h	818;"	d
OPTION_MASK	macosx/tkMacOSXKeyboard.c	28;"	d	file:
OPTION_NEEDS_FREEING	generic/tkConfig.c	86;"	d	file:
OPTS	win/buildall.vc.bat	/^if not %SYMBOLS%.==. set OPTS=symbols$/;"	v
OPTS	win/buildall.vc.bat	/^if not %SYMBOLS%.==. set OPTS=symbols,static,msvcrt$/;"	v
OPTS	win/buildall.vc.bat	/^set OPTS=$/;"	v
OPTS	win/buildall.vc.bat	/^set OPTS=none$/;"	v
OPTS	win/buildall.vc.bat	/^set OPTS=static,msvcrt$/;"	v
OPT_BACKGROUND	generic/tkImgPhoto.c	62;"	d	file:
OPT_COMPOSITE	generic/tkImgPhoto.c	63;"	d	file:
OPT_FORMAT	generic/tkImgPhoto.c	64;"	d	file:
OPT_FROM	generic/tkImgPhoto.c	65;"	d	file:
OPT_GRAYSCALE	generic/tkImgPhoto.c	66;"	d	file:
OPT_SHRINK	generic/tkImgPhoto.c	67;"	d	file:
OPT_SUBSAMPLE	generic/tkImgPhoto.c	68;"	d	file:
OPT_TO	generic/tkImgPhoto.c	69;"	d	file:
OPT_ZOOM	generic/tkImgPhoto.c	70;"	d	file:
ORIENT_HORIZONTAL	generic/tkPanedWindow.c	/^enum orient { ORIENT_HORIZONTAL, ORIENT_VERTICAL };$/;"	e	enum:orient	file:
ORIENT_HORIZONTAL	generic/tkScale.h	/^    ORIENT_HORIZONTAL, ORIENT_VERTICAL$/;"	e	enum:orient
ORIENT_VERTICAL	generic/tkPanedWindow.c	/^enum orient { ORIENT_HORIZONTAL, ORIENT_VERTICAL };$/;"	e	enum:orient	file:
ORIENT_VERTICAL	generic/tkScale.h	/^    ORIENT_HORIZONTAL, ORIENT_VERTICAL$/;"	e	enum:orient
OSType	generic/tkFileFilter.h	16;"	d
OSTypeFromString	macosx/tkMacOSXBitmap.c	/^OSTypeFromString(const char *s, OSType *t) {$/;"	f	file:
OTHER	generic/tkScale.h	205;"	d
OUTSIDE	generic/tkScrollbar.h	135;"	d
ObjectIsEmpty	generic/tkConfig.c	/^ObjectIsEmpty($/;"	f	file:
ObjectIsEmpty	generic/tkPanedWindow.c	/^ObjectIsEmpty($/;"	f	file:
ObjectIsEmpty	generic/tkText.c	/^ObjectIsEmpty($/;"	f	file:
OpenIM	unix/tkUnixEvent.c	/^OpenIM($/;"	f	file:
OpenThemeData	win/ttkWinXPTheme.c	/^    OpenThemeDataProc			*OpenThemeData;$/;"	m	struct:__anon238	file:
OpenThemeDataProc	win/ttkWinXPTheme.c	/^typedef HTHEME  (STDAPICALLTYPE OpenThemeDataProc)(HWND hwnd,$/;"	t	file:
Opposite	xlib/X11/X.h	421;"	d
Option	generic/tkConfig.c	/^} Option;$/;"	t	typeref:struct:TkOption	file:
OptionInit	generic/tkOption.c	/^OptionInit($/;"	f	file:
OptionMap	generic/ttk/ttkTheme.c	/^typedef const Tk_OptionSpec **OptionMap;$/;"	t	file:
OptionTable	generic/tkConfig.c	/^typedef struct OptionTable {$/;"	s	file:
OptionTable	generic/tkConfig.c	/^} OptionTable;$/;"	t	typeref:struct:OptionTable	file:
OptionTables	generic/tkPanedWindow.c	/^} OptionTables;$/;"	t	typeref:struct:__anon139	file:
OptionThreadExitProc	generic/tkOption.c	/^OptionThreadExitProc($/;"	f	file:
Out	win/nmakehlp.c	/^pipeinfo Out = {INVALID_HANDLE_VALUE, '\\0'};$/;"	v
Output	generic/tkImgGIF.c	/^Output($/;"	f	file:
OvalToArea	generic/tkRectOval.c	/^OvalToArea($/;"	f	file:
OvalToPoint	generic/tkRectOval.c	/^OvalToPoint($/;"	f	file:
OwnerGrabButtonMask	xlib/X11/X.h	135;"	d
PAD	win/ttkWinXPTheme.c	1040;"	d	file:
PAD	win/ttkWinXPTheme.c	941;"	d	file:
PAD_MARGINS	win/ttkWinXPTheme.c	385;"	d	file:
PAL_BACKGROUND	win/tkWinButton.c	/^    PAL_BACKGROUND = 6$/;"	e	enum:__anon253	file:
PAL_BOTTOM_INNER	win/tkWinButton.c	/^    PAL_BOTTOM_INNER = 3,$/;"	e	enum:__anon253	file:
PAL_BOTTOM_OUTER	win/tkWinButton.c	/^    PAL_BOTTOM_OUTER = 2,$/;"	e	enum:__anon253	file:
PAL_CHECK	win/tkWinButton.c	/^    PAL_CHECK = 0,$/;"	e	enum:__anon253	file:
PAL_INTERIOR	win/tkWinButton.c	/^    PAL_INTERIOR = 4,$/;"	e	enum:__anon253	file:
PAL_TOP_INNER	win/tkWinButton.c	/^    PAL_TOP_INNER = 5,$/;"	e	enum:__anon253	file:
PAL_TOP_OUTER	win/tkWinButton.c	/^    PAL_TOP_OUTER = 1,$/;"	e	enum:__anon253	file:
PARENT_RECONFIG_PENDING	generic/tkPlace.c	150;"	d	file:
PASSMAINWINDOW	generic/tkWindow.c	99;"	d	file:
PATCH_LEVEL	unix/Makefile	/^PATCH_LEVEL		= .5$/;"	m
PAT_NEARBY	generic/tkBind.c	229;"	d	file:
PAllHints	xlib/X11/Xutil.h	87;"	d
PAspect	xlib/X11/Xutil.h	82;"	d
PBaseSize	xlib/X11/Xutil.h	83;"	d
PD_SRC_OVER	generic/tkImgPhoto.h	226;"	d
PD_SRC_OVER_ALPHA	generic/tkImgPhoto.h	228;"	d
PGM	generic/tkImgPPM.c	30;"	d	file:
PI	generic/tkInt.h	957;"	d
PI	generic/tkInt.h	959;"	d
PIESLICE_STYLE	generic/tkCanvArc.c	/^    PIESLICE_STYLE, CHORD_STYLE, ARC_STYLE$/;"	e	enum:__anon186	file:
PIE_OUTLINE1_PTS	generic/tkCanvArc.c	73;"	d	file:
PIE_OUTLINE2_PTS	generic/tkCanvArc.c	74;"	d	file:
PIXEL_CLIENTS	generic/tkText.c	43;"	d	file:
PIXEL_CLIENTS	generic/tkTextBTree.c	86;"	d	file:
PIXEL_MAGIC	macosx/tkMacOSXPort.h	136;"	d
PKG_ASSOC_KEY	generic/ttk/ttkTheme.c	19;"	d	file:
PKG_INDEX	unix/Makefile	/^PKG_INDEX		= $(PKG_INSTALL_DIR)\/pkgIndex.tcl$/;"	m
PKG_INSTALL_DIR	unix/Makefile	/^PKG_INSTALL_DIR		= $(LIB_INSTALL_DIR)\/$(TK_PKG_DIR)$/;"	m
PMaxSize	xlib/X11/Xutil.h	80;"	d
PMinSize	xlib/X11/Xutil.h	79;"	d
PNG64_BAD	generic/tkImgPNG.c	472;"	d	file:
PNG64_DONE	generic/tkImgPNG.c	471;"	d	file:
PNG64_PAD	generic/tkImgPNG.c	470;"	d	file:
PNG64_SPACE	generic/tkImgPNG.c	469;"	d	file:
PNG64_SPECIAL	generic/tkImgPNG.c	468;"	d	file:
PNGImage	generic/tkImgPNG.c	/^} PNGImage;$/;"	t	typeref:struct:__anon179	file:
PNG_BLOCK_SZ	generic/tkImgPNG.c	18;"	d	file:
PNG_CF_ANCILLARY	generic/tkImgPNG.c	38;"	d	file:
PNG_CF_COPYSAFE	generic/tkImgPNG.c	41;"	d	file:
PNG_CF_PRIVATE	generic/tkImgPNG.c	39;"	d	file:
PNG_CF_RESERVED	generic/tkImgPNG.c	40;"	d	file:
PNG_COLOR_ALPHA	generic/tkImgPNG.c	86;"	d	file:
PNG_COLOR_GRAY	generic/tkImgPNG.c	92;"	d	file:
PNG_COLOR_GRAYALPHA	generic/tkImgPNG.c	95;"	d	file:
PNG_COLOR_INDEXED	generic/tkImgPNG.c	84;"	d	file:
PNG_COLOR_PLTE	generic/tkImgPNG.c	94;"	d	file:
PNG_COLOR_RGB	generic/tkImgPNG.c	93;"	d	file:
PNG_COLOR_RGBA	generic/tkImgPNG.c	96;"	d	file:
PNG_COLOR_USED	generic/tkImgPNG.c	85;"	d	file:
PNG_COMPRESS_DEFLATE	generic/tkImgPNG.c	102;"	d	file:
PNG_FILTER_AVG	generic/tkImgPNG.c	1719;"	d	file:
PNG_FILTER_NONE	generic/tkImgPNG.c	1716;"	d	file:
PNG_FILTER_PAETH	generic/tkImgPNG.c	1720;"	d	file:
PNG_FILTER_SUB	generic/tkImgPNG.c	1717;"	d	file:
PNG_FILTER_UP	generic/tkImgPNG.c	1718;"	d	file:
PNG_FILTMETH_STANDARD	generic/tkImgPNG.c	108;"	d	file:
PNG_INT32	generic/tkImgPNG.c	16;"	d	file:
PNG_INTERLACE_ADAM7	generic/tkImgPNG.c	115;"	d	file:
PNG_INTERLACE_NONE	generic/tkImgPNG.c	114;"	d	file:
PNG_MIN	generic/tkImgPNG.c	19;"	d	file:
PNG_PLTE_MAXSZ	generic/tkImgPNG.c	185;"	d	file:
PNG_SIG_SZ	generic/tkImgPNG.c	25;"	d	file:
PNG_TRNS_MAXSZ	generic/tkImgPNG.c	186;"	d	file:
POSTED	generic/tkMenubutton.h	194;"	d
POST_ABOVE	generic/ttk/ttkDefaultTheme.c	/^enum { POST_ABOVE, POST_BELOW, POST_LEFT, POST_RIGHT, POST_FLUSH };$/;"	e	enum:__anon94	file:
POST_BELOW	generic/ttk/ttkDefaultTheme.c	/^enum { POST_ABOVE, POST_BELOW, POST_LEFT, POST_RIGHT, POST_FLUSH };$/;"	e	enum:__anon94	file:
POST_FLUSH	generic/ttk/ttkDefaultTheme.c	/^enum { POST_ABOVE, POST_BELOW, POST_LEFT, POST_RIGHT, POST_FLUSH };$/;"	e	enum:__anon94	file:
POST_LEFT	generic/ttk/ttkDefaultTheme.c	/^enum { POST_ABOVE, POST_BELOW, POST_LEFT, POST_RIGHT, POST_FLUSH };$/;"	e	enum:__anon94	file:
POST_RIGHT	generic/ttk/ttkDefaultTheme.c	/^enum { POST_ABOVE, POST_BELOW, POST_LEFT, POST_RIGHT, POST_FLUSH };$/;"	e	enum:__anon94	file:
PPM	generic/tkImgPPM.c	31;"	d	file:
PPosition	xlib/X11/Xutil.h	77;"	d
PREALLOC	generic/tkGrid.c	37;"	d	file:
PREFIX	macosx/GNUmakefile	/^PREFIX			?= \/usr\/local$/;"	m
PRIVATE_HDRS	unix/Makefile	/^PRIVATE_HDRS = $(GENERIC_DIR)\/tkInt.h $(GENERIC_DIR)\/tkIntDecls.h \\$/;"	m
PRIVATE_INCLUDE_DIR	unix/Makefile	/^PRIVATE_INCLUDE_DIR	= $(includedir)$/;"	m
PRIVATE_INCLUDE_INSTALL_DIR	unix/Makefile	/^PRIVATE_INCLUDE_INSTALL_DIR = $(INSTALL_ROOT)$(PRIVATE_INCLUDE_DIR)$/;"	m
PRODUCT_NAME	macosx/GNUmakefile	/^PRODUCT_NAME		:= Tk$/;"	m
PROJECT	macosx/GNUmakefile	/^PROJECT			:= tk$/;"	m
PROP	generic/tkBind.c	478;"	d	file:
PROP_EVENTS	unix/tkUnixEmbed.c	1113;"	d	file:
PROTO_FLAGS	unix/Makefile	/^PROTO_FLAGS		=$/;"	m
PROXY_REDRAW_PENDING	generic/tkPanedWindow.c	179;"	d	file:
PResizeInc	xlib/X11/Xutil.h	81;"	d
PSize	xlib/X11/Xutil.h	78;"	d
PTR2INT	generic/tkInt.h	71;"	d
PTR2INT	generic/tkInt.h	74;"	d
PTR2UINT	generic/tkInt.h	80;"	d
PTR2UINT	generic/tkInt.h	83;"	d
PTS_IN_ARROW	generic/tkCanvLine.c	70;"	d	file:
PUBLIC_HDRS	unix/Makefile	/^PUBLIC_HDRS = $(GENERIC_DIR)\/tk.h $(GENERIC_DIR)\/tkDecls.h \\$/;"	m
PULSE_TIMER_MSECS	macosx/tkMacOSXButton.c	50;"	d	file:
PUSH_STYLE	win/tkWinButton.c	22;"	d	file:
PWinGravity	xlib/X11/Xutil.h	84;"	d
PackAfter	generic/tkPack.c	/^PackAfter($/;"	f	file:
PackLostSlaveProc	generic/tkPack.c	/^PackLostSlaveProc($/;"	f	file:
PackReqProc	generic/tkPack.c	/^PackReqProc($/;"	f	file:
PackStructureProc	generic/tkPack.c	/^PackStructureProc($/;"	f	file:
Packer	generic/tkPack.c	/^typedef struct Packer {$/;"	s	file:
Packer	generic/tkPack.c	/^} Packer;$/;"	t	typeref:struct:Packer	file:
PaddingElement	generic/ttk/ttkElements.c	/^} PaddingElement;$/;"	t	typeref:struct:__anon36	file:
PaddingElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec PaddingElementOptions[] = {$/;"	v	file:
PaddingElementSize	generic/ttk/ttkElements.c	/^static void PaddingElementSize($/;"	f	file:
PaddingElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec PaddingElementSpec = {$/;"	v	file:
Paeth	generic/tkImgPNG.c	/^Paeth($/;"	f	file:
PaletteSize	win/tkWinWm.c	/^PaletteSize($/;"	f	file:
Pane	generic/ttk/ttkPanedwindow.c	/^} Pane;$/;"	t	typeref:struct:__anon125	file:
PaneElementDraw	macosx/ttkMacOSXTheme.c	/^static void PaneElementDraw($/;"	f	file:
PaneElementSize	macosx/ttkMacOSXTheme.c	/^static void PaneElementSize($/;"	f	file:
PaneElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec PaneElementSpec = {$/;"	v	file:
PaneOptionSpecs	generic/ttk/ttkNotebook.c	/^static Tk_OptionSpec PaneOptionSpecs[] =$/;"	v	file:
PaneOptionSpecs	generic/ttk/ttkPanedwindow.c	/^static Tk_OptionSpec PaneOptionSpecs[] = {$/;"	v	file:
PaneRemoved	generic/ttk/ttkPanedwindow.c	/^static void PaneRemoved(void *managerData, int index)$/;"	f	file:
PaneRequest	generic/ttk/ttkPanedwindow.c	/^static int PaneRequest(void *managerData, int index, int width, int height)$/;"	f	file:
Paned	generic/ttk/ttkPanedwindow.c	/^} Paned;$/;"	t	typeref:struct:__anon124	file:
PanedAddCommand	generic/ttk/ttkPanedwindow.c	/^static int PanedAddCommand($/;"	f	file:
PanedCleanup	generic/ttk/ttkPanedwindow.c	/^static void PanedCleanup(void *recordPtr)$/;"	f	file:
PanedCommands	generic/ttk/ttkPanedwindow.c	/^static const Ttk_Ensemble PanedCommands[] = {$/;"	v	file:
PanedDisplay	generic/ttk/ttkPanedwindow.c	/^static void PanedDisplay(void *recordPtr, Drawable d)$/;"	f	file:
PanedEventMask	generic/ttk/ttkPanedwindow.c	/^static const unsigned PanedEventMask = LeaveWindowMask;$/;"	v	file:
PanedEventProc	generic/ttk/ttkPanedwindow.c	/^static void PanedEventProc(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
PanedForgetCommand	generic/ttk/ttkPanedwindow.c	/^static int PanedForgetCommand($/;"	f	file:
PanedGetLayout	generic/ttk/ttkPanedwindow.c	/^static Ttk_Layout PanedGetLayout($/;"	f	file:
PanedIdentifyCommand	generic/ttk/ttkPanedwindow.c	/^static int PanedIdentifyCommand($/;"	f	file:
PanedInitialize	generic/ttk/ttkPanedwindow.c	/^static void PanedInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
PanedInsertCommand	generic/ttk/ttkPanedwindow.c	/^static int PanedInsertCommand($/;"	f	file:
PanedManagerSpec	generic/ttk/ttkPanedwindow.c	/^static Ttk_ManagerSpec PanedManagerSpec = {$/;"	v	file:
PanedOptionSpecs	generic/ttk/ttkPanedwindow.c	/^static Tk_OptionSpec PanedOptionSpecs[] = {$/;"	v	file:
PanedPaneCommand	generic/ttk/ttkPanedwindow.c	/^static int PanedPaneCommand($/;"	f	file:
PanedPanesCommand	generic/ttk/ttkPanedwindow.c	/^static int PanedPanesCommand($/;"	f	file:
PanedPart	generic/ttk/ttkPanedwindow.c	/^} PanedPart;$/;"	t	typeref:struct:__anon123	file:
PanedPlaceSlaves	generic/ttk/ttkPanedwindow.c	/^static void PanedPlaceSlaves(void *managerData)$/;"	f	file:
PanedPostConfigure	generic/ttk/ttkPanedwindow.c	/^static int PanedPostConfigure(Tcl_Interp *interp, void *clientData, int mask)$/;"	f	file:
PanedSashposCommand	generic/ttk/ttkPanedwindow.c	/^static int PanedSashposCommand($/;"	f	file:
PanedSize	generic/ttk/ttkPanedwindow.c	/^static int PanedSize(void *recordPtr, int *widthPtr, int *heightPtr)$/;"	f	file:
PanedWidgetSpec	generic/ttk/ttkPanedwindow.c	/^static WidgetSpec PanedWidgetSpec =$/;"	v	file:
PanedWindow	generic/tkPanedWindow.c	/^typedef struct PanedWindow {$/;"	s	file:
PanedWindow	generic/tkPanedWindow.c	/^} PanedWindow;$/;"	t	typeref:struct:PanedWindow	file:
PanedWindowCmdDeletedProc	generic/tkPanedWindow.c	/^PanedWindowCmdDeletedProc($/;"	f	file:
PanedWindowEventProc	generic/tkPanedWindow.c	/^PanedWindowEventProc($/;"	f	file:
PanedWindowIdentifyCoords	generic/tkPanedWindow.c	/^PanedWindowIdentifyCoords($/;"	f	file:
PanedWindowLostSlaveProc	generic/tkPanedWindow.c	/^PanedWindowLostSlaveProc($/;"	f	file:
PanedWindowProxyCommand	generic/tkPanedWindow.c	/^PanedWindowProxyCommand($/;"	f	file:
PanedWindowReqProc	generic/tkPanedWindow.c	/^PanedWindowReqProc($/;"	f	file:
PanedWindowSashCommand	generic/tkPanedWindow.c	/^PanedWindowSashCommand($/;"	f	file:
PanedWindowWidgetObjCmd	generic/tkPanedWindow.c	/^PanedWindowWidgetObjCmd($/;"	f	file:
PanedWindowWorldChanged	generic/tkPanedWindow.c	/^PanedWindowWorldChanged($/;"	f	file:
ParentRelative	xlib/X11/X.h	78;"	d
ParentXId	generic/tkEvent.c	/^ParentXId($/;"	f	file:
ParseAccelerator	macosx/tkMacOSXMenu.c	/^ParseAccelerator($/;"	f	file:
ParseArrowShape	generic/tkCanvLine.c	/^ParseArrowShape($/;"	f	file:
ParseEventDescription	generic/tkBind.c	/^ParseEventDescription($/;"	f	file:
ParseFontNameObj	generic/tkFont.c	/^ParseFontNameObj($/;"	f	file:
ParseFormat	generic/tkImgPNG.c	/^ParseFormat($/;"	f	file:
ParseGeometry	macosx/tkMacOSXWm.c	/^ParseGeometry($/;"	f	file:
ParseGeometry	unix/tkUnixWm.c	/^ParseGeometry($/;"	f	file:
ParseGeometry	win/tkWinWm.c	/^ParseGeometry($/;"	f	file:
ParseInfo	generic/tkImgBmap.c	/^typedef struct ParseInfo {$/;"	s	file:
ParseInfo	generic/tkImgBmap.c	/^} ParseInfo;$/;"	t	typeref:struct:ParseInfo	file:
ParseOFNOptions	win/tkWinDialog.c	/^ParseOFNOptions($/;"	f	file:
ParsePriority	generic/tkOption.c	/^ParsePriority($/;"	f	file:
ParseSubcommandOptions	generic/tkImgPhoto.c	/^ParseSubcommandOptions($/;"	f	file:
PatSeq	generic/tkBind.c	/^typedef struct PatSeq {$/;"	s	file:
PatSeq	generic/tkBind.c	/^} PatSeq;$/;"	t	typeref:struct:PatSeq	file:
Pattern	win/ttkWinTheme.c	/^static const WORD Pattern[] = {$/;"	v	file:
PatternBitmap	win/ttkWinTheme.c	/^    HBITMAP    PatternBitmap;$/;"	m	struct:__anon249	file:
PatternBrush	win/ttkWinTheme.c	/^    HBRUSH     PatternBrush;$/;"	m	struct:__anon249	file:
PatternTableKey	generic/tkBind.c	/^} PatternTableKey;$/;"	t	typeref:struct:__anon168	file:
PbarElement	generic/ttk/ttkElements.c	/^} PbarElement;$/;"	t	typeref:struct:__anon46	file:
PbarElement	macosx/ttkMacOSXTheme.c	/^} PbarElement;$/;"	t	typeref:struct:__anon213	file:
PbarElementDraw	generic/ttk/ttkClamTheme.c	/^static void PbarElementDraw($/;"	f	file:
PbarElementDraw	generic/ttk/ttkElements.c	/^static void PbarElementDraw($/;"	f	file:
PbarElementDraw	macosx/ttkMacOSXTheme.c	/^static void PbarElementDraw($/;"	f	file:
PbarElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec PbarElementOptions[] = {$/;"	v	file:
PbarElementOptions	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementOptionSpec PbarElementOptions[] = {$/;"	v	file:
PbarElementSize	generic/ttk/ttkClamTheme.c	/^static void PbarElementSize($/;"	f	file:
PbarElementSize	generic/ttk/ttkElements.c	/^static void PbarElementSize($/;"	f	file:
PbarElementSize	macosx/ttkMacOSXTheme.c	/^static void PbarElementSize($/;"	f	file:
PbarElementSize	win/ttkWinXPTheme.c	/^static void PbarElementSize($/;"	f	file:
PbarElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec PbarElementSpec = {$/;"	v	file:
PbarElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec PbarElementSpec = {$/;"	v	file:
PbarElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec PbarElementSpec = {$/;"	v	file:
PbarElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec PbarElementSpec =$/;"	v	file:
PendingCommand	unix/tkUnixSend.c	/^typedef struct PendingCommand {$/;"	s	file:
PendingCommand	unix/tkUnixSend.c	/^} PendingCommand;$/;"	t	typeref:struct:PendingCommand	file:
PhotoFormatThreadExitProc	generic/tkImgPhoto.c	/^PhotoFormatThreadExitProc($/;"	f	file:
PhotoInstance	generic/tkImgPhoto.h	/^struct PhotoInstance {$/;"	s
PhotoInstance	generic/tkImgPhoto.h	/^typedef struct PhotoInstance	PhotoInstance;$/;"	t	typeref:struct:PhotoInstance
PhotoMaster	generic/tkImgPhoto.h	/^struct PhotoMaster {$/;"	s
PhotoMaster	generic/tkImgPhoto.h	/^typedef struct PhotoMaster	PhotoMaster;$/;"	t	typeref:struct:PhotoMaster
PhysicalsOwned	generic/tkBind.c	/^} PhysicalsOwned;$/;"	t	typeref:struct:__anon170	file:
PickCurrentItem	generic/tkCanvas.c	/^PickCurrentItem($/;"	f	file:
PickupSlack	generic/ttk/ttkTreeview.c	/^static int PickupSlack(Treeview *tv, int extra)$/;"	f	file:
PixelRep	generic/tkObj.c	/^typedef struct PixelRep {$/;"	s	file:
PixelRep	generic/tkObj.c	/^} PixelRep;$/;"	t	typeref:struct:PixelRep	file:
Pixmap	xlib/X11/X.h	/^typedef XID Pixmap;$/;"	t
PlaceInfoCommand	generic/tkPlace.c	/^PlaceInfoCommand($/;"	f	file:
PlaceLostSlaveProc	generic/tkPlace.c	/^PlaceLostSlaveProc($/;"	f	file:
PlaceOnBottom	xlib/X11/X.h	253;"	d
PlaceOnTop	xlib/X11/X.h	252;"	d
PlacePanes	generic/ttk/ttkPanedwindow.c	/^static void PlacePanes(Paned *pw)$/;"	f	file:
PlaceRequestProc	generic/tkPlace.c	/^PlaceRequestProc($/;"	f	file:
PlaceSashes	generic/ttk/ttkPanedwindow.c	/^static void PlaceSashes(Paned *pw, int width, int height)$/;"	f	file:
PlaceSlaves	generic/ttk/ttkManager.h	/^    void (*PlaceSlaves)(void *managerData);$/;"	m	struct:__anon109
PlaceTabs	generic/ttk/ttkNotebook.c	/^static void PlaceTabs($/;"	f	file:
PlanesOfScreen	xlib/X11/Xlib.h	117;"	d
PointInQuadrilateral	generic/tkFont.c	/^PointInQuadrilateral($/;"	f	file:
PointToValue	generic/ttk/ttkScale.c	/^PointToValue(Scale *scalePtr, int x, int y)$/;"	f	file:
PointerMotionHintMask	xlib/X11/X.h	118;"	d
PointerMotionMask	xlib/X11/X.h	117;"	d
PointerRoot	xlib/X11/X.h	89;"	d
PointerWindow	xlib/X11/X.h	86;"	d
PolygonCoords	generic/tkCanvPoly.c	/^PolygonCoords($/;"	f	file:
PolygonDeleteCoords	generic/tkCanvPoly.c	/^PolygonDeleteCoords($/;"	f	file:
PolygonInsert	generic/tkCanvPoly.c	/^PolygonInsert($/;"	f	file:
PolygonItem	generic/tkCanvPoly.c	/^typedef struct PolygonItem  {$/;"	s	file:
PolygonItem	generic/tkCanvPoly.c	/^} PolygonItem;$/;"	t	typeref:struct:PolygonItem	file:
PolygonToArea	generic/tkCanvPoly.c	/^PolygonToArea($/;"	f	file:
PolygonToPoint	generic/tkCanvPoly.c	/^PolygonToPoint($/;"	f	file:
PolygonToPostscript	generic/tkCanvPoly.c	/^PolygonToPostscript($/;"	f	file:
PopupButtonParams	macosx/ttkMacOSXTheme.c	/^    PopupButtonParams = { kThemePopupButton, kThemeMetricPopupButtonHeight },$/;"	v	file:
PostProcessEntry	generic/tkMenu.c	/^PostProcessEntry($/;"	f	file:
PostscriptBitmap	generic/tkCanvPs.c	/^PostscriptBitmap($/;"	f	file:
PreferBlanking	xlib/X11/X.h	626;"	d
PrepareItem	generic/ttk/ttkTreeview.c	/^static void PrepareItem($/;"	f	file:
PreprocessMenu	generic/tkMacWinMenu.c	/^PreprocessMenu($/;"	f	file:
PressElement	generic/ttk/ttkTrack.c	/^static void PressElement(ElementStateTracker *es, Ttk_Element element)$/;"	f	file:
PrintArrowShape	generic/tkCanvLine.c	/^PrintArrowShape($/;"	f	file:
PrintPostcript	tests/canvPsImg.tcl	/^proc PrintPostcript { canvas } {$/;"	p
PrintUsage	generic/tkArgv.c	/^PrintUsage($/;"	f	file:
Progressbar	generic/ttk/ttkProgress.c	/^} Progressbar;$/;"	t	typeref:struct:__anon102	file:
ProgressbarCleanup	generic/ttk/ttkProgress.c	/^static void ProgressbarCleanup(void *recordPtr)$/;"	f	file:
ProgressbarCommands	generic/ttk/ttkProgress.c	/^static const Ttk_Ensemble ProgressbarCommands[] = {$/;"	v	file:
ProgressbarConfigure	generic/ttk/ttkProgress.c	/^static int ProgressbarConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
ProgressbarDeterminateLayout	generic/ttk/ttkProgress.c	/^static void ProgressbarDeterminateLayout($/;"	f	file:
ProgressbarDoLayout	generic/ttk/ttkProgress.c	/^static void ProgressbarDoLayout(void *recordPtr)$/;"	f	file:
ProgressbarGetLayout	generic/ttk/ttkProgress.c	/^static Ttk_Layout ProgressbarGetLayout($/;"	f	file:
ProgressbarIndeterminateLayout	generic/ttk/ttkProgress.c	/^static void ProgressbarIndeterminateLayout($/;"	f	file:
ProgressbarInitialize	generic/ttk/ttkProgress.c	/^static void ProgressbarInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
ProgressbarModeStrings	generic/ttk/ttkProgress.c	/^static const char *const ProgressbarModeStrings[] = {$/;"	v	file:
ProgressbarOptionSpecs	generic/ttk/ttkProgress.c	/^static Tk_OptionSpec ProgressbarOptionSpecs[] =$/;"	v	file:
ProgressbarPart	generic/ttk/ttkProgress.c	/^} ProgressbarPart;$/;"	t	typeref:struct:__anon101	file:
ProgressbarPostConfigure	generic/ttk/ttkProgress.c	/^static int ProgressbarPostConfigure($/;"	f	file:
ProgressbarSize	generic/ttk/ttkProgress.c	/^static int ProgressbarSize(void *recordPtr, int *widthPtr, int *heightPtr)$/;"	f	file:
ProgressbarStartCommand	generic/ttk/ttkProgress.c	/^static int ProgressbarStartCommand($/;"	f	file:
ProgressbarStartStopCommand	generic/ttk/ttkProgress.c	/^static int ProgressbarStartStopCommand($/;"	f	file:
ProgressbarStepCommand	generic/ttk/ttkProgress.c	/^static int ProgressbarStepCommand($/;"	f	file:
ProgressbarStopCommand	generic/ttk/ttkProgress.c	/^static int ProgressbarStopCommand($/;"	f	file:
ProgressbarWidgetSpec	generic/ttk/ttkProgress.c	/^static WidgetSpec ProgressbarWidgetSpec =$/;"	v	file:
Prompt	generic/tkMain.c	/^Prompt($/;"	f	file:
PropModeAppend	xlib/X11/X.h	432;"	d
PropModePrepend	xlib/X11/X.h	431;"	d
PropModeReplace	xlib/X11/X.h	430;"	d
PropertyChangeMask	xlib/X11/X.h	133;"	d
PropertyDelete	xlib/X11/X.h	264;"	d
PropertyEvent	unix/tkUnixWm.c	/^PropertyEvent($/;"	f	file:
PropertyNewValue	xlib/X11/X.h	263;"	d
PropertyNotify	xlib/X11/X.h	167;"	d
ProtocolHandler	macosx/tkMacOSXWm.h	/^typedef struct ProtocolHandler {$/;"	s
ProtocolHandler	macosx/tkMacOSXWm.h	/^} ProtocolHandler;$/;"	t	typeref:struct:ProtocolHandler
ProtocolHandler	unix/tkUnixWm.c	/^typedef struct ProtocolHandler {$/;"	s	file:
ProtocolHandler	unix/tkUnixWm.c	/^} ProtocolHandler;$/;"	t	typeref:struct:ProtocolHandler	file:
ProtocolHandler	win/tkWinWm.c	/^typedef struct ProtocolHandler {$/;"	s	file:
ProtocolHandler	win/tkWinWm.c	/^} ProtocolHandler;$/;"	t	typeref:struct:ProtocolHandler	file:
ProtocolRevision	xlib/X11/Xlib.h	90;"	d
ProtocolVersion	xlib/X11/Xlib.h	89;"	d
ProxyWindowEventProc	generic/tkPanedWindow.c	/^ProxyWindowEventProc($/;"	f	file:
PseudoColor	xlib/X11/X.h	662;"	d
PulseDefaultButtonProc	macosx/tkMacOSXButton.c	/^PulseDefaultButtonProc(ClientData clientData)$/;"	f	file:
PushButtonParams	macosx/ttkMacOSXTheme.c	/^    PushButtonParams = { kThemePushButton, kThemeMetricPushButtonHeight },$/;"	v	file:
PutPixel	win/tkWinImage.c	/^PutPixel($/;"	f	file:
QLength	xlib/X11/Xlib.h	80;"	d
QUADRUPLE	generic/tkBind.c	357;"	d	file:
QUEUE	generic/tkGrab.c	1047;"	d	file:
QualifyPath	win/nmakehlp.c	/^QualifyPath($/;"	f	file:
QueryInterface	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *QueryInterface )($/;"	m	struct:IFileDialogVtbl	file:
QueryInterface	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *QueryInterface )($/;"	m	struct:IFileOpenDialogVtbl	file:
QueryInterface	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *QueryInterface )($/;"	m	struct:IFileSaveDialogVtbl	file:
QueryInterface	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *QueryInterface )($/;"	m	struct:IShellItemArrayVtbl	file:
QueryInterface	win/tkWinDialog.c	/^    HRESULT (STDMETHODCALLTYPE *QueryInterface)(IShellItem *, REFIID, void **);$/;"	m	struct:IShellItemVtbl	file:
QueueGrabWindowChange	generic/tkGrab.c	/^QueueGrabWindowChange($/;"	f	file:
QueuedAfterFlush	xlib/X11/Xlib.h	69;"	d
QueuedAfterReading	xlib/X11/Xlib.h	68;"	d
QueuedAlready	xlib/X11/Xlib.h	67;"	d
RADIO_BUTTON	unix/tkUnixButton.c	127;"	d	file:
RADIO_BUTTON	unix/tkUnixMenu.c	44;"	d	file:
RADIO_BUTTON_DIM	unix/tkUnixButton.c	112;"	d	file:
RADIO_BUTTON_ENTRY	generic/tkMenu.h	242;"	d
RADIO_DISOFF_OFFSET	unix/tkUnixButton.c	119;"	d	file:
RADIO_DISON_OFFSET	unix/tkUnixButton.c	118;"	d	file:
RADIO_MENU	unix/tkUnixButton.c	128;"	d	file:
RADIO_MENU	unix/tkUnixMenu.c	45;"	d	file:
RADIO_MENU_DIM	unix/tkUnixButton.c	113;"	d	file:
RADIO_OFF_OFFSET	unix/tkUnixButton.c	117;"	d	file:
RADIO_ON_OFFSET	unix/tkUnixButton.c	116;"	d	file:
RADIO_START	unix/tkUnixButton.c	115;"	d	file:
RADIO_STYLE	win/tkWinButton.c	24;"	d	file:
RADIO_WIDTH	unix/tkUnixButton.c	114;"	d	file:
RANLIB	unix/Makefile	/^RANLIB			= ranlib$/;"	m
READONLY_OPTION	generic/ttk/ttkWidget.h	20;"	d
RECOMPUTE_GEOMETRY	generic/tkPanedWindow.c	178;"	d	file:
RED	xlib/xcolors.c	332;"	d	file:
REDISPLAY_PENDING	generic/ttk/ttkWidget.h	13;"	d
REDO_KEYSYM_LOOKUP	macosx/tkMacOSXPort.h	107;"	d
REDO_KEYSYM_LOOKUP	win/tkWinPort.h	87;"	d
REDRAW_ALL	generic/tkScale.h	191;"	d
REDRAW_BORDERS	generic/tkCanvas.h	268;"	d
REDRAW_BORDERS	generic/tkTextDisp.c	474;"	d	file:
REDRAW_OTHER	generic/tkScale.h	190;"	d
REDRAW_PENDING	generic/tkButton.h	284;"	d
REDRAW_PENDING	generic/tkCanvas.h	267;"	d
REDRAW_PENDING	generic/tkEntry.h	259;"	d
REDRAW_PENDING	generic/tkFrame.c	149;"	d	file:
REDRAW_PENDING	generic/tkListbox.c	206;"	d	file:
REDRAW_PENDING	generic/tkMenu.h	449;"	d
REDRAW_PENDING	generic/tkMenubutton.h	193;"	d
REDRAW_PENDING	generic/tkMessage.c	102;"	d	file:
REDRAW_PENDING	generic/tkPanedWindow.c	175;"	d	file:
REDRAW_PENDING	generic/tkScale.h	192;"	d
REDRAW_PENDING	generic/tkScrollbar.h	155;"	d
REDRAW_PENDING	generic/tkTextDisp.c	473;"	d	file:
REDRAW_SLIDER	generic/tkScale.h	189;"	d
REGION_CELL	generic/ttk/ttkTreeview.c	/^    REGION_CELL$/;"	e	enum:__anon85	file:
REGION_HEADING	generic/ttk/ttkTreeview.c	/^    REGION_HEADING,$/;"	e	enum:__anon85	file:
REGION_NOTHING	generic/ttk/ttkTreeview.c	/^    REGION_NOTHING = 0,$/;"	e	enum:__anon85	file:
REGION_SEPARATOR	generic/ttk/ttkTreeview.c	/^    REGION_SEPARATOR,$/;"	e	enum:__anon85	file:
REGION_TREE	generic/ttk/ttkTreeview.c	/^    REGION_TREE,$/;"	e	enum:__anon85	file:
RELINK_ITEMS	generic/tkCanvas.c	342;"	d	file:
RELINK_ITEMS	generic/tkCanvas.c	358;"	d	file:
REL_HORIZ	generic/tkGrid.c	59;"	d	file:
REL_SKIP	generic/tkGrid.c	58;"	d	file:
REL_VERT	generic/tkGrid.c	60;"	d	file:
REPARENT	generic/tkBind.c	474;"	d	file:
REPICK_IN_PROGRESS	generic/tkCanvas.h	274;"	d
REPICK_NEEDED	generic/tkCanvas.h	269;"	d
REPICK_NEEDED	generic/tkTextDisp.c	475;"	d	file:
REQUESTED_RELAYOUT	generic/tkGrid.c	248;"	d	file:
REQUESTED_RELAYOUT	generic/tkPanedWindow.c	177;"	d	file:
REQUESTED_REPACK	generic/tkPack.c	94;"	d	file:
RESIZEREQ	generic/tkBind.c	484;"	d	file:
RESIZE_PENDING	generic/tkMenu.h	450;"	d
RESIZE_PENDING	generic/tkPanedWindow.c	180;"	d	file:
REZ	unix/Makefile	/^REZ			= $/;"	m
REZ_SWITCHES	unix/Makefile	/^REZ_SWITCHES =  -i $(GENERIC_DIR) -i $(TCL_GENERIC_DIR)$/;"	m
RGB	generic/tkImgPhInstance.c	414;"	d	file:
RGB15	generic/tkImgPhInstance.c	418;"	d	file:
RIGHT	generic/tkPack.c	/^typedef enum {TOP, BOTTOM, LEFT, RIGHT} Side;$/;"	e	enum:__anon151	file:
RIGHT	generic/tkText.h	/^typedef enum {LEFT, RIGHT, CENTER, NUMERIC} TkTextTabAlign;$/;"	e	enum:__anon160
ROOT_ID	macosx/tkMacOSXXStubs.c	34;"	d	file:
ROTFLAGS_ALLOWANYCLIENT	win/tkWinSend.c	24;"	d	file:
ROTFLAGS_REGISTRATIONKEEPSALIVE	win/tkWinSend.c	23;"	d	file:
ROUND	generic/tkCanvText.c	205;"	d	file:
ROUND16	generic/tkFont.h	188;"	d
ROW	generic/tkGrid.c	24;"	d	file:
RPadding	generic/ttk/ttkImage.c	/^static Ttk_Box RPadding(Ttk_Box b, Ttk_Padding p)$/;"	f	file:
RadioButtonParams	macosx/ttkMacOSXTheme.c	/^    RadioButtonParams = { kThemeRadioButton, kThemeMetricRadioButtonHeight },$/;"	v	file:
RadioIndicatorElementDraw	generic/ttk/ttkClamTheme.c	/^static void RadioIndicatorElementDraw($/;"	f	file:
RadioIndicatorElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec RadioIndicatorElementSpec = {$/;"	v	file:
Radiobutton	generic/ttk/ttkButton.c	/^} Radiobutton;$/;"	t	typeref:struct:__anon22	file:
RadiobuttonCleanup	generic/ttk/ttkButton.c	/^RadiobuttonCleanup(void *recordPtr)$/;"	f	file:
RadiobuttonCommands	generic/ttk/ttkButton.c	/^static const Ttk_Ensemble RadiobuttonCommands[] = {$/;"	v	file:
RadiobuttonConfigure	generic/ttk/ttkButton.c	/^RadiobuttonConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
RadiobuttonIndicatorElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec RadiobuttonIndicatorElementSpec = {$/;"	v	file:
RadiobuttonInvokeCommand	generic/ttk/ttkButton.c	/^RadiobuttonInvokeCommand($/;"	f	file:
RadiobuttonOptionSpecs	generic/ttk/ttkButton.c	/^static Tk_OptionSpec RadiobuttonOptionSpecs[] =$/;"	v	file:
RadiobuttonPart	generic/ttk/ttkButton.c	/^} RadiobuttonPart;$/;"	t	typeref:struct:__anon21	file:
RadiobuttonPostConfigure	generic/ttk/ttkButton.c	/^RadiobuttonPostConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
RadiobuttonVariableChanged	generic/ttk/ttkButton.c	/^RadiobuttonVariableChanged(void *clientData, const char *value)$/;"	f	file:
RadiobuttonWidgetSpec	generic/ttk/ttkButton.c	/^static WidgetSpec RadiobuttonWidgetSpec =$/;"	v	file:
RaiseLabelWidget	generic/ttk/ttkFrame.c	/^static void RaiseLabelWidget(Labelframe *lframe)$/;"	f	file:
RaiseLowest	xlib/X11/X.h	425;"	d
RangeToFactor	macosx/tkMacOSXScrlbr.c	24;"	d	file:
RangeToFactor	macosx/tkMacOSXScrlbr.c	26;"	d	file:
RangeToFactor	macosx/ttkMacOSXTheme.c	48;"	d	file:
RangeToFactor	macosx/ttkMacOSXTheme.c	50;"	d	file:
RankAttributes	unix/tkUnixFont.c	/^RankAttributes($/;"	f	file:
ReadBase64	generic/tkImgPNG.c	/^ReadBase64($/;"	f	file:
ReadByteArray	generic/tkImgPNG.c	/^ReadByteArray($/;"	f	file:
ReadChunkHeader	generic/tkImgPNG.c	/^ReadChunkHeader($/;"	f	file:
ReadColorMap	generic/tkImgGIF.c	/^ReadColorMap($/;"	f	file:
ReadData	generic/tkImgPNG.c	/^ReadData($/;"	f	file:
ReadFromPipe	win/nmakehlp.c	/^ReadFromPipe($/;"	f	file:
ReadGIFHeader	generic/tkImgGIF.c	/^ReadGIFHeader($/;"	f	file:
ReadICOHeader	win/tkWinWm.c	/^ReadICOHeader($/;"	f	file:
ReadIDAT	generic/tkImgPNG.c	/^ReadIDAT($/;"	f	file:
ReadIHDR	generic/tkImgPNG.c	/^ReadIHDR($/;"	f	file:
ReadIconFromFile	win/tkWinWm.c	/^ReadIconFromFile($/;"	f	file:
ReadIconOrCursorFromFile	win/tkWinWm.c	/^ReadIconOrCursorFromFile($/;"	f	file:
ReadImage	generic/tkImgGIF.c	/^ReadImage($/;"	f	file:
ReadInt32	generic/tkImgPNG.c	/^ReadInt32($/;"	f	file:
ReadOptionFile	generic/tkOption.c	/^ReadOptionFile($/;"	f	file:
ReadPLTE	generic/tkImgPNG.c	/^ReadPLTE($/;"	f	file:
ReadPPMFileHeader	generic/tkImgPPM.c	/^ReadPPMFileHeader($/;"	f	file:
ReadPPMStringHeader	generic/tkImgPPM.c	/^ReadPPMStringHeader($/;"	f	file:
ReadTRNS	generic/tkImgPNG.c	/^ReadTRNS($/;"	f	file:
ReadValue	generic/tkImgGIF.c	/^ReadValue($/;"	f	file:
Ready	tests/constraints.tcl	/^	    proc Ready {} {$/;"	p
RealFocusEvent	generic/ttk/ttkBlink.c	128;"	d	file:
ReallyKillMe	macosx/tkMacOSXHLEvents.c	/^ReallyKillMe($/;"	f	file:
Rebalance	generic/tkTextBTree.c	/^Rebalance($/;"	f	file:
ReclaimColors	generic/tkImgPhInstance.c	/^ReclaimColors($/;"	f	file:
RecomputeLayout	generic/ttk/ttkManager.c	/^static void RecomputeLayout(Ttk_Manager *mgr)$/;"	f	file:
RecomputeNodeCounts	generic/tkTextBTree.c	/^RecomputeNodeCounts($/;"	f	file:
RecomputePlacement	generic/tkPlace.c	/^RecomputePlacement($/;"	f	file:
RecomputeSize	generic/ttk/ttkManager.c	/^static void RecomputeSize(Ttk_Manager *mgr)$/;"	f	file:
RecomputeSlack	generic/ttk/ttkTreeview.c	/^static void RecomputeSlack(Treeview *tv)$/;"	f	file:
RecomputeWidgets	generic/tkFont.c	/^RecomputeWidgets($/;"	f	file:
ReconfigureWindowsMenu	win/tkWinMenu.c	/^ReconfigureWindowsMenu($/;"	f	file:
RectOvalCoords	generic/tkRectOval.c	/^RectOvalCoords($/;"	f	file:
RectOvalItem	generic/tkRectOval.c	/^typedef struct RectOvalItem  {$/;"	s	file:
RectOvalItem	generic/tkRectOval.c	/^} RectOvalItem;$/;"	t	typeref:struct:RectOvalItem	file:
RectOvalToPostscript	generic/tkRectOval.c	/^RectOvalToPostscript($/;"	f	file:
RectToArea	generic/tkRectOval.c	/^RectToArea($/;"	f	file:
RectToPoint	generic/tkRectOval.c	/^RectToPoint($/;"	f	file:
RectangleIn	xlib/X11/Xutil.h	216;"	d
RectangleOut	xlib/X11/Xutil.h	215;"	d
RectanglePart	xlib/X11/Xutil.h	217;"	d
RecursivelyClearActiveMenu	macosx/tkMacOSXMenu.c	/^RecursivelyClearActiveMenu($/;"	f
RecursivelyClearActiveMenu	win/tkWinMenu.c	/^RecursivelyClearActiveMenu($/;"	f
RecursivelyDeleteMenu	generic/tkMenu.c	/^RecursivelyDeleteMenu($/;"	f	file:
RefWinEventProc	generic/tkBusy.c	/^RefWinEventProc($/;"	f	file:
RefreshColormap	win/tkWinWm.c	/^RefreshColormap($/;"	f	file:
RefreshKeyboardMappingIfNeeded	generic/tkEvent.c	/^RefreshKeyboardMappingIfNeeded($/;"	f	file:
RegAddName	unix/tkUnixSend.c	/^RegAddName($/;"	f	file:
RegClose	unix/tkUnixSend.c	/^RegClose($/;"	f	file:
RegDeleteName	unix/tkUnixSend.c	/^RegDeleteName($/;"	f	file:
RegFindName	unix/tkUnixSend.c	/^RegFindName($/;"	f	file:
RegOpen	unix/tkUnixSend.c	/^RegOpen($/;"	f	file:
Region	xlib/X11/X.h	38;"	d
Region	xlib/X11/X.h	674;"	d
Region	xlib/X11/Xlib.h	1202;"	d
Region	xlib/X11/Xlib.h	36;"	d
Region	xlib/X11/Xutil.h	/^typedef struct _XRegion *Region;$/;"	t	typeref:struct:_XRegion
Region	xlib/X11/Xutil.h	33;"	d
Region	xlib/X11/Xutil.h	852;"	d
Region	xlib/xgc.c	28;"	d	file:
RegisterElements	generic/ttk/ttkInit.c	/^static void RegisterElements(Tcl_Interp *interp)$/;"	f	file:
RegisterInterp	win/tkWinSend.c	/^RegisterInterp($/;"	f	file:
RegisterSystemColors	win/ttkWinMonitor.c	/^static void RegisterSystemColors(Tcl_Interp *interp)$/;"	f	file:
RegisterThemes	generic/ttk/ttkInit.c	/^static void RegisterThemes(Tcl_Interp *interp)$/;"	f	file:
RegisterWidget	generic/ttk/ttkWidget.h	108;"	d
RegisterWidgets	generic/ttk/ttkInit.c	/^static void RegisterWidgets(Tcl_Interp *interp)$/;"	f	file:
RegisteredInterp	macosx/tkMacOSXSend.c	/^typedef struct RegisteredInterp {$/;"	s	file:
RegisteredInterp	macosx/tkMacOSXSend.c	/^} RegisteredInterp;$/;"	t	typeref:struct:RegisteredInterp	file:
RegisteredInterp	unix/tkUnixSend.c	/^typedef struct RegisteredInterp {$/;"	s	file:
RegisteredInterp	unix/tkUnixSend.c	/^} RegisteredInterp;$/;"	t	typeref:struct:RegisteredInterp	file:
RegisteredInterp	win/tkWinSend.c	/^} RegisteredInterp;$/;"	t	typeref:struct:__anon223	file:
Release	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *Release )( IFileDialog *);$/;"	m	struct:IFileDialogVtbl	file:
Release	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *Release )( IFileOpenDialog *);$/;"	m	struct:IFileOpenDialogVtbl	file:
Release	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *Release )( IFileSaveDialog *);$/;"	m	struct:IFileSaveDialogVtbl	file:
Release	win/tkWinDialog.c	/^    ULONG ( STDMETHODCALLTYPE *Release )(IShellItemArray *);$/;"	m	struct:IShellItemArrayVtbl	file:
Release	win/tkWinDialog.c	/^    ULONG (STDMETHODCALLTYPE *Release)(IShellItem *);$/;"	m	struct:IShellItemVtbl	file:
ReleaseButtonGrab	generic/tkGrab.c	/^ReleaseButtonGrab($/;"	f	file:
ReleaseByFreeingColormap	xlib/X11/Xutil.h	271;"	d
ReleaseData	macosx/tkMacOSXDraw.c	/^static void ReleaseData(void *info, const void *data, size_t size) {$/;"	f	file:
ReleaseElement	generic/ttk/ttkTrack.c	/^static void ReleaseElement(ElementStateTracker *es)$/;"	f	file:
ReleaseFont	unix/tkUnixFont.c	/^ReleaseFont($/;"	f	file:
ReleaseFont	win/tkWinFont.c	/^ReleaseFont($/;"	f	file:
ReleaseSubFont	unix/tkUnixFont.c	/^ReleaseSubFont($/;"	f	file:
ReleaseSubFont	win/tkWinFont.c	/^ReleaseSubFont($/;"	f	file:
ReliefToEdge	win/ttkWinTheme.c	/^static unsigned int ReliefToEdge(int relief)$/;"	f	file:
RelinkItems	generic/tkCanvas.c	/^RelinkItems($/;"	f	file:
RemapWindows	macosx/tkMacOSXWm.c	/^RemapWindows($/;"	f	file:
RemapWindows	unix/tkUnixWm.c	/^RemapWindows($/;"	f	file:
RemapWindows	win/tkWinWm.c	/^RemapWindows($/;"	f	file:
RemoveFromBaseChunk	generic/tkTextDisp.c	/^RemoveFromBaseChunk($/;"	f	file:
RemovePixelClient	generic/tkTextBTree.c	/^RemovePixelClient($/;"	f	file:
RemoveSlave	generic/ttk/ttkManager.c	/^static void RemoveSlave(Ttk_Manager *mgr, int index)$/;"	f	file:
RemoveTag	generic/ttk/ttkTreeview.c	/^static void RemoveTag(TreeItem *item, Ttk_Tag tag)$/;"	f	file:
RenderObject	win/tkWinDraw.c	/^RenderObject($/;"	f	file:
ReparentEvent	unix/tkUnixWm.c	/^ReparentEvent($/;"	f	file:
ReparentNotify	xlib/X11/X.h	160;"	d
ReplayKeyboard	xlib/X11/X.h	291;"	d
ReplayPointer	xlib/X11/X.h	288;"	d
RequestedSize	generic/ttk/ttkManager.h	/^    int  (*RequestedSize)(void *managerData, int *widthPtr, int *heightPtr);$/;"	m	struct:__anon109
Reset	library/demos/goldberg.tcl	/^proc Reset {w} {$/;"	p
ResetStep	library/demos/goldberg.tcl	/^proc ResetStep {} {$/;"	p
ResizeColumns	generic/ttk/ttkTreeview.c	/^static void ResizeColumns(Treeview *tv, int newWidth)$/;"	f	file:
ResizeRedirectMask	xlib/X11/X.h	129;"	d
ResizeRequest	xlib/X11/X.h	164;"	d
ResolveConstraints	generic/tkGrid.c	/^ResolveConstraints($/;"	f	file:
RestoreLineStartEnd	generic/tkText.c	/^RestoreLineStartEnd($/;"	f	file:
RestoreSticky	generic/tkPanedWindow.c	/^RestoreSticky($/;"	f	file:
RetainPermanent	xlib/X11/X.h	412;"	d
RetainTemporary	xlib/X11/X.h	413;"	d
RevertToNone	xlib/X11/X.h	297;"	d
RevertToParent	xlib/X11/X.h	299;"	d
RevertToPointerRoot	xlib/X11/X.h	298;"	d
RevokeObjectRegistration	win/tkWinSend.c	/^RevokeObjectRegistration($/;"	f	file:
RootWindow	xlib/X11/Xlib.h	72;"	d
RootWindowOfScreen	xlib/X11/Xlib.h	106;"	d
RotateC	library/demos/goldberg.tcl	/^proc RotateC {x y Ox Oy beta} {$/;"	p
RotateItem	library/demos/goldberg.tcl	/^proc RotateItem {w item Ox Oy beta} {$/;"	p
RotateLabelText	library/demos/anilabel.tcl	/^proc RotateLabelText {w interval} {$/;"	p
RoundPoly	library/demos/goldberg.tcl	/^proc RoundPoly {canv xy radii args} {$/;"	p
RoundRect	library/demos/goldberg.tcl	/^proc RoundRect {w xy radius args} {$/;"	p
RowElement	generic/ttk/ttkTreeview.c	/^} RowElement;$/;"	t	typeref:struct:__anon87	file:
RowElementDraw	generic/ttk/ttkTreeview.c	/^static void RowElementDraw($/;"	f	file:
RowElementOptions	generic/ttk/ttkTreeview.c	/^static Ttk_ElementOptionSpec RowElementOptions[] = {$/;"	v	file:
RowElementSpec	generic/ttk/ttkTreeview.c	/^static Ttk_ElementSpec RowElementSpec = {$/;"	v	file:
RowNumber	generic/ttk/ttkTreeview.c	/^static int RowNumber(Treeview *tv, TreeItem *item)$/;"	f	file:
RunAfterSyncCmd	generic/tkText.c	/^RunAfterSyncCmd($/;"	f	file:
RunValidationScript	generic/ttk/ttkEntry.c	/^static int RunValidationScript($/;"	f	file:
S	macosx/tkMacOSXFont.c	1238;"	d	file:
S	macosx/tkMacOSXFont.c	1251;"	d	file:
SAME_BACKGROUND	generic/tkTextDisp.c	181;"	d	file:
SAVE_COMMAND	macosx/tkMacOSXDialog.c	/^    SAVE_MESSAGE, SAVE_PARENT, SAVE_TITLE, SAVE_TYPEVARIABLE, SAVE_COMMAND,$/;"	e	enum:saveOptions	file:
SAVE_CONFIRMOW	macosx/tkMacOSXDialog.c	/^    SAVE_CONFIRMOW$/;"	e	enum:saveOptions	file:
SAVE_DEFAULT	macosx/tkMacOSXDialog.c	/^    SAVE_DEFAULT, SAVE_FILETYPES, SAVE_INITDIR, SAVE_INITFILE,$/;"	e	enum:saveOptions	file:
SAVE_FILETYPES	macosx/tkMacOSXDialog.c	/^    SAVE_DEFAULT, SAVE_FILETYPES, SAVE_INITDIR, SAVE_INITFILE,$/;"	e	enum:saveOptions	file:
SAVE_INITDIR	macosx/tkMacOSXDialog.c	/^    SAVE_DEFAULT, SAVE_FILETYPES, SAVE_INITDIR, SAVE_INITFILE,$/;"	e	enum:saveOptions	file:
SAVE_INITFILE	macosx/tkMacOSXDialog.c	/^    SAVE_DEFAULT, SAVE_FILETYPES, SAVE_INITDIR, SAVE_INITFILE,$/;"	e	enum:saveOptions	file:
SAVE_MESSAGE	macosx/tkMacOSXDialog.c	/^    SAVE_MESSAGE, SAVE_PARENT, SAVE_TITLE, SAVE_TYPEVARIABLE, SAVE_COMMAND,$/;"	e	enum:saveOptions	file:
SAVE_PARENT	macosx/tkMacOSXDialog.c	/^    SAVE_MESSAGE, SAVE_PARENT, SAVE_TITLE, SAVE_TYPEVARIABLE, SAVE_COMMAND,$/;"	e	enum:saveOptions	file:
SAVE_TITLE	macosx/tkMacOSXDialog.c	/^    SAVE_MESSAGE, SAVE_PARENT, SAVE_TITLE, SAVE_TYPEVARIABLE, SAVE_COMMAND,$/;"	e	enum:saveOptions	file:
SAVE_TYPEVARIABLE	macosx/tkMacOSXDialog.c	/^    SAVE_MESSAGE, SAVE_PARENT, SAVE_TITLE, SAVE_TYPEVARIABLE, SAVE_COMMAND,$/;"	e	enum:saveOptions	file:
SB_CMD_BBOX	generic/tkEntry.c	/^    SB_CMD_BBOX, SB_CMD_CGET, SB_CMD_CONFIGURE, SB_CMD_DELETE,$/;"	e	enum:sbCmd	file:
SB_CMD_CGET	generic/tkEntry.c	/^    SB_CMD_BBOX, SB_CMD_CGET, SB_CMD_CONFIGURE, SB_CMD_DELETE,$/;"	e	enum:sbCmd	file:
SB_CMD_CONFIGURE	generic/tkEntry.c	/^    SB_CMD_BBOX, SB_CMD_CGET, SB_CMD_CONFIGURE, SB_CMD_DELETE,$/;"	e	enum:sbCmd	file:
SB_CMD_DELETE	generic/tkEntry.c	/^    SB_CMD_BBOX, SB_CMD_CGET, SB_CMD_CONFIGURE, SB_CMD_DELETE,$/;"	e	enum:sbCmd	file:
SB_CMD_GET	generic/tkEntry.c	/^    SB_CMD_GET, SB_CMD_ICURSOR, SB_CMD_IDENTIFY, SB_CMD_INDEX,$/;"	e	enum:sbCmd	file:
SB_CMD_ICURSOR	generic/tkEntry.c	/^    SB_CMD_GET, SB_CMD_ICURSOR, SB_CMD_IDENTIFY, SB_CMD_INDEX,$/;"	e	enum:sbCmd	file:
SB_CMD_IDENTIFY	generic/tkEntry.c	/^    SB_CMD_GET, SB_CMD_ICURSOR, SB_CMD_IDENTIFY, SB_CMD_INDEX,$/;"	e	enum:sbCmd	file:
SB_CMD_INDEX	generic/tkEntry.c	/^    SB_CMD_GET, SB_CMD_ICURSOR, SB_CMD_IDENTIFY, SB_CMD_INDEX,$/;"	e	enum:sbCmd	file:
SB_CMD_INSERT	generic/tkEntry.c	/^    SB_CMD_INSERT, SB_CMD_INVOKE, SB_CMD_SCAN, SB_CMD_SELECTION,$/;"	e	enum:sbCmd	file:
SB_CMD_INVOKE	generic/tkEntry.c	/^    SB_CMD_INSERT, SB_CMD_INVOKE, SB_CMD_SCAN, SB_CMD_SELECTION,$/;"	e	enum:sbCmd	file:
SB_CMD_SCAN	generic/tkEntry.c	/^    SB_CMD_INSERT, SB_CMD_INVOKE, SB_CMD_SCAN, SB_CMD_SELECTION,$/;"	e	enum:sbCmd	file:
SB_CMD_SELECTION	generic/tkEntry.c	/^    SB_CMD_INSERT, SB_CMD_INVOKE, SB_CMD_SCAN, SB_CMD_SELECTION,$/;"	e	enum:sbCmd	file:
SB_CMD_SET	generic/tkEntry.c	/^    SB_CMD_SET, SB_CMD_VALIDATE, SB_CMD_XVIEW$/;"	e	enum:sbCmd	file:
SB_CMD_VALIDATE	generic/tkEntry.c	/^    SB_CMD_SET, SB_CMD_VALIDATE, SB_CMD_XVIEW$/;"	e	enum:sbCmd	file:
SB_CMD_XVIEW	generic/tkEntry.c	/^    SB_CMD_SET, SB_CMD_VALIDATE, SB_CMD_XVIEW$/;"	e	enum:sbCmd	file:
SB_SEL_ADJUST	generic/tkEntry.c	/^    SB_SEL_ADJUST, SB_SEL_CLEAR, SB_SEL_ELEMENT, SB_SEL_FROM,$/;"	e	enum:sbselCmd	file:
SB_SEL_CLEAR	generic/tkEntry.c	/^    SB_SEL_ADJUST, SB_SEL_CLEAR, SB_SEL_ELEMENT, SB_SEL_FROM,$/;"	e	enum:sbselCmd	file:
SB_SEL_ELEMENT	generic/tkEntry.c	/^    SB_SEL_ADJUST, SB_SEL_CLEAR, SB_SEL_ELEMENT, SB_SEL_FROM,$/;"	e	enum:sbselCmd	file:
SB_SEL_FROM	generic/tkEntry.c	/^    SB_SEL_ADJUST, SB_SEL_CLEAR, SB_SEL_ELEMENT, SB_SEL_FROM,$/;"	e	enum:sbselCmd	file:
SB_SEL_PRESENT	generic/tkEntry.c	/^    SB_SEL_PRESENT, SB_SEL_RANGE, SB_SEL_TO$/;"	e	enum:sbselCmd	file:
SB_SEL_RANGE	generic/tkEntry.c	/^    SB_SEL_PRESENT, SB_SEL_RANGE, SB_SEL_TO$/;"	e	enum:sbselCmd	file:
SB_SEL_TO	generic/tkEntry.c	/^    SB_SEL_PRESENT, SB_SEL_RANGE, SB_SEL_TO$/;"	e	enum:sbselCmd	file:
SCALE_DELETED	generic/tkScale.h	198;"	d
SCAN_DRAGTO	generic/tkListbox.c	/^    SCAN_MARK, SCAN_DRAGTO$/;"	e	enum:scancommand	file:
SCAN_MARK	generic/tkListbox.c	/^    SCAN_MARK, SCAN_DRAGTO$/;"	e	enum:scancommand	file:
SCRIPT_INSTALL_DIR	unix/Makefile	/^SCRIPT_INSTALL_DIR	= $(INSTALL_ROOT)$(TK_LIBRARY)$/;"	m
SCROLLBAR_THICKNESS	generic/ttk/ttkClamTheme.c	24;"	d	file:
SCROLLBAR_WIDTH	generic/ttk/ttkDefaultTheme.c	22;"	d	file:
SCROLLCMD_CHANGED	generic/ttk/ttkEntry.c	145;"	d	file:
SCROLLCMD_CHANGED	generic/ttk/ttkTreeview.c	435;"	d	file:
SCROLL_UPDATE_PENDING	generic/ttk/ttkScroll.c	43;"	d	file:
SCROLL_UPDATE_REQUIRED	generic/ttk/ttkScroll.c	44;"	d	file:
SEARCH_TYPE_ALL	generic/tkCanvas.c	93;"	d	file:
SEARCH_TYPE_EMPTY	generic/tkCanvas.c	91;"	d	file:
SEARCH_TYPE_EXPR	generic/tkCanvas.c	95;"	d	file:
SEARCH_TYPE_ID	generic/tkCanvas.c	92;"	d	file:
SEARCH_TYPE_TAG	generic/tkCanvas.c	94;"	d	file:
SECURITY_FLAGS	unix/Makefile	/^SECURITY_FLAGS		=$/;"	m
SEEK_CUR	unix/tkUnixPort.h	149;"	d
SEEK_END	unix/tkUnixPort.h	153;"	d
SEEK_SET	unix/tkUnixPort.h	145;"	d
SEGMENTTABLE	win/tkWinFont.c	/^typedef struct SEGMENTTABLE {$/;"	s	file:
SEGMENTTABLE	win/tkWinFont.c	/^} SEGMENTTABLE;$/;"	t	typeref:struct:SEGMENTTABLE	file:
SELECTED	generic/tkButton.h	285;"	d
SELECTION_ADJUST	generic/tkEntry.c	/^    SELECTION_ADJUST, SELECTION_CLEAR, SELECTION_FROM,$/;"	e	enum:selCmd	file:
SELECTION_ANCHOR	generic/tkListbox.c	/^    SELECTION_ANCHOR, SELECTION_CLEAR, SELECTION_INCLUDES, SELECTION_SET$/;"	e	enum:selcommand	file:
SELECTION_CLEAR	generic/tkEntry.c	/^    SELECTION_ADJUST, SELECTION_CLEAR, SELECTION_FROM,$/;"	e	enum:selCmd	file:
SELECTION_CLEAR	generic/tkListbox.c	/^    SELECTION_ANCHOR, SELECTION_CLEAR, SELECTION_INCLUDES, SELECTION_SET$/;"	e	enum:selcommand	file:
SELECTION_FROM	generic/tkEntry.c	/^    SELECTION_ADJUST, SELECTION_CLEAR, SELECTION_FROM,$/;"	e	enum:selCmd	file:
SELECTION_INCLUDES	generic/tkListbox.c	/^    SELECTION_ANCHOR, SELECTION_CLEAR, SELECTION_INCLUDES, SELECTION_SET$/;"	e	enum:selcommand	file:
SELECTION_PRESENT	generic/tkEntry.c	/^    SELECTION_PRESENT, SELECTION_RANGE, SELECTION_TO$/;"	e	enum:selCmd	file:
SELECTION_RANGE	generic/tkEntry.c	/^    SELECTION_PRESENT, SELECTION_RANGE, SELECTION_TO$/;"	e	enum:selCmd	file:
SELECTION_SET	generic/tkListbox.c	/^    SELECTION_ANCHOR, SELECTION_CLEAR, SELECTION_INCLUDES, SELECTION_SET$/;"	e	enum:selcommand	file:
SELECTION_TO	generic/tkEntry.c	/^    SELECTION_PRESENT, SELECTION_RANGE, SELECTION_TO$/;"	e	enum:selCmd	file:
SELECTOR	macosx/tkMacOSXCursor.c	23;"	d	file:
SELECT_BG	macosx/tkMacOSXDefault.h	39;"	d
SELECT_BG	unix/tkUnixDefault.h	32;"	d
SELECT_BG	win/tkWinDefault.h	33;"	d
SELECT_FG	macosx/tkMacOSXDefault.h	40;"	d
SELECT_FG	win/tkWinDefault.h	34;"	d
SELECT_MASK	macosx/tkMacOSXPort.h	64;"	d
SELECT_MASK	macosx/tkMacOSXPort.h	70;"	d
SELECT_MASK	macosx/tkMacOSXPort.h	72;"	d
SELECT_MASK	unix/tkUnixPort.h	73;"	d
SELECT_MASK	unix/tkUnixPort.h	79;"	d
SELECT_MASK	unix/tkUnixPort.h	81;"	d
SEL_BUTTONDOWN	generic/tkEntry.h	/^    SEL_NONE, SEL_BUTTONDOWN, SEL_BUTTONUP, SEL_NULL, SEL_ENTRY$/;"	e	enum:selelement
SEL_BUTTONUP	generic/tkEntry.h	/^    SEL_NONE, SEL_BUTTONDOWN, SEL_BUTTONUP, SEL_NULL, SEL_ENTRY$/;"	e	enum:selelement
SEL_ENTRY	generic/tkEntry.h	/^    SEL_NONE, SEL_BUTTONDOWN, SEL_BUTTONUP, SEL_NULL, SEL_ENTRY$/;"	e	enum:selelement
SEL_NONE	generic/tkEntry.h	/^    SEL_NONE, SEL_BUTTONDOWN, SEL_BUTTONUP, SEL_NULL, SEL_ENTRY$/;"	e	enum:selelement
SEL_NULL	generic/tkEntry.h	/^    SEL_NONE, SEL_BUTTONDOWN, SEL_BUTTONUP, SEL_NULL, SEL_ENTRY$/;"	e	enum:selelement
SEPARATOR_ENTRY	generic/tkMenu.h	243;"	d
SETFLAGS	generic/ttk/ttkInit.c	106;"	d	file:
SETFLAGS	generic/ttk/ttkInit.c	87;"	d	file:
SETTING_VAR	generic/tkScale.h	195;"	d
SET_COMPLEXPIXEL	generic/tkObj.c	35;"	d	file:
SET_INDEXEPOCH	generic/tkTextIndex.c	66;"	d	file:
SET_SIMPLEPIXEL	generic/tkObj.c	28;"	d	file:
SET_TEXTINDEX	generic/tkTextIndex.c	64;"	d	file:
SFGAOF	win/tkWinDialog.c	/^typedef ULONG SFGAOF;$/;"	t	file:
SHCreateItemFromParsingName	win/tkWinDialog.c	/^    SHCreateItemFromParsingNameProc *SHCreateItemFromParsingName;$/;"	m	struct:ShellProcPointers	file:
SHCreateItemFromParsingNameProc	win/tkWinDialog.c	/^typedef HRESULT (STDAPICALLTYPE SHCreateItemFromParsingNameProc)($/;"	t	file:
SHELL	unix/Makefile	/^SHELL			= \/bin\/bash$/;"	m
SHELL_ENV	unix/Makefile	/^SHELL_ENV = \\$/;"	m
SHLIB_CFLAGS	unix/Makefile	/^SHLIB_CFLAGS		= -fPIC -DBUILD_tk$/;"	m
SHLIB_LD	unix/Makefile	/^SHLIB_LD		= ${CC} -shared ${CFLAGS} ${LDFLAGS}$/;"	m
SHLIB_LD_LIBS	unix/Makefile	/^SHLIB_LD_LIBS		= ${LIBS} ${TCL_STUB_LIB_SPEC}$/;"	m
SHOW_CHANGED	generic/ttk/ttkTreeview.c	436;"	d	file:
SHOW_HEADINGS	generic/ttk/ttkTreeview.c	320;"	d	file:
SHOW_TREE	generic/ttk/ttkTreeview.c	319;"	d	file:
SIATTRIBFLAGS	win/tkWinDialog.c	/^typedef enum SIATTRIBFLAGS {$/;"	g	file:
SIATTRIBFLAGS	win/tkWinDialog.c	/^} SIATTRIBFLAGS;$/;"	t	typeref:enum:SIATTRIBFLAGS	file:
SIATTRIBFLAGS_ALLITEMS	win/tkWinDialog.c	/^    SIATTRIBFLAGS_ALLITEMS	= 0x4000$/;"	e	enum:SIATTRIBFLAGS	file:
SIATTRIBFLAGS_AND	win/tkWinDialog.c	/^    SIATTRIBFLAGS_AND	= 0x1,$/;"	e	enum:SIATTRIBFLAGS	file:
SIATTRIBFLAGS_APPCOMPAT	win/tkWinDialog.c	/^    SIATTRIBFLAGS_APPCOMPAT	= 0x3,$/;"	e	enum:SIATTRIBFLAGS	file:
SIATTRIBFLAGS_MASK	win/tkWinDialog.c	/^    SIATTRIBFLAGS_MASK	= 0x3,$/;"	e	enum:SIATTRIBFLAGS	file:
SIATTRIBFLAGS_OR	win/tkWinDialog.c	/^    SIATTRIBFLAGS_OR	= 0x2,$/;"	e	enum:SIATTRIBFLAGS	file:
SICHINTF	win/tkWinDialog.c	/^typedef DWORD SICHINTF;$/;"	t	file:
SIGDN	win/tkWinDialog.c	/^} SIGDN;$/;"	t	typeref:enum:__MIDL_IShellItem_0001	file:
SIGDN_DESKTOPABSOLUTEEDITING	win/tkWinDialog.c	/^    SIGDN_DESKTOPABSOLUTEPARSING = 0x80028000,SIGDN_PARENTRELATIVEEDITING = 0x80031001,SIGDN_DESKTOPABSOLUTEEDITING = 0x8004c000,$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIGDN_DESKTOPABSOLUTEPARSING	win/tkWinDialog.c	/^    SIGDN_DESKTOPABSOLUTEPARSING = 0x80028000,SIGDN_PARENTRELATIVEEDITING = 0x80031001,SIGDN_DESKTOPABSOLUTEEDITING = 0x8004c000,$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIGDN_FILESYSPATH	win/tkWinDialog.c	/^    SIGDN_FILESYSPATH = 0x80058000,SIGDN_URL = 0x80068000$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIGDN_NORMALDISPLAY	win/tkWinDialog.c	/^    SIGDN_NORMALDISPLAY = 0,SIGDN_PARENTRELATIVEPARSING = 0x80018001,SIGDN_PARENTRELATIVEFORADDRESSBAR = 0x8001c001,$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIGDN_PARENTRELATIVEEDITING	win/tkWinDialog.c	/^    SIGDN_DESKTOPABSOLUTEPARSING = 0x80028000,SIGDN_PARENTRELATIVEEDITING = 0x80031001,SIGDN_DESKTOPABSOLUTEEDITING = 0x8004c000,$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIGDN_PARENTRELATIVEFORADDRESSBAR	win/tkWinDialog.c	/^    SIGDN_NORMALDISPLAY = 0,SIGDN_PARENTRELATIVEPARSING = 0x80018001,SIGDN_PARENTRELATIVEFORADDRESSBAR = 0x8001c001,$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIGDN_PARENTRELATIVEPARSING	win/tkWinDialog.c	/^    SIGDN_NORMALDISPLAY = 0,SIGDN_PARENTRELATIVEPARSING = 0x80018001,SIGDN_PARENTRELATIVEFORADDRESSBAR = 0x8001c001,$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIGDN_URL	win/tkWinDialog.c	/^    SIGDN_FILESYSPATH = 0x80058000,SIGDN_URL = 0x80068000$/;"	e	enum:__MIDL_IShellItem_0001	file:
SIMPLE_PIXELREP	generic/tkObj.c	25;"	d	file:
SLAVE_MAPPED	generic/ttk/ttkManager.c	57;"	d	file:
SLIDER	generic/tkScale.h	207;"	d
SLIDER	generic/tkScrollbar.h	138;"	d
SOURCE_IS_SIMPLE_ALPHA_PHOTO	generic/tkImgPhoto.h	190;"	d
SPACING	generic/tkScale.h	215;"	d
SPECIALMENU	macosx/tkMacOSXMenu.c	35;"	d	file:
SPECIALMENU	macosx/tkMacOSXMenu.c	45;"	d	file:
SPI_GETKEYBOARDCUES	win/tkWinMenu.c	62;"	d	file:
SPI_SETKEYBOARDCUES	win/tkWinInt.h	37;"	d
SRCNAND	win/tkWinDraw.c	55;"	d	file:
SRCORREVERSE	win/tkWinDraw.c	54;"	d	file:
SRCS	unix/Makefile	/^SRCS = $(GENERIC_SRCS) $(X11_SRCS) $/;"	m
SRC_DIR	unix/Makefile	/^SRC_DIR			= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/tk8.6.5\/unix$/;"	m
STATE_ACTIVE	generic/tkButton.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_ACTIVE	generic/tkMenubutton.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_ACTIVE	generic/tkScale.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_CHANGED	generic/ttk/ttkButton.c	14;"	d	file:
STATE_CHANGED	generic/ttk/ttkEntry.c	143;"	d	file:
STATE_CHANGED	generic/ttk/ttkTreeview.c	24;"	d	file:
STATE_DISABLED	generic/tkButton.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_DISABLED	generic/tkEntry.h	/^    STATE_DISABLED, STATE_NORMAL, STATE_READONLY$/;"	e	enum:state
STATE_DISABLED	generic/tkListbox.c	/^    STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state	file:
STATE_DISABLED	generic/tkMenubutton.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_DISABLED	generic/tkScale.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_NORMAL	generic/tkButton.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_NORMAL	generic/tkEntry.h	/^    STATE_DISABLED, STATE_NORMAL, STATE_READONLY$/;"	e	enum:state
STATE_NORMAL	generic/tkListbox.c	/^    STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state	file:
STATE_NORMAL	generic/tkMenubutton.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_NORMAL	generic/tkScale.h	/^    STATE_ACTIVE, STATE_DISABLED, STATE_NORMAL$/;"	e	enum:state
STATE_READONLY	generic/tkEntry.h	/^    STATE_DISABLED, STATE_NORMAL, STATE_READONLY$/;"	e	enum:state
STATICBUFFERSIZE	win/nmakehlp.c	56;"	d	file:
STATIC_BUILD	generic/tkTest.c	17;"	d	file:
STATIC_BUILD	unix/tkAppInit.c	16;"	d	file:
STDMETHODIMP_	win/tkWinSendCom.c	/^static STDMETHODIMP_(ULONG)$/;"	f	file:
STICK_EAST	generic/tkGrid.c	220;"	d	file:
STICK_EAST	generic/tkPanedWindow.c	30;"	d	file:
STICK_NORTH	generic/tkGrid.c	219;"	d	file:
STICK_NORTH	generic/tkPanedWindow.c	29;"	d	file:
STICK_SOUTH	generic/tkGrid.c	221;"	d	file:
STICK_SOUTH	generic/tkPanedWindow.c	31;"	d	file:
STICK_WEST	generic/tkGrid.c	222;"	d	file:
STICK_WEST	generic/tkPanedWindow.c	32;"	d	file:
STLIB_LD	unix/Makefile	/^STLIB_LD		= ${AR} cr$/;"	m
STR	generic/ttk/ttkClamTheme.c	21;"	d	file:
STRETCH_ALWAYS	generic/tkPanedWindow.c	/^    STRETCH_ALWAYS,		\/* Always give extra space to this pane. *\/$/;"	e	enum:stretch	file:
STRETCH_FIRST	generic/tkPanedWindow.c	/^    STRETCH_FIRST,		\/* Give extra space to pane if it is first. *\/$/;"	e	enum:stretch	file:
STRETCH_LAST	generic/tkPanedWindow.c	/^    STRETCH_LAST,		\/* Give extra space to pane if it is last. *\/$/;"	e	enum:stretch	file:
STRETCH_MIDDLE	generic/tkPanedWindow.c	/^    STRETCH_MIDDLE,		\/* Give extra space to pane only if it is$/;"	e	enum:stretch	file:
STRETCH_NEVER	generic/tkPanedWindow.c	/^    STRETCH_NEVER		\/* Never give extra space to this pane. *\/$/;"	e	enum:stretch	file:
STRINGIFY	generic/tk.h	41;"	d
STRINGIFY1	generic/tk.h	42;"	d
STRING_LENGTH	generic/tkCanvPs.c	174;"	d	file:
STUB_LIB_FILE	unix/Makefile	/^STUB_LIB_FILE		= ${TK_STUB_LIB_FILE}$/;"	m
STUB_LIB_FILE	unix/Makefile	/^STUB_LIB_FILE		= libtkstub8.6.a$/;"	m
STUB_LIB_OBJS	unix/Makefile	/^STUB_LIB_OBJS = tkStubLib.o ttkStubLib.o$/;"	m
STUB_OBJS	unix/Makefile	/^STUB_OBJS = tkStubInit.o$/;"	m
STYLE_CHANGED	generic/ttk/ttkWidget.h	21;"	d
SUBFONT_SPACE	unix/tkUnixFont.c	95;"	d	file:
SUBFONT_SPACE	win/tkWinFont.c	110;"	d	file:
SUBHEADER	win/tkWinFont.c	/^typedef struct SUBHEADER {$/;"	s	file:
SUBHEADER	win/tkWinFont.c	/^} SUBHEADER;$/;"	t	typeref:struct:SUBHEADER	file:
SUBTABLE	win/tkWinFont.c	/^typedef union SUBTABLE {$/;"	u	file:
SUBTABLE	win/tkWinFont.c	/^} SUBTABLE;$/;"	t	typeref:union:SUBTABLE	file:
SYMBOLS	win/buildall.vc.bat	/^   set SYMBOLS=symbols$/;"	v
SYMBOLS	win/buildall.vc.bat	/^:SYMBOLS$/;"	l
SYMBOLS	win/buildall.vc.bat	/^set SYMBOLS=$/;"	v
SYMROOT	macosx/GNUmakefile	/^SYMROOT			?= ${BUILD_DIR}\/${PROJECT}$/;"	m
SYNCING_VARIABLE	generic/ttk/ttkEntry.c	23;"	d	file:
SYSTEMFONT_NAME	macosx/tkMacOSXFont.c	54;"	d	file:
SashClientData	generic/ttk/ttkClassicTheme.c	/^static Ttk_Orient SashClientData[] = {$/;"	v	file:
SashElement	generic/ttk/ttkClassicTheme.c	/^} SashElement;$/;"	t	typeref:struct:__anon106	file:
SashElement	generic/ttk/ttkPanedwindow.c	/^} SashElement;$/;"	t	typeref:struct:__anon126	file:
SashElementDraw	generic/ttk/ttkClassicTheme.c	/^static void SashElementDraw($/;"	f	file:
SashElementOptions	generic/ttk/ttkPanedwindow.c	/^static Ttk_ElementOptionSpec SashElementOptions[] = {$/;"	v	file:
SashElementSize	generic/ttk/ttkClassicTheme.c	/^static void SashElementSize($/;"	f	file:
SashElementSize	generic/ttk/ttkPanedwindow.c	/^static void SashElementSize($/;"	f	file:
SashElementSpec	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementSpec SashElementSpec = {$/;"	v	file:
SashElementSpec	generic/ttk/ttkPanedwindow.c	/^static Ttk_ElementSpec SashElementSpec = {$/;"	v	file:
SashLayout	generic/ttk/ttkPanedwindow.c	/^static Ttk_Layout SashLayout(Paned *pw, int index)$/;"	f	file:
SashOptions	generic/ttk/ttkClassicTheme.c	/^static Ttk_ElementOptionSpec SashOptions[] = {$/;"	v	file:
SaveMap	generic/tkImgGIF.c	/^SaveMap($/;"	f	file:
Scale	generic/ttk/ttkScale.c	/^} Scale;$/;"	t	typeref:struct:__anon108	file:
ScaleActionProc	macosx/tkMacOSXScale.c	/^ScaleActionProc($/;"	f	file:
ScaleArc	generic/tkCanvArc.c	/^ScaleArc($/;"	f	file:
ScaleBitmap	generic/tkCanvBmap.c	/^ScaleBitmap($/;"	f	file:
ScaleCleanup	generic/ttk/ttkScale.c	/^static void ScaleCleanup(void *recordPtr)$/;"	f	file:
ScaleCmdDeletedProc	generic/tkScale.c	/^ScaleCmdDeletedProc($/;"	f	file:
ScaleCommands	generic/ttk/ttkScale.c	/^static const Ttk_Ensemble ScaleCommands[] = {$/;"	v	file:
ScaleConfigure	generic/ttk/ttkScale.c	/^static int ScaleConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
ScaleCoordsCommand	generic/ttk/ttkScale.c	/^ScaleCoordsCommand($/;"	f	file:
ScaleData	macosx/ttkMacOSXTheme.c	/^static TrackElementData ScaleData = {$/;"	v	file:
ScaleDoLayout	generic/ttk/ttkScale.c	/^static void ScaleDoLayout(void *clientData)$/;"	f	file:
ScaleEventProc	generic/tkScale.c	/^ScaleEventProc($/;"	f	file:
ScaleFraction	generic/ttk/ttkScale.c	/^static double ScaleFraction(Scale *scalePtr, double value)$/;"	f	file:
ScaleGetCommand	generic/ttk/ttkScale.c	/^ScaleGetCommand($/;"	f	file:
ScaleGetLayout	generic/ttk/ttkScale.c	/^ScaleGetLayout(Tcl_Interp *interp, Ttk_Theme theme, void *recordPtr)$/;"	f	file:
ScaleImage	generic/tkCanvImg.c	/^ScaleImage($/;"	f	file:
ScaleInitialize	generic/ttk/ttkScale.c	/^static void ScaleInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
ScaleLine	generic/tkCanvLine.c	/^ScaleLine($/;"	f	file:
ScaleOptionSpecs	generic/ttk/ttkScale.c	/^static Tk_OptionSpec ScaleOptionSpecs[] =$/;"	v	file:
ScalePart	generic/ttk/ttkScale.c	/^} ScalePart;$/;"	t	typeref:struct:__anon107	file:
ScalePolygon	generic/tkCanvPoly.c	/^ScalePolygon($/;"	f	file:
ScalePostConfigure	generic/ttk/ttkScale.c	/^static int ScalePostConfigure($/;"	f	file:
ScaleRectOval	generic/tkRectOval.c	/^ScaleRectOval($/;"	f	file:
ScaleSetCommand	generic/ttk/ttkScale.c	/^ScaleSetCommand($/;"	f	file:
ScaleSetVariable	generic/tkScale.c	/^ScaleSetVariable($/;"	f	file:
ScaleSize	generic/ttk/ttkScale.c	/^static int ScaleSize(void *clientData, int *widthPtr, int *heightPtr)$/;"	f	file:
ScaleText	generic/tkCanvText.c	/^ScaleText($/;"	f	file:
ScaleVarProc	generic/tkScale.c	/^ScaleVarProc($/;"	f	file:
ScaleVariableChanged	generic/ttk/ttkScale.c	/^static void ScaleVariableChanged(void *recordPtr, const char *value)$/;"	f	file:
ScaleWidgetObjCmd	generic/tkScale.c	/^ScaleWidgetObjCmd($/;"	f	file:
ScaleWidgetSpec	generic/ttk/ttkScale.c	/^static WidgetSpec ScaleWidgetSpec =$/;"	v	file:
ScaleWinItem	generic/tkCanvWind.c	/^ScaleWinItem($/;"	f	file:
ScaleWorldChanged	generic/tkScale.c	/^ScaleWorldChanged($/;"	f	file:
ScalingCmd	generic/tkCmds.c	/^ScalingCmd($/;"	f
ScheduleMenuReconfigure	win/tkWinMenu.c	/^ScheduleMenuReconfigure($/;"	f	file:
ScheduleUpdate	generic/ttk/ttkManager.c	/^static void ScheduleUpdate(Ttk_Manager *mgr, unsigned flags)$/;"	f	file:
Screen	xlib/X11/Xlib.h	/^} Screen;$/;"	t	typeref:struct:__anon271
ScreenCount	xlib/X11/Xlib.h	87;"	d
ScreenFormat	xlib/X11/Xlib.h	/^} ScreenFormat;$/;"	t	typeref:struct:__anon272
ScreenInfo	generic/tkBind.c	/^} ScreenInfo;$/;"	t	typeref:struct:__anon171	file:
ScreenOfDisplay	xlib/X11/Xlib.h	103;"	d
ScreenSaverActive	xlib/X11/X.h	639;"	d
ScreenSaverReset	xlib/X11/X.h	638;"	d
ScrollFractions	generic/tkCanvas.c	/^ScrollFractions($/;"	f	file:
ScrollHandle	generic/ttk/ttkWidget.h	/^typedef struct ScrollHandleRec *ScrollHandle;$/;"	t	typeref:struct:ScrollHandleRec
ScrollHandleRec	generic/ttk/ttkScroll.c	/^struct ScrollHandleRec$/;"	s	file:
ScrollInfo	unix/tkUnixDraw.c	/^typedef struct ScrollInfo {$/;"	s	file:
ScrollInfo	unix/tkUnixDraw.c	/^} ScrollInfo;$/;"	t	typeref:struct:ScrollInfo	file:
ScrollRestrictProc	unix/tkUnixDraw.c	/^ScrollRestrictProc($/;"	f	file:
ScrollRestrictProc	unix/tkUnixDraw.c	/^static Tk_RestrictProc ScrollRestrictProc;$/;"	v	file:
Scrollable	generic/ttk/ttkWidget.h	/^} Scrollable;$/;"	t	typeref:struct:__anon49
Scrollbar	generic/ttk/ttkScrollbar.c	/^} Scrollbar;$/;"	t	typeref:struct:__anon52	file:
ScrollbarCmdDeletedProc	generic/tkScrollbar.c	/^ScrollbarCmdDeletedProc($/;"	f	file:
ScrollbarCommands	generic/ttk/ttkScrollbar.c	/^static const Ttk_Ensemble ScrollbarCommands[] = {$/;"	v	file:
ScrollbarDeltaCommand	generic/ttk/ttkScrollbar.c	/^ScrollbarDeltaCommand($/;"	f	file:
ScrollbarDoLayout	generic/ttk/ttkScrollbar.c	/^static void ScrollbarDoLayout(void *recordPtr)$/;"	f	file:
ScrollbarElement	generic/ttk/ttkClamTheme.c	/^} ScrollbarElement;$/;"	t	typeref:struct:__anon58	file:
ScrollbarElementOptions	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementOptionSpec ScrollbarElementOptions[] = {$/;"	v	file:
ScrollbarEventProc	macosx/tkMacOSXScrlbr.c	/^ScrollbarEventProc($/;"	f	file:
ScrollbarFractionCommand	generic/ttk/ttkScrollbar.c	/^ScrollbarFractionCommand($/;"	f	file:
ScrollbarGetCommand	generic/ttk/ttkScrollbar.c	/^ScrollbarGetCommand($/;"	f	file:
ScrollbarGetLayout	generic/ttk/ttkScrollbar.c	/^static Ttk_Layout ScrollbarGetLayout($/;"	f	file:
ScrollbarInitialize	generic/ttk/ttkScrollbar.c	/^ScrollbarInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
ScrollbarMetrics	macosx/tkMacOSXScrlbr.c	/^typedef struct ScrollbarMetrics {$/;"	s	file:
ScrollbarMetrics	macosx/tkMacOSXScrlbr.c	/^} ScrollbarMetrics;$/;"	t	typeref:struct:ScrollbarMetrics	file:
ScrollbarOptionSpecs	generic/ttk/ttkScrollbar.c	/^static Tk_OptionSpec ScrollbarOptionSpecs[] =$/;"	v	file:
ScrollbarPart	generic/ttk/ttkScrollbar.c	/^} ScrollbarPart;$/;"	t	typeref:struct:__anon51	file:
ScrollbarPress	macosx/tkMacOSXScrlbr.c	/^ScrollbarPress(TkScrollbar *scrollPtr, XEvent *eventPtr)$/;"	f	file:
ScrollbarProc	win/tkWinScrlbr.c	/^ScrollbarProc($/;"	f	file:
ScrollbarSetCommand	generic/ttk/ttkScrollbar.c	/^ScrollbarSetCommand($/;"	f	file:
ScrollbarWidgetObjCmd	generic/tkScrollbar.c	/^ScrollbarWidgetObjCmd($/;"	f	file:
ScrollbarWidgetSpec	generic/ttk/ttkScrollbar.c	/^static WidgetSpec ScrollbarWidgetSpec =$/;"	v	file:
SearchAddLineProc	generic/tkText.c	/^typedef ClientData	SearchAddLineProc(int lineNum,$/;"	t	file:
SearchCore	generic/tkText.c	/^SearchCore($/;"	f	file:
SearchLineIndexProc	generic/tkText.c	/^typedef int		SearchLineIndexProc(Tcl_Interp *interp,$/;"	t	file:
SearchMatchProc	generic/tkText.c	/^typedef int		SearchMatchProc(int lineNum,$/;"	t	file:
SearchPerform	generic/tkText.c	/^SearchPerform($/;"	f	file:
SearchSpec	generic/tkText.c	/^typedef struct SearchSpec {$/;"	s	file:
SearchSpec	generic/tkText.c	/^} SearchSpec;$/;"	t	typeref:struct:SearchSpec	file:
SearchUids	generic/tkCanvas.c	/^} SearchUids;$/;"	t	typeref:struct:__anon154	file:
SeenName	unix/tkUnixFont.c	/^SeenName($/;"	f	file:
SeenName	win/tkWinFont.c	/^SeenName($/;"	f	file:
SelCvtFromX32	unix/tkUnixSelect.c	/^SelCvtFromX32($/;"	f	file:
SelCvtFromX8	unix/tkUnixSelect.c	/^SelCvtFromX8($/;"	f	file:
SelCvtToX	unix/tkUnixSelect.c	/^SelCvtToX($/;"	f	file:
SelGetProc	generic/tkSelect.c	/^SelGetProc($/;"	f	file:
SelRcvIncrProc	unix/tkUnixSelect.c	/^SelRcvIncrProc($/;"	f	file:
SelTimeoutProc	unix/tkUnixSelect.c	/^SelTimeoutProc($/;"	f	file:
SelectFont	library/demos/fontchoose.tcl	/^proc SelectFont {parent} {$/;"	p
SelectFont	win/tkWinFont.c	/^SelectFont($/;"	f	file:
SelectModeStrings	generic/ttk/ttkTreeview.c	/^static const char *SelectModeStrings[] = { "none", "browse", "extended", NULL };$/;"	v	file:
SelectNearestTab	generic/ttk/ttkNotebook.c	/^static void SelectNearestTab(Notebook *nb)$/;"	f	file:
SelectNextImageFrame	library/demos/anilabel.tcl	/^proc SelectNextImageFrame {w interval} {$/;"	p
SelectTab	generic/ttk/ttkNotebook.c	/^static void SelectTab(Notebook *nb, int index)$/;"	f	file:
SelectionClear	xlib/X11/X.h	168;"	d
SelectionNotify	xlib/X11/X.h	170;"	d
SelectionRequest	xlib/X11/X.h	169;"	d
SelectionSize	unix/tkUnixSelect.c	/^SelectionSize($/;"	f	file:
Send	win/tkWinSend.c	/^Send($/;"	f	file:
Send	win/tkWinSendCom.c	/^Send($/;"	f	file:
SendEvent	win/tkWinSend.c	/^typedef struct SendEvent {$/;"	s	file:
SendEvent	win/tkWinSend.c	/^} SendEvent;$/;"	t	typeref:struct:SendEvent	file:
SendEventProc	unix/tkUnixSend.c	/^SendEventProc($/;"	f	file:
SendEventProc	win/tkWinSend.c	/^SendEventProc($/;"	f	file:
SendEventProc	win/tkWinSend.c	/^static Tcl_EventProc	SendEventProc;$/;"	v	file:
SendInit	macosx/tkMacOSXSend.c	/^SendInit($/;"	f	file:
SendInit	unix/tkUnixSend.c	/^SendInit($/;"	f	file:
SendRestrictProc	unix/tkUnixSend.c	/^SendRestrictProc($/;"	f	file:
SendRestrictProc	unix/tkUnixSend.c	/^static Tk_RestrictProc SendRestrictProc;$/;"	v	file:
SendTrace	win/tkWinSend.c	/^SendTrace($/;"	f	file:
Separator	generic/ttk/ttkSeparator.c	/^} Separator;$/;"	t	typeref:struct:__anon117	file:
SeparatorCommands	generic/ttk/ttkSeparator.c	/^static const Ttk_Ensemble SeparatorCommands[] = {$/;"	v	file:
SeparatorElement	generic/ttk/ttkElements.c	/^} SeparatorElement;$/;"	t	typeref:struct:__anon38	file:
SeparatorElementDraw	macosx/ttkMacOSXTheme.c	/^static void SeparatorElementDraw($/;"	f	file:
SeparatorElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec SeparatorElementOptions[] = {$/;"	v	file:
SeparatorElementSize	generic/ttk/ttkElements.c	/^static void SeparatorElementSize($/;"	f	file:
SeparatorElementSize	macosx/ttkMacOSXTheme.c	/^static void SeparatorElementSize($/;"	f	file:
SeparatorElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec SeparatorElementSpec = {$/;"	v	file:
SeparatorElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec SeparatorElementSpec = {$/;"	v	file:
SeparatorGetLayout	generic/ttk/ttkSeparator.c	/^static Ttk_Layout SeparatorGetLayout($/;"	f	file:
SeparatorOptionSpecs	generic/ttk/ttkSeparator.c	/^static Tk_OptionSpec SeparatorOptionSpecs[] = {$/;"	v	file:
SeparatorPart	generic/ttk/ttkSeparator.c	/^} SeparatorPart;$/;"	t	typeref:struct:__anon116	file:
SeparatorWidgetSpec	generic/ttk/ttkSeparator.c	/^static WidgetSpec SeparatorWidgetSpec =$/;"	v	file:
ServerSecure	unix/tkUnixSend.c	/^ServerSecure($/;"	f	file:
ServerVendor	xlib/X11/Xlib.h	88;"	d
SetApplicationIcon	macosx/tkMacOSXInit.c	/^SetApplicationIcon($/;"	f	file:
SetCachedColor	macosx/tkMacOSXColor.c	/^SetCachedColor($/;"	f	file:
SetClassLongPtr	win/tkWinInt.h	222;"	d
SetClassLongPtr	win/tkWinInt.h	225;"	d
SetClassLongPtrA	win/tkWinInt.h	218;"	d
SetClassLongPtrW	win/tkWinInt.h	219;"	d
SetClientGuid	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetClientGuid )($/;"	m	struct:IFileDialogVtbl	file:
SetClientGuid	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetClientGuid )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetClientGuid	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetClientGuid )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetCollectedProperties	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetCollectedProperties )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetDefaultExtension	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetDefaultExtension )($/;"	m	struct:IFileDialogVtbl	file:
SetDefaultExtension	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetDefaultExtension )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetDefaultExtension	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetDefaultExtension )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetDefaultFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetDefaultFolder )($/;"	m	struct:IFileDialogVtbl	file:
SetDefaultFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetDefaultFolder )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetDefaultFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetDefaultFolder )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetDefaults	win/tkWinMenu.c	/^SetDefaults($/;"	f	file:
SetDelay	library/demos/knightstour.tcl	/^proc SetDelay {new} {$/;"	p
SetFileName	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileName )($/;"	m	struct:IFileDialogVtbl	file:
SetFileName	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileName )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetFileName	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileName )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetFileNameLabel	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileNameLabel )($/;"	m	struct:IFileDialogVtbl	file:
SetFileNameLabel	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileNameLabel )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetFileNameLabel	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileNameLabel )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetFileTypeIndex	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileTypeIndex )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetFileTypeIndex	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileTypeIndex )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetFileTypeIndex	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileTypeIndex )(IFileDialog *, UINT);$/;"	m	struct:IFileDialogVtbl	file:
SetFileTypes	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileTypes )( IFileDialog *,$/;"	m	struct:IFileDialogVtbl	file:
SetFileTypes	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileTypes )( IFileOpenDialog *,$/;"	m	struct:IFileOpenDialogVtbl	file:
SetFileTypes	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFileTypes )( IFileSaveDialog * this,$/;"	m	struct:IFileSaveDialogVtbl	file:
SetFilter	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFilter )($/;"	m	struct:IFileDialogVtbl	file:
SetFilter	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFilter )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetFilter	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFilter )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFolder )($/;"	m	struct:IFileDialogVtbl	file:
SetFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFolder )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetFolder	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetFolder )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetFontFromAny	generic/tkFont.c	/^SetFontFromAny($/;"	f	file:
SetGridSize	generic/tkGrid.c	/^SetGridSize($/;"	f	file:
SetHelpMenu	unix/tkUnixMenu.c	/^SetHelpMenu($/;"	f	file:
SetLimits	win/tkWinWm.c	/^SetLimits($/;"	f	file:
SetLineStartEnd	generic/tkText.c	/^SetLineStartEnd($/;"	f	file:
SetMMFromAny	generic/tkObj.c	/^SetMMFromAny($/;"	f	file:
SetModeDelete	xlib/X11/X.h	407;"	d
SetModeInsert	xlib/X11/X.h	406;"	d
SetNetWmState	unix/tkUnixWm.c	/^SetNetWmState($/;"	f	file:
SetNetWmType	unix/tkUnixWm.c	/^SetNetWmType($/;"	f	file:
SetOkButtonLabel	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetOkButtonLabel )($/;"	m	struct:IFileDialogVtbl	file:
SetOkButtonLabel	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetOkButtonLabel )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetOkButtonLabel	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetOkButtonLabel )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetOptions	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetOptions )($/;"	m	struct:IFileDialogVtbl	file:
SetOptions	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetOptions )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetOptions	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetOptions )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetPixelFromAny	generic/tkObj.c	/^SetPixelFromAny($/;"	f	file:
SetProperties	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetProperties )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetSaveAsItem	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetSaveAsItem )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetSelectionResult	win/tkWinTest.c	/^SetSelectionResult($/;"	f	file:
SetSelectionResult	win/tkWinTest.c	/^static Tk_GetSelProc		SetSelectionResult;$/;"	v	file:
SetSlaveColumn	generic/tkGrid.c	/^SetSlaveColumn($/;"	f	file:
SetSlaveRow	generic/tkGrid.c	/^SetSlaveRow($/;"	f	file:
SetSticky	generic/tkPanedWindow.c	/^SetSticky($/;"	f	file:
SetStyleFromAny	generic/tkStyle.c	/^SetStyleFromAny($/;"	f	file:
SetTextCursor	generic/tkCanvText.c	/^SetTextCursor($/;"	f	file:
SetTitle	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetTitle )($/;"	m	struct:IFileDialogVtbl	file:
SetTitle	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetTitle )($/;"	m	struct:IFileOpenDialogVtbl	file:
SetTitle	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *SetTitle )($/;"	m	struct:IFileSaveDialogVtbl	file:
SetTkDialog	win/tkWinDialog.c	/^SetTkDialog($/;"	f	file:
SetUpGraphicsPort	win/tkWinDraw.c	/^SetUpGraphicsPort($/;"	f	file:
SetWindowFromAny	generic/tkObj.c	/^SetWindowFromAny($/;"	f	file:
SetWindowInstanceData	generic/tkBusy.c	/^SetWindowInstanceData($/;"	f	file:
SetWindowLongPtr	win/tkWinInt.h	242;"	d
SetWindowLongPtr	win/tkWinInt.h	245;"	d
SetWindowLongPtrA	win/tkWinInt.h	238;"	d
SetWindowLongPtrW	win/tkWinInt.h	239;"	d
SetWindowProperty	unix/tkUnixWm.c	290;"	d	file:
SetWindowSizeLimits	macosx/tkMacOSXWm.c	/^SetWindowSizeLimits($/;"	f	file:
SetupStacks	generic/tkOption.c	/^SetupStacks($/;"	f	file:
SharedTextObjCmd	generic/tkText.c	/^SharedTextObjCmd($/;"	f	file:
ShellProcPointers	win/tkWinDialog.c	/^struct ShellProcPointers {$/;"	s	file:
ShellProcs	win/tkWinDialog.c	/^} ShellProcs;$/;"	v	typeref:struct:ShellProcPointers
ShiftLine	generic/tk3d.c	/^ShiftLine($/;"	f	file:
ShiftMapIndex	xlib/X11/X.h	192;"	d
ShiftMask	xlib/X11/X.h	180;"	d
ShouldUseConsoleChannel	generic/tkConsole.c	/^ShouldUseConsoleChannel($/;"	f	file:
ShouldUseConsoleChannel	generic/tkConsole.c	192;"	d	file:
ShoveDown	generic/ttk/ttkPanedwindow.c	/^static int ShoveDown(Paned *pw, int i, int pos)$/;"	f	file:
ShoveLeft	generic/ttk/ttkTreeview.c	/^static int ShoveLeft(Treeview *tv, int i, int n)$/;"	f	file:
ShoveRight	generic/ttk/ttkTreeview.c	/^static int ShoveRight(Treeview *tv, int i, int n)$/;"	f	file:
ShoveUp	generic/ttk/ttkPanedwindow.c	/^static int ShoveUp(Paned *pw, int i, int pos)$/;"	f	file:
Show	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Show )( IFileDialog *, HWND);$/;"	m	struct:IFileDialogVtbl	file:
Show	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Show )( IFileOpenDialog *, HWND);$/;"	m	struct:IFileOpenDialogVtbl	file:
Show	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Show )($/;"	m	struct:IFileSaveDialogVtbl	file:
ShowCtrl	library/demos/goldberg.tcl	/^proc ShowCtrl {w} {$/;"	p
Side	generic/tkPack.c	/^typedef enum {TOP, BOTTOM, LEFT, RIGHT} Side;$/;"	t	typeref:enum:__anon151	file:
SidesIntersect	generic/tkFont.c	/^SidesIntersect($/;"	f	file:
Sine	library/demos/goldberg.tcl	/^proc Sine {w x0 y0 x1 y1 amp freq args} {$/;"	p
SizeChanged	generic/ttk/ttkWidget.c	/^static void SizeChanged(WidgetCore *corePtr)$/;"	f	file:
SizeOfTab	generic/tkTextDisp.c	/^SizeOfTab($/;"	f	file:
SizegripCommands	generic/ttk/ttkSeparator.c	/^static const Ttk_Ensemble SizegripCommands[] = {$/;"	v	file:
SizegripDraw	generic/ttk/ttkElements.c	/^static void SizegripDraw($/;"	f	file:
SizegripElement	generic/ttk/ttkElements.c	/^} SizegripElement;$/;"	t	typeref:struct:__anon39	file:
SizegripElementDraw	macosx/ttkMacOSXTheme.c	/^static void SizegripElementDraw($/;"	f	file:
SizegripElementSize	macosx/ttkMacOSXTheme.c	/^static void SizegripElementSize($/;"	f	file:
SizegripElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec SizegripElementSpec = {$/;"	v	file:
SizegripElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec SizegripElementSpec = {$/;"	v	file:
SizegripOptionSpecs	generic/ttk/ttkSeparator.c	/^static Tk_OptionSpec SizegripOptionSpecs[] = {$/;"	v	file:
SizegripOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec SizegripOptions[] = {$/;"	v	file:
SizegripSize	generic/ttk/ttkElements.c	/^static void SizegripSize($/;"	f	file:
SizegripWidgetSpec	generic/ttk/ttkSeparator.c	/^static WidgetSpec SizegripWidgetSpec =$/;"	v	file:
SkipChunk	generic/tkImgPNG.c	/^SkipChunk($/;"	f	file:
Slave	generic/tkPanedWindow.c	/^typedef struct Slave {$/;"	s	file:
Slave	generic/tkPanedWindow.c	/^} Slave;$/;"	t	typeref:struct:Slave	file:
Slave	generic/tkPlace.c	/^typedef struct Slave {$/;"	s	file:
Slave	generic/tkPlace.c	/^} Slave;$/;"	t	typeref:struct:Slave	file:
SlaveEventHandler	generic/ttk/ttkManager.c	/^static void SlaveEventHandler(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
SlaveEventMask	generic/ttk/ttkManager.c	/^static const unsigned SlaveEventMask = StructureNotifyMask;$/;"	v	file:
SlaveRemoved	generic/ttk/ttkManager.h	/^    void (*SlaveRemoved)(void *managerData, int slaveIndex);$/;"	m	struct:__anon109
SlaveRequest	generic/ttk/ttkManager.h	/^    int  (*SlaveRequest)(void *managerData, int slaveIndex, int w, int h);$/;"	m	struct:__anon109
SlaveStructureProc	generic/tkPanedWindow.c	/^SlaveStructureProc($/;"	f	file:
SlaveStructureProc	generic/tkPlace.c	/^SlaveStructureProc($/;"	f	file:
SliderElement	generic/ttk/ttkDefaultTheme.c	/^} SliderElement;$/;"	t	typeref:struct:__anon97	file:
SliderElement	generic/ttk/ttkElements.c	/^} SliderElement;$/;"	t	typeref:struct:__anon45	file:
SliderElement	win/ttkWinTheme.c	/^} SliderElement;$/;"	t	typeref:struct:__anon251	file:
SliderElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void SliderElementDraw($/;"	f	file:
SliderElementDraw	generic/ttk/ttkElements.c	/^static void SliderElementDraw($/;"	f	file:
SliderElementDraw	win/ttkWinTheme.c	/^static void SliderElementDraw($/;"	f	file:
SliderElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec SliderElementOptions[] = {$/;"	v	file:
SliderElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec SliderElementOptions[] = {$/;"	v	file:
SliderElementOptions	win/ttkWinTheme.c	/^static Ttk_ElementOptionSpec SliderElementOptions[] = {$/;"	v	file:
SliderElementSize	generic/ttk/ttkClamTheme.c	/^static void SliderElementSize($/;"	f	file:
SliderElementSize	generic/ttk/ttkDefaultTheme.c	/^static void SliderElementSize($/;"	f	file:
SliderElementSize	generic/ttk/ttkElements.c	/^static void SliderElementSize($/;"	f	file:
SliderElementSize	macosx/ttkMacOSXTheme.c	/^static void SliderElementSize($/;"	f	file:
SliderElementSize	win/ttkWinTheme.c	/^static void SliderElementSize($/;"	f	file:
SliderElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec SliderElementSpec = {$/;"	v	file:
SliderElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec SliderElementSpec = {$/;"	v	file:
SliderElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec SliderElementSpec = {$/;"	v	file:
SliderElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec SliderElementSpec = {$/;"	v	file:
SliderElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec SliderElementSpec = {$/;"	v	file:
SlotInfo	generic/tkGrid.c	/^typedef struct SlotInfo {$/;"	s	file:
SlotInfo	generic/tkGrid.c	/^} SlotInfo;$/;"	t	typeref:struct:SlotInfo	file:
SmoothAssocData	generic/tkCanvUtil.c	/^typedef struct SmoothAssocData {$/;"	s	file:
SmoothAssocData	generic/tkCanvUtil.c	/^} SmoothAssocData;$/;"	t	typeref:struct:SmoothAssocData	file:
SmoothMethodCleanupProc	generic/tkCanvUtil.c	/^SmoothMethodCleanupProc($/;"	f	file:
SortBy	library/demos/mclist.tcl	/^proc SortBy {tree col direction} {$/;"	p
SortTags	generic/tkTextTag.c	/^SortTags($/;"	f	file:
SouthEastGravity	xlib/X11/X.h	385;"	d
SouthGravity	xlib/X11/X.h	384;"	d
SouthWestGravity	xlib/X11/X.h	383;"	d
Sparkle	library/demos/goldberg.tcl	/^proc Sparkle {w Oxy tag} {$/;"	p
SpinButtonElementDraw	macosx/ttkMacOSXTheme.c	/^static void SpinButtonElementDraw($/;"	f	file:
SpinButtonElementSize	macosx/ttkMacOSXTheme.c	/^static void SpinButtonElementSize($/;"	f	file:
SpinButtonElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec SpinButtonElementSpec = {$/;"	v	file:
Spinbox	generic/tkEntry.h	/^} Spinbox;$/;"	t	typeref:struct:__anon184
Spinbox	generic/ttk/ttkEntry.c	/^} Spinbox;$/;"	t	typeref:struct:__anon31	file:
SpinboxArrowElementSize	win/ttkWinXPTheme.c	/^SpinboxArrowElementSize($/;"	f	file:
SpinboxArrowElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec SpinboxArrowElementSpec = {$/;"	v	file:
SpinboxCommands	generic/ttk/ttkEntry.c	/^static const Ttk_Ensemble SpinboxCommands[] = {$/;"	v	file:
SpinboxConfigure	generic/ttk/ttkEntry.c	/^SpinboxConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
SpinboxInitialize	generic/ttk/ttkEntry.c	/^SpinboxInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
SpinboxInvoke	generic/tkEntry.c	/^SpinboxInvoke($/;"	f	file:
SpinboxOptionSpecs	generic/ttk/ttkEntry.c	/^static Tk_OptionSpec SpinboxOptionSpecs[] = {$/;"	v	file:
SpinboxPart	generic/ttk/ttkEntry.c	/^} SpinboxPart;$/;"	t	typeref:struct:__anon30	file:
SpinboxWidgetObjCmd	generic/tkEntry.c	/^SpinboxWidgetObjCmd($/;"	f	file:
SpinboxWidgetSpec	generic/ttk/ttkEntry.c	/^static WidgetSpec SpinboxWidgetSpec = {$/;"	v	file:
SpinbuttonMargins	macosx/ttkMacOSXTheme.c	/^static Ttk_Padding SpinbuttonMargins = {2,0,2,0};$/;"	v	file:
SplitSeg	generic/tkTextBTree.c	/^SplitSeg($/;"	f	file:
Square	generic/tkSquare.c	/^} Square;$/;"	t	typeref:struct:__anon142	file:
Square	generic/ttk/ttkSquare.c	/^} Square;$/;"	t	typeref:struct:__anon112	file:
SquareCommands	generic/ttk/ttkSquare.c	/^static const Ttk_Ensemble SquareCommands[] = {$/;"	v	file:
SquareConfigure	generic/tkSquare.c	/^SquareConfigure($/;"	f	file:
SquareDeletedProc	generic/tkSquare.c	/^SquareDeletedProc($/;"	f	file:
SquareDestroy	generic/tkSquare.c	/^SquareDestroy($/;"	f	file:
SquareDisplay	generic/tkSquare.c	/^SquareDisplay($/;"	f	file:
SquareDoLayout	generic/ttk/ttkSquare.c	/^SquareDoLayout(void *clientData)$/;"	f	file:
SquareElement	generic/ttk/ttkSquare.c	/^} SquareElement;$/;"	t	typeref:struct:__anon113	file:
SquareElementDraw	generic/ttk/ttkSquare.c	/^static void SquareElementDraw($/;"	f	file:
SquareElementOptions	generic/ttk/ttkSquare.c	/^static Ttk_ElementOptionSpec SquareElementOptions[] = $/;"	v	file:
SquareElementSize	generic/ttk/ttkSquare.c	/^static void SquareElementSize($/;"	f	file:
SquareElementSpec	generic/ttk/ttkSquare.c	/^static Ttk_ElementSpec SquareElementSpec =$/;"	v	file:
SquareIndicatorElementDraw	generic/ttk/ttkElements.c	/^static void SquareIndicatorElementDraw($/;"	f	file:
SquareIndicatorElementSize	generic/ttk/ttkElements.c	/^static void SquareIndicatorElementSize($/;"	f	file:
SquareObjCmd	generic/tkSquare.c	/^SquareObjCmd($/;"	f
SquareObjEventProc	generic/tkSquare.c	/^SquareObjEventProc($/;"	f	file:
SquareOptionSpecs	generic/ttk/ttkSquare.c	/^static Tk_OptionSpec SquareOptionSpecs[] =$/;"	v	file:
SquarePart	generic/ttk/ttkSquare.c	/^} SquarePart;$/;"	t	typeref:struct:__anon111	file:
SquareWidgetObjCmd	generic/tkSquare.c	/^SquareWidgetObjCmd($/;"	f	file:
SquareWidgetSpec	generic/ttk/ttkSquare.c	/^static WidgetSpec SquareWidgetSpec =$/;"	v	file:
SqueezeTabs	generic/ttk/ttkNotebook.c	/^static void SqueezeTabs($/;"	f	file:
StR	generic/ttk/ttkClamTheme.c	22;"	d	file:
StackLevel	generic/tkOption.c	/^typedef struct StackLevel {$/;"	s	file:
StackLevel	generic/tkOption.c	/^} StackLevel;$/;"	t	typeref:struct:StackLevel	file:
Start	library/demos/goldberg.tcl	/^proc Start {} {$/;"	p
StartEnd	generic/tkTextIndex.c	/^StartEnd($/;"	f	file:
StartTagSearch	generic/tkCanvas.c	/^StartTagSearch($/;"	f	file:
StateHint	xlib/X11/Xutil.h	107;"	d
StateSpecDupIntRep	generic/ttk/ttkState.c	/^static void StateSpecDupIntRep(Tcl_Obj *srcPtr, Tcl_Obj *copyPtr)$/;"	f	file:
StateSpecFreeIntRep	generic/ttk/ttkState.c	51;"	d	file:
StateSpecObjType	generic/ttk/ttkState.c	/^struct Tcl_ObjType StateSpecObjType =$/;"	v	typeref:struct:Tcl_ObjType	file:
StateSpecSetFromAny	generic/ttk/ttkState.c	/^static int StateSpecSetFromAny(Tcl_Interp *interp, Tcl_Obj *objPtr)$/;"	f	file:
StateSpecUpdateString	generic/ttk/ttkState.c	/^static void StateSpecUpdateString(Tcl_Obj *objPtr)$/;"	f	file:
StaticColor	xlib/X11/X.h	661;"	d
StaticGravity	xlib/X11/X.h	386;"	d
StaticGray	xlib/X11/X.h	659;"	d
Status	xlib/X11/Xlib.h	/^typedef int Status;$/;"	t
Status	xlib/X11/Xlib.h	60;"	d
StdinProc	generic/tkMain.c	/^StdinProc($/;"	f	file:
StickyToObj	generic/tkGrid.c	/^StickyToObj($/;"	f	file:
StippleOver	generic/ttk/ttkLabel.c	/^static void StippleOver($/;"	f	file:
StippleShape	xlib/X11/X.h	589;"	d
Stop	library/demos/knightstour.tcl	/^proc Stop {} {$/;"	p
Stretch	generic/ttk/ttkTreeview.c	/^static int Stretch(TreeColumn *c, int n)$/;"	f	file:
StringMatchGIF	generic/tkImgGIF.c	/^StringMatchGIF($/;"	f	file:
StringMatchPNG	generic/tkImgPNG.c	/^StringMatchPNG($/;"	f	file:
StringMatchPPM	generic/tkImgPPM.c	/^StringMatchPPM($/;"	f	file:
StringReadGIF	generic/tkImgGIF.c	/^StringReadGIF($/;"	f	file:
StringReadPNG	generic/tkImgPNG.c	/^StringReadPNG($/;"	f	file:
StringReadPPM	generic/tkImgPPM.c	/^StringReadPPM($/;"	f	file:
StringToSticky	generic/tkGrid.c	/^StringToSticky($/;"	f	file:
StringWriteGIF	generic/tkImgGIF.c	/^StringWriteGIF($/;"	f	file:
StringWritePNG	generic/tkImgPNG.c	/^StringWritePNG($/;"	f	file:
StringWritePPM	generic/tkImgPPM.c	/^StringWritePPM($/;"	f	file:
StructureNotifyMask	xlib/X11/X.h	128;"	d
Style	generic/tkCanvArc.c	/^} Style;$/;"	t	typeref:enum:__anon186	file:
Style	generic/tkStyle.c	/^typedef struct Style {$/;"	s	file:
Style	generic/tkStyle.c	/^} Style;$/;"	t	typeref:struct:Style	file:
Style	generic/tkText.c	22;"	d	file:
Style	generic/ttk/ttkTheme.c	/^} Style;$/;"	t	typeref:struct:Ttk_Style_	file:
StyleConfigureCmd	generic/ttk/ttkTheme.c	/^static int StyleConfigureCmd($/;"	f	file:
StyleElementCreateCmd	generic/ttk/ttkTheme.c	/^static int StyleElementCreateCmd($/;"	f	file:
StyleElementEnsemble	generic/ttk/ttkTheme.c	/^static const Ttk_Ensemble StyleElementEnsemble[] = {$/;"	v	file:
StyleElementNamesCmd	generic/ttk/ttkTheme.c	/^static int StyleElementNamesCmd($/;"	f	file:
StyleElementOptionsCmd	generic/ttk/ttkTheme.c	/^static int StyleElementOptionsCmd($/;"	f	file:
StyleEngine	generic/tkStyle.c	/^typedef struct StyleEngine {$/;"	s	file:
StyleEngine	generic/tkStyle.c	/^} StyleEngine;$/;"	t	typeref:struct:StyleEngine	file:
StyleEnsemble	generic/ttk/ttkTheme.c	/^static const Ttk_Ensemble StyleEnsemble[] = {$/;"	v	file:
StyleLayoutCmd	generic/ttk/ttkTheme.c	/^static int StyleLayoutCmd($/;"	f	file:
StyleLookupCmd	generic/ttk/ttkTheme.c	/^static int StyleLookupCmd($/;"	f	file:
StyleMapCmd	generic/ttk/ttkTheme.c	/^StyleMapCmd($/;"	f	file:
StyleObjCmd	generic/ttk/ttkTheme.c	/^StyleObjCmd($/;"	f	file:
StylePackageData	generic/ttk/ttkTheme.c	/^} StylePackageData;$/;"	t	typeref:struct:__anon115	file:
StyleParseProc	generic/tkCanvArc.c	/^StyleParseProc($/;"	f	file:
StylePrintProc	generic/tkCanvArc.c	/^StylePrintProc($/;"	f	file:
StyleThemeCreateCmd	generic/ttk/ttkTheme.c	/^static int StyleThemeCreateCmd($/;"	f	file:
StyleThemeCurrentCmd	generic/ttk/ttkTheme.c	/^static int StyleThemeCurrentCmd($/;"	f	file:
StyleThemeEnsemble	generic/ttk/ttkTheme.c	/^static const Ttk_Ensemble StyleThemeEnsemble[] = {$/;"	v	file:
StyleThemeNamesCmd	generic/ttk/ttkTheme.c	/^static int StyleThemeNamesCmd($/;"	f	file:
StyleThemeSettingsCmd	generic/ttk/ttkTheme.c	/^StyleThemeSettingsCmd($/;"	f	file:
StyleThemeUseCmd	generic/ttk/ttkTheme.c	/^StyleThemeUseCmd($/;"	f	file:
StyleValues	generic/tkTextDisp.c	/^typedef struct StyleValues {$/;"	s	file:
StyleValues	generic/tkTextDisp.c	/^} StyleValues;$/;"	t	typeref:struct:StyleValues	file:
StyledElement	generic/tkStyle.c	/^typedef struct StyledElement {$/;"	s	file:
StyledElement	generic/tkStyle.c	/^} StyledElement;$/;"	t	typeref:struct:StyledElement	file:
StyledWidgetSpec	generic/tkStyle.c	/^typedef struct StyledWidgetSpec {$/;"	s	file:
StyledWidgetSpec	generic/tkStyle.c	/^} StyledWidgetSpec;$/;"	t	typeref:struct:StyledWidgetSpec	file:
SubFont	unix/tkUnixFont.c	/^typedef struct SubFont {$/;"	s	file:
SubFont	unix/tkUnixFont.c	/^} SubFont;$/;"	t	typeref:struct:SubFont	file:
SubFont	win/tkWinFont.c	/^typedef struct SubFont {$/;"	s	file:
SubFont	win/tkWinFont.c	/^} SubFont;$/;"	t	typeref:struct:SubFont	file:
SubcommandOptions	generic/tkImgPhoto.c	/^struct SubcommandOptions {$/;"	s	file:
SubstituteFile	win/nmakehlp.c	/^SubstituteFile($/;"	f	file:
SubstructureNotifyMask	xlib/X11/X.h	130;"	d
SubstructureRedirectMask	xlib/X11/X.h	131;"	d
Success	xlib/X11/X.h	305;"	d
Summary	generic/tkTextBTree.c	/^typedef struct Summary {$/;"	s	file:
Summary	generic/tkTextBTree.c	/^} Summary;$/;"	t	typeref:struct:Summary	file:
SwapLong	win/tkWinFont.c	/^SwapLong($/;"	f	file:
SwapShort	win/tkWinFont.c	/^SwapShort($/;"	f	file:
SyncBoth	xlib/X11/X.h	293;"	d
SyncKeyboard	xlib/X11/X.h	290;"	d
SyncPointer	xlib/X11/X.h	287;"	d
SystemColorEntry	win/tkWinColor.c	/^} SystemColorEntry;$/;"	t	typeref:struct:__anon255	file:
SystemColorEntry	win/ttkWinMonitor.c	/^} SystemColorEntry;$/;"	t	typeref:struct:__anon222	file:
SystemColorMapEntry	macosx/tkMacOSXColor.c	/^struct SystemColorMapEntry {$/;"	s	file:
SystemFontMapEntry	macosx/tkMacOSXFont.c	/^struct SystemFontMapEntry {$/;"	s	file:
TAB_STATE	generic/ttk/ttkNotebook.c	/^} TAB_STATE;$/;"	t	typeref:enum:__anon64	file:
TAB_STATE_DISABLED	generic/ttk/ttkNotebook.c	/^    TAB_STATE_NORMAL, TAB_STATE_DISABLED, TAB_STATE_HIDDEN$/;"	e	enum:__anon64	file:
TAB_STATE_HIDDEN	generic/ttk/ttkNotebook.c	/^    TAB_STATE_NORMAL, TAB_STATE_DISABLED, TAB_STATE_HIDDEN$/;"	e	enum:__anon64	file:
TAB_STATE_NORMAL	generic/ttk/ttkNotebook.c	/^    TAB_STATE_NORMAL, TAB_STATE_DISABLED, TAB_STATE_HIDDEN$/;"	e	enum:__anon64	file:
TCHAR	generic/tkMain.c	70;"	d	file:
TCHAR	win/tkWinPort.h	/^    typedef _TCHAR TCHAR;$/;"	t
TCLCOMDLG_FILTERSPEC	win/tkWinDialog.c	/^} TCLCOMDLG_FILTERSPEC;$/;"	t	typeref:struct:__anon232	file:
TCLCOMDLG_FILTERSPEC	win/tkWinDialog.c	316;"	d	file:
TCLDIR	unix/Makefile	/^TCLDIR   = \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6$/;"	m
TCLDIR	win/buildall.vc.bat	/^if "%TCLDIR%" == "" set TCLDIR=..\\..\\tcl$/;"	v
TCLEXCEPTION_REGISTRATION	win/tkWin32Dll.c	/^typedef struct TCLEXCEPTION_REGISTRATION {$/;"	s	file:
TCLEXCEPTION_REGISTRATION	win/tkWin32Dll.c	/^} TCLEXCEPTION_REGISTRATION;$/;"	t	typeref:struct:TCLEXCEPTION_REGISTRATION	file:
TCLPATCHL	unix/Makefile	/^TCLPATCHL		= .6$/;"	m
TCLSH_DIR	macosx/GNUmakefile	/^TCLSH_DIR		?= ${PREFIX}\/bin$/;"	m
TCLVERSION	unix/Makefile	/^TCLVERSION		= 8.6$/;"	m
TCL_BIN_DIR	unix/Makefile	/^TCL_BIN_DIR		= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6\/unix$/;"	m
TCL_BUILD_DIR	macosx/GNUmakefile	/^TCL_BUILD_DIR		?= ${BUILD_DIR}\/tcl\/${BUILD_STYLE}$/;"	m
TCL_CFGVAL_ENCODING	unix/tkUnixRFont.c	56;"	d	file:
TCL_DIR	macosx/GNUmakefile	/^TCL_DIR			:= ${TCL_BUILD_DIR}$/;"	m
TCL_DIR	macosx/GNUmakefile	/^TCL_DIR			:= ${TCL_FRAMEWORK_DIR}\/Tcl.framework$/;"	m
TCL_EXE	macosx/GNUmakefile	/^TCL_EXE			:= ${TCLSH_DIR}\/tclsh${TCL_VERSION}$/;"	m
TCL_EXE	unix/Makefile	/^TCL_EXE			= \/usr\/bin\/tclsh8.6$/;"	m
TCL_FMWK_DIR	macosx/GNUmakefile	/^TCL_FMWK_DIR		:= ${FMWK_DIR}\/Tcl.framework\/Versions\/${TCL_VERSION}$/;"	m
TCL_FRAMEWORK_DIR	macosx/GNUmakefile	/^TCL_FRAMEWORK_DIR	:= ${TCL_BUILD_DIR}\/..$/;"	m
TCL_FRAMEWORK_DIR	macosx/GNUmakefile	/^TCL_FRAMEWORK_DIR	?= \/Library\/Frameworks$/;"	m
TCL_GENERIC_DIR	unix/Makefile	/^TCL_GENERIC_DIR		= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6\/generic$/;"	m
TCL_LIB_FLAG	unix/Makefile	/^TCL_LIB_FLAG		= -ltcl8.6$/;"	m
TCL_LIB_SPEC	unix/Makefile	/^TCL_LIB_SPEC		= -L\/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6\/unix -ltcl8.6$/;"	m
TCL_PLATFORM_DIR	unix/Makefile	/^TCL_PLATFORM_DIR	= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6\/unix$/;"	m
TCL_STORAGE_CLASS	generic/tk.h	106;"	d
TCL_STORAGE_CLASS	generic/tk.h	107;"	d
TCL_STORAGE_CLASS	generic/tk.h	1598;"	d
TCL_STORAGE_CLASS	generic/tk.h	1599;"	d
TCL_STORAGE_CLASS	generic/tkDecls.h	16;"	d
TCL_STORAGE_CLASS	generic/tkDecls.h	1730;"	d
TCL_STORAGE_CLASS	generic/tkDecls.h	1731;"	d
TCL_STORAGE_CLASS	generic/tkDecls.h	17;"	d
TCL_STORAGE_CLASS	generic/tkIntDecls.h	1147;"	d
TCL_STORAGE_CLASS	generic/tkIntDecls.h	1148;"	d
TCL_STORAGE_CLASS	generic/tkIntDecls.h	19;"	d
TCL_STORAGE_CLASS	generic/tkIntDecls.h	20;"	d
TCL_STORAGE_CLASS	generic/tkIntPlatDecls.h	17;"	d
TCL_STORAGE_CLASS	generic/tkIntPlatDecls.h	18;"	d
TCL_STORAGE_CLASS	generic/tkIntPlatDecls.h	666;"	d
TCL_STORAGE_CLASS	generic/tkIntPlatDecls.h	667;"	d
TCL_STORAGE_CLASS	generic/tkIntXlibDecls.h	1276;"	d
TCL_STORAGE_CLASS	generic/tkIntXlibDecls.h	1277;"	d
TCL_STORAGE_CLASS	generic/tkIntXlibDecls.h	29;"	d
TCL_STORAGE_CLASS	generic/tkIntXlibDecls.h	30;"	d
TCL_STORAGE_CLASS	generic/tkPlatDecls.h	16;"	d
TCL_STORAGE_CLASS	generic/tkPlatDecls.h	173;"	d
TCL_STORAGE_CLASS	generic/tkPlatDecls.h	174;"	d
TCL_STORAGE_CLASS	generic/tkPlatDecls.h	17;"	d
TCL_STORAGE_CLASS	generic/tkTest.c	46;"	d	file:
TCL_STORAGE_CLASS	generic/tkTest.c	47;"	d	file:
TCL_STUB_FLAGS	unix/Makefile	/^TCL_STUB_FLAGS		= -DUSE_TCL_STUBS$/;"	m
TCL_STUB_LIB_FILE	unix/Makefile	/^TCL_STUB_LIB_FILE	= libtclstub8.6.a$/;"	m
TCL_STUB_LIB_FLAG	unix/Makefile	/^TCL_STUB_LIB_FLAG	= -ltclstub8.6$/;"	m
TCL_STUB_LIB_SPEC	unix/Makefile	/^TCL_STUB_LIB_SPEC	= -L\/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6\/unix -ltclstub8.6$/;"	m
TCL_VERSION	macosx/GNUmakefile	/^TCL_VERSION		:= ${VERSION}$/;"	m
TEAROFF_ENTRY	generic/tkMenu.h	244;"	d
TEAROFF_MENU	generic/tkMenu.h	468;"	d
TEST_DIR	unix/Makefile	/^TEST_DIR		= $(TOP_DIR)\/tests$/;"	m
TEXT	generic/tkMain.c	71;"	d	file:
TEXTVAR_CHANGED	generic/ttk/ttkEntry.c	144;"	d	file:
TEXT_ADD_REFS	generic/tkTextBTree.c	195;"	d	file:
TEXT_FG	win/tkWinDefault.h	32;"	d
TEXT_OBJS	unix/Makefile	/^TEXT_OBJS = tkText.o tkTextBTree.o tkTextDisp.o tkTextImage.o tkTextIndex.o \\$/;"	m
TEXT_REMOVE_REFS	generic/tkTextBTree.c	196;"	d	file:
TEXT_WRAPMODE_CHAR	generic/tkText.h	/^    TEXT_WRAPMODE_CHAR, TEXT_WRAPMODE_NONE, TEXT_WRAPMODE_WORD,$/;"	e	enum:__anon159
TEXT_WRAPMODE_NONE	generic/tkText.h	/^    TEXT_WRAPMODE_CHAR, TEXT_WRAPMODE_NONE, TEXT_WRAPMODE_WORD,$/;"	e	enum:__anon159
TEXT_WRAPMODE_NULL	generic/tkText.h	/^    TEXT_WRAPMODE_NULL$/;"	e	enum:__anon159
TEXT_WRAPMODE_WORD	generic/tkText.h	/^    TEXT_WRAPMODE_CHAR, TEXT_WRAPMODE_NONE, TEXT_WRAPMODE_WORD,$/;"	e	enum:__anon159
TImageInstance	generic/tkOldTest.c	/^typedef struct TImageInstance {$/;"	s	file:
TImageInstance	generic/tkOldTest.c	/^} TImageInstance;$/;"	t	typeref:struct:TImageInstance	file:
TImageInstance	generic/tkTest.c	/^typedef struct TImageInstance {$/;"	s	file:
TImageInstance	generic/tkTest.c	/^} TImageInstance;$/;"	t	typeref:struct:TImageInstance	file:
TImageMaster	generic/tkOldTest.c	/^typedef struct TImageMaster {$/;"	s	file:
TImageMaster	generic/tkOldTest.c	/^} TImageMaster;$/;"	t	typeref:struct:TImageMaster	file:
TImageMaster	generic/tkTest.c	/^typedef struct TImageMaster {$/;"	s	file:
TImageMaster	generic/tkTest.c	/^} TImageMaster;$/;"	t	typeref:struct:TImageMaster	file:
TKApplication	macosx/tkMacOSXClipboard.c	/^@implementation TKApplication(TKClipboard)$/;"	f
TKApplication	macosx/tkMacOSXDialog.c	/^@implementation TKApplication(TKFontPanel)$/;"	f
TKApplication	macosx/tkMacOSXEvent.c	/^@implementation TKApplication(TKEvent)$/;"	f
TKApplication	macosx/tkMacOSXHLEvents.c	/^@implementation TKApplication(TKHLEvents)$/;"	f
TKApplication	macosx/tkMacOSXInit.c	/^@implementation TKApplication(TKInit)$/;"	f
TKApplication	macosx/tkMacOSXKeyEvent.c	/^@implementation TKApplication(TKKeyEvent)$/;"	f
TKApplication	macosx/tkMacOSXKeyboard.c	/^@implementation TKApplication(TKKeyboard)$/;"	f
TKApplication	macosx/tkMacOSXMenus.c	/^@implementation TKApplication(TKMenus)$/;"	f
TKApplication	macosx/tkMacOSXMouseEvent.c	/^@implementation TKApplication(TKMouseEvent)$/;"	f
TKApplication	macosx/tkMacOSXNotify.c	/^@implementation TKApplication(TKNotify)$/;"	f
TKApplication	macosx/tkMacOSXWindowEvent.c	/^@implementation TKApplication(TKApplicationEvent)$/;"	f
TKApplication	macosx/tkMacOSXWindowEvent.c	/^@implementation TKApplication(TKWindowEvent)$/;"	f
TKApplication_NSApplicationDelegate	macosx/tkMacOSXInit.c	47;"	d	file:
TKContentView	macosx/tkMacOSXKeyEvent.c	/^@implementation TKContentView(TKKeyEvent)$/;"	f
TKContentView	macosx/tkMacOSXMenus.c	/^@implementation TKContentView(TKMenus)$/;"	f
TKContentView	macosx/tkMacOSXWindowEvent.c	/^@implementation TKContentView(TKWindowEvent)$/;"	f
TKINDEX_ANY	generic/tkTextIndex.c	30;"	d	file:
TKINDEX_DISPLAY	generic/tkTextIndex.c	29;"	d	file:
TKINDEX_NONE	generic/tkTextIndex.c	28;"	d	file:
TKLog	macosx/tkMacOSXPrivate.h	129;"	d
TKLog	macosx/tkMacOSXPrivate.h	98;"	d
TKMACOSXFONT_H	macosx/tkMacOSXFont.h	17;"	d
TKMenu	macosx/tkMacOSXMenu.c	/^@implementation TKMenu(TKMenuActions)$/;"	f
TKMenu	macosx/tkMacOSXMenu.c	/^@implementation TKMenu(TKMenuDelegate)$/;"	f
TKMenu	macosx/tkMacOSXMenu.c	/^@implementation TKMenu(TKMenuPrivate)$/;"	f
TKMenu	macosx/tkMacOSXMenu.c	/^@interface TKMenu(TKMenuDelegate) TKMenu_NSMenuDelegate$/;"	f
TKMenu_NSMenuDelegate	macosx/tkMacOSXMenu.c	120;"	d	file:
TKP_CLIP_PIXMAP	generic/tkInt.h	875;"	d
TKP_CLIP_REGION	generic/tkInt.h	876;"	d
TKTEST_EXE	unix/Makefile	/^TKTEST_EXE		= tktest${EXE_SUFFIX}$/;"	m
TKTEST_OBJS	unix/Makefile	/^TKTEST_OBJS = tkTestInit.o tkTest.o tkSquare.o tkOldTest.o \\$/;"	m
TKTEXT_SCROLL_ERROR	generic/tkTextDisp.c	606;"	d	file:
TKTEXT_SCROLL_MOVETO	generic/tkTextDisp.c	603;"	d	file:
TKTEXT_SCROLL_PAGES	generic/tkTextDisp.c	604;"	d	file:
TKTEXT_SCROLL_PIXELS	generic/tkTextDisp.c	607;"	d	file:
TKTEXT_SCROLL_UNITS	generic/tkTextDisp.c	605;"	d	file:
TKWINSENDCOM_DISPID_ASYNC	win/tkWinSendCom.h	42;"	d
TKWINSENDCOM_DISPID_SEND	win/tkWinSendCom.h	41;"	d
TKWINSEND_CLASS_NAME	win/tkWinSend.c	27;"	d	file:
TKWINSEND_REGISTRATION_BASE	win/tkWinSend.c	28;"	d	file:
TKWindow	macosx/tkMacOSXWm.c	/^@implementation TKWindow(TKWm)$/;"	f
TK_3D_DARK2	win/tkWinInt.h	137;"	d
TK_3D_DARK_GC	generic/tk.h	502;"	d
TK_3D_FLAT_GC	generic/tk.h	500;"	d
TK_3D_LIGHT2	win/tkWinInt.h	136;"	d
TK_3D_LIGHT_GC	generic/tk.h	501;"	d
TK_ALL_EVENTS	generic/tk.h	1474;"	d
TK_ALREADY_DEAD	generic/tk.h	886;"	d
TK_ANCHOR_CENTER	generic/tk.h	/^    TK_ANCHOR_CENTER$/;"	e	enum:__anon7
TK_ANCHOR_E	generic/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon7
TK_ANCHOR_N	generic/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon7
TK_ANCHOR_NE	generic/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon7
TK_ANCHOR_NW	generic/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon7
TK_ANCHOR_S	generic/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon7
TK_ANCHOR_SE	generic/tk.h	/^    TK_ANCHOR_N, TK_ANCHOR_NE, TK_ANCHOR_E, TK_ANCHOR_SE,$/;"	e	enum:__anon7
TK_ANCHOR_SW	generic/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon7
TK_ANCHOR_W	generic/tk.h	/^    TK_ANCHOR_S, TK_ANCHOR_SW, TK_ANCHOR_W, TK_ANCHOR_NW,$/;"	e	enum:__anon7
TK_ANONYMOUS_WINDOW	generic/tk.h	897;"	d
TK_ARGV_CONSTANT	generic/tk.h	442;"	d
TK_ARGV_CONST_OPTION	generic/tk.h	451;"	d
TK_ARGV_DONT_SKIP_FIRST_ARG	generic/tk.h	463;"	d
TK_ARGV_END	generic/tk.h	454;"	d
TK_ARGV_FLOAT	generic/tk.h	447;"	d
TK_ARGV_FUNC	generic/tk.h	448;"	d
TK_ARGV_GENFUNC	generic/tk.h	449;"	d
TK_ARGV_HELP	generic/tk.h	450;"	d
TK_ARGV_INT	generic/tk.h	443;"	d
TK_ARGV_NO_ABBREV	generic/tk.h	462;"	d
TK_ARGV_NO_DEFAULTS	generic/tk.h	460;"	d
TK_ARGV_NO_LEFTOVERS	generic/tk.h	461;"	d
TK_ARGV_OPTION_NAME_VALUE	generic/tk.h	453;"	d
TK_ARGV_OPTION_VALUE	generic/tk.h	452;"	d
TK_ARGV_REST	generic/tk.h	446;"	d
TK_ARGV_STRING	generic/tk.h	444;"	d
TK_ARGV_UID	generic/tk.h	445;"	d
TK_ATTACHWINDOW	win/tkWin.h	49;"	d
TK_AT_LEAST_ONE	generic/tk.h	557;"	d
TK_BOTH_CHANGED	macosx/tkMacOSXInt.h	177;"	d
TK_BOTH_HALVES	generic/tk.h	894;"	d
TK_CHECKED_IC	generic/tk.h	889;"	d
TK_CLAIMFOCUS	win/tkWin.h	47;"	d
TK_CLIP_INVALID	macosx/tkMacOSXInt.h	83;"	d
TK_COLOR_BY_NAME	generic/tkColor.h	23;"	d
TK_COLOR_BY_VALUE	generic/tkColor.h	24;"	d
TK_CONFIG_ACTIVE_CURSOR	generic/tk.h	/^    TK_CONFIG_ACTIVE_CURSOR, TK_CONFIG_JUSTIFY, TK_CONFIG_ANCHOR,$/;"	e	enum:__anon4
TK_CONFIG_ANCHOR	generic/tk.h	/^    TK_CONFIG_ACTIVE_CURSOR, TK_CONFIG_JUSTIFY, TK_CONFIG_ANCHOR,$/;"	e	enum:__anon4
TK_CONFIG_ARGV_ONLY	generic/tk.h	403;"	d
TK_CONFIG_BITMAP	generic/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon4
TK_CONFIG_BOOLEAN	generic/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon4
TK_CONFIG_BORDER	generic/tk.h	/^    TK_CONFIG_BORDER, TK_CONFIG_RELIEF, TK_CONFIG_CURSOR,$/;"	e	enum:__anon4
TK_CONFIG_CAP_STYLE	generic/tk.h	/^    TK_CONFIG_SYNONYM, TK_CONFIG_CAP_STYLE, TK_CONFIG_JOIN_STYLE,$/;"	e	enum:__anon4
TK_CONFIG_COLOR	generic/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon4
TK_CONFIG_COLOR_ONLY	generic/tk.h	414;"	d
TK_CONFIG_CURSOR	generic/tk.h	/^    TK_CONFIG_BORDER, TK_CONFIG_RELIEF, TK_CONFIG_CURSOR,$/;"	e	enum:__anon4
TK_CONFIG_CUSTOM	generic/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon4
TK_CONFIG_DONT_SET_DEFAULT	generic/tk.h	416;"	d
TK_CONFIG_DOUBLE	generic/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon4
TK_CONFIG_END	generic/tk.h	/^    TK_CONFIG_END$/;"	e	enum:__anon4
TK_CONFIG_FONT	generic/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon4
TK_CONFIG_INT	generic/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon4
TK_CONFIG_JOIN_STYLE	generic/tk.h	/^    TK_CONFIG_SYNONYM, TK_CONFIG_CAP_STYLE, TK_CONFIG_JOIN_STYLE,$/;"	e	enum:__anon4
TK_CONFIG_JUSTIFY	generic/tk.h	/^    TK_CONFIG_ACTIVE_CURSOR, TK_CONFIG_JUSTIFY, TK_CONFIG_ANCHOR,$/;"	e	enum:__anon4
TK_CONFIG_MM	generic/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon4
TK_CONFIG_MONO_ONLY	generic/tk.h	415;"	d
TK_CONFIG_NULL_OK	generic/tk.h	413;"	d
TK_CONFIG_OBJS	generic/tk.h	404;"	d
TK_CONFIG_OPTION_SPECIFIED	generic/tk.h	417;"	d
TK_CONFIG_PIXELS	generic/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon4
TK_CONFIG_RELIEF	generic/tk.h	/^    TK_CONFIG_BORDER, TK_CONFIG_RELIEF, TK_CONFIG_CURSOR,$/;"	e	enum:__anon4
TK_CONFIG_STRING	generic/tk.h	/^    TK_CONFIG_BOOLEAN, TK_CONFIG_INT, TK_CONFIG_DOUBLE, TK_CONFIG_STRING,$/;"	e	enum:__anon4
TK_CONFIG_SYNONYM	generic/tk.h	/^    TK_CONFIG_SYNONYM, TK_CONFIG_CAP_STYLE, TK_CONFIG_JOIN_STYLE,$/;"	e	enum:__anon4
TK_CONFIG_UID	generic/tk.h	/^    TK_CONFIG_UID, TK_CONFIG_COLOR, TK_CONFIG_FONT, TK_CONFIG_BITMAP,$/;"	e	enum:__anon4
TK_CONFIG_USER_BIT	generic/tk.h	418;"	d
TK_CONFIG_WINDOW	generic/tk.h	/^    TK_CONFIG_PIXELS, TK_CONFIG_MM, TK_CONFIG_WINDOW, TK_CONFIG_CUSTOM,$/;"	e	enum:__anon4
TK_CONTAINER	generic/tk.h	893;"	d
TK_CONTAINER_ISAVAILABLE	win/tkWin.h	68;"	d
TK_CONTAINER_VERIFY	win/tkWin.h	67;"	d
TK_DECLS	unix/Makefile	/^TK_DECLS = \\$/;"	m
TK_DEFAULT_CURSOR	win/tkWinCursor.c	74;"	d	file:
TK_DEFER_EVENT	generic/tk.h	/^    TK_DEFER_EVENT, TK_PROCESS_EVENT, TK_DISCARD_EVENT$/;"	e	enum:__anon6
TK_DEICONIFY	win/tkWin.h	54;"	d
TK_DETACHWINDOW	win/tkWin.h	50;"	d
TK_DISCARD_EVENT	generic/tk.h	/^    TK_DEFER_EVENT, TK_PROCESS_EVENT, TK_DISCARD_EVENT$/;"	e	enum:__anon6
TK_DISPLAY_COLLAPSE_MOTION_EVENTS	generic/tkInt.h	525;"	d
TK_DISPLAY_IN_WARP	generic/tkInt.h	528;"	d
TK_DISPLAY_USE_IM	generic/tkInt.h	526;"	d
TK_DISPLAY_USE_XKB	generic/tkInt.h	529;"	d
TK_DISPLAY_WM_TRACING	generic/tkInt.h	527;"	d
TK_DONT_DESTROY_WINDOW	generic/tk.h	890;"	d
TK_DONT_WAIT	generic/tk.h	1468;"	d
TK_DO_NOT_DRAW	macosx/tkMacOSXInt.h	89;"	d
TK_DRAWN_UNDER_MENU	macosx/tkMacOSXInt.h	85;"	d
TK_DRAW_IN_CONTEXT	macosx/tkMacOSXInt.h	185;"	d
TK_DUMP_ALL	generic/tkText.c	4612;"	d	file:
TK_DUMP_IMG	generic/tkText.c	4611;"	d	file:
TK_DUMP_MARK	generic/tkText.c	4608;"	d	file:
TK_DUMP_TAG	generic/tkText.c	4609;"	d	file:
TK_DUMP_TEXT	generic/tkText.c	4607;"	d	file:
TK_DUMP_WIN	generic/tkText.c	4610;"	d	file:
TK_ELEMENT_STATE_ACTIVE	generic/tk.h	1449;"	d
TK_ELEMENT_STATE_DISABLED	generic/tk.h	1450;"	d
TK_ELEMENT_STATE_FOCUS	generic/tk.h	1451;"	d
TK_ELEMENT_STATE_PRESSED	generic/tk.h	1452;"	d
TK_ELSE	macosx/tkMacOSXPrivate.h	45;"	d
TK_ELSE_MAC_OS_X	macosx/tkMacOSXPrivate.h	41;"	d
TK_EMBEDDED	generic/tk.h	892;"	d
TK_ENDIF	macosx/tkMacOSXPrivate.h	47;"	d
TK_END_OF_TEXT	generic/tkText.h	913;"	d
TK_ENTRY	generic/tkEntry.h	/^    TK_ENTRY, TK_SPINBOX$/;"	e	enum:EntryType
TK_EXCEPTION	generic/tk.h	1466;"	d
TK_FILE_EVENTS	generic/tk.h	1471;"	d
TK_FMWK_DIR	macosx/GNUmakefile	/^TK_FMWK_DIR		:= ${FMWK_DIR}\/${PRODUCT_NAME}.framework\/Versions\/${VERSION}$/;"	m
TK_FOCUSED_VIEW	macosx/tkMacOSXInt.h	86;"	d
TK_FS_ITALIC	generic/tkFont.h	52;"	d
TK_FS_OBLIQUE	generic/tkFont.h	53;"	d
TK_FS_ROMAN	generic/tkFont.h	51;"	d
TK_FS_UNKNOWN	generic/tkFont.h	59;"	d
TK_FW_BOLD	generic/tkFont.h	41;"	d
TK_FW_NORMAL	generic/tkFont.h	40;"	d
TK_FW_UNKNOWN	generic/tkFont.h	43;"	d
TK_GEOMETRYREQ	win/tkWin.h	48;"	d
TK_GETFRAMEWID	win/tkWin.h	56;"	d
TK_GOT_AT_LEAST_SNOW_LEOPARD	macosx/tkMacOSXWm.c	368;"	d	file:
TK_GRAB_ANCESTOR	generic/tkInt.h	884;"	d
TK_GRAB_EXCLUDED	generic/tkInt.h	885;"	d
TK_GRAB_FLAG	generic/tk.h	888;"	d
TK_GRAB_IN_TREE	generic/tkInt.h	883;"	d
TK_GRAB_NONE	generic/tkInt.h	882;"	d
TK_HAS_WRAPPER	generic/tk.h	898;"	d
TK_HOST_EXISTS	macosx/tkMacOSXInt.h	84;"	d
TK_ICONIFY	win/tkWin.h	53;"	d
TK_IDLE_EVENTS	generic/tk.h	1473;"	d
TK_IF_MAC_OS_X_API	macosx/tkMacOSXPrivate.h	39;"	d
TK_IF_MAC_OS_X_API_COND	macosx/tkMacOSXPrivate.h	43;"	d
TK_IGNORE_NEWLINES	generic/tk.h	565;"	d
TK_IGNORE_TABS	generic/tk.h	564;"	d
TK_INFO	win/tkWin.h	60;"	d
TK_INTERACTIVE_PRIO	generic/tk.h	481;"	d
TK_ISOLATE_END	generic/tkInt.h	893;"	d
TK_IS_BW_PIXMAP	macosx/tkMacOSXInt.h	88;"	d
TK_IS_PIXMAP	macosx/tkMacOSXInt.h	87;"	d
TK_ITEM_DONT_REDRAW	generic/tk.h	983;"	d
TK_ITEM_STATE_DEPENDANT	generic/tk.h	982;"	d
TK_JUSTIFY_CENTER	generic/tk.h	/^    TK_JUSTIFY_LEFT, TK_JUSTIFY_RIGHT, TK_JUSTIFY_CENTER$/;"	e	enum:__anon8
TK_JUSTIFY_LEFT	generic/tk.h	/^    TK_JUSTIFY_LEFT, TK_JUSTIFY_RIGHT, TK_JUSTIFY_CENTER$/;"	e	enum:__anon8
TK_JUSTIFY_RIGHT	generic/tk.h	/^    TK_JUSTIFY_LEFT, TK_JUSTIFY_RIGHT, TK_JUSTIFY_CENTER$/;"	e	enum:__anon8
TK_LASTEVENT	generic/tk.h	654;"	d
TK_LAYOUT_WITH_BASE_CHUNKS	macosx/tkMacOSXInt.h	184;"	d
TK_LIBRARY	unix/Makefile	/^TK_LIBRARY		= $(prefix)\/lib\/tk$(VERSION)$/;"	m
TK_LIB_FILE	unix/Makefile	/^TK_LIB_FILE		= libtk8.6.so$/;"	m
TK_LIB_FLAG	unix/Makefile	/^TK_LIB_FLAG		= -ltk8.6$/;"	m
TK_LOCAL_APPINIT	unix/tkAppInit.c	30;"	d	file:
TK_LOCAL_APPINIT	win/winMain.c	54;"	d	file:
TK_LOCATION_CHANGED	macosx/tkMacOSXInt.h	175;"	d
TK_MACOSX_HANDLE_EVENT_IMMEDIATELY	macosx/tkMacOSXInt.h	178;"	d
TK_MAC_CURSOR_bucket	macosx/tkMacOSXCursors.h	26;"	d
TK_MAC_CURSOR_cancel	macosx/tkMacOSXCursors.h	35;"	d
TK_MAC_CURSOR_eyedrop	macosx/tkMacOSXCursors.h	53;"	d
TK_MAC_CURSOR_eyedrop_full	macosx/tkMacOSXCursors.h	62;"	d
TK_MAC_CURSOR_hand	macosx/tkMacOSXCursors.h	17;"	d
TK_MAC_CURSOR_resize	macosx/tkMacOSXCursors.h	44;"	d
TK_MAC_CURSOR_zoom_in	macosx/tkMacOSXCursors.h	71;"	d
TK_MAC_CURSOR_zoom_out	macosx/tkMacOSXCursors.h	80;"	d
TK_MAC_XCURSOR_X_cursor	macosx/tkMacOSXXCursors.h	18;"	d
TK_MAC_XCURSOR_arrow	macosx/tkMacOSXXCursors.h	27;"	d
TK_MAC_XCURSOR_based_arrow_down	macosx/tkMacOSXXCursors.h	36;"	d
TK_MAC_XCURSOR_based_arrow_up	macosx/tkMacOSXXCursors.h	45;"	d
TK_MAC_XCURSOR_boat	macosx/tkMacOSXXCursors.h	54;"	d
TK_MAC_XCURSOR_bogosity	macosx/tkMacOSXXCursors.h	63;"	d
TK_MAC_XCURSOR_bottom_left_corner	macosx/tkMacOSXXCursors.h	72;"	d
TK_MAC_XCURSOR_bottom_right_corner	macosx/tkMacOSXXCursors.h	81;"	d
TK_MAC_XCURSOR_bottom_side	macosx/tkMacOSXXCursors.h	90;"	d
TK_MAC_XCURSOR_bottom_tee	macosx/tkMacOSXXCursors.h	99;"	d
TK_MAC_XCURSOR_box_spiral	macosx/tkMacOSXXCursors.h	108;"	d
TK_MAC_XCURSOR_center_ptr	macosx/tkMacOSXXCursors.h	117;"	d
TK_MAC_XCURSOR_circle	macosx/tkMacOSXXCursors.h	126;"	d
TK_MAC_XCURSOR_clock	macosx/tkMacOSXXCursors.h	135;"	d
TK_MAC_XCURSOR_coffee_mug	macosx/tkMacOSXXCursors.h	144;"	d
TK_MAC_XCURSOR_cross	macosx/tkMacOSXXCursors.h	153;"	d
TK_MAC_XCURSOR_cross_reverse	macosx/tkMacOSXXCursors.h	162;"	d
TK_MAC_XCURSOR_crosshair	macosx/tkMacOSXXCursors.h	171;"	d
TK_MAC_XCURSOR_diamond_cross	macosx/tkMacOSXXCursors.h	180;"	d
TK_MAC_XCURSOR_dot	macosx/tkMacOSXXCursors.h	189;"	d
TK_MAC_XCURSOR_dotbox	macosx/tkMacOSXXCursors.h	198;"	d
TK_MAC_XCURSOR_double_arrow	macosx/tkMacOSXXCursors.h	207;"	d
TK_MAC_XCURSOR_draft_large	macosx/tkMacOSXXCursors.h	216;"	d
TK_MAC_XCURSOR_draft_small	macosx/tkMacOSXXCursors.h	225;"	d
TK_MAC_XCURSOR_draped_box	macosx/tkMacOSXXCursors.h	234;"	d
TK_MAC_XCURSOR_exchange	macosx/tkMacOSXXCursors.h	243;"	d
TK_MAC_XCURSOR_fleur	macosx/tkMacOSXXCursors.h	252;"	d
TK_MAC_XCURSOR_gobbler	macosx/tkMacOSXXCursors.h	261;"	d
TK_MAC_XCURSOR_gumby	macosx/tkMacOSXXCursors.h	270;"	d
TK_MAC_XCURSOR_hand1	macosx/tkMacOSXXCursors.h	279;"	d
TK_MAC_XCURSOR_hand2	macosx/tkMacOSXXCursors.h	288;"	d
TK_MAC_XCURSOR_heart	macosx/tkMacOSXXCursors.h	297;"	d
TK_MAC_XCURSOR_icon	macosx/tkMacOSXXCursors.h	306;"	d
TK_MAC_XCURSOR_iron_cross	macosx/tkMacOSXXCursors.h	315;"	d
TK_MAC_XCURSOR_left_ptr	macosx/tkMacOSXXCursors.h	324;"	d
TK_MAC_XCURSOR_left_side	macosx/tkMacOSXXCursors.h	333;"	d
TK_MAC_XCURSOR_left_tee	macosx/tkMacOSXXCursors.h	342;"	d
TK_MAC_XCURSOR_leftbutton	macosx/tkMacOSXXCursors.h	351;"	d
TK_MAC_XCURSOR_ll_angle	macosx/tkMacOSXXCursors.h	360;"	d
TK_MAC_XCURSOR_lr_angle	macosx/tkMacOSXXCursors.h	369;"	d
TK_MAC_XCURSOR_man	macosx/tkMacOSXXCursors.h	378;"	d
TK_MAC_XCURSOR_middlebutton	macosx/tkMacOSXXCursors.h	387;"	d
TK_MAC_XCURSOR_mouse	macosx/tkMacOSXXCursors.h	396;"	d
TK_MAC_XCURSOR_pencil	macosx/tkMacOSXXCursors.h	405;"	d
TK_MAC_XCURSOR_pirate	macosx/tkMacOSXXCursors.h	414;"	d
TK_MAC_XCURSOR_plus	macosx/tkMacOSXXCursors.h	423;"	d
TK_MAC_XCURSOR_question_arrow	macosx/tkMacOSXXCursors.h	432;"	d
TK_MAC_XCURSOR_right_ptr	macosx/tkMacOSXXCursors.h	441;"	d
TK_MAC_XCURSOR_right_side	macosx/tkMacOSXXCursors.h	450;"	d
TK_MAC_XCURSOR_right_tee	macosx/tkMacOSXXCursors.h	459;"	d
TK_MAC_XCURSOR_rightbutton	macosx/tkMacOSXXCursors.h	468;"	d
TK_MAC_XCURSOR_rtl_logo	macosx/tkMacOSXXCursors.h	477;"	d
TK_MAC_XCURSOR_sailboat	macosx/tkMacOSXXCursors.h	486;"	d
TK_MAC_XCURSOR_sb_down_arrow	macosx/tkMacOSXXCursors.h	495;"	d
TK_MAC_XCURSOR_sb_h_double_arrow	macosx/tkMacOSXXCursors.h	504;"	d
TK_MAC_XCURSOR_sb_left_arrow	macosx/tkMacOSXXCursors.h	513;"	d
TK_MAC_XCURSOR_sb_right_arrow	macosx/tkMacOSXXCursors.h	522;"	d
TK_MAC_XCURSOR_sb_up_arrow	macosx/tkMacOSXXCursors.h	531;"	d
TK_MAC_XCURSOR_sb_v_double_arrow	macosx/tkMacOSXXCursors.h	540;"	d
TK_MAC_XCURSOR_shuttle	macosx/tkMacOSXXCursors.h	549;"	d
TK_MAC_XCURSOR_sizing	macosx/tkMacOSXXCursors.h	558;"	d
TK_MAC_XCURSOR_spider	macosx/tkMacOSXXCursors.h	567;"	d
TK_MAC_XCURSOR_spraycan	macosx/tkMacOSXXCursors.h	576;"	d
TK_MAC_XCURSOR_star	macosx/tkMacOSXXCursors.h	585;"	d
TK_MAC_XCURSOR_target	macosx/tkMacOSXXCursors.h	594;"	d
TK_MAC_XCURSOR_tcross	macosx/tkMacOSXXCursors.h	603;"	d
TK_MAC_XCURSOR_top_left_arrow	macosx/tkMacOSXXCursors.h	612;"	d
TK_MAC_XCURSOR_top_left_corner	macosx/tkMacOSXXCursors.h	621;"	d
TK_MAC_XCURSOR_top_right_corner	macosx/tkMacOSXXCursors.h	630;"	d
TK_MAC_XCURSOR_top_side	macosx/tkMacOSXXCursors.h	639;"	d
TK_MAC_XCURSOR_top_tee	macosx/tkMacOSXXCursors.h	648;"	d
TK_MAC_XCURSOR_trek	macosx/tkMacOSXXCursors.h	657;"	d
TK_MAC_XCURSOR_ul_angle	macosx/tkMacOSXXCursors.h	666;"	d
TK_MAC_XCURSOR_umbrella	macosx/tkMacOSXXCursors.h	675;"	d
TK_MAC_XCURSOR_ur_angle	macosx/tkMacOSXXCursors.h	684;"	d
TK_MAC_XCURSOR_watch	macosx/tkMacOSXXCursors.h	693;"	d
TK_MAC_XCURSOR_xterm	macosx/tkMacOSXXCursors.h	702;"	d
TK_MAJOR_VERSION	generic/tk.h	75;"	d
TK_MAKE_MENU_DROPDOWN	generic/tkInt.h	838;"	d
TK_MAKE_MENU_POPUP	generic/tkInt.h	837;"	d
TK_MAKE_MENU_TEAROFF	generic/tkInt.h	836;"	d
TK_MAPPED	generic/tk.h	884;"	d
TK_MAX_PRIO	generic/tk.h	482;"	d
TK_MAX_WARN_LEN	win/tkWinInit.c	119;"	d	file:
TK_MINOR_VERSION	generic/tk.h	76;"	d
TK_MOVABLE_POINTS	generic/tk.h	1107;"	d
TK_MOVEWINDOW	win/tkWin.h	51;"	d
TK_MULTI_MAX_PATH	win/tkWinDialog.c	138;"	d	file:
TK_NEED_CONFIG_NOTIFY	generic/tk.h	887;"	d
TK_NOTIFY_SHARE	generic/tk.h	511;"	d
TK_NO_DOUBLE_BUFFERING	generic/ttk/ttkWidget.c	13;"	d	file:
TK_NO_DOUBLE_BUFFERING	macosx/tkMacOSXPort.h	153;"	d
TK_NUM_SAVED_OPTIONS	generic/tk.h	303;"	d
TK_NUM_SAVED_OPTIONS	generic/tk.h	305;"	d
TK_OFFSET_BOTTOM	generic/tk.h	1184;"	d
TK_OFFSET_CENTER	generic/tk.h	1180;"	d
TK_OFFSET_INDEX	generic/tk.h	1177;"	d
TK_OFFSET_LEFT	generic/tk.h	1179;"	d
TK_OFFSET_MIDDLE	generic/tk.h	1183;"	d
TK_OFFSET_RELATIVE	generic/tk.h	1178;"	d
TK_OFFSET_RIGHT	generic/tk.h	1181;"	d
TK_OFFSET_TOP	generic/tk.h	1182;"	d
TK_OPTION_ANCHOR	generic/tk.h	/^    TK_OPTION_ANCHOR,$/;"	e	enum:__anon3
TK_OPTION_ANY	generic/ttk/ttkTheme.h	245;"	d
TK_OPTION_BITMAP	generic/tk.h	/^    TK_OPTION_BITMAP,$/;"	e	enum:__anon3
TK_OPTION_BOOLEAN	generic/tk.h	/^    TK_OPTION_BOOLEAN,$/;"	e	enum:__anon3
TK_OPTION_BORDER	generic/tk.h	/^    TK_OPTION_BORDER,$/;"	e	enum:__anon3
TK_OPTION_COLOR	generic/tk.h	/^    TK_OPTION_COLOR,$/;"	e	enum:__anon3
TK_OPTION_CURSOR	generic/tk.h	/^    TK_OPTION_CURSOR,$/;"	e	enum:__anon3
TK_OPTION_CUSTOM	generic/tk.h	/^    TK_OPTION_CUSTOM,$/;"	e	enum:__anon3
TK_OPTION_DONT_SET_DEFAULT	generic/tk.h	227;"	d
TK_OPTION_DOUBLE	generic/tk.h	/^    TK_OPTION_DOUBLE,$/;"	e	enum:__anon3
TK_OPTION_END	generic/tk.h	/^    TK_OPTION_END,$/;"	e	enum:__anon3
TK_OPTION_FONT	generic/tk.h	/^    TK_OPTION_FONT,$/;"	e	enum:__anon3
TK_OPTION_INT	generic/tk.h	/^    TK_OPTION_INT,$/;"	e	enum:__anon3
TK_OPTION_JUSTIFY	generic/tk.h	/^    TK_OPTION_JUSTIFY,$/;"	e	enum:__anon3
TK_OPTION_NULL_OK	generic/tk.h	226;"	d
TK_OPTION_PIXELS	generic/tk.h	/^    TK_OPTION_PIXELS,$/;"	e	enum:__anon3
TK_OPTION_RELIEF	generic/tk.h	/^    TK_OPTION_RELIEF,$/;"	e	enum:__anon3
TK_OPTION_STRING	generic/tk.h	/^    TK_OPTION_STRING,$/;"	e	enum:__anon3
TK_OPTION_STRING_TABLE	generic/tk.h	/^    TK_OPTION_STRING_TABLE,$/;"	e	enum:__anon3
TK_OPTION_STYLE	generic/tk.h	/^    TK_OPTION_STYLE$/;"	e	enum:__anon3
TK_OPTION_SYNONYM	generic/tk.h	/^    TK_OPTION_SYNONYM,$/;"	e	enum:__anon3
TK_OPTION_WINDOW	generic/tk.h	/^    TK_OPTION_WINDOW,$/;"	e	enum:__anon3
TK_OVERRIDEREDIRECT	win/tkWin.h	57;"	d
TK_PARENT_WINDOW	macosx/tkMacOSXInt.h	162;"	d
TK_PARTIAL_OK	generic/tk.h	558;"	d
TK_PATCH_LEVEL	generic/tk.h	81;"	d
TK_PHOTO_ALLOC_FAILURE_MESSAGE	generic/tkImgPhoto.c	95;"	d	file:
TK_PHOTO_COMPOSITE_OVERLAY	generic/tk.h	1312;"	d
TK_PHOTO_COMPOSITE_SET	generic/tk.h	1313;"	d
TK_PKG_DIR	unix/Makefile	/^TK_PKG_DIR		= tk$(VERSION)$/;"	m
TK_POS_CHARS	generic/tkText.h	920;"	d
TK_PROCESS_EVENT	generic/tk.h	/^    TK_DEFER_EVENT, TK_PROCESS_EVENT, TK_DISCARD_EVENT$/;"	e	enum:__anon6
TK_PROP_PROPCHANGE	generic/tk.h	901;"	d
TK_RAISEWINDOW	win/tkWin.h	52;"	d
TK_READABLE	generic/tk.h	1464;"	d
TK_READ_DATA_PENDING	win/tkWinPort.h	102;"	d
TK_READ_DATA_PENDING	win/tkWinPort.h	104;"	d
TK_RELEASE_LEVEL	generic/tk.h	77;"	d
TK_RELEASE_SERIAL	generic/tk.h	78;"	d
TK_RELIEF_FLAT	generic/tk.h	489;"	d
TK_RELIEF_GROOVE	generic/tk.h	490;"	d
TK_RELIEF_NULL	generic/tk.h	488;"	d
TK_RELIEF_RAISED	generic/tk.h	491;"	d
TK_RELIEF_RIDGE	generic/tk.h	492;"	d
TK_RELIEF_SOLID	generic/tk.h	493;"	d
TK_RELIEF_SUNKEN	generic/tk.h	494;"	d
TK_REPARENTED	generic/tk.h	896;"	d
TK_RSRC_FILE	unix/Makefile	/^TK_RSRC_FILE		= tk$(VERSION).rsrc$/;"	m
TK_SCROLLBAR_GROW	macosx/tkMacOSXInt.h	82;"	d
TK_SCROLL_ERROR	generic/tk.h	640;"	d
TK_SCROLL_MOVETO	generic/tk.h	637;"	d
TK_SCROLL_PAGES	generic/tk.h	638;"	d
TK_SCROLL_UNITS	generic/tk.h	639;"	d
TK_SEL_BYTES_AT_ONCE	generic/tkSelect.h	148;"	d
TK_SEL_WORDS_AT_ONCE	generic/tkSelect.h	149;"	d
TK_SETMENU	win/tkWin.h	58;"	d
TK_SHARED_BUILD	unix/Makefile	/^TK_SHARED_BUILD		= 1$/;"	m
TK_SHLIB_LD_EXTRAS	unix/Makefile	/^TK_SHLIB_LD_EXTRAS	= $/;"	m
TK_SIZE_CHANGED	macosx/tkMacOSXInt.h	176;"	d
TK_SPINBOX	generic/tkEntry.h	/^    TK_ENTRY, TK_SPINBOX$/;"	e	enum:EntryType
TK_STARTUP_FILE_PRIO	generic/tk.h	479;"	d
TK_STATE	win/tkWin.h	59;"	d
TK_STATE_ACTIVE	generic/tk.h	/^    TK_STATE_NULL = -1, TK_STATE_ACTIVE, TK_STATE_DISABLED,$/;"	e	enum:__anon11
TK_STATE_DISABLED	generic/tk.h	/^    TK_STATE_NULL = -1, TK_STATE_ACTIVE, TK_STATE_DISABLED,$/;"	e	enum:__anon11
TK_STATE_HIDDEN	generic/tk.h	/^    TK_STATE_NORMAL, TK_STATE_HIDDEN$/;"	e	enum:__anon11
TK_STATE_NORMAL	generic/tk.h	/^    TK_STATE_NORMAL, TK_STATE_HIDDEN$/;"	e	enum:__anon11
TK_STATE_NULL	generic/tk.h	/^    TK_STATE_NULL = -1, TK_STATE_ACTIVE, TK_STATE_DISABLED,$/;"	e	enum:__anon11
TK_STUB_LIB_FILE	unix/Makefile	/^TK_STUB_LIB_FILE	= libtkstub8.6.a$/;"	m
TK_STUB_LIB_FLAG	unix/Makefile	/^TK_STUB_LIB_FLAG	= -ltkstub8.6$/;"	m
TK_STYLE_VERSION	generic/tk.h	1399;"	d
TK_STYLE_VERSION_1	generic/tk.h	1398;"	d
TK_STYLE_VERSION_2	generic/ttk/ttkTheme.h	/^enum TTKStyleVersion2 { TK_STYLE_VERSION_2 = 2 };$/;"	e	enum:TTKStyleVersion2
TK_SW_CONDENSE	generic/tkFont.h	159;"	d
TK_SW_EXPAND	generic/tkFont.h	160;"	d
TK_SW_NORMAL	generic/tkFont.h	158;"	d
TK_SW_UNKNOWN	generic/tkFont.h	161;"	d
TK_TAG_AFFECTS_DISPLAY	generic/tkText.h	412;"	d
TK_TAG_JUSTIFY	generic/tkText.h	414;"	d
TK_TAG_OFFSET	generic/tkText.h	415;"	d
TK_TAG_SPACE	generic/tk.h	931;"	d
TK_TAG_UNDERLINE	generic/tkText.h	413;"	d
TK_TEXT_DIRTY_FIXED	generic/tkText.h	/^    TK_TEXT_DIRTY_FIXED		\/* Forced to be dirty; can't be undone\/redone$/;"	e	enum:__anon163
TK_TEXT_DIRTY_NORMAL	generic/tkText.h	/^    TK_TEXT_DIRTY_NORMAL,	\/* Normal behavior. *\/$/;"	e	enum:__anon163
TK_TEXT_DIRTY_REDO	generic/tkText.h	/^    TK_TEXT_DIRTY_REDO,		\/* Reapplying a compound action. *\/$/;"	e	enum:__anon163
TK_TEXT_DIRTY_UNDO	generic/tkText.h	/^    TK_TEXT_DIRTY_UNDO,		\/* Reverting a compound action. *\/$/;"	e	enum:__anon163
TK_TEXT_EDIT_DELETE	generic/tkText.h	/^    TK_TEXT_EDIT_DELETE,	\/* delete mode *\/$/;"	e	enum:__anon162
TK_TEXT_EDIT_INSERT	generic/tkText.h	/^    TK_TEXT_EDIT_INSERT,	\/* insert mode *\/$/;"	e	enum:__anon162
TK_TEXT_EDIT_OTHER	generic/tkText.h	/^    TK_TEXT_EDIT_OTHER		\/* none of the above *\/$/;"	e	enum:__anon162
TK_TEXT_EDIT_REPLACE	generic/tkText.h	/^    TK_TEXT_EDIT_REPLACE,	\/* replace mode *\/$/;"	e	enum:__anon162
TK_TEXT_INSERT_NOFOCUS_HOLLOW	generic/tkText.h	/^    TK_TEXT_INSERT_NOFOCUS_HOLLOW,$/;"	e	enum:__anon165
TK_TEXT_INSERT_NOFOCUS_NONE	generic/tkText.h	/^    TK_TEXT_INSERT_NOFOCUS_NONE,$/;"	e	enum:__anon165
TK_TEXT_INSERT_NOFOCUS_SOLID	generic/tkText.h	/^    TK_TEXT_INSERT_NOFOCUS_SOLID$/;"	e	enum:__anon165
TK_TEXT_INVALIDATE_DELETE	generic/tkText.h	942;"	d
TK_TEXT_INVALIDATE_INSERT	generic/tkText.h	941;"	d
TK_TEXT_INVALIDATE_ONLY	generic/tkText.h	940;"	d
TK_TEXT_LINE_GEOMETRY	generic/tkText.h	927;"	d
TK_TEXT_LINE_RANGE	generic/tkText.h	934;"	d
TK_TEXT_NOPIXELADJUST	generic/tkText.h	950;"	d
TK_TEXT_PICKPLACE	generic/tkText.h	949;"	d
TK_TEXT_STATE_DISABLED	generic/tkText.h	/^    TK_TEXT_STATE_DISABLED, TK_TEXT_STATE_NORMAL$/;"	e	enum:__anon164
TK_TEXT_STATE_NORMAL	generic/tkText.h	/^    TK_TEXT_STATE_DISABLED, TK_TEXT_STATE_NORMAL$/;"	e	enum:__anon164
TK_TEXT_TABSTYLE_NONE	generic/tkText.h	/^    TK_TEXT_TABSTYLE_NONE$/;"	e	enum:__anon161
TK_TEXT_TABSTYLE_TABULAR	generic/tkText.h	/^    TK_TEXT_TABSTYLE_TABULAR,$/;"	e	enum:__anon161
TK_TEXT_TABSTYLE_WORDPROCESSOR	generic/tkText.h	/^    TK_TEXT_TABSTYLE_WORDPROCESSOR,$/;"	e	enum:__anon161
TK_THEME_WIN_CLASSIC	win/tkWinInt.h	186;"	d
TK_THEME_WIN_XP	win/tkWinInt.h	187;"	d
TK_TIMER_EVENTS	generic/tk.h	1472;"	d
TK_TOP_HIERARCHY	generic/tk.h	900;"	d
TK_TOP_LEVEL	generic/tk.h	885;"	d
TK_UNDO_ACTION	generic/tkUndo.h	/^    TK_UNDO_ACTION		\/* Command *\/$/;"	e	enum:__anon175
TK_UNDO_SEPARATOR	generic/tkUndo.h	/^    TK_UNDO_SEPARATOR,		\/* Marker *\/$/;"	e	enum:__anon175
TK_USER_DEFAULT_PRIO	generic/tk.h	480;"	d
TK_USE_INPUT_METHODS	generic/tk.h	117;"	d
TK_VERSION	generic/tk.h	80;"	d
TK_WHOLE_WORDS	generic/tk.h	556;"	d
TK_WIDGET_DEFAULT_PRIO	generic/tk.h	478;"	d
TK_WINDOW_EVENTS	generic/tk.h	1470;"	d
TK_WINDOW_ONLY	macosx/tkMacOSXInt.h	161;"	d
TK_WIN_CHILD_CLASS_NAME	win/tkWinInt.h	121;"	d
TK_WIN_MANAGED	generic/tk.h	899;"	d
TK_WIN_TOPLEVEL_CLASS_NAME	win/tkWinInt.h	120;"	d
TK_WITHDRAW	win/tkWin.h	55;"	d
TK_WM_COLORMAP_WINDOW	generic/tk.h	891;"	d
TK_WM_MANAGEABLE	generic/tk.h	902;"	d
TK_WRAPPER	generic/tk.h	895;"	d
TK_WRITABLE	generic/tk.h	1465;"	d
TK_X11	macosx/GNUmakefile	/^TK_X11			?=$/;"	m
TK_X_EVENTS	generic/tk.h	1469;"	d
TMP_SIZE	generic/tkOption.c	264;"	d	file:
TOOL_DIR	unix/Makefile	/^TOOL_DIR		= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/build\/tcl-8.6.6\/tools$/;"	m
TOP	generic/tkPack.c	/^typedef enum {TOP, BOTTOM, LEFT, RIGHT} Side;$/;"	e	enum:__anon151	file:
TOP_ARROW	generic/tkScrollbar.h	136;"	d
TOP_DIR	macosx/GNUmakefile	/^TOP_DIR			:= ${INSTALL_ROOT}\/$/;"	m
TOP_DIR	macosx/GNUmakefile	/^TOP_DIR			:= ${SYMROOT}$/;"	m
TOP_DIR	unix/Makefile	/^TOP_DIR			= $(SRC_DIR)\/..$/;"	m
TOP_GAP	generic/tkScrollbar.h	137;"	d
TOP_LINE	generic/tkTextDisp.c	284;"	d	file:
TPadding	generic/ttk/ttkImage.c	/^static Ttk_Box TPadding(Ttk_Box b, Ttk_Padding p)$/;"	f	file:
TRACE	win/tkWinSend.c	84;"	d	file:
TRACE	win/tkWinSend.c	86;"	d	file:
TRANSPARENT_PIXEL	macosx/tkMacOSXPort.h	162;"	d
TRIMMEDTABLE	win/tkWinFont.c	/^typedef struct TRIMMEDTABLE {$/;"	s	file:
TRIMMEDTABLE	win/tkWinFont.c	/^} TRIMMEDTABLE;$/;"	t	typeref:struct:TRIMMEDTABLE	file:
TRIPLE	generic/tkBind.c	356;"	d	file:
TRISTATED	generic/tkButton.h	288;"	d
TROUGH	macosx/tkMacOSXDefault.h	42;"	d
TROUGH	unix/tkUnixDefault.h	33;"	d
TROUGH	win/tkWinDefault.h	35;"	d
TROUGH1	generic/tkScale.h	206;"	d
TROUGH2	generic/tkScale.h	208;"	d
TSD_INIT	macosx/tkMacOSXNotify.c	28;"	d	file:
TSEG_SIZE	generic/tkTextBTree.c	145;"	d	file:
TTKAPI	generic/ttk/ttkTheme.h	22;"	d
TTKGetOptionSpec	generic/ttk/ttkTheme.c	/^static const Tk_OptionSpec *TTKGetOptionSpec($/;"	f	file:
TTKInitPadding	generic/ttk/ttkLayout.c	/^static void TTKInitPadding(int padc, int pixels[4], Ttk_Padding *pad)$/;"	f	file:
TTKLayoutInstruction	generic/ttk/ttkTheme.h	/^} TTKLayoutInstruction, *Ttk_LayoutSpec;$/;"	t	typeref:struct:__anon76
TTKNewLayout	generic/ttk/ttkLayout.c	/^static Ttk_Layout TTKNewLayout($/;"	f	file:
TTKStyleVersion2	generic/ttk/ttkTheme.h	/^enum TTKStyleVersion2 { TK_STYLE_VERSION_2 = 2 };$/;"	g
TTK_BEGIN_LAYOUT	generic/ttk/ttkButton.c	/^TTK_BEGIN_LAYOUT(MenubuttonLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkEntry.c	/^TTK_BEGIN_LAYOUT(EntryLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkFrame.c	/^TTK_BEGIN_LAYOUT(FrameLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkFrame.c	/^TTK_BEGIN_LAYOUT(LabelframeLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkNotebook.c	/^TTK_BEGIN_LAYOUT(NotebookLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkPanedwindow.c	/^TTK_BEGIN_LAYOUT(PanedLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkProgress.c	/^TTK_BEGIN_LAYOUT(VerticalProgressbarLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkScale.c	/^TTK_BEGIN_LAYOUT(VerticalScaleLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkScrollbar.c	/^TTK_BEGIN_LAYOUT(VerticalScrollbarLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkSeparator.c	/^TTK_BEGIN_LAYOUT(SizegripLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkSquare.c	/^TTK_BEGIN_LAYOUT(SquareLayout)$/;"	f
TTK_BEGIN_LAYOUT	generic/ttk/ttkTheme.h	303;"	d
TTK_BEGIN_LAYOUT_TABLE	generic/ttk/ttkClamTheme.c	/^TTK_BEGIN_LAYOUT_TABLE(LayoutTable)$/;"	f
TTK_BEGIN_LAYOUT_TABLE	generic/ttk/ttkClassicTheme.c	/^TTK_BEGIN_LAYOUT_TABLE(LayoutTable)$/;"	f
TTK_BEGIN_LAYOUT_TABLE	generic/ttk/ttkTheme.h	290;"	d
TTK_BEGIN_LAYOUT_TABLE	win/ttkWinTheme.c	/^TTK_BEGIN_LAYOUT_TABLE(LayoutTable)$/;"	f
TTK_BORDER	generic/ttk/ttkTheme.h	178;"	d
TTK_BUTTON_DEFAULT_ACTIVE	generic/ttk/ttkTheme.h	/^    TTK_BUTTON_DEFAULT_ACTIVE,	\/* currently the default widget *\/$/;"	e	enum:__anon77
TTK_BUTTON_DEFAULT_DISABLED	generic/ttk/ttkTheme.h	/^    TTK_BUTTON_DEFAULT_DISABLED	\/* not defaultable *\/$/;"	e	enum:__anon77
TTK_BUTTON_DEFAULT_NORMAL	generic/ttk/ttkTheme.h	/^    TTK_BUTTON_DEFAULT_NORMAL,	\/* widget defaultable *\/$/;"	e	enum:__anon77
TTK_COMPAT_STATE_ACTIVE	generic/ttk/ttkInit.c	/^    TTK_COMPAT_STATE_ACTIVE$/;"	e	enum:__anon110	file:
TTK_COMPAT_STATE_DISABLED	generic/ttk/ttkInit.c	/^    TTK_COMPAT_STATE_DISABLED,$/;"	e	enum:__anon110	file:
TTK_COMPAT_STATE_NORMAL	generic/ttk/ttkInit.c	/^    TTK_COMPAT_STATE_NORMAL,$/;"	e	enum:__anon110	file:
TTK_COMPAT_STATE_READONLY	generic/ttk/ttkInit.c	/^    TTK_COMPAT_STATE_READONLY,$/;"	e	enum:__anon110	file:
TTK_COMPOUND_BOTTOM	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_BOTTOM,	\/* image below text *\/$/;"	e	enum:__anon78
TTK_COMPOUND_CENTER	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_CENTER,	\/* text overlays image *\/$/;"	e	enum:__anon78
TTK_COMPOUND_IMAGE	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_IMAGE,  	\/* image only *\/$/;"	e	enum:__anon78
TTK_COMPOUND_LEFT	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_LEFT,   	\/* image to left of text *\/$/;"	e	enum:__anon78
TTK_COMPOUND_NONE	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_NONE,  	\/* image if specified, otherwise text *\/$/;"	e	enum:__anon78
TTK_COMPOUND_RIGHT	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_RIGHT  	\/* image to right of text *\/$/;"	e	enum:__anon78
TTK_COMPOUND_TEXT	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_TEXT,  	\/* text only *\/$/;"	e	enum:__anon78
TTK_COMPOUND_TOP	generic/ttk/ttkTheme.h	/^    TTK_COMPOUND_TOP,   	\/* image above text *\/$/;"	e	enum:__anon78
TTK_DECLS	unix/Makefile	/^TTK_DECLS = \\$/;"	m
TTK_DIR	unix/Makefile	/^TTK_DIR			= $(GENERIC_DIR)\/ttk$/;"	m
TTK_END_LAYOUT	generic/ttk/ttkTheme.h	304;"	d
TTK_END_LAYOUT_TABLE	generic/ttk/ttkTheme.h	301;"	d
TTK_EXPAND	generic/ttk/ttkTheme.h	177;"	d
TTK_FILL_BOTH	generic/ttk/ttkTheme.h	162;"	d
TTK_FILL_X	generic/ttk/ttkTheme.h	160;"	d
TTK_FILL_Y	generic/ttk/ttkTheme.h	161;"	d
TTK_GROUP	generic/ttk/ttkTheme.h	296;"	d
TTK_HDRS	unix/Makefile	/^TTK_HDRS = $(TTK_DIR)\/ttkTheme.h $(TTK_DIR)\/ttkDecls.h$/;"	m
TTK_LAYOUT	generic/ttk/ttkTheme.h	292;"	d
TTK_NODE	generic/ttk/ttkTheme.h	300;"	d
TTK_OBJS	unix/Makefile	/^TTK_OBJS = \\$/;"	m
TTK_ORIENT_HORIZONTAL	generic/ttk/ttkTheme.h	/^    TTK_ORIENT_HORIZONTAL,$/;"	e	enum:__anon79
TTK_ORIENT_VERTICAL	generic/ttk/ttkTheme.h	/^    TTK_ORIENT_VERTICAL$/;"	e	enum:__anon79
TTK_PACK_BOTTOM	generic/ttk/ttkTheme.h	176;"	d
TTK_PACK_LEFT	generic/ttk/ttkTheme.h	173;"	d
TTK_PACK_RIGHT	generic/ttk/ttkTheme.h	174;"	d
TTK_PACK_TOP	generic/ttk/ttkTheme.h	175;"	d
TTK_PATCH_LEVEL	generic/ttk/ttkTheme.h	26;"	d
TTK_PROGRESSBAR_DETERMINATE	generic/ttk/ttkProgress.c	/^    TTK_PROGRESSBAR_DETERMINATE, TTK_PROGRESSBAR_INDETERMINATE$/;"	e	enum:__anon100	file:
TTK_PROGRESSBAR_INDETERMINATE	generic/ttk/ttkProgress.c	/^    TTK_PROGRESSBAR_DETERMINATE, TTK_PROGRESSBAR_INDETERMINATE$/;"	e	enum:__anon100	file:
TTK_SIDE_BOTTOM	generic/ttk/ttkTheme.h	/^    TTK_SIDE_LEFT, TTK_SIDE_TOP, TTK_SIDE_RIGHT, TTK_SIDE_BOTTOM$/;"	e	enum:__anon74
TTK_SIDE_LEFT	generic/ttk/ttkTheme.h	/^    TTK_SIDE_LEFT, TTK_SIDE_TOP, TTK_SIDE_RIGHT, TTK_SIDE_BOTTOM$/;"	e	enum:__anon74
TTK_SIDE_RIGHT	generic/ttk/ttkTheme.h	/^    TTK_SIDE_LEFT, TTK_SIDE_TOP, TTK_SIDE_RIGHT, TTK_SIDE_BOTTOM$/;"	e	enum:__anon74
TTK_SIDE_TOP	generic/ttk/ttkTheme.h	/^    TTK_SIDE_LEFT, TTK_SIDE_TOP, TTK_SIDE_RIGHT, TTK_SIDE_BOTTOM$/;"	e	enum:__anon74
TTK_SRCS	unix/Makefile	/^TTK_SRCS = \\$/;"	m
TTK_STATE_ACTIVE	generic/ttk/ttkTheme.h	42;"	d
TTK_STATE_ALTERNATE	generic/ttk/ttkTheme.h	48;"	d
TTK_STATE_BACKGROUND	generic/ttk/ttkTheme.h	47;"	d
TTK_STATE_DISABLED	generic/ttk/ttkTheme.h	43;"	d
TTK_STATE_FOCUS	generic/ttk/ttkTheme.h	44;"	d
TTK_STATE_HOVER	generic/ttk/ttkTheme.h	51;"	d
TTK_STATE_INVALID	generic/ttk/ttkTheme.h	49;"	d
TTK_STATE_LEAF	generic/ttk/ttkDefaultTheme.c	1009;"	d	file:
TTK_STATE_LEAF	generic/ttk/ttkTreeview.c	22;"	d	file:
TTK_STATE_LEAF	win/ttkWinXPTheme.c	753;"	d	file:
TTK_STATE_NOTEBOOK_FIRST	macosx/ttkMacOSXTheme.c	231;"	d	file:
TTK_STATE_NOTEBOOK_LAST	macosx/ttkMacOSXTheme.c	232;"	d	file:
TTK_STATE_OPEN	generic/ttk/ttkDefaultTheme.c	1008;"	d	file:
TTK_STATE_OPEN	generic/ttk/ttkTreeview.c	21;"	d	file:
TTK_STATE_OPEN	win/ttkWinXPTheme.c	752;"	d	file:
TTK_STATE_PRESSED	generic/ttk/ttkTheme.h	45;"	d
TTK_STATE_READONLY	generic/ttk/ttkTheme.h	50;"	d
TTK_STATE_SELECTED	generic/ttk/ttkTheme.h	46;"	d
TTK_STATE_USER1	generic/ttk/ttkTheme.h	57;"	d
TTK_STATE_USER2	generic/ttk/ttkTheme.h	56;"	d
TTK_STATE_USER3	generic/ttk/ttkTheme.h	55;"	d
TTK_STATE_USER4	generic/ttk/ttkTheme.h	54;"	d
TTK_STATE_USER5	generic/ttk/ttkTheme.h	53;"	d
TTK_STATE_USER6	generic/ttk/ttkTheme.h	52;"	d
TTK_STICK_E	generic/ttk/ttkTheme.h	153;"	d
TTK_STICK_N	generic/ttk/ttkTheme.h	154;"	d
TTK_STICK_S	generic/ttk/ttkTheme.h	155;"	d
TTK_STICK_W	generic/ttk/ttkTheme.h	152;"	d
TTK_STUBS_EPOCH	generic/ttk/ttkDecls.h	23;"	d
TTK_STUBS_REVISION	generic/ttk/ttkDecls.h	24;"	d
TTK_STUB_SRCS	unix/Makefile	/^TTK_STUB_SRCS = \\$/;"	m
TTK_TREEVIEW_STATE_LEAF	macosx/ttkMacOSXTheme.c	1011;"	d	file:
TTK_TREEVIEW_STATE_OPEN	macosx/ttkMacOSXTheme.c	1010;"	d	file:
TTK_TREEVIEW_STATE_SORTARROW	macosx/ttkMacOSXTheme.c	963;"	d	file:
TTK_UNIT	generic/ttk/ttkTheme.h	179;"	d
TTK_VERSION	generic/ttk/ttkTheme.h	25;"	d
TWD_BITMAP	win/tkWinInt.h	56;"	d
TWD_WINDC	win/tkWinInt.h	58;"	d
TWD_WINDOW	win/tkWinInt.h	57;"	d
TYPE_ABORTRETRYIGNORE	macosx/tkMacOSXDialog.c	/^    TYPE_ABORTRETRYIGNORE, TYPE_OK, TYPE_OKCANCEL, TYPE_RETRYCANCEL,$/;"	e	enum:alertTypeOptions	file:
TYPE_BUTTON	generic/tkButton.h	267;"	d
TYPE_CHECK_BUTTON	generic/tkButton.h	268;"	d
TYPE_FRAME	generic/tkFrame.c	/^    TYPE_FRAME, TYPE_TOPLEVEL, TYPE_LABELFRAME$/;"	e	enum:FrameType	file:
TYPE_LABEL	generic/tkButton.h	266;"	d
TYPE_LABELFRAME	generic/tkFrame.c	/^    TYPE_FRAME, TYPE_TOPLEVEL, TYPE_LABELFRAME$/;"	e	enum:FrameType	file:
TYPE_MASK	generic/tkOption.c	90;"	d	file:
TYPE_OK	macosx/tkMacOSXDialog.c	/^    TYPE_ABORTRETRYIGNORE, TYPE_OK, TYPE_OKCANCEL, TYPE_RETRYCANCEL,$/;"	e	enum:alertTypeOptions	file:
TYPE_OKCANCEL	macosx/tkMacOSXDialog.c	/^    TYPE_ABORTRETRYIGNORE, TYPE_OK, TYPE_OKCANCEL, TYPE_RETRYCANCEL,$/;"	e	enum:alertTypeOptions	file:
TYPE_RADIO_BUTTON	generic/tkButton.h	269;"	d
TYPE_RETRYCANCEL	macosx/tkMacOSXDialog.c	/^    TYPE_ABORTRETRYIGNORE, TYPE_OK, TYPE_OKCANCEL, TYPE_RETRYCANCEL,$/;"	e	enum:alertTypeOptions	file:
TYPE_TOPLEVEL	generic/tkFrame.c	/^    TYPE_FRAME, TYPE_TOPLEVEL, TYPE_LABELFRAME$/;"	e	enum:FrameType	file:
TYPE_YESNO	macosx/tkMacOSXDialog.c	/^    TYPE_YESNO, TYPE_YESNOCANCEL$/;"	e	enum:alertTypeOptions	file:
TYPE_YESNOCANCEL	macosx/tkMacOSXDialog.c	/^    TYPE_YESNO, TYPE_YESNOCANCEL$/;"	e	enum:alertTypeOptions	file:
TYPICAL_SIZE	generic/tkGrid.c	36;"	d	file:
Tab	generic/ttk/ttkNotebook.c	/^} Tab;$/;"	t	typeref:struct:__anon65	file:
TabAdornmentTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable TabAdornmentTable[] = {$/;"	v	file:
TabElement	generic/ttk/ttkElements.c	/^} TabElement;$/;"	t	typeref:struct:__anon47	file:
TabElementDraw	generic/ttk/ttkClamTheme.c	/^static void TabElementDraw($/;"	f	file:
TabElementDraw	generic/ttk/ttkElements.c	/^static void TabElementDraw($/;"	f	file:
TabElementDraw	macosx/ttkMacOSXTheme.c	/^static void TabElementDraw($/;"	f	file:
TabElementDraw	win/ttkWinXPTheme.c	/^static void TabElementDraw($/;"	f	file:
TabElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec TabElementOptions[] = {$/;"	v	file:
TabElementSize	generic/ttk/ttkClamTheme.c	/^static void TabElementSize($/;"	f	file:
TabElementSize	generic/ttk/ttkElements.c	/^static void TabElementSize($/;"	f	file:
TabElementSize	macosx/ttkMacOSXTheme.c	/^static void TabElementSize($/;"	f	file:
TabElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec TabElementSpec =$/;"	v	file:
TabElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec TabElementSpec = {$/;"	v	file:
TabElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec TabElementSpec = {$/;"	v	file:
TabElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec TabElementSpec =$/;"	v	file:
TabOptionSpecs	generic/ttk/ttkNotebook.c	/^static Tk_OptionSpec TabOptionSpecs[] =$/;"	v	file:
TabPositionTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable TabPositionTable[] = {$/;"	v	file:
TabRemoved	generic/ttk/ttkNotebook.c	/^static void TabRemoved(void *managerData, int index)$/;"	f	file:
TabRequest	generic/ttk/ttkNotebook.c	/^static int TabRequest(void *managerData, int index, int width, int height)$/;"	f	file:
TabState	generic/ttk/ttkNotebook.c	/^static Ttk_State TabState(Notebook *nb, int index)$/;"	f	file:
TabStateStrings	generic/ttk/ttkNotebook.c	/^static const char *const TabStateStrings[] = { "normal", "disabled", "hidden", 0 };$/;"	v	file:
TabStyleTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable TabStyleTable[] = {$/;"	v	file:
TabrowSize	generic/ttk/ttkNotebook.c	/^static void TabrowSize($/;"	f	file:
TagBindEvent	generic/tkTextTag.c	/^TagBindEvent($/;"	f	file:
TagInfo	generic/tkTextBTree.c	/^typedef struct TagInfo {$/;"	s	file:
TagInfo	generic/tkTextBTree.c	/^} TagInfo;$/;"	t	typeref:struct:TagInfo	file:
TagOptionSpecs	generic/ttk/ttkTreeview.c	/^static Tk_OptionSpec TagOptionSpecs[] = {$/;"	v	file:
TagSearch	generic/tkCanvas.c	/^typedef struct TagSearch {$/;"	s	file:
TagSearch	generic/tkCanvas.c	/^} TagSearch;$/;"	t	typeref:struct:TagSearch	file:
TagSearchDestroy	generic/tkCanvas.c	/^TagSearchDestroy($/;"	f	file:
TagSearchEvalExpr	generic/tkCanvas.c	/^TagSearchEvalExpr($/;"	f	file:
TagSearchExpr	generic/tkCanvas.h	/^typedef struct TagSearchExpr_s TagSearchExpr;$/;"	t	typeref:struct:TagSearchExpr_s
TagSearchExprDestroy	generic/tkCanvas.c	/^TagSearchExprDestroy($/;"	f	file:
TagSearchExprInit	generic/tkCanvas.c	/^TagSearchExprInit($/;"	f	file:
TagSearchExpr_s	generic/tkCanvas.h	/^struct TagSearchExpr_s {$/;"	s
TagSearchFirst	generic/tkCanvas.c	/^TagSearchFirst($/;"	f	file:
TagSearchNext	generic/tkCanvas.c	/^TagSearchNext($/;"	f	file:
TagSearchScan	generic/tkCanvas.c	/^TagSearchScan($/;"	f	file:
TagSearchScanExpr	generic/tkCanvas.c	/^TagSearchScanExpr($/;"	f	file:
TagSortProc	generic/tkTextTag.c	/^TagSortProc($/;"	f	file:
TclIntPlatStubs	generic/tkMain.c	/^} TclIntPlatStubs;$/;"	t	typeref:struct:__anon138	file:
Tcl_Alloc	win/winMain.c	364;"	d	file:
Tcl_AppInit	unix/tkAppInit.c	/^Tcl_AppInit($/;"	f
Tcl_AppInit	win/winMain.c	/^Tcl_AppInit($/;"	f
Tcl_DbCkalloc	win/winMain.c	365;"	d	file:
Tcl_NewStringObj	unix/tkAppInit.c	50;"	d	file:
Tcl_NewStringObj	win/winMain.c	73;"	d	file:
Tcl_ObjSetVar2	unix/tkAppInit.c	49;"	d	file:
Tcl_ObjSetVar2	win/winMain.c	72;"	d	file:
TestFindControl	win/tkWinTest.c	/^HWND TestFindControl(HWND root, int id)$/;"	f
TestFindControlCallback	win/tkWinTest.c	/^BOOL CALLBACK TestFindControlCallback($/;"	f
TestFindControlState	win/tkWinTest.c	/^struct TestFindControlState {$/;"	s	file:
TestbitmapObjCmd	generic/tkTest.c	/^TestbitmapObjCmd($/;"	f	file:
TestborderObjCmd	generic/tkTest.c	/^TestborderObjCmd($/;"	f	file:
TestclipboardObjCmd	win/tkWinTest.c	/^TestclipboardObjCmd($/;"	f	file:
TestcolorObjCmd	generic/tkTest.c	/^TestcolorObjCmd($/;"	f	file:
TestcursorObjCmd	generic/tkTest.c	/^TestcursorObjCmd($/;"	f	file:
TestdeleteappsObjCmd	generic/tkTest.c	/^TestdeleteappsObjCmd($/;"	f	file:
TestfindwindowObjCmd	win/tkWinTest.c	/^TestfindwindowObjCmd($/;"	f	file:
TestfontObjCmd	generic/tkTest.c	/^TestfontObjCmd($/;"	f	file:
TestgetwindowinfoObjCmd	win/tkWinTest.c	/^TestgetwindowinfoObjCmd($/;"	f	file:
TestmakeexistObjCmd	generic/tkTest.c	/^TestmakeexistObjCmd($/;"	f	file:
TestmenubarObjCmd	generic/tkTest.c	/^TestmenubarObjCmd($/;"	f	file:
TestmetricsObjCmd	generic/tkTest.c	/^TestmetricsObjCmd($/;"	f	file:
TestobjconfigObjCmd	generic/tkTest.c	/^TestobjconfigObjCmd($/;"	f	file:
TestpropObjCmd	generic/tkTest.c	/^TestpropObjCmd($/;"	f	file:
TestwineventObjCmd	win/tkWinTest.c	/^TestwineventObjCmd($/;"	f	file:
TestwinlocaleObjCmd	win/tkWinTest.c	/^TestwinlocaleObjCmd($/;"	f	file:
TestwrapperObjCmd	generic/tkTest.c	/^TestwrapperObjCmd($/;"	f	file:
TextBlinkProc	generic/tkText.c	/^TextBlinkProc($/;"	f	file:
TextChanged	generic/tkTextDisp.c	/^TextChanged($/;"	f	file:
TextCleanup	generic/ttk/ttkLabel.c	/^static void TextCleanup(TextElement *text)$/;"	f	file:
TextCmdDeletedProc	generic/tkText.c	/^TextCmdDeletedProc($/;"	f	file:
TextCoords	generic/tkCanvText.c	/^TextCoords($/;"	f	file:
TextDInfo	generic/tkTextDisp.c	/^typedef struct TextDInfo {$/;"	s	file:
TextDInfo	generic/tkTextDisp.c	/^} TextDInfo;$/;"	t	typeref:struct:TextDInfo	file:
TextDeleteChars	generic/tkCanvText.c	/^TextDeleteChars($/;"	f	file:
TextDraw	generic/ttk/ttkLabel.c	/^static void TextDraw(TextElement *text, Tk_Window tkwin, Drawable d, Ttk_Box b)$/;"	f	file:
TextDumpCmd	generic/tkText.c	/^TextDumpCmd($/;"	f	file:
TextEditCmd	generic/tkText.c	/^TextEditCmd($/;"	f	file:
TextEditRedo	generic/tkText.c	/^TextEditRedo($/;"	f	file:
TextEditUndo	generic/tkText.c	/^TextEditUndo($/;"	f	file:
TextElement	generic/ttk/ttkLabel.c	/^} TextElement;$/;"	t	typeref:struct:__anon61	file:
TextElement	win/ttkWinXPTheme.c	/^} TextElement;$/;"	t	typeref:struct:__anon242	file:
TextElementDraw	generic/ttk/ttkLabel.c	/^static void TextElementDraw($/;"	f	file:
TextElementDraw	win/ttkWinXPTheme.c	/^static void TextElementDraw($/;"	f	file:
TextElementOptions	generic/ttk/ttkLabel.c	/^static Ttk_ElementOptionSpec TextElementOptions[] = {$/;"	v	file:
TextElementOptions	win/ttkWinXPTheme.c	/^static Ttk_ElementOptionSpec TextElementOptions[] =$/;"	v	file:
TextElementSize	generic/ttk/ttkLabel.c	/^static void TextElementSize($/;"	f	file:
TextElementSize	win/ttkWinXPTheme.c	/^static void TextElementSize($/;"	f	file:
TextElementSpec	generic/ttk/ttkLabel.c	/^static Ttk_ElementSpec TextElementSpec = {$/;"	v	file:
TextElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec TextElementSpec =$/;"	v	file:
TextEventProc	generic/tkText.c	/^TextEventProc($/;"	f	file:
TextFetchSelection	generic/tkText.c	/^TextFetchSelection($/;"	f	file:
TextGetScrollInfoObj	generic/tkTextDisp.c	/^TextGetScrollInfoObj($/;"	f	file:
TextGetText	generic/tkText.c	/^TextGetText($/;"	f	file:
TextIndexSortProc	generic/tkText.c	/^TextIndexSortProc($/;"	f	file:
TextInsert	generic/tkCanvText.c	/^TextInsert($/;"	f	file:
TextInsertCmd	generic/tkText.c	/^TextInsertCmd($/;"	f	file:
TextInvalidateLineMetrics	generic/tkTextDisp.c	/^TextInvalidateLineMetrics($/;"	f	file:
TextInvalidateRegion	generic/tkTextDisp.c	/^TextInvalidateRegion($/;"	f	file:
TextItem	generic/tkCanvText.c	/^typedef struct TextItem {$/;"	s	file:
TextItem	generic/tkCanvText.c	/^} TextItem;$/;"	t	typeref:struct:TextItem	file:
TextLayout	generic/tkFont.c	/^typedef struct TextLayout {$/;"	s	file:
TextLayout	generic/tkFont.c	/^} TextLayout;$/;"	t	typeref:struct:TextLayout	file:
TextPeerCmd	generic/tkText.c	/^TextPeerCmd($/;"	f	file:
TextPushUndoAction	generic/tkText.c	/^TextPushUndoAction($/;"	f	file:
TextRedrawTag	generic/tkTextDisp.c	/^TextRedrawTag($/;"	f	file:
TextReplaceCmd	generic/tkText.c	/^TextReplaceCmd($/;"	f	file:
TextReqWidth	generic/ttk/ttkLabel.c	/^static int TextReqWidth(TextElement *text)$/;"	f	file:
TextSearchAddNextLine	generic/tkText.c	/^TextSearchAddNextLine($/;"	f	file:
TextSearchAddNextLine	generic/tkText.c	/^static SearchAddLineProc	TextSearchAddNextLine;$/;"	v	file:
TextSearchCmd	generic/tkText.c	/^TextSearchCmd($/;"	f	file:
TextSearchFoundMatch	generic/tkText.c	/^TextSearchFoundMatch($/;"	f	file:
TextSearchFoundMatch	generic/tkText.c	/^static SearchMatchProc		TextSearchFoundMatch;$/;"	v	file:
TextSearchGetLineIndex	generic/tkText.c	/^TextSearchGetLineIndex($/;"	f	file:
TextSearchGetLineIndex	generic/tkText.c	/^static SearchLineIndexProc	TextSearchGetLineIndex;$/;"	v	file:
TextSearchIndexInLine	generic/tkText.c	/^TextSearchIndexInLine($/;"	f	file:
TextSetup	generic/ttk/ttkLabel.c	/^static int TextSetup(TextElement *text, Tk_Window tkwin)$/;"	f	file:
TextStyle	generic/tkTextDisp.c	/^typedef struct TextStyle {$/;"	s	file:
TextStyle	generic/tkTextDisp.c	/^} TextStyle;$/;"	t	typeref:struct:TextStyle	file:
TextStyle	macosx/tkMacOSXPrivate.h	22;"	d
TextStyle	macosx/tkMacOSXPrivate.h	28;"	d
TextToArea	generic/tkCanvText.c	/^TextToArea($/;"	f	file:
TextToPoint	generic/tkCanvText.c	/^TextToPoint($/;"	f	file:
TextToPostscript	generic/tkCanvText.c	/^TextToPostscript($/;"	f	file:
TextUndoRedoCallback	generic/tkText.c	/^TextUndoRedoCallback($/;"	f
TextUndoRedoCallback	generic/tkText.c	/^static TkUndoProc	TextUndoRedoCallback;$/;"	v	file:
TextVariableChanged	generic/ttk/ttkButton.c	/^static void TextVariableChanged(void *clientData, const char *value)$/;"	f	file:
TextWidgetObjCmd	generic/tkText.c	/^TextWidgetObjCmd($/;"	f	file:
TextWorldChanged	generic/tkText.c	/^TextWorldChanged($/;"	f	file:
TextWorldChangedCallback	generic/tkText.c	/^TextWorldChangedCallback($/;"	f	file:
TextareaElement	generic/ttk/ttkEntry.c	/^} TextareaElement;$/;"	t	typeref:struct:__anon32	file:
TextareaElementOptions	generic/ttk/ttkEntry.c	/^static Ttk_ElementOptionSpec TextareaElementOptions[] = {$/;"	v	file:
TextareaElementSize	generic/ttk/ttkEntry.c	/^static void TextareaElementSize($/;"	f	file:
TextareaElementSpec	generic/ttk/ttkEntry.c	/^static Ttk_ElementSpec TextareaElementSpec = {$/;"	v	file:
TheWorldHasChanged	generic/tkFont.c	/^TheWorldHasChanged($/;"	f	file:
Theme	generic/ttk/ttkTheme.c	/^} Theme;$/;"	t	typeref:struct:Ttk_Theme_	file:
ThemeButtonParams	macosx/ttkMacOSXTheme.c	/^} ThemeButtonParams;$/;"	t	typeref:struct:__anon209	file:
ThemeChanged	generic/ttk/ttkTheme.c	/^static void ThemeChanged(StylePackageData *pkgPtr)$/;"	f	file:
ThemeChangedProc	generic/ttk/ttkTheme.c	/^static void ThemeChangedProc(ClientData clientData)$/;"	f	file:
ThemeEnabled	generic/ttk/ttkTheme.c	/^static int ThemeEnabled(Ttk_Theme theme, void *clientData) { return 1; }$/;"	f	file:
ThemeFont	macosx/tkMacOSXFont.c	65;"	d	file:
ThemeFont	macosx/tkMacOSXFont.c	88;"	d	file:
ThemeStateTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable ThemeStateTable[] = {$/;"	v	file:
ThemeTrackEnableTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable ThemeTrackEnableTable[] = {$/;"	v	file:
ThreadSpecificData	generic/tkBitmap.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkBitmap.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkButton.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkButton.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkColor.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkColor.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkConfig.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkConfig.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkEvent.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkEvent.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkGet.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkGet.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkImage.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkImage.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkImgPhoto.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkImgPhoto.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkMacWinMenu.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkMacWinMenu.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkMenu.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkMenu.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkObj.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkObj.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkOption.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkOption.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkPointer.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkPointer.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkSelect.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkSelect.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkStyle.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkStyle.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	generic/tkWindow.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	generic/tkWindow.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	macosx/tkMacOSXNotify.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	macosx/tkMacOSXNotify.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tkUnixEmbed.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tkUnixEmbed.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tkUnixEvent.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tkUnixEvent.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tkUnixFont.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tkUnixFont.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tkUnixRFont.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tkUnixRFont.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tkUnixSelect.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tkUnixSelect.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	unix/tkUnixSend.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	unix/tkUnixSend.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinButton.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinButton.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinDialog.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinDialog.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinDraw.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinDraw.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinEmbed.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinEmbed.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinFont.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinFont.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinMenu.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinMenu.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinSend.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:__anon224	file:
ThreadSpecificData	win/tkWinWindow.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinWindow.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinWm.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinWm.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThreadSpecificData	win/tkWinX.c	/^typedef struct ThreadSpecificData {$/;"	s	file:
ThreadSpecificData	win/tkWinX.c	/^} ThreadSpecificData;$/;"	t	typeref:struct:ThreadSpecificData	file:
ThumbElement	generic/ttk/ttkDefaultTheme.c	/^} ThumbElement;$/;"	t	typeref:struct:__anon96	file:
ThumbElement	generic/ttk/ttkElements.c	/^} ThumbElement;$/;"	t	typeref:struct:__anon44	file:
ThumbElement	win/ttkWinTheme.c	/^} ThumbElement;$/;"	t	typeref:struct:__anon250	file:
ThumbElementDraw	generic/ttk/ttkClamTheme.c	/^static void ThumbElementDraw($/;"	f	file:
ThumbElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void ThumbElementDraw($/;"	f	file:
ThumbElementDraw	generic/ttk/ttkElements.c	/^static void ThumbElementDraw($/;"	f	file:
ThumbElementDraw	win/ttkWinTheme.c	/^static void ThumbElementDraw($/;"	f	file:
ThumbElementDraw	win/ttkWinXPTheme.c	/^static void ThumbElementDraw($/;"	f	file:
ThumbElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec ThumbElementOptions[] = {$/;"	v	file:
ThumbElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec ThumbElementOptions[] = {$/;"	v	file:
ThumbElementOptions	win/ttkWinTheme.c	/^static Ttk_ElementOptionSpec ThumbElementOptions[] = {$/;"	v	file:
ThumbElementSize	generic/ttk/ttkClamTheme.c	/^static void ThumbElementSize($/;"	f	file:
ThumbElementSize	generic/ttk/ttkDefaultTheme.c	/^static void ThumbElementSize($/;"	f	file:
ThumbElementSize	generic/ttk/ttkElements.c	/^static void ThumbElementSize($/;"	f	file:
ThumbElementSize	win/ttkWinTheme.c	/^static void ThumbElementSize($/;"	f	file:
ThumbElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec ThumbElementSpec = {$/;"	v	file:
ThumbElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec ThumbElementSpec = {$/;"	v	file:
ThumbElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec ThumbElementSpec = {$/;"	v	file:
ThumbElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec ThumbElementSpec = {$/;"	v	file:
ThumbElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec ThumbElementSpec =$/;"	v	file:
TileShape	xlib/X11/X.h	588;"	d
Time	xlib/X11/X.h	/^typedef unsigned long Time;$/;"	t
TkAboutDlg	generic/tkIntPlatDecls.h	540;"	d
TkAboutDlg	macosx/tkMacOSXDialog.c	/^TkAboutDlg(void)$/;"	f
TkActivateMenuEntry	generic/tkMenu.c	/^TkActivateMenuEntry($/;"	f
TkAlignImageData	generic/tkImgUtil.c	/^TkAlignImageData($/;"	f
TkAlignImageData	generic/tkIntPlatDecls.h	435;"	d
TkAlignImageData	generic/tkStubInit.c	175;"	d	file:
TkAllocWindow	generic/tkIntDecls.h	784;"	d
TkAllocWindow	generic/tkWindow.c	/^TkAllocWindow($/;"	f
TkAppendPadAmount	generic/tkPack.c	/^TkAppendPadAmount($/;"	f
TkBTreeAddClient	generic/tkTextBTree.c	/^TkBTreeAddClient($/;"	f
TkBTreeAdjustPixelHeight	generic/tkTextBTree.c	/^TkBTreeAdjustPixelHeight($/;"	f
TkBTreeCharTagged	generic/tkTextBTree.c	/^TkBTreeCharTagged($/;"	f
TkBTreeCheck	generic/tkTextBTree.c	/^TkBTreeCheck($/;"	f
TkBTreeClientRangeChanged	generic/tkTextBTree.c	/^TkBTreeClientRangeChanged($/;"	f
TkBTreeCreate	generic/tkTextBTree.c	/^TkBTreeCreate($/;"	f
TkBTreeDeleteIndexRange	generic/tkTextBTree.c	/^TkBTreeDeleteIndexRange($/;"	f
TkBTreeDestroy	generic/tkTextBTree.c	/^TkBTreeDestroy($/;"	f
TkBTreeEpoch	generic/tkTextBTree.c	/^TkBTreeEpoch($/;"	f
TkBTreeFindLine	generic/tkTextBTree.c	/^TkBTreeFindLine($/;"	f
TkBTreeFindPixelLine	generic/tkTextBTree.c	/^TkBTreeFindPixelLine($/;"	f
TkBTreeGetTags	generic/tkTextBTree.c	/^TkBTreeGetTags($/;"	f
TkBTreeInsertChars	generic/tkTextBTree.c	/^TkBTreeInsertChars($/;"	f
TkBTreeLinePixelCount	generic/tkText.h	971;"	d
TkBTreeLinePixelEpoch	generic/tkText.h	973;"	d
TkBTreeLinesTo	generic/tkTextBTree.c	/^TkBTreeLinesTo($/;"	f
TkBTreeLinkSegment	generic/tkTextBTree.c	/^TkBTreeLinkSegment($/;"	f
TkBTreeNextLine	generic/tkTextBTree.c	/^TkBTreeNextLine($/;"	f
TkBTreeNextTag	generic/tkTextBTree.c	/^TkBTreeNextTag($/;"	f
TkBTreeNumLines	generic/tkIntDecls.h	1106;"	d
TkBTreeNumLines	generic/tkTextBTree.c	/^TkBTreeNumLines($/;"	f
TkBTreeNumPixels	generic/tkTextBTree.c	/^TkBTreeNumPixels($/;"	f
TkBTreePixelsTo	generic/tkTextBTree.c	/^TkBTreePixelsTo($/;"	f
TkBTreePrevTag	generic/tkTextBTree.c	/^TkBTreePrevTag($/;"	f
TkBTreePreviousLine	generic/tkTextBTree.c	/^TkBTreePreviousLine($/;"	f
TkBTreeRemoveClient	generic/tkTextBTree.c	/^TkBTreeRemoveClient($/;"	f
TkBTreeStartSearch	generic/tkTextBTree.c	/^TkBTreeStartSearch($/;"	f
TkBTreeStartSearchBack	generic/tkTextBTree.c	/^TkBTreeStartSearchBack($/;"	f
TkBTreeTag	generic/tkTextBTree.c	/^TkBTreeTag($/;"	f
TkBTreeUnlinkSegment	generic/tkTextBTree.c	/^TkBTreeUnlinkSegment($/;"	f
TkBackgroundEvalObjv	generic/tkUtil.c	/^TkBackgroundEvalObjv($/;"	f
TkBezierPoints	generic/tkIntDecls.h	786;"	d
TkBezierPoints	generic/tkTrig.c	/^TkBezierPoints($/;"	f
TkBezierScreenPoints	generic/tkIntDecls.h	788;"	d
TkBezierScreenPoints	generic/tkTrig.c	/^TkBezierScreenPoints($/;"	f
TkBindEventProc	generic/tkCmds.c	/^TkBindEventProc($/;"	f
TkBindEventProc	generic/tkIntDecls.h	791;"	d
TkBindFree	generic/tkBind.c	/^TkBindFree($/;"	f
TkBindFree	generic/tkIntDecls.h	793;"	d
TkBindInfo	generic/tkInt.h	/^typedef struct TkBindInfo_ *TkBindInfo;$/;"	t	typeref:struct:TkBindInfo_
TkBindInfo_	generic/tkBind.c	/^typedef struct TkBindInfo_ {$/;"	s	file:
TkBindInit	generic/tkBind.c	/^TkBindInit($/;"	f
TkBindInit	generic/tkIntDecls.h	795;"	d
TkBitmap	generic/tkBitmap.c	/^typedef struct TkBitmap {$/;"	s	file:
TkBitmap	generic/tkBitmap.c	/^} TkBitmap;$/;"	t	typeref:struct:TkBitmap	file:
TkBorder	generic/tk3d.h	/^typedef struct TkBorder {$/;"	s
TkBorder	generic/tk3d.h	/^} TkBorder;$/;"	t	typeref:struct:TkBorder
TkBusy	generic/tkInt.h	/^typedef struct Busy *TkBusy;$/;"	t	typeref:struct:Busy
TkButton	generic/tkButton.h	/^} TkButton;$/;"	t	typeref:struct:__anon178
TkButtonWorldChanged	generic/tkButton.c	/^TkButtonWorldChanged($/;"	f
TkCanvPostscriptCmd	generic/tkCanvPs.c	/^TkCanvPostscriptCmd($/;"	f
TkCanvTranslatePath	generic/tkCanvUtil.c	/^TkCanvTranslatePath($/;"	f
TkCanvas	generic/tkCanvas.h	/^typedef struct TkCanvas {$/;"	s
TkCanvas	generic/tkCanvas.h	/^} TkCanvas;$/;"	t	typeref:struct:TkCanvas
TkCanvasDashParseProc	generic/tkCanvUtil.c	/^TkCanvasDashParseProc($/;"	f
TkCanvasDashParseProc	generic/tkIntDecls.h	1114;"	d
TkCanvasDashPrintProc	generic/tkCanvUtil.c	/^TkCanvasDashPrintProc($/;"	f
TkCanvasDashPrintProc	generic/tkIntDecls.h	1116;"	d
TkCaret	generic/tkInt.h	/^typedef struct TkCaret {$/;"	s
TkCaret	generic/tkInt.h	/^} TkCaret;$/;"	t	typeref:struct:TkCaret
TkChangeEventWindow	generic/tkGrab.c	/^TkChangeEventWindow($/;"	f
TkChangeEventWindow	generic/tkIntDecls.h	797;"	d
TkClipBox	generic/tkIntDecls.h	1005;"	d
TkClipBox	generic/tkIntDecls.h	1155;"	d
TkClipBox	generic/tkIntDecls.h	1164;"	d
TkClipBox	generic/tkStubInit.c	/^void TkClipBox(TkRegion a, XRectangle *b)$/;"	f
TkClipBox	generic/tkStubInit.c	210;"	d	file:
TkClipBox	generic/tkStubInit.c	219;"	d	file:
TkClipBox	macosx/tkMacOSXRegion.c	/^TkClipBox($/;"	f
TkClipBox	win/tkWinRegion.c	/^TkClipBox($/;"	f
TkClipBox	win/tkWinRegion.c	16;"	d	file:
TkClipCleanup	generic/tkIntDecls.h	1059;"	d
TkClipCleanup	macosx/tkMacOSXXStubs.c	/^TkClipCleanup($/;"	f
TkClipCleanup	unix/tkUnixEvent.c	/^TkClipCleanup($/;"	f
TkClipCleanup	win/tkWinX.c	/^TkClipCleanup($/;"	f
TkClipInit	generic/tkClipboard.c	/^TkClipInit($/;"	f
TkClipInit	generic/tkIntDecls.h	799;"	d
TkClipboardBuffer	generic/tkSelect.h	/^typedef struct TkClipboardBuffer {$/;"	s
TkClipboardBuffer	generic/tkSelect.h	/^} TkClipboardBuffer;$/;"	t	typeref:struct:TkClipboardBuffer
TkClipboardTarget	generic/tkSelect.h	/^typedef struct TkClipboardTarget {$/;"	s
TkClipboardTarget	generic/tkSelect.h	/^} TkClipboardTarget;$/;"	t	typeref:struct:TkClipboardTarget
TkCloseDisplay	generic/tkWindow.c	/^TkCloseDisplay($/;"	f	file:
TkCmd	generic/tkWindow.c	/^} TkCmd;$/;"	t	typeref:struct:__anon144	file:
TkColor	generic/tkColor.h	/^typedef struct TkColor {$/;"	s
TkColor	generic/tkColor.h	/^} TkColor;$/;"	t	typeref:struct:TkColor
TkColormap	generic/tkInt.h	/^typedef struct TkColormap TkColormap;$/;"	t	typeref:struct:TkColormap
TkColormap	generic/tkVisual.c	/^struct TkColormap {$/;"	s	file:
TkColormapData	generic/tkCanvPs.c	/^typedef struct TkColormapData {	\/* Hold color information for a window *\/$/;"	s	file:
TkColormapData	generic/tkCanvPs.c	/^} TkColormapData;$/;"	t	typeref:struct:TkColormapData	file:
TkComputeAnchor	generic/tkIntDecls.h	801;"	d
TkComputeAnchor	generic/tkUtil.c	/^TkComputeAnchor($/;"	f
TkCreateCursorFromData	generic/tkIntDecls.h	805;"	d
TkCreateCursorFromData	macosx/tkMacOSXCursor.c	/^TkCreateCursorFromData($/;"	f
TkCreateCursorFromData	unix/tkUnixCursor.c	/^TkCreateCursorFromData($/;"	f
TkCreateCursorFromData	win/tkWinCursor.c	/^TkCreateCursorFromData($/;"	f
TkCreateExitHandler	generic/tkEvent.c	/^TkCreateExitHandler($/;"	f
TkCreateFrame	generic/tkFrame.c	/^TkCreateFrame($/;"	f
TkCreateFrame	generic/tkIntDecls.h	807;"	d
TkCreateMainWindow	generic/tkIntDecls.h	809;"	d
TkCreateMainWindow	generic/tkWindow.c	/^TkCreateMainWindow($/;"	f
TkCreateMenuReferences	generic/tkMenu.c	/^TkCreateMenuReferences($/;"	f
TkCreateNamedFont	generic/tkFont.c	/^TkCreateNamedFont($/;"	f
TkCreateRegion	generic/tkIntDecls.h	1007;"	d
TkCreateRegion	generic/tkIntDecls.h	1156;"	d
TkCreateRegion	generic/tkIntDecls.h	1165;"	d
TkCreateRegion	generic/tkStubInit.c	/^TkRegion TkCreateRegion()$/;"	f
TkCreateRegion	generic/tkStubInit.c	211;"	d	file:
TkCreateRegion	generic/tkStubInit.c	220;"	d	file:
TkCreateRegion	macosx/tkMacOSXRegion.c	/^TkCreateRegion(void)$/;"	f
TkCreateRegion	win/tkWinRegion.c	/^TkCreateRegion(void)$/;"	f
TkCreateRegion	win/tkWinRegion.c	14;"	d	file:
TkCreateThreadExitHandler	generic/tkEvent.c	/^TkCreateThreadExitHandler($/;"	f
TkCreateThreadExitHandler	generic/tkIntDecls.h	1079;"	d
TkCreateXEventSource	generic/tkIntPlatDecls.h	508;"	d
TkCreateXEventSource	generic/tkIntPlatDecls.h	635;"	d
TkCreateXEventSource	generic/tkStubInit.c	/^TkCreateXEventSource(void)$/;"	f
TkCreateXEventSource	unix/tkUnixEvent.c	/^TkCreateXEventSource(void)$/;"	f
TkCurrentTime	generic/tkEvent.c	/^TkCurrentTime($/;"	f
TkCurrentTime	generic/tkIntDecls.h	811;"	d
TkCursor	generic/tkInt.h	/^typedef struct TkCursor {$/;"	s
TkCursor	generic/tkInt.h	/^} TkCursor;$/;"	t	typeref:struct:TkCursor
TkCursorName	unix/tkUnixCursor.c	/^static const struct TkCursorName {$/;"	s	file:
TkCygwinMainEx	generic/tkWindow.c	/^TkCygwinMainEx($/;"	f
TkDeadAppObjCmd	generic/tkCmds.c	/^TkDeadAppObjCmd($/;"	f
TkDebugBitmap	generic/tkBitmap.c	/^TkDebugBitmap($/;"	f
TkDebugBitmap	generic/tkIntDecls.h	975;"	d
TkDebugBorder	generic/tk3d.c	/^TkDebugBorder($/;"	f
TkDebugBorder	generic/tkIntDecls.h	977;"	d
TkDebugColor	generic/tkColor.c	/^TkDebugColor($/;"	f
TkDebugColor	generic/tkIntDecls.h	981;"	d
TkDebugConfig	generic/tkConfig.c	/^TkDebugConfig($/;"	f
TkDebugConfig	generic/tkIntDecls.h	983;"	d
TkDebugCursor	generic/tkCursor.c	/^TkDebugCursor($/;"	f
TkDebugCursor	generic/tkIntDecls.h	979;"	d
TkDebugFont	generic/tkFont.c	/^TkDebugFont($/;"	f
TkDebugFont	generic/tkIntDecls.h	985;"	d
TkDeleteAllImages	generic/tkImage.c	/^TkDeleteAllImages($/;"	f
TkDeleteAllImages	generic/tkIntDecls.h	813;"	d
TkDeleteExitHandler	generic/tkEvent.c	/^TkDeleteExitHandler($/;"	f
TkDeleteNamedFont	generic/tkFont.c	/^TkDeleteNamedFont($/;"	f
TkDeleteThreadExitHandler	generic/tkEvent.c	/^TkDeleteThreadExitHandler($/;"	f
TkDeleteThreadExitHandler	generic/tkIntDecls.h	1081;"	d
TkDestroyMenu	generic/tkMenu.c	/^TkDestroyMenu($/;"	f
TkDestroyRegion	generic/tkIntDecls.h	1009;"	d
TkDestroyRegion	generic/tkIntDecls.h	1157;"	d
TkDestroyRegion	generic/tkIntDecls.h	1166;"	d
TkDestroyRegion	generic/tkStubInit.c	/^void TkDestroyRegion(TkRegion r)$/;"	f
TkDestroyRegion	generic/tkStubInit.c	212;"	d	file:
TkDestroyRegion	generic/tkStubInit.c	221;"	d	file:
TkDestroyRegion	macosx/tkMacOSXRegion.c	/^TkDestroyRegion($/;"	f
TkDestroyRegion	win/tkWinRegion.c	/^TkDestroyRegion($/;"	f
TkDestroyRegion	win/tkWinRegion.c	15;"	d	file:
TkDisplay	generic/tkInt.h	/^typedef struct TkDisplay {$/;"	s
TkDisplay	generic/tkInt.h	/^} TkDisplay;$/;"	t	typeref:struct:TkDisplay
TkDisplayFocusInfo	generic/tkFocus.c	/^typedef struct TkDisplayFocusInfo {$/;"	s	file:
TkDoConfigureNotify	generic/tkIntDecls.h	815;"	d
TkDoConfigureNotify	generic/tkWindow.c	/^TkDoConfigureNotify($/;"	f
TkDrawAngledChars	generic/tkIntDecls.h	1140;"	d
TkDrawAngledChars	macosx/tkMacOSXFont.c	/^TkDrawAngledChars($/;"	f
TkDrawAngledChars	unix/tkUnixFont.c	/^TkDrawAngledChars($/;"	f
TkDrawAngledChars	unix/tkUnixRFont.c	/^TkDrawAngledChars($/;"	f
TkDrawAngledChars	win/tkWinFont.c	/^TkDrawAngledChars($/;"	f
TkDrawAngledTextLayout	generic/tkFont.c	/^TkDrawAngledTextLayout($/;"	f
TkDrawAngledTextLayout	generic/tkIntDecls.h	1134;"	d
TkDrawInsetFocusHighlight	generic/tkIntDecls.h	817;"	d
TkDrawInsetFocusHighlight	generic/tkUtil.c	/^TkDrawInsetFocusHighlight($/;"	f
TkEnsemble	generic/tkInt.h	/^typedef struct TkEnsemble {$/;"	s
TkEnsemble	generic/tkInt.h	/^} TkEnsemble;$/;"	t	typeref:struct:TkEnsemble
TkErrorHandler	generic/tkInt.h	/^typedef struct TkErrorHandler {$/;"	s
TkErrorHandler	generic/tkInt.h	/^} TkErrorHandler;$/;"	t	typeref:struct:TkErrorHandler
TkEventDeadWindow	generic/tkEvent.c	/^TkEventDeadWindow($/;"	f
TkEventDeadWindow	generic/tkIntDecls.h	819;"	d
TkEventHandler	generic/tkInt.h	/^typedef struct TkEventHandler {$/;"	s
TkEventHandler	generic/tkInt.h	/^} TkEventHandler;$/;"	t	typeref:struct:TkEventHandler
TkEventInit	generic/tkEvent.c	/^TkEventInit(void)$/;"	f
TkEventuallyRecomputeMenu	generic/tkMenuDraw.c	/^TkEventuallyRecomputeMenu($/;"	f
TkEventuallyRedrawMenu	generic/tkMenuDraw.c	/^TkEventuallyRedrawMenu($/;"	f
TkEventuallyRedrawScale	generic/tkScale.c	/^TkEventuallyRedrawScale($/;"	f
TkFillPolygon	generic/tkCanvPoly.c	/^TkFillPolygon($/;"	f
TkFillPolygon	generic/tkIntDecls.h	821;"	d
TkFinalize	generic/tkEvent.c	/^TkFinalize($/;"	f
TkFinalize	generic/tkInt.h	/^MODULE_SCOPE Tcl_ExitProc	TkFinalize;$/;"	v
TkFinalizeThread	generic/tkEvent.c	/^TkFinalizeThread($/;"	f
TkFinalizeThread	generic/tkInt.h	/^MODULE_SCOPE Tcl_ExitProc	TkFinalizeThread;$/;"	v
TkFindMenuReferences	generic/tkMenu.c	/^TkFindMenuReferences($/;"	f
TkFindMenuReferencesObj	generic/tkMenu.c	/^TkFindMenuReferencesObj($/;"	f
TkFindStateNum	generic/tkIntDecls.h	823;"	d
TkFindStateNum	generic/tkUtil.c	/^TkFindStateNum($/;"	f
TkFindStateNumObj	generic/tkIntDecls.h	987;"	d
TkFindStateNumObj	generic/tkUtil.c	/^TkFindStateNumObj($/;"	f
TkFindStateString	generic/tkIntDecls.h	825;"	d
TkFindStateString	generic/tkUtil.c	/^TkFindStateString($/;"	f
TkFocusDeadWindow	generic/tkFocus.c	/^TkFocusDeadWindow($/;"	f
TkFocusDeadWindow	generic/tkIntDecls.h	827;"	d
TkFocusFilterEvent	generic/tkFocus.c	/^TkFocusFilterEvent($/;"	f
TkFocusFilterEvent	generic/tkIntDecls.h	829;"	d
TkFocusFree	generic/tkFocus.c	/^TkFocusFree($/;"	f
TkFocusFree	generic/tkIntDecls.h	1057;"	d
TkFocusJoin	generic/tkFocus.c	/^TkFocusJoin($/;"	f
TkFocusKeyEvent	generic/tkFocus.c	/^TkFocusKeyEvent($/;"	f
TkFocusKeyEvent	generic/tkIntDecls.h	831;"	d
TkFocusSplit	generic/tkFocus.c	/^TkFocusSplit($/;"	f
TkFont	generic/tkFont.h	/^typedef struct TkFont {$/;"	s
TkFont	generic/tkFont.h	/^} TkFont;$/;"	t	typeref:struct:TkFont
TkFontAttributes	generic/tkFont.h	/^struct TkFontAttributes {$/;"	s
TkFontAttributes	generic/tkInt.h	/^typedef struct TkFontAttributes TkFontAttributes;$/;"	t	typeref:struct:TkFontAttributes
TkFontGetAliasList	generic/tkFont.c	/^TkFontGetAliasList($/;"	f
TkFontGetFallbacks	generic/tkFont.c	/^TkFontGetFallbacks(void)$/;"	f
TkFontGetFirstTextLayout	generic/tkFont.c	/^TkFontGetFirstTextLayout($/;"	f
TkFontGetGlobalClass	generic/tkFont.c	/^TkFontGetGlobalClass(void)$/;"	f
TkFontGetPixels	generic/tkFont.c	/^TkFontGetPixels($/;"	f
TkFontGetPoints	generic/tkFont.c	/^TkFontGetPoints($/;"	f
TkFontGetSymbolClass	generic/tkFont.c	/^TkFontGetSymbolClass(void)$/;"	f
TkFontInfo	generic/tkFont.c	/^typedef struct TkFontInfo {$/;"	s	file:
TkFontInfo	generic/tkFont.c	/^} TkFontInfo;$/;"	t	typeref:struct:TkFontInfo	file:
TkFontMetrics	generic/tkFont.h	/^typedef struct TkFontMetrics {$/;"	s
TkFontMetrics	generic/tkFont.h	/^} TkFontMetrics;$/;"	t	typeref:struct:TkFontMetrics
TkFontParseXLFD	generic/tkFont.c	/^TkFontParseXLFD($/;"	f
TkFontPkgFree	generic/tkFont.c	/^TkFontPkgFree($/;"	f
TkFontPkgFree	generic/tkIntDecls.h	835;"	d
TkFontPkgInit	generic/tkFont.c	/^TkFontPkgInit($/;"	f
TkFontPkgInit	generic/tkIntDecls.h	833;"	d
TkFreeBindingTags	generic/tkCmds.c	/^TkFreeBindingTags($/;"	f
TkFreeBindingTags	generic/tkIntDecls.h	837;"	d
TkFreeFileFilters	generic/tkFileFilter.c	/^TkFreeFileFilters($/;"	f
TkFreeGeometryMaster	generic/tkGeometry.c	/^TkFreeGeometryMaster($/;"	f
TkFreeMenuReferences	generic/tkMenu.c	/^TkFreeMenuReferences($/;"	f
TkGC	generic/tkGC.c	/^} TkGC;$/;"	t	typeref:struct:__anon140	file:
TkGCCleanup	generic/tkGC.c	/^TkGCCleanup($/;"	f
TkGCCleanup	generic/tkIntDecls.h	1061;"	d
TkGenWMConfigureEvent	generic/tkPlatDecls.h	151;"	d
TkGenWMConfigureEvent	macosx/tkMacOSXWindowEvent.c	/^TkGenWMConfigureEvent($/;"	f
TkGenWMDestroyEvent	generic/tkIntPlatDecls.h	623;"	d
TkGenWMDestroyEvent	macosx/tkMacOSXWindowEvent.c	/^TkGenWMDestroyEvent($/;"	f
TkGenerateActivateEvents	generic/tkIntPlatDecls.h	438;"	d
TkGenerateActivateEvents	generic/tkIntPlatDecls.h	528;"	d
TkGenerateActivateEvents	generic/tkPointer.c	/^TkGenerateActivateEvents($/;"	f
TkGenerateActivateEvents	generic/tkStubInit.c	176;"	d	file:
TkGenerateButtonEvent	generic/tkIntPlatDecls.h	621;"	d
TkGenerateButtonEvent	macosx/tkMacOSXMouseEvent.c	/^TkGenerateButtonEvent($/;"	f
TkGenerateButtonEventForXPointer	macosx/tkMacOSXMouseEvent.c	/^TkGenerateButtonEventForXPointer($/;"	f
TkGetBitmapData	generic/tkImgBmap.c	/^TkGetBitmapData($/;"	f
TkGetBitmapData	generic/tkIntDecls.h	841;"	d
TkGetBitmapPredefTable	generic/tkBitmap.c	/^TkGetBitmapPredefTable(void)$/;"	f
TkGetBitmapPredefTable	generic/tkIntDecls.h	989;"	d
TkGetButtPoints	generic/tkIntDecls.h	843;"	d
TkGetButtPoints	generic/tkTrig.c	/^TkGetButtPoints($/;"	f
TkGetCursorByName	generic/tkIntDecls.h	845;"	d
TkGetCursorByName	macosx/tkMacOSXCursor.c	/^TkGetCursorByName($/;"	f
TkGetCursorByName	unix/tkUnixCursor.c	/^TkGetCursorByName($/;"	f
TkGetCursorByName	win/tkWinCursor.c	/^TkGetCursorByName($/;"	f
TkGetDefaultScreenName	generic/tkIntDecls.h	847;"	d
TkGetDefaultScreenName	macosx/tkMacOSXXStubs.c	/^TkGetDefaultScreenName($/;"	f
TkGetDefaultScreenName	unix/tkUnix.c	/^TkGetDefaultScreenName($/;"	f
TkGetDefaultScreenName	win/tkWinX.c	/^TkGetDefaultScreenName($/;"	f
TkGetDisplay	generic/tkIntDecls.h	849;"	d
TkGetDisplay	generic/tkWindow.c	/^TkGetDisplay($/;"	f
TkGetDisplayList	generic/tkIntDecls.h	991;"	d
TkGetDisplayList	generic/tkWindow.c	/^TkGetDisplayList(void)$/;"	f
TkGetDisplayOf	generic/tkCmds.c	/^TkGetDisplayOf($/;"	f
TkGetDisplayOf	generic/tkIntDecls.h	851;"	d
TkGetDoublePixels	generic/tkGet.c	/^TkGetDoublePixels($/;"	f
TkGetFileFilters	generic/tkFileFilter.c	/^TkGetFileFilters($/;"	f
TkGetFocusWin	generic/tkFocus.c	/^TkGetFocusWin($/;"	f
TkGetFocusWin	generic/tkIntDecls.h	853;"	d
TkGetInterpNames	generic/tkIntDecls.h	855;"	d
TkGetInterpNames	macosx/tkMacOSXSend.c	/^TkGetInterpNames($/;"	f
TkGetInterpNames	unix/tkUnixSend.c	/^TkGetInterpNames($/;"	f
TkGetInterpNames	win/tkWinSend.c	/^TkGetInterpNames($/;"	f
TkGetMainInfoList	generic/tkIntDecls.h	993;"	d
TkGetMainInfoList	generic/tkWindow.c	/^TkGetMainInfoList(void)$/;"	f
TkGetMenuHashTable	generic/tkMenu.c	/^TkGetMenuHashTable($/;"	f
TkGetMenuIndex	generic/tkMenu.c	/^TkGetMenuIndex($/;"	f
TkGetMiterPoints	generic/tkIntDecls.h	857;"	d
TkGetMiterPoints	generic/tkTrig.c	/^TkGetMiterPoints($/;"	f
TkGetOptionSpec	generic/tkConfig.c	/^TkGetOptionSpec($/;"	f
TkGetOptionSpec	generic/tkIntDecls.h	1071;"	d
TkGetPointerCoords	generic/tkIntDecls.h	859;"	d
TkGetPointerCoords	macosx/tkMacOSXWm.c	/^TkGetPointerCoords($/;"	f
TkGetPointerCoords	unix/tkUnixWm.c	/^TkGetPointerCoords($/;"	f
TkGetPointerCoords	win/tkWinPointer.c	/^TkGetPointerCoords($/;"	f
TkGetServerInfo	generic/tkIntDecls.h	861;"	d
TkGetServerInfo	macosx/tkMacOSXXStubs.c	/^TkGetServerInfo($/;"	f
TkGetServerInfo	unix/tkUnix.c	/^TkGetServerInfo($/;"	f
TkGetServerInfo	win/tkWinX.c	/^TkGetServerInfo($/;"	f
TkGetStringsFromObjs	generic/tkCanvas.c	/^TkGetStringsFromObjs($/;"	f	file:
TkGetTransientMaster	generic/tkIntPlatDecls.h	619;"	d
TkGetTransientMaster	macosx/tkMacOSXWm.c	/^TkGetTransientMaster($/;"	f
TkGetWindowFromObj	generic/tkIntDecls.h	995;"	d
TkGetWindowFromObj	generic/tkObj.c	/^TkGetWindowFromObj($/;"	f
TkGrabDeadWindow	generic/tkGrab.c	/^TkGrabDeadWindow($/;"	f
TkGrabDeadWindow	generic/tkIntDecls.h	863;"	d
TkGrabEvent	generic/tkInt.h	/^typedef struct TkGrabEvent TkGrabEvent;$/;"	t	typeref:struct:TkGrabEvent
TkGrabState	generic/tkGrab.c	/^TkGrabState($/;"	f
TkGrabState	generic/tkIntDecls.h	865;"	d
TkHalfdeadWindow	generic/tkWindow.c	/^typedef struct TkHalfdeadWindow {$/;"	s	file:
TkHalfdeadWindow	generic/tkWindow.c	/^} TkHalfdeadWindow;$/;"	t	typeref:struct:TkHalfdeadWindow	file:
TkImageGetColor	generic/tkCanvPs.c	/^TkImageGetColor($/;"	f	file:
TkImgDisposeInstance	generic/tkImgPhInstance.c	/^TkImgDisposeInstance($/;"	f
TkImgDitherInstance	generic/tkImgPhInstance.c	/^TkImgDitherInstance($/;"	f
TkImgPhotoConfigureInstance	generic/tkImgPhInstance.c	/^TkImgPhotoConfigureInstance($/;"	f
TkImgPhotoDisplay	generic/tkImgPhInstance.c	/^TkImgPhotoDisplay($/;"	f
TkImgPhotoFree	generic/tkImgPhInstance.c	/^TkImgPhotoFree($/;"	f
TkImgPhotoGet	generic/tkImgPhInstance.c	/^TkImgPhotoGet($/;"	f
TkImgPhotoInstanceSetSize	generic/tkImgPhInstance.c	/^TkImgPhotoInstanceSetSize($/;"	f
TkImgResetDither	generic/tkImgPhInstance.c	/^TkImgResetDither($/;"	f
TkInOutEvents	generic/tkGrab.c	/^TkInOutEvents($/;"	f
TkInOutEvents	generic/tkIntDecls.h	869;"	d
TkIncludePoint	generic/tkIntDecls.h	867;"	d
TkIncludePoint	generic/tkTrig.c	/^TkIncludePoint($/;"	f
TkInitFileFilters	generic/tkFileFilter.c	/^TkInitFileFilters($/;"	f
TkInitFontAttributes	generic/tkFont.h	194;"	d
TkInitFontchooser	macosx/tkMacOSXDialog.c	/^TkInitFontchooser($/;"	f
TkInitFontchooser	win/tkWinDialog.c	/^TkInitFontchooser(Tcl_Interp *interp, ClientData clientData)$/;"	f
TkInitProc	generic/tkWindow.c	/^typedef int (TkInitProc)(Tcl_Interp *interp, ClientData clientData);$/;"	t	file:
TkInitTkCmd	generic/tkCmds.c	/^TkInitTkCmd($/;"	f
TkInitXLFDAttributes	generic/tkFont.h	195;"	d
TkInstallFrameMenu	generic/tkFrame.c	/^TkInstallFrameMenu($/;"	f
TkInstallFrameMenu	generic/tkIntDecls.h	871;"	d
TkIntPlatStubs	generic/tkIntPlatDecls.h	/^typedef struct TkIntPlatStubs {$/;"	s
TkIntPlatStubs	generic/tkIntPlatDecls.h	/^} TkIntPlatStubs;$/;"	t	typeref:struct:TkIntPlatStubs
TkIntStubs	generic/tkIntDecls.h	/^typedef struct TkIntStubs {$/;"	s
TkIntStubs	generic/tkIntDecls.h	/^} TkIntStubs;$/;"	t	typeref:struct:TkIntStubs
TkIntXlibStubs	generic/tkIntXlibDecls.h	/^typedef struct TkIntXlibStubs {$/;"	s
TkIntXlibStubs	generic/tkIntXlibDecls.h	/^} TkIntXlibStubs;$/;"	t	typeref:struct:TkIntXlibStubs
TkIntersectAngledTextLayout	generic/tkFont.c	/^TkIntersectAngledTextLayout($/;"	f
TkIntersectAngledTextLayout	generic/tkIntDecls.h	1138;"	d
TkIntersectRegion	generic/tkIntDecls.h	1011;"	d
TkIntersectRegion	generic/tkIntDecls.h	1158;"	d
TkIntersectRegion	generic/tkIntDecls.h	1167;"	d
TkIntersectRegion	generic/tkStubInit.c	/^void TkIntersectRegion(TkRegion a, TkRegion b, TkRegion c)$/;"	f
TkIntersectRegion	generic/tkStubInit.c	213;"	d	file:
TkIntersectRegion	generic/tkStubInit.c	222;"	d	file:
TkIntersectRegion	macosx/tkMacOSXRegion.c	/^TkIntersectRegion($/;"	f
TkIntersectRegion	win/tkWinRegion.c	/^TkIntersectRegion($/;"	f
TkIntersectRegion	win/tkWinRegion.c	17;"	d	file:
TkInvokeButton	generic/tkButton.c	/^TkInvokeButton($/;"	f
TkInvokeMenu	generic/tkMenu.c	/^TkInvokeMenu($/;"	f
TkKeyEvent	generic/tkInt.h	/^} TkKeyEvent;$/;"	t	typeref:struct:__anon133
TkKeycodeToKeysym	unix/tkUnixKey.c	25;"	d	file:
TkKeysymToString	generic/tkBind.c	/^TkKeysymToString($/;"	f
TkKeysymToString	generic/tkIntDecls.h	873;"	d
TkLineToArea	generic/tkIntDecls.h	875;"	d
TkLineToArea	generic/tkTrig.c	/^TkLineToArea($/;"	f
TkLineToPoint	generic/tkIntDecls.h	877;"	d
TkLineToPoint	generic/tkTrig.c	/^TkLineToPoint($/;"	f
TkMacOSHIShapeDifferenceWithRect	macosx/tkMacOSXRegion.c	/^TkMacOSHIShapeDifferenceWithRect($/;"	f
TkMacOSHIShapeUnion	macosx/tkMacOSXRegion.c	/^TkMacOSHIShapeUnion($/;"	f
TkMacOSHIShapeUnionWithRect	macosx/tkMacOSXRegion.c	/^TkMacOSHIShapeUnionWithRect($/;"	f
TkMacOSXApplyWindowAttributes	macosx/tkMacOSXWm.c	/^TkMacOSXApplyWindowAttributes($/;"	f
TkMacOSXButtonKeyState	generic/tkIntPlatDecls.h	542;"	d
TkMacOSXButtonKeyState	macosx/tkMacOSXMouseEvent.c	/^TkMacOSXButtonKeyState(void)$/;"	f
TkMacOSXClearMenubarActive	generic/tkIntPlatDecls.h	544;"	d
TkMacOSXClearMenubarActive	macosx/tkMacOSXMenu.c	/^TkMacOSXClearMenubarActive(void)$/;"	f
TkMacOSXComputeButtonDrawParams	macosx/tkMacOSXButton.c	/^TkMacOSXComputeButtonDrawParams($/;"	f	file:
TkMacOSXComputeButtonParams	macosx/tkMacOSXButton.c	/^TkMacOSXComputeButtonParams($/;"	f	file:
TkMacOSXComputeMenuButtonDrawParams	macosx/tkMacOSXMenubutton.c	/^TkMacOSXComputeMenuButtonDrawParams(TkMenuButton * butPtr, DrawParams * dpPtr)$/;"	f	file:
TkMacOSXComputeMenuButtonParams	macosx/tkMacOSXMenubutton.c	/^TkMacOSXComputeMenuButtonParams(TkMenuButton * butPtr, ThemeButtonKind* btnkind, HIThemeButtonDrawInfo *drawinfo)$/;"	f	file:
TkMacOSXContainerId	generic/tkIntPlatDecls.h	608;"	d
TkMacOSXContainerId	macosx/tkMacOSXEmbed.c	/^TkMacOSXContainerId($/;"	f
TkMacOSXCreateCGColor	macosx/tkMacOSXColor.c	/^TkMacOSXCreateCGColor($/;"	f
TkMacOSXCreateCGImageWithDrawable	macosx/tkMacOSXDraw.c	/^TkMacOSXCreateCGImageWithDrawable($/;"	f
TkMacOSXCursor	macosx/tkMacOSXCursor.c	/^} TkMacOSXCursor;$/;"	t	typeref:struct:__anon208	file:
TkMacOSXDbgMsg	macosx/tkMacOSXPrivate.h	103;"	d
TkMacOSXDbgMsg	macosx/tkMacOSXPrivate.h	130;"	d
TkMacOSXDbgOSErr	macosx/tkMacOSXPrivate.h	112;"	d
TkMacOSXDbgOSErr	macosx/tkMacOSXPrivate.h	131;"	d
TkMacOSXDefaultStartupScript	macosx/tkMacOSXInit.c	/^TkMacOSXDefaultStartupScript(void)$/;"	f
TkMacOSXDispatchMenuEvent	generic/tkIntPlatDecls.h	546;"	d
TkMacOSXDispatchMenuEvent	macosx/tkMacOSXMenu.c	/^TkMacOSXDispatchMenuEvent($/;"	f
TkMacOSXDisplayChanged	macosx/tkMacOSXXStubs.c	/^TkMacOSXDisplayChanged($/;"	f
TkMacOSXDoHLEvent	generic/tkIntPlatDecls.h	553;"	d
TkMacOSXDoHLEvent	macosx/tkMacOSXHLEvents.c	/^TkMacOSXDoHLEvent($/;"	f
TkMacOSXDrawButton	macosx/tkMacOSXButton.c	/^TkMacOSXDrawButton($/;"	f	file:
TkMacOSXDrawMenuButton	macosx/tkMacOSXMenubutton.c	/^TkMacOSXDrawMenuButton($/;"	f	file:
TkMacOSXDrawable	generic/tkIntPlatDecls.h	629;"	d
TkMacOSXDrawable	macosx/tkMacOSXSubwindows.c	/^TkMacOSXDrawable($/;"	f
TkMacOSXDrawableView	macosx/tkMacOSXSubwindows.c	/^TkMacOSXDrawableView($/;"	f
TkMacOSXDrawableWindow	macosx/tkMacOSXSubwindows.c	/^TkMacOSXDrawableWindow($/;"	f
TkMacOSXDrawingContext	macosx/tkMacOSXPrivate.h	/^typedef struct TkMacOSXDrawingContext {$/;"	s
TkMacOSXDrawingContext	macosx/tkMacOSXPrivate.h	/^} TkMacOSXDrawingContext;$/;"	t	typeref:struct:TkMacOSXDrawingContext
TkMacOSXEmbedHandler	macosx/tkMacOSXInt.h	/^} TkMacOSXEmbedHandler;$/;"	t	typeref:struct:__anon196
TkMacOSXEventsCheckProc	macosx/tkMacOSXNotify.c	/^TkMacOSXEventsCheckProc($/;"	f	file:
TkMacOSXEventsSetupProc	macosx/tkMacOSXNotify.c	/^TkMacOSXEventsSetupProc($/;"	f	file:
TkMacOSXFlushWindows	macosx/tkMacOSXEvent.c	/^TkMacOSXFlushWindows(void)$/;"	f
TkMacOSXFontDescriptionForNSFontAndNSFontAttributes	macosx/tkMacOSXFont.c	/^TkMacOSXFontDescriptionForNSFontAndNSFontAttributes($/;"	f
TkMacOSXGenerateFocusEvent	macosx/tkMacOSXWindowEvent.c	/^TkMacOSXGenerateFocusEvent($/;"	f
TkMacOSXGetCapture	generic/tkIntPlatDecls.h	616;"	d
TkMacOSXGetCapture	macosx/tkMacOSXKeyEvent.c	/^TkMacOSXGetCapture(void)$/;"	f
TkMacOSXGetClipRgn	macosx/tkMacOSXDraw.c	/^TkMacOSXGetClipRgn($/;"	f
TkMacOSXGetDrawablePort	generic/tkPlatDecls.h	155;"	d
TkMacOSXGetDrawablePort	macosx/tkMacOSXSubwindows.c	/^TkMacOSXGetDrawablePort($/;"	f
TkMacOSXGetHostToplevel	generic/tkIntPlatDecls.h	610;"	d
TkMacOSXGetHostToplevel	macosx/tkMacOSXEmbed.c	/^TkMacOSXGetHostToplevel($/;"	f
TkMacOSXGetModalSession	macosx/tkMacOSXKeyEvent.c	/^TkMacOSXGetModalSession(void)$/;"	f
TkMacOSXGetNSColor	macosx/tkMacOSXColor.c	/^TkMacOSXGetNSColor($/;"	f
TkMacOSXGetNSImageWithBitmap	macosx/tkMacOSXDraw.c	/^TkMacOSXGetNSImageWithBitmap($/;"	f
TkMacOSXGetNSImageWithTkImage	macosx/tkMacOSXDraw.c	/^TkMacOSXGetNSImageWithTkImage($/;"	f
TkMacOSXGetNamedDebugSymbol	macosx/tkMacOSXDebug.c	/^TkMacOSXGetNamedDebugSymbol($/;"	f
TkMacOSXGetNamedSymbol	macosx/tkMacOSXInit.c	/^TkMacOSXGetNamedSymbol($/;"	f
TkMacOSXGetNativeRegion	macosx/tkMacOSXRegion.c	/^TkMacOSXGetNativeRegion($/;"	f
TkMacOSXGetRootControl	generic/tkPlatDecls.h	157;"	d
TkMacOSXGetRootControl	macosx/tkMacOSXSubwindows.c	/^TkMacOSXGetRootControl($/;"	f
TkMacOSXGetStringObjFromCFString	macosx/tkMacOSXInit.c	/^TkMacOSXGetStringObjFromCFString($/;"	f
TkMacOSXGetTkWindow	macosx/tkMacOSXWm.c	/^TkMacOSXGetTkWindow($/;"	f
TkMacOSXGetXWindow	generic/tkIntPlatDecls.h	556;"	d
TkMacOSXGetXWindow	macosx/tkMacOSXWm.c	/^TkMacOSXGetXWindow($/;"	f
TkMacOSXGrowToplevel	generic/tkIntPlatDecls.h	558;"	d
TkMacOSXGrowToplevel	macosx/tkMacOSXWm.c	/^TkMacOSXGrowToplevel($/;"	f
TkMacOSXHIShapeCreateEmpty	macosx/tkMacOSXRegion.c	/^TkMacOSXHIShapeCreateEmpty(void)$/;"	f
TkMacOSXHIShapeCreateMutableWithRect	macosx/tkMacOSXRegion.c	/^TkMacOSXHIShapeCreateMutableWithRect($/;"	f
TkMacOSXHIShapeSetWithShape	macosx/tkMacOSXRegion.c	/^TkMacOSXHIShapeSetWithShape($/;"	f
TkMacOSXHandleMenuSelect	generic/tkIntPlatDecls.h	560;"	d
TkMacOSXHandleMenuSelect	macosx/tkMacOSXMenus.c	/^TkMacOSXHandleMenuSelect($/;"	f
TkMacOSXHandleTearoffMenu	generic/tkIntPlatDecls.h	550;"	d
TkMacOSXHandleTearoffMenu	macosx/tkMacOSXMenu.c	/^TkMacOSXHandleTearoffMenu(void)$/;"	f
TkMacOSXHostToplevelExists	macosx/tkMacOSXInt.h	168;"	d
TkMacOSXIconBitmapObjCmd	macosx/tkMacOSXBitmap.c	/^TkMacOSXIconBitmapObjCmd($/;"	f
TkMacOSXInitAppleEvents	generic/tkPlatDecls.h	149;"	d
TkMacOSXInitAppleEvents	macosx/tkMacOSXHLEvents.c	/^TkMacOSXInitAppleEvents($/;"	f
TkMacOSXInitCGDrawing	macosx/tkMacOSXDraw.c	/^TkMacOSXInitCGDrawing($/;"	f
TkMacOSXInitMenus	generic/tkPlatDecls.h	147;"	d
TkMacOSXInitMenus	macosx/tkMacOSXMenus.c	/^TkMacOSXInitMenus($/;"	f
TkMacOSXInitNamedDebugSymbol	macosx/tkMacOSXDebug.h	26;"	d
TkMacOSXInitNamedSymbol	macosx/tkMacOSXPrivate.h	139;"	d
TkMacOSXInstallCursor	generic/tkIntPlatDecls.h	548;"	d
TkMacOSXInstallCursor	macosx/tkMacOSXCursor.c	/^TkMacOSXInstallCursor($/;"	f
TkMacOSXInvalClipRgns	generic/tkPlatDecls.h	153;"	d
TkMacOSXInvalClipRgns	macosx/tkMacOSXSubwindows.c	/^TkMacOSXInvalClipRgns($/;"	f
TkMacOSXInvalidateViewRegion	macosx/tkMacOSXSubwindows.c	/^TkMacOSXInvalidateViewRegion($/;"	f
TkMacOSXInvalidateWindow	generic/tkIntPlatDecls.h	564;"	d
TkMacOSXInvalidateWindow	macosx/tkMacOSXSubwindows.c	/^TkMacOSXInvalidateWindow($/;"	f
TkMacOSXIsCharacterMissing	generic/tkIntPlatDecls.h	566;"	d
TkMacOSXIsCharacterMissing	macosx/tkMacOSXFont.c	/^TkMacOSXIsCharacterMissing($/;"	f
TkMacOSXIsEmptyRegion	macosx/tkMacOSXRegion.c	/^TkMacOSXIsEmptyRegion($/;"	f
TkMacOSXIsWindowZoomed	macosx/tkMacOSXWm.c	/^TkMacOSXIsWindowZoomed($/;"	f
TkMacOSXMakeFullscreen	macosx/tkMacOSXWm.c	/^TkMacOSXMakeFullscreen($/;"	f
TkMacOSXMakeRealWindowExist	generic/tkIntPlatDecls.h	568;"	d
TkMacOSXMakeRealWindowExist	macosx/tkMacOSXWm.c	/^TkMacOSXMakeRealWindowExist($/;"	f
TkMacOSXMakeStippleMap	generic/tkIntPlatDecls.h	570;"	d
TkMacOSXMakeStippleMap	macosx/tkMacOSXDraw.c	/^TkMacOSXMakeStippleMap($/;"	f
TkMacOSXMenuClick	generic/tkIntPlatDecls.h	572;"	d
TkMacOSXMenuClick	macosx/tkMacOSXMenu.c	/^TkMacOSXMenuClick(void)$/;"	f
TkMacOSXModifierState	macosx/tkMacOSXMouseEvent.c	/^TkMacOSXModifierState(void)$/;"	f
TkMacOSXNSFontAttributesForFont	macosx/tkMacOSXFont.c	/^TkMacOSXNSFontAttributesForFont($/;"	f
TkMacOSXNSFontForFont	macosx/tkMacOSXFont.c	/^TkMacOSXNSFontForFont($/;"	f
TkMacOSXNotifyExitHandler	macosx/tkMacOSXNotify.c	/^TkMacOSXNotifyExitHandler($/;"	f	file:
TkMacOSXOffsetRegion	macosx/tkMacOSXRegion.c	/^TkMacOSXOffsetRegion($/;"	f
TkMacOSXPreprocessMenu	generic/tkIntPlatDecls.h	612;"	d
TkMacOSXPreprocessMenu	macosx/tkMacOSXMenu.c	/^TkMacOSXPreprocessMenu(void)$/;"	f
TkMacOSXRegisterOffScreenWindow	generic/tkIntPlatDecls.h	574;"	d
TkMacOSXRegisterOffScreenWindow	macosx/tkMacOSXWm.c	/^TkMacOSXRegisterOffScreenWindow($/;"	f
TkMacOSXResizable	generic/tkIntPlatDecls.h	576;"	d
TkMacOSXResizable	macosx/tkMacOSXWm.c	/^TkMacOSXResizable($/;"	f
TkMacOSXRestoreDrawingContext	macosx/tkMacOSXDraw.c	/^TkMacOSXRestoreDrawingContext($/;"	f
TkMacOSXSelDeadWindow	macosx/tkMacOSXClipboard.c	/^TkMacOSXSelDeadWindow($/;"	f
TkMacOSXSetColorInContext	macosx/tkMacOSXColor.c	/^TkMacOSXSetColorInContext($/;"	f
TkMacOSXSetDrawingEnabled	generic/tkIntPlatDecls.h	625;"	d
TkMacOSXSetDrawingEnabled	macosx/tkMacOSXSubwindows.c	/^TkMacOSXSetDrawingEnabled($/;"	f
TkMacOSXSetEmptyRegion	macosx/tkMacOSXRegion.c	/^TkMacOSXSetEmptyRegion($/;"	f
TkMacOSXSetHelpMenuItemCount	generic/tkIntPlatDecls.h	578;"	d
TkMacOSXSetHelpMenuItemCount	macosx/tkMacOSXMenu.c	/^TkMacOSXSetHelpMenuItemCount(void)$/;"	f
TkMacOSXSetScrollbarGrow	generic/tkIntPlatDecls.h	580;"	d
TkMacOSXSetScrollbarGrow	macosx/tkMacOSXWm.c	/^TkMacOSXSetScrollbarGrow($/;"	f
TkMacOSXSetUpClippingRgn	generic/tkIntPlatDecls.h	582;"	d
TkMacOSXSetUpClippingRgn	macosx/tkMacOSXDraw.c	/^TkMacOSXSetUpClippingRgn($/;"	f
TkMacOSXSetUpGraphicsPort	generic/tkIntPlatDecls.h	584;"	d
TkMacOSXSetUpGraphicsPort	macosx/tkMacOSXDraw.c	/^TkMacOSXSetUpGraphicsPort($/;"	f
TkMacOSXSetWithNativeRegion	macosx/tkMacOSXRegion.c	/^TkMacOSXSetWithNativeRegion($/;"	f
TkMacOSXSetupDrawingContext	macosx/tkMacOSXDraw.c	/^TkMacOSXSetupDrawingContext($/;"	f
TkMacOSXStandardAboutPanelObjCmd	macosx/tkMacOSXDialog.c	/^TkMacOSXStandardAboutPanelObjCmd($/;"	f
TkMacOSXUnregisterMacWindow	generic/tkIntPlatDecls.h	588;"	d
TkMacOSXUnregisterMacWindow	macosx/tkMacOSXWm.c	/^TkMacOSXUnregisterMacWindow($/;"	f
TkMacOSXUpdateClipRgn	generic/tkIntPlatDecls.h	586;"	d
TkMacOSXUpdateClipRgn	macosx/tkMacOSXSubwindows.c	/^TkMacOSXUpdateClipRgn($/;"	f
TkMacOSXUseAntialiasedText	macosx/tkMacOSXFont.c	/^TkMacOSXUseAntialiasedText($/;"	f
TkMacOSXUseMenuID	generic/tkIntPlatDecls.h	590;"	d
TkMacOSXUseMenuID	macosx/tkMacOSXMenu.c	/^TkMacOSXUseMenuID($/;"	f
TkMacOSXVisableClipRgn	generic/tkIntPlatDecls.h	592;"	d
TkMacOSXVisableClipRgn	macosx/tkMacOSXSubwindows.c	/^TkMacOSXVisableClipRgn($/;"	f
TkMacOSXWinBounds	generic/tkIntPlatDecls.h	594;"	d
TkMacOSXWinBounds	macosx/tkMacOSXSubwindows.c	/^TkMacOSXWinBounds($/;"	f
TkMacOSXWinCGBounds	macosx/tkMacOSXSubwindows.c	/^TkMacOSXWinCGBounds($/;"	f
TkMacOSXWindowClass	macosx/tkMacOSXWm.c	/^TkMacOSXWindowClass($/;"	f
TkMacOSXWindowOffset	generic/tkIntPlatDecls.h	596;"	d
TkMacOSXWindowOffset	macosx/tkMacOSXWm.c	/^TkMacOSXWindowOffset($/;"	f
TkMacOSXZoomToplevel	generic/tkIntPlatDecls.h	604;"	d
TkMacOSXZoomToplevel	macosx/tkMacOSXWm.c	/^TkMacOSXZoomToplevel($/;"	f
TkMainInfo	generic/tkInt.h	/^typedef struct TkMainInfo {$/;"	s
TkMainInfo	generic/tkInt.h	/^} TkMainInfo;$/;"	t	typeref:struct:TkMainInfo
TkMakeBezierCurve	generic/tkIntDecls.h	879;"	d
TkMakeBezierCurve	generic/tkTrig.c	/^TkMakeBezierCurve($/;"	f
TkMakeBezierPostscript	generic/tkIntDecls.h	881;"	d
TkMakeBezierPostscript	generic/tkTrig.c	/^TkMakeBezierPostscript($/;"	f
TkMakeEnsemble	generic/tkUtil.c	/^TkMakeEnsemble($/;"	f
TkMakeRawCurve	generic/tkIntDecls.h	1073;"	d
TkMakeRawCurve	generic/tkTrig.c	/^TkMakeRawCurve($/;"	f
TkMakeRawCurvePostscript	generic/tkIntDecls.h	1075;"	d
TkMakeRawCurvePostscript	generic/tkTrig.c	/^TkMakeRawCurvePostscript($/;"	f
TkMapTopFrame	generic/tkFrame.c	/^TkMapTopFrame($/;"	f
TkMenu	generic/tkMenu.h	/^typedef struct TkMenu {$/;"	s
TkMenu	generic/tkMenu.h	/^} TkMenu;$/;"	t	typeref:struct:TkMenu
TkMenuButton	generic/tkMenubutton.h	/^} TkMenuButton;$/;"	t	typeref:struct:__anon137
TkMenuButtonWorldChanged	generic/tkMenubutton.c	/^TkMenuButtonWorldChanged($/;"	f
TkMenuCleanup	generic/tkMenu.c	/^TkMenuCleanup($/;"	f	file:
TkMenuConfigureDrawOptions	generic/tkMenuDraw.c	/^TkMenuConfigureDrawOptions($/;"	f
TkMenuConfigureEntryDrawOptions	generic/tkMenuDraw.c	/^TkMenuConfigureEntryDrawOptions($/;"	f
TkMenuEntry	generic/tkMenu.h	/^typedef struct TkMenuEntry {$/;"	s
TkMenuEntry	generic/tkMenu.h	/^} TkMenuEntry;$/;"	t	typeref:struct:TkMenuEntry
TkMenuEntryFreeDrawOptions	generic/tkMenuDraw.c	/^TkMenuEntryFreeDrawOptions($/;"	f
TkMenuEventProc	generic/tkMenuDraw.c	/^TkMenuEventProc($/;"	f
TkMenuFreeDrawOptions	generic/tkMenuDraw.c	/^TkMenuFreeDrawOptions($/;"	f
TkMenuImageProc	generic/tkMenuDraw.c	/^TkMenuImageProc($/;"	f
TkMenuInit	generic/tkMenu.c	/^TkMenuInit(void)$/;"	f
TkMenuInitializeDrawingFields	generic/tkMenuDraw.c	/^TkMenuInitializeDrawingFields($/;"	f
TkMenuInitializeEntryDrawingFields	generic/tkMenuDraw.c	/^TkMenuInitializeEntryDrawingFields($/;"	f
TkMenuPlatformData	generic/tkMenu.h	/^typedef struct TkMenuPlatformData_ *TkMenuPlatformData;$/;"	t	typeref:struct:TkMenuPlatformData_
TkMenuPlatformEntryData	generic/tkMenu.h	/^typedef struct TkMenuPlatformEntryData_ *TkMenuPlatformEntryData;$/;"	t	typeref:struct:TkMenuPlatformEntryData_
TkMenuReferences	generic/tkMenu.h	/^typedef struct TkMenuReferences {$/;"	s
TkMenuReferences	generic/tkMenu.h	/^} TkMenuReferences;$/;"	t	typeref:struct:TkMenuReferences
TkMenuSelectImageProc	generic/tkMenuDraw.c	/^TkMenuSelectImageProc($/;"	f
TkMenuTopLevelList	generic/tkMenu.h	/^typedef struct TkMenuTopLevelList {$/;"	s
TkMenuTopLevelList	generic/tkMenu.h	/^} TkMenuTopLevelList;$/;"	t	typeref:struct:TkMenuTopLevelList
TkNewMenuName	generic/tkMenu.c	/^TkNewMenuName($/;"	f
TkNewWindowObj	generic/tkObj.c	/^TkNewWindowObj($/;"	f
TkOffsetParseProc	generic/tkIntDecls.h	1118;"	d
TkOffsetParseProc	generic/tkUtil.c	/^TkOffsetParseProc($/;"	f
TkOffsetPrintProc	generic/tkIntDecls.h	1120;"	d
TkOffsetPrintProc	generic/tkUtil.c	/^TkOffsetPrintProc($/;"	f
TkOldTestInit	generic/tkOldTest.c	/^TkOldTestInit($/;"	f
TkOption	generic/tkConfig.c	/^typedef struct TkOption {$/;"	s	file:
TkOptionClassChanged	generic/tkIntDecls.h	883;"	d
TkOptionClassChanged	generic/tkOption.c	/^TkOptionClassChanged($/;"	f
TkOptionDeadWindow	generic/tkIntDecls.h	885;"	d
TkOptionDeadWindow	generic/tkOption.c	/^TkOptionDeadWindow($/;"	f
TkOrientParseProc	generic/tkIntDecls.h	1126;"	d
TkOrientParseProc	generic/tkUtil.c	/^TkOrientParseProc($/;"	f
TkOrientPrintProc	generic/tkIntDecls.h	1128;"	d
TkOrientPrintProc	generic/tkUtil.c	/^TkOrientPrintProc($/;"	f
TkOvalToArea	generic/tkIntDecls.h	887;"	d
TkOvalToArea	generic/tkTrig.c	/^TkOvalToArea($/;"	f
TkOvalToPoint	generic/tkIntDecls.h	889;"	d
TkOvalToPoint	generic/tkTrig.c	/^TkOvalToPoint($/;"	f
TkParseColor	generic/tkColor.c	/^TkParseColor($/;"	f
TkParseColor	generic/tkInt.h	1222;"	d
TkParsePadAmount	generic/tkObj.c	/^TkParsePadAmount($/;"	f
TkPattern	generic/tkBind.c	/^} TkPattern;$/;"	t	typeref:struct:__anon169	file:
TkPhotoGetValidRegion	generic/tkImgPhoto.c	/^TkPhotoGetValidRegion($/;"	f
TkPhotoGetValidRegion	generic/tkIntDecls.h	1053;"	d
TkPixelParseProc	generic/tkIntDecls.h	1122;"	d
TkPixelParseProc	generic/tkUtil.c	/^TkPixelParseProc($/;"	f
TkPixelPrintProc	generic/tkIntDecls.h	1124;"	d
TkPixelPrintProc	generic/tkUtil.c	/^TkPixelPrintProc($/;"	f
TkPlatStubs	generic/tkPlatDecls.h	/^typedef struct TkPlatStubs {$/;"	s
TkPlatStubs	generic/tkPlatDecls.h	/^} TkPlatStubs;$/;"	t	typeref:struct:TkPlatStubs
TkPointerDeadWindow	generic/tkIntPlatDecls.h	442;"	d
TkPointerDeadWindow	generic/tkIntPlatDecls.h	532;"	d
TkPointerDeadWindow	generic/tkPointer.c	/^TkPointerDeadWindow($/;"	f
TkPointerDeadWindow	generic/tkStubInit.c	178;"	d	file:
TkPointerEvent	generic/tkGrab.c	/^TkPointerEvent($/;"	f
TkPointerEvent	generic/tkIntDecls.h	919;"	d
TkPolygonToArea	generic/tkIntDecls.h	921;"	d
TkPolygonToArea	generic/tkTrig.c	/^TkPolygonToArea($/;"	f
TkPolygonToPoint	generic/tkIntDecls.h	923;"	d
TkPolygonToPoint	generic/tkTrig.c	/^TkPolygonToPoint($/;"	f
TkPositionInTree	generic/tkGrab.c	/^TkPositionInTree($/;"	f
TkPositionInTree	generic/tkIntDecls.h	925;"	d
TkPostCommand	generic/tkMenu.c	/^TkPostCommand($/;"	f
TkPostSubmenu	generic/tkMenuDraw.c	/^TkPostSubmenu($/;"	f
TkPostTearoffMenu	generic/tkMenuDraw.c	/^TkPostTearoffMenu($/;"	f
TkPostscriptImage	generic/tkCanvPs.c	/^TkPostscriptImage($/;"	f
TkPostscriptInfo	generic/tkCanvPs.c	/^typedef struct TkPostscriptInfo {$/;"	s	file:
TkPostscriptInfo	generic/tkCanvPs.c	/^} TkPostscriptInfo;$/;"	t	typeref:struct:TkPostscriptInfo	file:
TkPredefBitmap	generic/tkInt.h	/^} TkPredefBitmap;$/;"	t	typeref:struct:__anon132
TkPreprocessMenu	generic/tkMacWinMenu.c	/^TkPreprocessMenu($/;"	f
TkPutImage	generic/tkIntXlibDecls.h	1015;"	d
TkPutImage	generic/tkIntXlibDecls.h	1200;"	d
TkPutImage	generic/tkStubInit.c	/^TkPutImage($/;"	f
TkPutImage	macosx/tkMacOSXDraw.c	/^TkPutImage($/;"	f
TkPutImage	unix/tkUnixPort.h	133;"	d
TkPutImage	win/tkWinDraw.c	/^TkPutImage($/;"	f
TkQueueEventForAllChildren	generic/tkEvent.c	/^TkQueueEventForAllChildren($/;"	f
TkQueueEventForAllChildren	generic/tkIntDecls.h	934;"	d
TkReadBitmapFile	generic/tkBitmap.c	/^TkReadBitmapFile($/;"	f
TkReadBitmapFile	generic/tkIntDecls.h	936;"	d
TkRecomputeMenu	generic/tkMenuDraw.c	/^TkRecomputeMenu($/;"	f
TkRectInRegion	generic/tkIntDecls.h	1013;"	d
TkRectInRegion	generic/tkIntDecls.h	1159;"	d
TkRectInRegion	generic/tkIntDecls.h	1169;"	d
TkRectInRegion	generic/tkStubInit.c	/^int TkRectInRegion (TkRegion r, int a, int b, unsigned int c, unsigned int d)$/;"	f
TkRectInRegion	generic/tkStubInit.c	214;"	d	file:
TkRectInRegion	generic/tkStubInit.c	223;"	d	file:
TkRectInRegion	macosx/tkMacOSXRegion.c	/^TkRectInRegion($/;"	f
TkRectInRegion	win/tkWinRegion.c	/^TkRectInRegion($/;"	f
TkRectInRegion	win/tkWinRegion.c	19;"	d	file:
TkRegion	generic/tkInt.h	/^typedef struct TkRegion_ *TkRegion;$/;"	t	typeref:struct:TkRegion_
TkRegisterObjTypes	generic/tkObj.c	/^TkRegisterObjTypes(void)$/;"	f
TkRoundToResolution	generic/tkScale.c	/^TkRoundToResolution($/;"	f
TkScale	generic/tkScale.h	/^typedef struct TkScale {$/;"	s
TkScale	generic/tkScale.h	/^} TkScale;$/;"	t	typeref:struct:TkScale
TkScalePixelToValue	generic/tkScale.c	/^TkScalePixelToValue($/;"	f
TkScaleSetValue	generic/tkScale.c	/^TkScaleSetValue($/;"	f
TkScaleValueToPixel	generic/tkScale.c	/^TkScaleValueToPixel($/;"	f
TkScrollWindow	generic/tkIntDecls.h	938;"	d
TkScrollWindow	macosx/tkMacOSXDraw.c	/^TkScrollWindow($/;"	f
TkScrollWindow	unix/tkUnixDraw.c	/^TkScrollWindow($/;"	f
TkScrollWindow	win/tkWinDraw.c	/^TkScrollWindow($/;"	f
TkScrollbar	generic/tkScrollbar.h	/^typedef struct TkScrollbar {$/;"	s
TkScrollbar	generic/tkScrollbar.h	/^} TkScrollbar;$/;"	t	typeref:struct:TkScrollbar
TkScrollbarEventProc	generic/tkScrollbar.c	/^TkScrollbarEventProc($/;"	f
TkScrollbarEventuallyRedraw	generic/tkScrollbar.c	/^TkScrollbarEventuallyRedraw($/;"	f
TkSelClearSelection	generic/tkSelect.c	/^TkSelClearSelection($/;"	f
TkSelDeadWindow	generic/tkIntDecls.h	940;"	d
TkSelDeadWindow	generic/tkSelect.c	/^TkSelDeadWindow($/;"	f
TkSelDefaultSelection	generic/tkSelect.c	/^TkSelDefaultSelection($/;"	f
TkSelEventProc	generic/tkIntDecls.h	942;"	d
TkSelEventProc	macosx/tkMacOSXClipboard.c	/^TkSelEventProc($/;"	f
TkSelEventProc	unix/tkUnixSelect.c	/^TkSelEventProc($/;"	f
TkSelEventProc	win/tkWinClipboard.c	/^TkSelEventProc($/;"	f
TkSelGetInProgress	generic/tkSelect.c	/^TkSelGetInProgress(void)$/;"	f
TkSelGetSelection	generic/tkIntDecls.h	1088;"	d
TkSelGetSelection	macosx/tkMacOSXClipboard.c	/^TkSelGetSelection($/;"	f
TkSelGetSelection	unix/tkUnixSelect.c	/^TkSelGetSelection($/;"	f
TkSelGetSelection	win/tkWinClipboard.c	/^TkSelGetSelection($/;"	f
TkSelHandler	generic/tkSelect.h	/^typedef struct TkSelHandler {$/;"	s
TkSelHandler	generic/tkSelect.h	/^} TkSelHandler;$/;"	t	typeref:struct:TkSelHandler
TkSelInProgress	generic/tkSelect.h	/^typedef struct TkSelInProgress {$/;"	s
TkSelInProgress	generic/tkSelect.h	/^} TkSelInProgress;$/;"	t	typeref:struct:TkSelInProgress
TkSelInit	generic/tkIntDecls.h	944;"	d
TkSelInit	generic/tkSelect.c	/^TkSelInit($/;"	f
TkSelPropProc	generic/tkIntDecls.h	946;"	d
TkSelPropProc	macosx/tkMacOSXClipboard.c	/^TkSelPropProc($/;"	f
TkSelPropProc	unix/tkUnixSelect.c	/^TkSelPropProc($/;"	f
TkSelPropProc	win/tkWinClipboard.c	/^TkSelPropProc($/;"	f
TkSelRetrievalInfo	generic/tkSelect.h	/^typedef struct TkSelRetrievalInfo {$/;"	s
TkSelRetrievalInfo	generic/tkSelect.h	/^} TkSelRetrievalInfo;$/;"	t	typeref:struct:TkSelRetrievalInfo
TkSelSetInProgress	generic/tkSelect.c	/^TkSelSetInProgress($/;"	f
TkSelUpdateClipboard	macosx/tkMacOSXClipboard.c	/^TkSelUpdateClipboard($/;"	f
TkSelUpdateClipboard	unix/tkUnixPort.h	168;"	d
TkSelUpdateClipboard	win/tkWinClipboard.c	/^TkSelUpdateClipboard($/;"	f
TkSelectionInfo	generic/tkSelect.h	/^typedef struct TkSelectionInfo {$/;"	s
TkSelectionInfo	generic/tkSelect.h	/^} TkSelectionInfo;$/;"	t	typeref:struct:TkSelectionInfo
TkSendCleanup	generic/tkIntPlatDecls.h	522;"	d
TkSendCleanup	generic/tkIntPlatDecls.h	653;"	d
TkSendCleanup	generic/tkStubInit.c	66;"	d	file:
TkSendCleanup	unix/tkUnixSend.c	/^TkSendCleanup($/;"	f
TkSendVirtualEvent	generic/tkUtil.c	/^TkSendVirtualEvent($/;"	f
TkSetFocusWin	generic/tkFocus.c	/^TkSetFocusWin($/;"	f
TkSetFocusWin	generic/tkIntDecls.h	1045;"	d
TkSetGeometryMaster	generic/tkGeometry.c	/^TkSetGeometryMaster($/;"	f
TkSetMacColor	generic/tkIntPlatDecls.h	598;"	d
TkSetMacColor	macosx/tkMacOSXColor.c	/^TkSetMacColor($/;"	f
TkSetPixmapColormap	generic/tkIntPlatDecls.h	454;"	d
TkSetPixmapColormap	generic/tkStubInit.c	/^TkSetPixmapColormap($/;"	f
TkSetPixmapColormap	macosx/tkMacOSXPort.h	128;"	d
TkSetPixmapColormap	unix/tkUnixPort.h	170;"	d
TkSetPixmapColormap	win/tkWinPixmap.c	/^TkSetPixmapColormap($/;"	f
TkSetRegion	generic/tkIntDecls.h	1015;"	d
TkSetRegion	generic/tkIntDecls.h	1160;"	d
TkSetRegion	generic/tkIntDecls.h	1170;"	d
TkSetRegion	generic/tkStubInit.c	/^void TkSetRegion(Display *d, GC g, TkRegion r)$/;"	f
TkSetRegion	generic/tkStubInit.c	215;"	d	file:
TkSetRegion	generic/tkStubInit.c	224;"	d	file:
TkSetRegion	xlib/xgc.c	/^TkSetRegion($/;"	f
TkSetRegion	xlib/xgc.c	32;"	d	file:
TkSetTransientFor	unix/tkUnixWm.c	/^TkSetTransientFor(Tk_Window tkwin, Tk_Window parent)$/;"	f	file:
TkSetWMName	generic/tkIntPlatDecls.h	600;"	d
TkSetWMName	macosx/tkMacOSXWm.c	/^TkSetWMName($/;"	f
TkSetWindowMenuBar	generic/tkIntDecls.h	949;"	d
TkSetWindowMenuBar	generic/tkMenu.c	/^TkSetWindowMenuBar($/;"	f
TkSharedText	generic/tkText.h	/^typedef struct TkSharedText {$/;"	s
TkSharedText	generic/tkText.h	/^} TkSharedText;$/;"	t	typeref:struct:TkSharedText
TkSmoothParseProc	generic/tkCanvUtil.c	/^TkSmoothParseProc($/;"	f
TkSmoothParseProc	generic/tkIntDecls.h	1130;"	d
TkSmoothPrintProc	generic/tkCanvUtil.c	/^TkSmoothPrintProc($/;"	f
TkSmoothPrintProc	generic/tkIntDecls.h	1132;"	d
TkStateMap	generic/tkInt.h	/^typedef struct TkStateMap {$/;"	s
TkStateMap	generic/tkInt.h	/^} TkStateMap;$/;"	t	typeref:struct:TkStateMap
TkStateParseProc	generic/tkIntDecls.h	1110;"	d
TkStateParseProc	generic/tkUtil.c	/^TkStateParseProc($/;"	f
TkStatePrintProc	generic/tkIntDecls.h	1112;"	d
TkStatePrintProc	generic/tkUtil.c	/^TkStatePrintProc($/;"	f
TkStressedCmap	generic/tkInt.h	/^typedef struct TkStressedCmap TkStressedCmap;$/;"	t	typeref:struct:TkStressedCmap
TkStressedCmap	unix/tkUnixColor.c	/^struct TkStressedCmap {$/;"	s	file:
TkStringToKeysym	generic/tkBind.c	/^TkStringToKeysym($/;"	f
TkStringToKeysym	generic/tkIntDecls.h	951;"	d
TkStubHooks	generic/tkDecls.h	/^} TkStubHooks;$/;"	t	typeref:struct:__anon156
TkStubs	generic/tkDecls.h	/^typedef struct TkStubs {$/;"	s
TkStubs	generic/tkDecls.h	/^} TkStubs;$/;"	t	typeref:struct:TkStubs
TkStylePkgFree	generic/tkIntDecls.h	1067;"	d
TkStylePkgFree	generic/tkStyle.c	/^TkStylePkgFree($/;"	f
TkStylePkgInit	generic/tkIntDecls.h	1065;"	d
TkStylePkgInit	generic/tkStyle.c	/^TkStylePkgInit($/;"	f
TkSubtractRegion	generic/tkIntDecls.h	1063;"	d
TkSubtractRegion	generic/tkIntDecls.h	1161;"	d
TkSubtractRegion	generic/tkIntDecls.h	1171;"	d
TkSubtractRegion	generic/tkStubInit.c	/^void TkSubtractRegion (TkRegion a, TkRegion b, TkRegion c)$/;"	f
TkSubtractRegion	generic/tkStubInit.c	217;"	d	file:
TkSubtractRegion	generic/tkStubInit.c	226;"	d	file:
TkSubtractRegion	macosx/tkMacOSXRegion.c	/^TkSubtractRegion($/;"	f
TkSubtractRegion	win/tkWinRegion.c	/^TkSubtractRegion($/;"	f
TkSubtractRegion	win/tkWinRegion.c	20;"	d	file:
TkSuspendClipboard	generic/tkIntPlatDecls.h	602;"	d
TkSuspendClipboard	macosx/tkMacOSXClipboard.c	/^TkSuspendClipboard(void)$/;"	f
TkText	generic/tkText.h	/^typedef struct TkText {$/;"	s
TkText	generic/tkText.h	/^} TkText;$/;"	t	typeref:struct:TkText
TkTextBTree	generic/tkIntDecls.h	/^typedef struct TkTextBTree_ *TkTextBTree;$/;"	t	typeref:struct:TkTextBTree_
TkTextBindProc	generic/tkTextTag.c	/^TkTextBindProc($/;"	f
TkTextChanged	generic/tkIntDecls.h	1104;"	d
TkTextChanged	generic/tkTextDisp.c	/^TkTextChanged($/;"	f
TkTextCharLayoutProc	generic/tkTextDisp.c	/^TkTextCharLayoutProc($/;"	f
TkTextCountType	generic/tkText.h	/^typedef int TkTextCountType;$/;"	t
TkTextCreateDInfo	generic/tkTextDisp.c	/^TkTextCreateDInfo($/;"	f
TkTextCreateTag	generic/tkTextTag.c	/^TkTextCreateTag($/;"	f
TkTextDLineInfo	generic/tkTextDisp.c	/^TkTextDLineInfo($/;"	f
TkTextDeleteTag	generic/tkTextTag.c	/^TkTextDeleteTag($/;"	f
TkTextDirtyMode	generic/tkText.h	/^} TkTextDirtyMode;$/;"	t	typeref:enum:__anon163
TkTextDispChunk	generic/tkText.h	/^struct TkTextDispChunk {$/;"	s
TkTextDispChunk	generic/tkText.h	/^typedef struct TkTextDispChunk TkTextDispChunk;$/;"	t	typeref:struct:TkTextDispChunk
TkTextEditMode	generic/tkText.h	/^} TkTextEditMode;$/;"	t	typeref:enum:__anon162
TkTextElideInfo	generic/tkText.h	/^typedef struct TkTextElideInfo {$/;"	s
TkTextElideInfo	generic/tkText.h	/^} TkTextElideInfo;$/;"	t	typeref:struct:TkTextElideInfo
TkTextEmbImage	generic/tkText.h	/^typedef struct TkTextEmbImage {$/;"	s
TkTextEmbImage	generic/tkText.h	/^} TkTextEmbImage;$/;"	t	typeref:struct:TkTextEmbImage
TkTextEmbWinDisplayProc	generic/tkTextWind.c	/^TkTextEmbWinDisplayProc($/;"	f
TkTextEmbWindow	generic/tkText.h	/^typedef struct TkTextEmbWindow {$/;"	s
TkTextEmbWindow	generic/tkText.h	/^} TkTextEmbWindow;$/;"	t	typeref:struct:TkTextEmbWindow
TkTextEmbWindowClient	generic/tkText.h	/^typedef struct TkTextEmbWindowClient {$/;"	s
TkTextEmbWindowClient	generic/tkText.h	/^} TkTextEmbWindowClient;$/;"	t	typeref:struct:TkTextEmbWindowClient
TkTextEventuallyRepick	generic/tkTextDisp.c	/^TkTextEventuallyRepick($/;"	f
TkTextFindDisplayLineEnd	generic/tkTextDisp.c	/^TkTextFindDisplayLineEnd($/;"	f
TkTextFreeDInfo	generic/tkTextDisp.c	/^TkTextFreeDInfo($/;"	f
TkTextFreeElideInfo	generic/tkTextBTree.c	/^TkTextFreeElideInfo($/;"	f
TkTextFreeTag	generic/tkTextTag.c	/^TkTextFreeTag($/;"	f
TkTextGetIndex	generic/tkIntDecls.h	1090;"	d
TkTextGetIndex	generic/tkTextIndex.c	/^TkTextGetIndex($/;"	f
TkTextGetIndexFromObj	generic/tkTextIndex.c	/^TkTextGetIndexFromObj($/;"	f
TkTextGetObjIndex	generic/tkTextIndex.c	/^TkTextGetObjIndex($/;"	f
TkTextGetTabs	generic/tkText.c	/^TkTextGetTabs($/;"	f
TkTextImageCmd	generic/tkTextImage.c	/^TkTextImageCmd($/;"	f
TkTextImageIndex	generic/tkTextImage.c	/^TkTextImageIndex($/;"	f
TkTextIndex	generic/tkText.h	/^typedef struct TkTextIndex {$/;"	s
TkTextIndex	generic/tkText.h	/^} TkTextIndex;$/;"	t	typeref:struct:TkTextIndex
TkTextIndexBackBytes	generic/tkIntDecls.h	1092;"	d
TkTextIndexBackBytes	generic/tkTextIndex.c	/^TkTextIndexBackBytes($/;"	f
TkTextIndexBackChars	generic/tkTextIndex.c	/^TkTextIndexBackChars($/;"	f
TkTextIndexBbox	generic/tkTextDisp.c	/^TkTextIndexBbox($/;"	f
TkTextIndexCmp	generic/tkTextIndex.c	/^TkTextIndexCmp($/;"	f
TkTextIndexCount	generic/tkTextIndex.c	/^TkTextIndexCount($/;"	f
TkTextIndexCountBytes	generic/tkTextIndex.c	/^TkTextIndexCountBytes($/;"	f
TkTextIndexForwBytes	generic/tkIntDecls.h	1094;"	d
TkTextIndexForwBytes	generic/tkTextIndex.c	/^TkTextIndexForwBytes($/;"	f
TkTextIndexForwChars	generic/tkTextIndex.c	/^TkTextIndexForwChars($/;"	f
TkTextIndexOfX	generic/tkTextDisp.c	/^TkTextIndexOfX($/;"	f
TkTextIndexToSeg	generic/tkTextIndex.c	/^TkTextIndexToSeg($/;"	f
TkTextIndexYPixels	generic/tkTextDisp.c	/^TkTextIndexYPixels($/;"	f
TkTextInsertDisplayProc	generic/tkIntDecls.h	1108;"	d
TkTextInsertDisplayProc	generic/tkTextMark.c	/^TkTextInsertDisplayProc($/;"	f
TkTextInsertUnfocussed	generic/tkText.h	/^} TkTextInsertUnfocussed;$/;"	t	typeref:enum:__anon165
TkTextInvalidateLineMetrics	generic/tkTextDisp.c	/^TkTextInvalidateLineMetrics($/;"	f
TkTextIsElided	generic/tkTextBTree.c	/^TkTextIsElided($/;"	f
TkTextLine	generic/tkText.h	/^typedef struct TkTextLine {$/;"	s
TkTextLine	generic/tkText.h	/^} TkTextLine;$/;"	t	typeref:struct:TkTextLine
TkTextLostSelection	generic/tkText.c	/^TkTextLostSelection($/;"	f
TkTextMakeByteIndex	generic/tkIntDecls.h	1096;"	d
TkTextMakeByteIndex	generic/tkTextIndex.c	/^TkTextMakeByteIndex($/;"	f
TkTextMakeCharIndex	generic/tkTextIndex.c	/^TkTextMakeCharIndex($/;"	f
TkTextMakePixelIndex	generic/tkTextIndex.c	/^TkTextMakePixelIndex($/;"	f
TkTextMark	generic/tkText.h	/^typedef struct TkTextMark {$/;"	s
TkTextMark	generic/tkText.h	/^} TkTextMark;$/;"	t	typeref:struct:TkTextMark
TkTextMarkCmd	generic/tkTextMark.c	/^TkTextMarkCmd($/;"	f
TkTextMarkNameToIndex	generic/tkTextMark.c	/^TkTextMarkNameToIndex($/;"	f
TkTextMarkSegToIndex	generic/tkTextMark.c	/^TkTextMarkSegToIndex($/;"	f
TkTextMeasureDown	generic/tkTextDisp.c	/^TkTextMeasureDown($/;"	f
TkTextNewIndexObj	generic/tkTextIndex.c	/^TkTextNewIndexObj($/;"	f
TkTextPendingsync	generic/tkTextDisp.c	/^TkTextPendingsync($/;"	f
TkTextPickCurrent	generic/tkTextTag.c	/^TkTextPickCurrent($/;"	f
TkTextPixelIndex	generic/tkTextDisp.c	/^TkTextPixelIndex($/;"	f
TkTextPrintIndex	generic/tkIntDecls.h	1098;"	d
TkTextPrintIndex	generic/tkTextIndex.c	/^TkTextPrintIndex($/;"	f
TkTextRedrawRegion	generic/tkTextDisp.c	/^TkTextRedrawRegion($/;"	f
TkTextRedrawTag	generic/tkTextDisp.c	/^TkTextRedrawTag($/;"	f
TkTextRelayoutWindow	generic/tkTextDisp.c	/^TkTextRelayoutWindow($/;"	f
TkTextScanCmd	generic/tkTextDisp.c	/^TkTextScanCmd($/;"	f
TkTextSearch	generic/tkText.h	/^typedef struct TkTextSearch {$/;"	s
TkTextSearch	generic/tkText.h	/^} TkTextSearch;$/;"	t	typeref:struct:TkTextSearch
TkTextSeeCmd	generic/tkTextDisp.c	/^TkTextSeeCmd($/;"	f
TkTextSegToOffset	generic/tkTextIndex.c	/^TkTextSegToOffset($/;"	f
TkTextSegment	generic/tkText.h	/^typedef struct TkTextSegment {$/;"	s
TkTextSegment	generic/tkText.h	/^} TkTextSegment;$/;"	t	typeref:struct:TkTextSegment
TkTextSelectionEvent	generic/tkText.c	/^TkTextSelectionEvent($/;"	f
TkTextSetMark	generic/tkIntDecls.h	1100;"	d
TkTextSetMark	generic/tkTextMark.c	/^TkTextSetMark($/;"	f
TkTextSetYView	generic/tkTextDisp.c	/^TkTextSetYView($/;"	f
TkTextSharedGetObjIndex	generic/tkTextIndex.c	/^TkTextSharedGetObjIndex($/;"	f
TkTextState	generic/tkText.h	/^} TkTextState;$/;"	t	typeref:enum:__anon164
TkTextTab	generic/tkText.h	/^typedef struct TkTextTab {$/;"	s
TkTextTab	generic/tkText.h	/^} TkTextTab;$/;"	t	typeref:struct:TkTextTab
TkTextTabAlign	generic/tkText.h	/^typedef enum {LEFT, RIGHT, CENTER, NUMERIC} TkTextTabAlign;$/;"	t	typeref:enum:__anon160
TkTextTabArray	generic/tkText.h	/^typedef struct TkTextTabArray {$/;"	s
TkTextTabArray	generic/tkText.h	/^} TkTextTabArray;$/;"	t	typeref:struct:TkTextTabArray
TkTextTabStyle	generic/tkText.h	/^} TkTextTabStyle;$/;"	t	typeref:enum:__anon161
TkTextTag	generic/tkText.h	/^typedef struct TkTextTag {$/;"	s
TkTextTag	generic/tkText.h	/^} TkTextTag;$/;"	t	typeref:struct:TkTextTag
TkTextTagCmd	generic/tkTextTag.c	/^TkTextTagCmd($/;"	f
TkTextToggle	generic/tkText.h	/^typedef struct TkTextToggle {$/;"	s
TkTextToggle	generic/tkText.h	/^} TkTextToggle;$/;"	t	typeref:struct:TkTextToggle
TkTextUpdateLineMetrics	generic/tkTextDisp.c	/^TkTextUpdateLineMetrics($/;"	f
TkTextUpdateOneLine	generic/tkTextDisp.c	/^TkTextUpdateOneLine($/;"	f
TkTextWinFreeClient	generic/tkTextWind.c	/^TkTextWinFreeClient($/;"	f
TkTextWindowCmd	generic/tkTextWind.c	/^TkTextWindowCmd($/;"	f
TkTextWindowIndex	generic/tkTextWind.c	/^TkTextWindowIndex($/;"	f
TkTextXviewCmd	generic/tkIntDecls.h	1102;"	d
TkTextXviewCmd	generic/tkTextDisp.c	/^TkTextXviewCmd($/;"	f
TkTextYviewCmd	generic/tkTextDisp.c	/^TkTextYviewCmd($/;"	f
TkThickPolyLineToArea	generic/tkIntDecls.h	953;"	d
TkThickPolyLineToArea	generic/tkTrig.c	/^TkThickPolyLineToArea($/;"	f
TkToplevelFocusInfo	generic/tkFocus.c	/^typedef struct TkToplevelFocusInfo {$/;"	s	file:
TkToplevelWindowForCommand	generic/tkFrame.c	/^TkToplevelWindowForCommand($/;"	f
TkToplevelWindowForCommand	generic/tkIntDecls.h	1069;"	d
TkUnderlineAngledTextLayout	generic/tkFont.c	/^TkUnderlineAngledTextLayout($/;"	f
TkUnderlineAngledTextLayout	generic/tkIntDecls.h	1136;"	d
TkUnderlineCharsInContext	generic/tkFont.c	/^TkUnderlineCharsInContext($/;"	f
TkUndoApply	generic/tkUndo.c	/^TkUndoApply($/;"	f
TkUndoAtom	generic/tkUndo.h	/^typedef struct TkUndoAtom {$/;"	s
TkUndoAtom	generic/tkUndo.h	/^} TkUndoAtom;$/;"	t	typeref:struct:TkUndoAtom
TkUndoAtomType	generic/tkUndo.h	/^} TkUndoAtomType;$/;"	t	typeref:enum:__anon175
TkUndoClearStack	generic/tkUndo.c	/^TkUndoClearStack($/;"	f
TkUndoClearStacks	generic/tkUndo.c	/^TkUndoClearStacks($/;"	f
TkUndoFreeStack	generic/tkUndo.c	/^TkUndoFreeStack($/;"	f
TkUndoInitStack	generic/tkUndo.c	/^TkUndoInitStack($/;"	f
TkUndoInsertSeparator	generic/tkUndo.c	/^TkUndoInsertSeparator($/;"	f
TkUndoInsertUndoSeparator	generic/tkUndo.c	/^TkUndoInsertUndoSeparator($/;"	f
TkUndoMakeCmdSubAtom	generic/tkUndo.c	/^TkUndoMakeCmdSubAtom($/;"	f
TkUndoMakeSubAtom	generic/tkUndo.c	/^TkUndoMakeSubAtom($/;"	f
TkUndoPopStack	generic/tkUndo.c	/^TkUndoPopStack($/;"	f
TkUndoProc	generic/tkUndo.h	/^typedef int (TkUndoProc)(Tcl_Interp *interp, ClientData clientData,$/;"	t
TkUndoPushAction	generic/tkUndo.c	/^TkUndoPushAction($/;"	f
TkUndoPushStack	generic/tkUndo.c	/^TkUndoPushStack($/;"	f
TkUndoRedoStack	generic/tkUndo.h	/^typedef struct TkUndoRedoStack {$/;"	s
TkUndoRedoStack	generic/tkUndo.h	/^} TkUndoRedoStack;$/;"	t	typeref:struct:TkUndoRedoStack
TkUndoRevert	generic/tkUndo.c	/^TkUndoRevert($/;"	f
TkUndoSetDepth	generic/tkUndo.c	/^TkUndoSetDepth($/;"	f
TkUndoSubAtom	generic/tkUndo.h	/^typedef struct TkUndoSubAtom {$/;"	s
TkUndoSubAtom	generic/tkUndo.h	/^} TkUndoSubAtom;$/;"	t	typeref:struct:TkUndoSubAtom
TkUnionRectWithRegion	generic/tkIntDecls.h	1017;"	d
TkUnionRectWithRegion	generic/tkIntDecls.h	1162;"	d
TkUnionRectWithRegion	generic/tkIntDecls.h	1173;"	d
TkUnionRectWithRegion	generic/tkStubInit.c	/^void TkUnionRectWithRegion(XRectangle *a, TkRegion b, TkRegion c)$/;"	f
TkUnionRectWithRegion	generic/tkStubInit.c	216;"	d	file:
TkUnionRectWithRegion	generic/tkStubInit.c	225;"	d	file:
TkUnionRectWithRegion	macosx/tkMacOSXRegion.c	/^TkUnionRectWithRegion($/;"	f
TkUnionRectWithRegion	win/tkWinRegion.c	/^TkUnionRectWithRegion($/;"	f
TkUnionRectWithRegion	win/tkWinRegion.c	18;"	d	file:
TkUnixContainerId	generic/tkIntPlatDecls.h	514;"	d
TkUnixContainerId	generic/tkIntPlatDecls.h	643;"	d
TkUnixContainerId	generic/tkStubInit.c	62;"	d	file:
TkUnixContainerId	unix/tkUnixEmbed.c	/^TkUnixContainerId($/;"	f
TkUnixCursor	unix/tkUnixCursor.c	/^} TkUnixCursor;$/;"	t	typeref:struct:__anon219	file:
TkUnixDoOneXEvent	generic/tkIntPlatDecls.h	516;"	d
TkUnixDoOneXEvent	generic/tkIntPlatDecls.h	645;"	d
TkUnixDoOneXEvent	generic/tkStubInit.c	63;"	d	file:
TkUnixDoOneXEvent	unix/tkUnixEvent.c	/^TkUnixDoOneXEvent($/;"	f
TkUnixSetMenubar	generic/tkIntPlatDecls.h	518;"	d
TkUnixSetMenubar	generic/tkIntPlatDecls.h	647;"	d
TkUnixSetMenubar	generic/tkStubInit.c	64;"	d	file:
TkUnixSetMenubar	unix/tkUnixWm.c	/^TkUnixSetMenubar($/;"	f
TkUnixSetXftClipRegion	unix/tkUnixRFont.c	/^TkUnixSetXftClipRegion($/;"	f
TkUnsupported1ObjCmd	macosx/tkMacOSXWm.c	/^TkUnsupported1ObjCmd($/;"	f
TkWin32ErrorObj	win/tkWinInit.c	/^TkWin32ErrorObj($/;"	f
TkWinBitmap	win/tkWinInt.h	/^} TkWinBitmap;$/;"	t	typeref:struct:__anon226
TkWinCancelMouseTimer	generic/tkIntPlatDecls.h	456;"	d
TkWinCancelMouseTimer	generic/tkStubInit.c	181;"	d	file:
TkWinCancelMouseTimer	win/tkWinPointer.c	/^TkWinCancelMouseTimer(void)$/;"	f
TkWinChildProc	generic/tkIntPlatDecls.h	506;"	d
TkWinChildProc	generic/tkStubInit.c	206;"	d	file:
TkWinChildProc	win/tkWinX.c	/^TkWinChildProc($/;"	f
TkWinCleanupContainerList	win/tkWinEmbed.c	/^TkWinCleanupContainerList(void)$/;"	f
TkWinClipboardRender	generic/tkIntPlatDecls.h	458;"	d
TkWinClipboardRender	generic/tkStubInit.c	182;"	d	file:
TkWinClipboardRender	win/tkWinClipboard.c	/^TkWinClipboardRender($/;"	f
TkWinColormap	win/tkWinInt.h	/^} TkWinColormap;$/;"	t	typeref:struct:__anon229
TkWinCursor	win/tkWinCursor.c	/^} TkWinCursor;$/;"	t	typeref:struct:__anon243	file:
TkWinDC	win/tkWinInt.h	/^}TkWinDC;$/;"	t	typeref:struct:__anon227
TkWinDCState	unix/tkUnixPort.h	120;"	d
TkWinDCState	win/tkWinInt.h	/^typedef struct TkWinDCState {$/;"	s
TkWinDCState	win/tkWinInt.h	/^} TkWinDCState;$/;"	t	typeref:struct:TkWinDCState
TkWinDialogDebug	generic/tkIntPlatDecls.h	496;"	d
TkWinDialogDebug	generic/tkStubInit.c	201;"	d	file:
TkWinDialogDebug	win/tkWinDialog.c	/^TkWinDialogDebug($/;"	f
TkWinDisplayChanged	win/tkWinX.c	/^TkWinDisplayChanged($/;"	f
TkWinDrawable	win/tkWinInt.h	/^} TkWinDrawable;$/;"	t	typeref:union:__anon228
TkWinEmbeddedEventProc	generic/tkIntPlatDecls.h	460;"	d
TkWinEmbeddedEventProc	generic/tkStubInit.c	183;"	d	file:
TkWinEmbeddedEventProc	win/tkWinEmbed.c	/^TkWinEmbeddedEventProc($/;"	f
TkWinEmbeddedMenuProc	win/tkWinMenu.c	/^TkWinEmbeddedMenuProc($/;"	f	file:
TkWinFillRect	generic/tkIntPlatDecls.h	462;"	d
TkWinFillRect	generic/tkStubInit.c	184;"	d	file:
TkWinFillRect	win/tkWinDraw.c	/^TkWinFillRect($/;"	f
TkWinGetBorderPixels	generic/tkIntPlatDecls.h	464;"	d
TkWinGetBorderPixels	generic/tkStubInit.c	185;"	d	file:
TkWinGetBorderPixels	win/tkWin3d.c	/^TkWinGetBorderPixels($/;"	f
TkWinGetColormap	win/tkWinInt.h	92;"	d
TkWinGetDrawableDC	generic/tkIntPlatDecls.h	466;"	d
TkWinGetDrawableDC	generic/tkStubInit.c	186;"	d	file:
TkWinGetDrawableDC	win/tkWinDraw.c	/^TkWinGetDrawableDC($/;"	f
TkWinGetHBITMAP	win/tkWinInt.h	91;"	d
TkWinGetHDC	win/tkWinInt.h	93;"	d
TkWinGetHInstance	win/tkWinDialog.c	122;"	d	file:
TkWinGetHWND	win/tkWinInt.h	89;"	d
TkWinGetIcon	win/tkWinWm.c	/^TkWinGetIcon($/;"	f
TkWinGetKeyInputEncoding	win/tkWinX.c	/^TkWinGetKeyInputEncoding(void)$/;"	f
TkWinGetMenuSystemDefault	generic/tkIntPlatDecls.h	498;"	d
TkWinGetMenuSystemDefault	generic/tkStubInit.c	202;"	d	file:
TkWinGetMenuSystemDefault	win/tkWinMenu.c	/^TkWinGetMenuSystemDefault($/;"	f
TkWinGetModifierState	generic/tkIntPlatDecls.h	468;"	d
TkWinGetModifierState	generic/tkStubInit.c	187;"	d	file:
TkWinGetModifierState	win/tkWinPointer.c	/^TkWinGetModifierState(void)$/;"	f
TkWinGetPalette	win/tkWinInt.h	114;"	d
TkWinGetPlatformId	generic/tkIntPlatDecls.h	500;"	d
TkWinGetPlatformId	generic/tkStubInit.c	203;"	d	file:
TkWinGetPlatformId	win/tkWinX.c	/^TkWinGetPlatformId(void)$/;"	f
TkWinGetPlatformTheme	generic/tkIntPlatDecls.h	504;"	d
TkWinGetPlatformTheme	generic/tkStubInit.c	205;"	d	file:
TkWinGetPlatformTheme	win/tkWinX.c	/^TkWinGetPlatformTheme(void)$/;"	f
TkWinGetSystemPalette	generic/tkIntPlatDecls.h	470;"	d
TkWinGetSystemPalette	generic/tkStubInit.c	188;"	d	file:
TkWinGetSystemPalette	win/tkWinWm.c	/^TkWinGetSystemPalette(void)$/;"	f
TkWinGetUnicodeEncoding	win/tkWinX.c	/^TkWinGetUnicodeEncoding(void)$/;"	f
TkWinGetUserData	win/tkWinDialog.c	124;"	d	file:
TkWinGetWinPtr	win/tkWinInt.h	90;"	d
TkWinGetWrapperWindow	generic/tkIntPlatDecls.h	472;"	d
TkWinGetWrapperWindow	generic/tkStubInit.c	189;"	d	file:
TkWinGetWrapperWindow	win/tkWinWm.c	/^TkWinGetWrapperWindow($/;"	f
TkWinHandleMenuEvent	generic/tkIntPlatDecls.h	474;"	d
TkWinHandleMenuEvent	generic/tkStubInit.c	190;"	d	file:
TkWinHandleMenuEvent	win/tkWinMenu.c	/^TkWinHandleMenuEvent($/;"	f
TkWinIndexOfColor	generic/tkIntPlatDecls.h	476;"	d
TkWinIndexOfColor	generic/tkStubInit.c	191;"	d	file:
TkWinIndexOfColor	win/tkWinColor.c	/^TkWinIndexOfColor($/;"	f
TkWinMenuKeyObjCmd	win/tkWinMenu.c	/^TkWinMenuKeyObjCmd($/;"	f	file:
TkWinMenuProc	win/tkWinMenu.c	/^TkWinMenuProc($/;"	f	file:
TkWinReleaseDrawableDC	generic/tkIntPlatDecls.h	478;"	d
TkWinReleaseDrawableDC	generic/tkStubInit.c	192;"	d	file:
TkWinReleaseDrawableDC	win/tkWinDraw.c	/^TkWinReleaseDrawableDC($/;"	f
TkWinResendEvent	generic/tkIntPlatDecls.h	480;"	d
TkWinResendEvent	generic/tkStubInit.c	193;"	d	file:
TkWinResendEvent	win/tkWinX.c	/^TkWinResendEvent($/;"	f
TkWinSelectPalette	generic/tkIntPlatDecls.h	482;"	d
TkWinSelectPalette	generic/tkStubInit.c	194;"	d	file:
TkWinSelectPalette	win/tkWinColor.c	/^TkWinSelectPalette($/;"	f
TkWinSendCom	win/tkWinSendCom.h	/^} TkWinSendCom;$/;"	t	typeref:struct:__anon254
TkWinSendCom_CreateInstance	win/tkWinSendCom.c	/^TkWinSendCom_CreateInstance($/;"	f
TkWinSendCom_Destroy	win/tkWinSendCom.c	/^TkWinSendCom_Destroy($/;"	f	file:
TkWinSend_QueueCommand	win/tkWinSend.c	/^TkWinSend_QueueCommand($/;"	f
TkWinSend_SetExcepInfo	win/tkWinSend.c	/^TkWinSend_SetExcepInfo($/;"	f
TkWinSetForegroundWindow	generic/tkIntPlatDecls.h	494;"	d
TkWinSetForegroundWindow	generic/tkStubInit.c	200;"	d	file:
TkWinSetForegroundWindow	win/tkWinWm.c	/^TkWinSetForegroundWindow($/;"	f
TkWinSetHINSTANCE	generic/tkIntPlatDecls.h	502;"	d
TkWinSetHINSTANCE	generic/tkStubInit.c	204;"	d	file:
TkWinSetHINSTANCE	win/tkWinX.c	/^TkWinSetHINSTANCE($/;"	f
TkWinSetMenu	generic/tkIntPlatDecls.h	484;"	d
TkWinSetMenu	generic/tkStubInit.c	195;"	d	file:
TkWinSetMenu	win/tkWinWm.c	/^TkWinSetMenu($/;"	f
TkWinSetUserData	win/tkWinDialog.c	126;"	d	file:
TkWinSetWindowPos	generic/tkIntPlatDecls.h	486;"	d
TkWinSetWindowPos	generic/tkStubInit.c	196;"	d	file:
TkWinSetWindowPos	win/tkWinWindow.c	/^TkWinSetWindowPos($/;"	f
TkWinSetupSystemFonts	win/tkWinFont.c	/^TkWinSetupSystemFonts($/;"	f
TkWinUpdatingClipboard	win/tkWinX.c	/^TkWinUpdatingClipboard($/;"	f
TkWinWindow	win/tkWinInt.h	/^} TkWinWindow;$/;"	t	typeref:struct:__anon225
TkWinWmCleanup	generic/tkIntPlatDecls.h	488;"	d
TkWinWmCleanup	generic/tkStubInit.c	197;"	d	file:
TkWinWmCleanup	win/tkWinWm.c	/^TkWinWmCleanup($/;"	f
TkWinXCleanup	generic/tkIntPlatDecls.h	490;"	d
TkWinXCleanup	generic/tkStubInit.c	198;"	d	file:
TkWinXCleanup	win/tkWinX.c	/^TkWinXCleanup($/;"	f
TkWinXInit	generic/tkIntPlatDecls.h	492;"	d
TkWinXInit	generic/tkStubInit.c	199;"	d	file:
TkWinXInit	win/tkWinX.c	/^TkWinXInit($/;"	f
TkWindow	generic/tkInt.h	/^typedef struct TkWindow {$/;"	s
TkWindow	generic/tkInt.h	/^} TkWindow;$/;"	t	typeref:struct:TkWindow
TkWindowEvent	generic/tkEvent.c	/^typedef struct TkWindowEvent {$/;"	s	file:
TkWindowEvent	generic/tkEvent.c	/^} TkWindowEvent;$/;"	t	typeref:struct:TkWindowEvent	file:
TkWindowPrivate	macosx/tkMacOSXInt.h	/^struct TkWindowPrivate {$/;"	s
TkWmAddToColormapWindows	generic/tkIntDecls.h	955;"	d
TkWmAddToColormapWindows	macosx/tkMacOSXWm.c	/^TkWmAddToColormapWindows($/;"	f
TkWmAddToColormapWindows	unix/tkUnixWm.c	/^TkWmAddToColormapWindows($/;"	f
TkWmAddToColormapWindows	win/tkWinWm.c	/^TkWmAddToColormapWindows($/;"	f
TkWmCleanup	generic/tkIntPlatDecls.h	520;"	d
TkWmCleanup	generic/tkIntPlatDecls.h	651;"	d
TkWmCleanup	generic/tkStubInit.c	65;"	d	file:
TkWmCleanup	unix/tkUnixWm.c	/^void TkWmCleanup($/;"	f
TkWmDeadWindow	generic/tkIntDecls.h	957;"	d
TkWmDeadWindow	macosx/tkMacOSXWm.c	/^TkWmDeadWindow($/;"	f
TkWmDeadWindow	unix/tkUnixWm.c	/^TkWmDeadWindow($/;"	f
TkWmDeadWindow	win/tkWinWm.c	/^TkWmDeadWindow($/;"	f
TkWmFocusToplevel	generic/tkIntDecls.h	959;"	d
TkWmFocusToplevel	macosx/tkMacOSXWm.c	/^TkWmFocusToplevel($/;"	f
TkWmFocusToplevel	unix/tkUnixWm.c	/^TkWmFocusToplevel($/;"	f
TkWmFocusToplevel	win/tkWinWm.c	/^TkWmFocusToplevel($/;"	f
TkWmInfo	macosx/tkMacOSXWm.h	/^typedef struct TkWmInfo {$/;"	s
TkWmInfo	unix/tkUnixWm.c	/^typedef struct TkWmInfo {$/;"	s	file:
TkWmInfo	win/tkWinWm.c	/^typedef struct TkWmInfo {$/;"	s	file:
TkWmMapWindow	generic/tkIntDecls.h	961;"	d
TkWmMapWindow	macosx/tkMacOSXWm.c	/^TkWmMapWindow($/;"	f
TkWmMapWindow	unix/tkUnixWm.c	/^TkWmMapWindow($/;"	f
TkWmMapWindow	win/tkWinWm.c	/^TkWmMapWindow($/;"	f
TkWmNewWindow	generic/tkIntDecls.h	963;"	d
TkWmNewWindow	macosx/tkMacOSXWm.c	/^TkWmNewWindow($/;"	f
TkWmNewWindow	unix/tkUnixWm.c	/^TkWmNewWindow($/;"	f
TkWmNewWindow	win/tkWinWm.c	/^TkWmNewWindow($/;"	f
TkWmProtocolEventProc	generic/tkIntDecls.h	965;"	d
TkWmProtocolEventProc	macosx/tkMacOSXWindowEvent.c	/^TkWmProtocolEventProc($/;"	f
TkWmProtocolEventProc	unix/tkUnixWm.c	/^TkWmProtocolEventProc($/;"	f
TkWmProtocolEventProc	win/tkWinWm.c	/^TkWmProtocolEventProc($/;"	f
TkWmRemoveFromColormapWindows	generic/tkIntDecls.h	967;"	d
TkWmRemoveFromColormapWindows	macosx/tkMacOSXWm.c	/^TkWmRemoveFromColormapWindows($/;"	f
TkWmRemoveFromColormapWindows	unix/tkUnixWm.c	/^TkWmRemoveFromColormapWindows($/;"	f
TkWmRemoveFromColormapWindows	win/tkWinWm.c	/^TkWmRemoveFromColormapWindows($/;"	f
TkWmRestackToplevel	generic/tkIntDecls.h	969;"	d
TkWmRestackToplevel	macosx/tkMacOSXWm.c	/^TkWmRestackToplevel($/;"	f
TkWmRestackToplevel	unix/tkUnixWm.c	/^TkWmRestackToplevel($/;"	f
TkWmRestackToplevel	win/tkWinWm.c	/^TkWmRestackToplevel($/;"	f
TkWmSetClass	generic/tkIntDecls.h	971;"	d
TkWmSetClass	macosx/tkMacOSXWm.c	/^TkWmSetClass($/;"	f
TkWmSetClass	unix/tkUnixWm.c	/^TkWmSetClass($/;"	f
TkWmSetClass	win/tkWinWm.c	/^TkWmSetClass($/;"	f
TkWmStackorderToplevel	generic/tkIntDecls.h	1055;"	d
TkWmStackorderToplevel	macosx/tkMacOSXWm.c	/^TkWmStackorderToplevel($/;"	f
TkWmStackorderToplevel	unix/tkUnixWm.c	/^TkWmStackorderToplevel($/;"	f
TkWmStackorderToplevel	win/tkWinWm.c	/^TkWmStackorderToplevel($/;"	f
TkWmStackorderToplevelEnumProc	win/tkWinWm.c	/^TkWmStackorderToplevelEnumProc($/;"	f
TkWmStackorderToplevelPair	win/tkWinWm.c	/^typedef struct TkWmStackorderToplevelPair {$/;"	s	file:
TkWmStackorderToplevelPair	win/tkWinWm.c	/^} TkWmStackorderToplevelPair;$/;"	t	typeref:struct:TkWmStackorderToplevelPair	file:
TkWmStackorderToplevelWrapperMap	unix/tkUnixWm.c	/^TkWmStackorderToplevelWrapperMap($/;"	f	file:
TkWmStackorderToplevelWrapperMap	win/tkWinWm.c	/^TkWmStackorderToplevelWrapperMap($/;"	f	file:
TkWmUnmapWindow	generic/tkIntDecls.h	973;"	d
TkWmUnmapWindow	macosx/tkMacOSXWm.c	/^TkWmUnmapWindow($/;"	f
TkWmUnmapWindow	unix/tkUnixWm.c	/^TkWmUnmapWindow($/;"	f
TkWmUnmapWindow	win/tkWinWm.c	/^TkWmUnmapWindow($/;"	f
TkWrapMode	generic/tkText.h	/^} TkWrapMode;$/;"	t	typeref:enum:__anon159
TkXErrorHandler	generic/tkError.c	/^typedef int (*TkXErrorHandler)(Display *display, XErrorEvent *eventPtr);$/;"	t	file:
TkXErrorHandler	generic/tkEvent.c	/^TkXErrorHandler($/;"	f	file:
TkXLFDAttributes	generic/tkFont.h	/^typedef struct TkXLFDAttributes {$/;"	s
TkXLFDAttributes	generic/tkFont.h	/^} TkXLFDAttributes;$/;"	t	typeref:struct:TkXLFDAttributes
Tk_3DBorder	generic/tk.h	/^typedef struct Tk_3DBorder_ *Tk_3DBorder;$/;"	t	typeref:struct:Tk_3DBorder_
Tk_3DBorderColor	generic/tk3d.c	/^Tk_3DBorderColor($/;"	f
Tk_3DBorderColor	generic/tkDecls.h	1169;"	d
Tk_3DBorderGC	generic/tk3d.c	/^Tk_3DBorderGC($/;"	f
Tk_3DBorderGC	generic/tkDecls.h	1171;"	d
Tk_3DHorizontalBevel	generic/tkDecls.h	1173;"	d
Tk_3DHorizontalBevel	unix/tkUnix3d.c	/^Tk_3DHorizontalBevel($/;"	f
Tk_3DHorizontalBevel	win/tkWin3d.c	/^Tk_3DHorizontalBevel($/;"	f
Tk_3DVerticalBevel	generic/tkDecls.h	1175;"	d
Tk_3DVerticalBevel	unix/tkUnix3d.c	/^Tk_3DVerticalBevel($/;"	f
Tk_3DVerticalBevel	win/tkWin3d.c	/^Tk_3DVerticalBevel($/;"	f
Tk_AddOption	generic/tkDecls.h	1177;"	d
Tk_AddOption	generic/tkOption.c	/^Tk_AddOption($/;"	f
Tk_Alloc3DBorderFromObj	generic/tk3d.c	/^Tk_Alloc3DBorderFromObj($/;"	f
Tk_Alloc3DBorderFromObj	generic/tkDecls.h	1539;"	d
Tk_AllocBitmapFromObj	generic/tkBitmap.c	/^Tk_AllocBitmapFromObj($/;"	f
Tk_AllocBitmapFromObj	generic/tkDecls.h	1537;"	d
Tk_AllocColorFromObj	generic/tkColor.c	/^Tk_AllocColorFromObj($/;"	f
Tk_AllocColorFromObj	generic/tkDecls.h	1541;"	d
Tk_AllocCursorFromObj	generic/tkCursor.c	/^Tk_AllocCursorFromObj($/;"	f
Tk_AllocCursorFromObj	generic/tkDecls.h	1543;"	d
Tk_AllocFontFromObj	generic/tkDecls.h	1545;"	d
Tk_AllocFontFromObj	generic/tkFont.c	/^Tk_AllocFontFromObj($/;"	f
Tk_AllocStyleFromObj	generic/tkDecls.h	1679;"	d
Tk_AllocStyleFromObj	generic/tkStyle.c	/^Tk_AllocStyleFromObj($/;"	f
Tk_Anchor	generic/tk.h	/^} Tk_Anchor;$/;"	t	typeref:enum:__anon7
Tk_ArgvInfo	generic/tk.h	/^} Tk_ArgvInfo;$/;"	t	typeref:struct:__anon5
Tk_AttachHWND	generic/tkPlatDecls.h	127;"	d
Tk_AttachHWND	generic/tkStubInit.c	170;"	d	file:
Tk_AttachHWND	win/tkWinWindow.c	/^Tk_AttachHWND($/;"	f
Tk_Attributes	generic/tk.h	730;"	d
Tk_BackgroundError	generic/tk.h	1481;"	d
Tk_BellObjCmd	generic/tkCmds.c	/^Tk_BellObjCmd($/;"	f
Tk_BindEvent	generic/tkBind.c	/^Tk_BindEvent($/;"	f
Tk_BindEvent	generic/tkDecls.h	1179;"	d
Tk_BindObjCmd	generic/tkCmds.c	/^Tk_BindObjCmd($/;"	f
Tk_BindingTable	generic/tk.h	/^typedef struct Tk_BindingTable_ *Tk_BindingTable;$/;"	t	typeref:struct:Tk_BindingTable_
Tk_BindingTable_	generic/tkBind.c	/^typedef struct Tk_BindingTable_ {$/;"	s	file:
Tk_BindtagsObjCmd	generic/tkCmds.c	/^Tk_BindtagsObjCmd($/;"	f
Tk_BusyObjCmd	generic/tkBusy.c	/^Tk_BusyObjCmd($/;"	f
Tk_ButtonObjCmd	generic/tkButton.c	/^Tk_ButtonObjCmd($/;"	f
Tk_CancelIdleCall	generic/tk.h	1482;"	d
Tk_Canvas	generic/tk.h	/^typedef struct Tk_Canvas_ *Tk_Canvas;$/;"	t	typeref:struct:Tk_Canvas_
Tk_CanvasDrawableCoords	generic/tkCanvUtil.c	/^Tk_CanvasDrawableCoords($/;"	f
Tk_CanvasDrawableCoords	generic/tkDecls.h	1181;"	d
Tk_CanvasEventuallyRedraw	generic/tkCanvas.c	/^Tk_CanvasEventuallyRedraw($/;"	f
Tk_CanvasEventuallyRedraw	generic/tkDecls.h	1183;"	d
Tk_CanvasGetCoord	generic/tkCanvUtil.c	/^Tk_CanvasGetCoord($/;"	f
Tk_CanvasGetCoord	generic/tkDecls.h	1185;"	d
Tk_CanvasGetCoordFromObj	generic/tkCanvUtil.c	/^Tk_CanvasGetCoordFromObj($/;"	f
Tk_CanvasGetCoordFromObj	generic/tkDecls.h	1621;"	d
Tk_CanvasGetTextInfo	generic/tkCanvUtil.c	/^Tk_CanvasGetTextInfo($/;"	f
Tk_CanvasGetTextInfo	generic/tkDecls.h	1187;"	d
Tk_CanvasObjCmd	generic/tkCanvas.c	/^Tk_CanvasObjCmd($/;"	f
Tk_CanvasPsBitmap	generic/tkCanvas.c	/^Tk_CanvasPsBitmap($/;"	f
Tk_CanvasPsBitmap	generic/tkDecls.h	1189;"	d
Tk_CanvasPsColor	generic/tkCanvas.c	/^Tk_CanvasPsColor($/;"	f
Tk_CanvasPsColor	generic/tkDecls.h	1191;"	d
Tk_CanvasPsFont	generic/tkCanvas.c	/^Tk_CanvasPsFont($/;"	f
Tk_CanvasPsFont	generic/tkDecls.h	1193;"	d
Tk_CanvasPsOutline	generic/tkCanvUtil.c	/^Tk_CanvasPsOutline($/;"	f
Tk_CanvasPsOutline	generic/tkDecls.h	1617;"	d
Tk_CanvasPsPath	generic/tkCanvas.c	/^Tk_CanvasPsPath($/;"	f
Tk_CanvasPsPath	generic/tkDecls.h	1195;"	d
Tk_CanvasPsStipple	generic/tkCanvas.c	/^Tk_CanvasPsStipple($/;"	f
Tk_CanvasPsStipple	generic/tkDecls.h	1197;"	d
Tk_CanvasPsY	generic/tkCanvas.c	/^Tk_CanvasPsY($/;"	f
Tk_CanvasPsY	generic/tkDecls.h	1199;"	d
Tk_CanvasSetOffset	generic/tkCanvUtil.c	/^Tk_CanvasSetOffset($/;"	f
Tk_CanvasSetOffset	generic/tkDecls.h	1623;"	d
Tk_CanvasSetStippleOrigin	generic/tkCanvUtil.c	/^Tk_CanvasSetStippleOrigin($/;"	f
Tk_CanvasSetStippleOrigin	generic/tkDecls.h	1201;"	d
Tk_CanvasTagsParseProc	generic/tkCanvUtil.c	/^Tk_CanvasTagsParseProc($/;"	f
Tk_CanvasTagsParseProc	generic/tkDecls.h	1203;"	d
Tk_CanvasTagsPrintProc	generic/tkCanvUtil.c	/^Tk_CanvasTagsPrintProc($/;"	f
Tk_CanvasTagsPrintProc	generic/tkDecls.h	1205;"	d
Tk_CanvasTextInfo	generic/tk.h	/^typedef struct Tk_CanvasTextInfo {$/;"	s
Tk_CanvasTextInfo	generic/tk.h	/^} Tk_CanvasTextInfo;$/;"	t	typeref:struct:Tk_CanvasTextInfo
Tk_CanvasTkwin	generic/tkCanvUtil.c	/^Tk_CanvasTkwin($/;"	f
Tk_CanvasTkwin	generic/tkDecls.h	1207;"	d
Tk_CanvasWindowCoords	generic/tkCanvUtil.c	/^Tk_CanvasWindowCoords($/;"	f
Tk_CanvasWindowCoords	generic/tkDecls.h	1209;"	d
Tk_ChangeOutlineGC	generic/tkCanvUtil.c	/^Tk_ChangeOutlineGC($/;"	f
Tk_ChangeOutlineGC	generic/tkDecls.h	1613;"	d
Tk_ChangeWindowAttributes	generic/tkDecls.h	1211;"	d
Tk_ChangeWindowAttributes	generic/tkWindow.c	/^Tk_ChangeWindowAttributes($/;"	f
Tk_Changes	generic/tk.h	729;"	d
Tk_CharBbox	generic/tkDecls.h	1213;"	d
Tk_CharBbox	generic/tkFont.c	/^Tk_CharBbox($/;"	f
Tk_CheckbuttonObjCmd	generic/tkButton.c	/^Tk_CheckbuttonObjCmd($/;"	f
Tk_ChooseColorObjCmd	macosx/tkMacOSXDialog.c	/^Tk_ChooseColorObjCmd($/;"	f
Tk_ChooseColorObjCmd	unix/tkUnixDialog.c	/^Tk_ChooseColorObjCmd($/;"	f
Tk_ChooseColorObjCmd	win/tkWinDialog.c	/^Tk_ChooseColorObjCmd($/;"	f
Tk_ChooseDirectoryObjCmd	macosx/tkMacOSXDialog.c	/^Tk_ChooseDirectoryObjCmd($/;"	f
Tk_ChooseDirectoryObjCmd	win/tkWinDialog.c	/^Tk_ChooseDirectoryObjCmd($/;"	f
Tk_ChunkBboxProc	generic/tkText.h	/^typedef void		Tk_ChunkBboxProc(struct TkText *textPtr,$/;"	t
Tk_ChunkDisplayProc	generic/tkText.h	/^typedef void 		Tk_ChunkDisplayProc(struct TkText *textPtr,$/;"	t
Tk_ChunkMeasureProc	generic/tkText.h	/^typedef int		Tk_ChunkMeasureProc(TkTextDispChunk *chunkPtr, int x);$/;"	t
Tk_ChunkUndisplayProc	generic/tkText.h	/^typedef void		Tk_ChunkUndisplayProc(struct TkText *textPtr,$/;"	t
Tk_Class	generic/tk.h	723;"	d
Tk_ClassCreateProc	generic/tk.h	/^typedef Window (Tk_ClassCreateProc) (Tk_Window tkwin, Window parent,$/;"	t
Tk_ClassModalProc	generic/tk.h	/^typedef void (Tk_ClassModalProc) (Tk_Window tkwin, XEvent *eventPtr);$/;"	t
Tk_ClassProcs	generic/tk.h	/^typedef struct Tk_ClassProcs {$/;"	s
Tk_ClassProcs	generic/tk.h	/^} Tk_ClassProcs;$/;"	t	typeref:struct:Tk_ClassProcs
Tk_ClassWorldChangedProc	generic/tk.h	/^typedef void (Tk_ClassWorldChangedProc) (ClientData instanceData);$/;"	t
Tk_ClearSelection	generic/tkDecls.h	1215;"	d
Tk_ClearSelection	generic/tkSelect.c	/^Tk_ClearSelection($/;"	f
Tk_ClientMessageProc	generic/tk.h	/^typedef int (Tk_ClientMessageProc) (Tk_Window tkwin, XEvent *eventPtr);$/;"	t
Tk_ClipboardAppend	generic/tkClipboard.c	/^Tk_ClipboardAppend($/;"	f
Tk_ClipboardAppend	generic/tkDecls.h	1217;"	d
Tk_ClipboardClear	generic/tkClipboard.c	/^Tk_ClipboardClear($/;"	f
Tk_ClipboardClear	generic/tkDecls.h	1219;"	d
Tk_ClipboardObjCmd	generic/tkClipboard.c	/^Tk_ClipboardObjCmd($/;"	f
Tk_CollapseMotionEvents	generic/tkDecls.h	1661;"	d
Tk_CollapseMotionEvents	generic/tkEvent.c	/^Tk_CollapseMotionEvents($/;"	f
Tk_Colormap	generic/tk.h	763;"	d
Tk_ComputeTextLayout	generic/tkDecls.h	1229;"	d
Tk_ComputeTextLayout	generic/tkFont.c	/^Tk_ComputeTextLayout($/;"	f
Tk_ConfigOutlineGC	generic/tkCanvUtil.c	/^Tk_ConfigOutlineGC($/;"	f
Tk_ConfigOutlineGC	generic/tkDecls.h	1611;"	d
Tk_ConfigSpec	generic/tk.h	/^typedef struct Tk_ConfigSpec {$/;"	s
Tk_ConfigSpec	generic/tk.h	/^} Tk_ConfigSpec;$/;"	t	typeref:struct:Tk_ConfigSpec
Tk_ConfigTypes	generic/tk.h	/^} Tk_ConfigTypes;$/;"	t	typeref:enum:__anon4
Tk_ConfigureInfo	generic/tkDecls.h	1221;"	d
Tk_ConfigureInfo	generic/tkOldConfig.c	/^Tk_ConfigureInfo($/;"	f
Tk_ConfigureValue	generic/tkDecls.h	1223;"	d
Tk_ConfigureValue	generic/tkOldConfig.c	/^Tk_ConfigureValue($/;"	f
Tk_ConfigureWidget	generic/tkDecls.h	1225;"	d
Tk_ConfigureWidget	generic/tkOldConfig.c	/^Tk_ConfigureWidget($/;"	f
Tk_ConfigureWindow	generic/tkDecls.h	1227;"	d
Tk_ConfigureWindow	generic/tkWindow.c	/^Tk_ConfigureWindow($/;"	f
Tk_CoordsToWindow	generic/tkDecls.h	1231;"	d
Tk_CoordsToWindow	macosx/tkMacOSXWm.c	/^Tk_CoordsToWindow($/;"	f
Tk_CoordsToWindow	unix/tkUnixWm.c	/^Tk_CoordsToWindow($/;"	f
Tk_CoordsToWindow	win/tkWinWm.c	/^Tk_CoordsToWindow($/;"	f
Tk_CreateAnonymousWindow	generic/tkDecls.h	1647;"	d
Tk_CreateAnonymousWindow	generic/tkWindow.c	/^Tk_CreateAnonymousWindow($/;"	f
Tk_CreateBinding	generic/tkBind.c	/^Tk_CreateBinding($/;"	f
Tk_CreateBinding	generic/tkDecls.h	1233;"	d
Tk_CreateBindingTable	generic/tkBind.c	/^Tk_CreateBindingTable($/;"	f
Tk_CreateBindingTable	generic/tkDecls.h	1235;"	d
Tk_CreateClientMessageHandler	generic/tkDecls.h	1643;"	d
Tk_CreateClientMessageHandler	generic/tkEvent.c	/^Tk_CreateClientMessageHandler($/;"	f
Tk_CreateConsoleWindow	generic/tkConsole.c	/^Tk_CreateConsoleWindow($/;"	f
Tk_CreateConsoleWindow	generic/tkDecls.h	1599;"	d
Tk_CreateConsoleWindow	generic/tkDecls.h	1722;"	d
Tk_CreateErrorHandler	generic/tkDecls.h	1237;"	d
Tk_CreateErrorHandler	generic/tkError.c	/^Tk_CreateErrorHandler($/;"	f
Tk_CreateEventHandler	generic/tkDecls.h	1239;"	d
Tk_CreateEventHandler	generic/tkEvent.c	/^Tk_CreateEventHandler($/;"	f
Tk_CreateFileHandler	generic/tk.h	1483;"	d
Tk_CreateGenericHandler	generic/tkDecls.h	1241;"	d
Tk_CreateGenericHandler	generic/tkEvent.c	/^Tk_CreateGenericHandler($/;"	f
Tk_CreateImageType	generic/tk.h	1549;"	d
Tk_CreateImageType	generic/tk.h	1550;"	d
Tk_CreateImageType	generic/tkDecls.h	1243;"	d
Tk_CreateImageType	generic/tkImage.c	/^Tk_CreateImageType($/;"	f
Tk_CreateItemType	generic/tkCanvas.c	/^Tk_CreateItemType($/;"	f
Tk_CreateItemType	generic/tkDecls.h	1245;"	d
Tk_CreateOldImageType	generic/tkDecls.h	1709;"	d
Tk_CreateOldImageType	generic/tkImage.c	/^Tk_CreateOldImageType($/;"	f
Tk_CreateOldPhotoImageFormat	generic/tkDecls.h	1711;"	d
Tk_CreateOldPhotoImageFormat	generic/tkImgPhoto.c	/^Tk_CreateOldPhotoImageFormat($/;"	f
Tk_CreateOptionTable	generic/tkConfig.c	/^Tk_CreateOptionTable($/;"	f
Tk_CreateOptionTable	generic/tkDecls.h	1547;"	d
Tk_CreateOutline	generic/tkCanvUtil.c	/^Tk_CreateOutline($/;"	f
Tk_CreateOutline	generic/tkDecls.h	1607;"	d
Tk_CreatePhotoImageFormat	generic/tk.h	1551;"	d
Tk_CreatePhotoImageFormat	generic/tk.h	1552;"	d
Tk_CreatePhotoImageFormat	generic/tkDecls.h	1247;"	d
Tk_CreatePhotoImageFormat	generic/tkImgPhoto.c	/^Tk_CreatePhotoImageFormat($/;"	f
Tk_CreateSelHandler	generic/tkDecls.h	1249;"	d
Tk_CreateSelHandler	generic/tkSelect.c	/^Tk_CreateSelHandler($/;"	f
Tk_CreateSmoothMethod	generic/tkCanvUtil.c	/^Tk_CreateSmoothMethod($/;"	f
Tk_CreateSmoothMethod	generic/tkDecls.h	1601;"	d
Tk_CreateStyle	generic/tkDecls.h	1671;"	d
Tk_CreateStyle	generic/tkStyle.c	/^Tk_CreateStyle($/;"	f
Tk_CreateTimerHandler	generic/tk.h	1484;"	d
Tk_CreateWindow	generic/tkDecls.h	1251;"	d
Tk_CreateWindow	generic/tkWindow.c	/^Tk_CreateWindow($/;"	f
Tk_CreateWindowFromPath	generic/tkDecls.h	1253;"	d
Tk_CreateWindowFromPath	generic/tkWindow.c	/^Tk_CreateWindowFromPath($/;"	f
Tk_Cursor	generic/tk.h	/^typedef struct Tk_Cursor_ *Tk_Cursor;$/;"	t	typeref:struct:Tk_Cursor_
Tk_CustomOption	generic/tk.h	/^typedef struct Tk_CustomOption {$/;"	s
Tk_CustomOption	generic/tk.h	/^} Tk_CustomOption;$/;"	t	typeref:struct:Tk_CustomOption
Tk_CustomOptionFreeProc	generic/tk.h	/^typedef void (Tk_CustomOptionFreeProc) (ClientData clientData, Tk_Window tkwin,$/;"	t
Tk_CustomOptionGetProc	generic/tk.h	/^typedef Tcl_Obj *(Tk_CustomOptionGetProc) (ClientData clientData,$/;"	t
Tk_CustomOptionRestoreProc	generic/tk.h	/^typedef void (Tk_CustomOptionRestoreProc) (ClientData clientData,$/;"	t
Tk_CustomOptionSetProc	generic/tk.h	/^typedef int (Tk_CustomOptionSetProc) (ClientData clientData,$/;"	t
Tk_Dash	generic/tk.h	/^typedef struct Tk_Dash {$/;"	s
Tk_Dash	generic/tk.h	/^} Tk_Dash;$/;"	t	typeref:struct:Tk_Dash
Tk_DefineBitmap	generic/tkBitmap.c	/^Tk_DefineBitmap($/;"	f
Tk_DefineBitmap	generic/tkDecls.h	1255;"	d
Tk_DefineCursor	generic/tkDecls.h	1257;"	d
Tk_DefineCursor	generic/tkWindow.c	/^Tk_DefineCursor($/;"	f
Tk_DeleteAllBindings	generic/tkBind.c	/^Tk_DeleteAllBindings($/;"	f
Tk_DeleteAllBindings	generic/tkDecls.h	1259;"	d
Tk_DeleteBinding	generic/tkBind.c	/^Tk_DeleteBinding($/;"	f
Tk_DeleteBinding	generic/tkDecls.h	1261;"	d
Tk_DeleteBindingTable	generic/tkBind.c	/^Tk_DeleteBindingTable($/;"	f
Tk_DeleteBindingTable	generic/tkDecls.h	1263;"	d
Tk_DeleteClientMessageHandler	generic/tkDecls.h	1645;"	d
Tk_DeleteClientMessageHandler	generic/tkEvent.c	/^Tk_DeleteClientMessageHandler($/;"	f
Tk_DeleteErrorHandler	generic/tkDecls.h	1265;"	d
Tk_DeleteErrorHandler	generic/tkError.c	/^Tk_DeleteErrorHandler($/;"	f
Tk_DeleteEventHandler	generic/tkDecls.h	1267;"	d
Tk_DeleteEventHandler	generic/tkEvent.c	/^Tk_DeleteEventHandler($/;"	f
Tk_DeleteFileHandler	generic/tk.h	1485;"	d
Tk_DeleteGenericHandler	generic/tkDecls.h	1269;"	d
Tk_DeleteGenericHandler	generic/tkEvent.c	/^Tk_DeleteGenericHandler($/;"	f
Tk_DeleteImage	generic/tkDecls.h	1271;"	d
Tk_DeleteImage	generic/tkImage.c	/^Tk_DeleteImage($/;"	f
Tk_DeleteOptionTable	generic/tkConfig.c	/^Tk_DeleteOptionTable($/;"	f
Tk_DeleteOptionTable	generic/tkDecls.h	1549;"	d
Tk_DeleteOutline	generic/tkCanvUtil.c	/^Tk_DeleteOutline($/;"	f
Tk_DeleteOutline	generic/tkDecls.h	1609;"	d
Tk_DeleteSelHandler	generic/tkDecls.h	1273;"	d
Tk_DeleteSelHandler	generic/tkSelect.c	/^Tk_DeleteSelHandler($/;"	f
Tk_DeleteTimerHandler	generic/tk.h	1486;"	d
Tk_Depth	generic/tk.h	718;"	d
Tk_DestroyObjCmd	generic/tkCmds.c	/^Tk_DestroyObjCmd($/;"	f
Tk_DestroyWindow	generic/tkDecls.h	1275;"	d
Tk_DestroyWindow	generic/tkWindow.c	/^Tk_DestroyWindow($/;"	f
Tk_DetachEmbeddedWindow	win/tkWinEmbed.c	/^Tk_DetachEmbeddedWindow($/;"	f	file:
Tk_Display	generic/tk.h	714;"	d
Tk_DisplayName	generic/tkDecls.h	1277;"	d
Tk_DisplayName	generic/tkWindow.c	/^Tk_DisplayName($/;"	f
Tk_DistanceToTextLayout	generic/tkDecls.h	1279;"	d
Tk_DistanceToTextLayout	generic/tkFont.c	/^Tk_DistanceToTextLayout($/;"	f
Tk_DitherPhoto	generic/tkDecls.h	1625;"	d
Tk_DitherPhoto	generic/tkImgPhoto.c	/^Tk_DitherPhoto($/;"	f
Tk_DoOneEvent	generic/tk.h	1487;"	d
Tk_DoWhenIdle	generic/tk.h	1488;"	d
Tk_Draw3DPolygon	generic/tk3d.c	/^Tk_Draw3DPolygon($/;"	f
Tk_Draw3DPolygon	generic/tkDecls.h	1281;"	d
Tk_Draw3DRectangle	generic/tk3d.c	/^Tk_Draw3DRectangle($/;"	f
Tk_Draw3DRectangle	generic/tkDecls.h	1283;"	d
Tk_DrawChars	generic/tkDecls.h	1285;"	d
Tk_DrawChars	macosx/tkMacOSXFont.c	/^Tk_DrawChars($/;"	f
Tk_DrawChars	unix/tkUnixFont.c	/^Tk_DrawChars($/;"	f
Tk_DrawChars	unix/tkUnixRFont.c	/^Tk_DrawChars($/;"	f
Tk_DrawChars	win/tkWinFont.c	/^Tk_DrawChars($/;"	f
Tk_DrawElement	generic/tkDecls.h	1693;"	d
Tk_DrawElement	generic/tkStyle.c	/^Tk_DrawElement($/;"	f
Tk_DrawElementProc	generic/tk.h	/^typedef void (Tk_DrawElementProc) (ClientData clientData, char *recordPtr,$/;"	t
Tk_DrawFocusHighlight	generic/tkDecls.h	1287;"	d
Tk_DrawFocusHighlight	generic/tkUtil.c	/^Tk_DrawFocusHighlight($/;"	f
Tk_DrawTextLayout	generic/tkDecls.h	1289;"	d
Tk_DrawTextLayout	generic/tkFont.c	/^Tk_DrawTextLayout($/;"	f
Tk_ElementOptionSpec	generic/tk.h	/^typedef struct Tk_ElementOptionSpec {$/;"	s
Tk_ElementOptionSpec	generic/tk.h	/^} Tk_ElementOptionSpec;$/;"	t	typeref:struct:Tk_ElementOptionSpec
Tk_ElementSpec	generic/tk.h	/^typedef struct Tk_ElementSpec {$/;"	s
Tk_ElementSpec	generic/tk.h	/^} Tk_ElementSpec;$/;"	t	typeref:struct:Tk_ElementSpec
Tk_EntryObjCmd	generic/tkEntry.c	/^Tk_EntryObjCmd($/;"	f
Tk_ErrorHandler	generic/tk.h	/^typedef struct Tk_ErrorHandler_ *Tk_ErrorHandler;$/;"	t	typeref:struct:Tk_ErrorHandler_
Tk_ErrorProc	generic/tk.h	/^typedef int (Tk_ErrorProc) (ClientData clientData, XErrorEvent *errEventPtr);$/;"	t
Tk_EventObjCmd	generic/tkBind.c	/^Tk_EventObjCmd($/;"	f
Tk_EventProc	generic/tk.h	/^typedef void (Tk_EventProc) (ClientData clientData, XEvent *eventPtr);$/;"	t
Tk_EventuallyFree	generic/tk.h	1493;"	d
Tk_FakeWin	generic/tk.h	/^typedef struct Tk_FakeWin {$/;"	s
Tk_FakeWin	generic/tk.h	/^} Tk_FakeWin;$/;"	t	typeref:struct:Tk_FakeWin
Tk_FileProc	generic/tk.h	1477;"	d
Tk_Fill3DPolygon	generic/tk3d.c	/^Tk_Fill3DPolygon($/;"	f
Tk_Fill3DPolygon	generic/tkDecls.h	1291;"	d
Tk_Fill3DRectangle	generic/tk3d.c	/^Tk_Fill3DRectangle($/;"	f
Tk_Fill3DRectangle	generic/tkDecls.h	1293;"	d
Tk_FindPhoto	generic/tkDecls.h	1295;"	d
Tk_FindPhoto	generic/tkImgPhoto.c	/^Tk_FindPhoto($/;"	f
Tk_FocusObjCmd	generic/tkFocus.c	/^Tk_FocusObjCmd($/;"	f
Tk_Font	generic/tk.h	/^typedef struct Tk_Font_ *Tk_Font;$/;"	t	typeref:struct:Tk_Font_
Tk_FontId	generic/tkDecls.h	1297;"	d
Tk_FontId	generic/tkFont.c	/^Tk_FontId($/;"	f
Tk_FontMetrics	generic/tk.h	/^typedef struct Tk_FontMetrics {$/;"	s
Tk_FontMetrics	generic/tk.h	/^} Tk_FontMetrics;$/;"	t	typeref:struct:Tk_FontMetrics
Tk_FontObjCmd	generic/tkFont.c	/^Tk_FontObjCmd($/;"	f
Tk_FrameObjCmd	generic/tkFrame.c	/^Tk_FrameObjCmd($/;"	f
Tk_Free3DBorder	generic/tk3d.c	/^Tk_Free3DBorder($/;"	f
Tk_Free3DBorder	generic/tkDecls.h	1299;"	d
Tk_Free3DBorderFromObj	generic/tk3d.c	/^Tk_Free3DBorderFromObj($/;"	f
Tk_Free3DBorderFromObj	generic/tkDecls.h	1551;"	d
Tk_FreeBitmap	generic/tkBitmap.c	/^Tk_FreeBitmap($/;"	f
Tk_FreeBitmap	generic/tkDecls.h	1301;"	d
Tk_FreeBitmapFromObj	generic/tkBitmap.c	/^Tk_FreeBitmapFromObj($/;"	f
Tk_FreeBitmapFromObj	generic/tkDecls.h	1553;"	d
Tk_FreeColor	generic/tkColor.c	/^Tk_FreeColor($/;"	f
Tk_FreeColor	generic/tkDecls.h	1303;"	d
Tk_FreeColorFromObj	generic/tkColor.c	/^Tk_FreeColorFromObj($/;"	f
Tk_FreeColorFromObj	generic/tkDecls.h	1555;"	d
Tk_FreeColormap	generic/tkDecls.h	1305;"	d
Tk_FreeColormap	generic/tkVisual.c	/^Tk_FreeColormap($/;"	f
Tk_FreeConfigOptions	generic/tkConfig.c	/^Tk_FreeConfigOptions($/;"	f
Tk_FreeConfigOptions	generic/tkDecls.h	1557;"	d
Tk_FreeCursor	generic/tkCursor.c	/^Tk_FreeCursor($/;"	f
Tk_FreeCursor	generic/tkDecls.h	1307;"	d
Tk_FreeCursorFromObj	generic/tkCursor.c	/^Tk_FreeCursorFromObj($/;"	f
Tk_FreeCursorFromObj	generic/tkDecls.h	1561;"	d
Tk_FreeFont	generic/tkDecls.h	1309;"	d
Tk_FreeFont	generic/tkFont.c	/^Tk_FreeFont($/;"	f
Tk_FreeFontFromObj	generic/tkDecls.h	1563;"	d
Tk_FreeFontFromObj	generic/tkFont.c	/^Tk_FreeFontFromObj($/;"	f
Tk_FreeGC	generic/tkDecls.h	1311;"	d
Tk_FreeGC	generic/tkGC.c	/^Tk_FreeGC($/;"	f
Tk_FreeImage	generic/tkDecls.h	1313;"	d
Tk_FreeImage	generic/tkImage.c	/^Tk_FreeImage($/;"	f
Tk_FreeOptions	generic/tkDecls.h	1315;"	d
Tk_FreeOptions	generic/tkOldConfig.c	/^Tk_FreeOptions($/;"	f
Tk_FreePixmap	generic/tkDecls.h	1317;"	d
Tk_FreePixmap	macosx/tkMacOSXSubwindows.c	/^Tk_FreePixmap($/;"	f
Tk_FreePixmap	unix/tkUnixXId.c	/^Tk_FreePixmap($/;"	f
Tk_FreePixmap	win/tkWinPixmap.c	/^Tk_FreePixmap($/;"	f
Tk_FreeProc	generic/tk.h	1494;"	d
Tk_FreeSavedOptions	generic/tkConfig.c	/^Tk_FreeSavedOptions($/;"	f
Tk_FreeSavedOptions	generic/tkDecls.h	1559;"	d
Tk_FreeStyle	generic/tkDecls.h	1675;"	d
Tk_FreeStyle	generic/tkStyle.c	/^Tk_FreeStyle($/;"	f
Tk_FreeStyleFromObj	generic/tkDecls.h	1683;"	d
Tk_FreeStyleFromObj	generic/tkStyle.c	/^Tk_FreeStyleFromObj($/;"	f
Tk_FreeTextLayout	generic/tkDecls.h	1319;"	d
Tk_FreeTextLayout	generic/tkFont.c	/^Tk_FreeTextLayout($/;"	f
Tk_FreeXId	generic/tkDecls.h	1321;"	d
Tk_FreeXId	macosx/tkMacOSXXStubs.c	/^Tk_FreeXId($/;"	f
Tk_FreeXId	unix/tkUnixXId.c	/^Tk_FreeXId($/;"	f
Tk_FreeXId	win/tkWinX.c	/^Tk_FreeXId($/;"	f
Tk_GCForColor	generic/tkColor.c	/^Tk_GCForColor($/;"	f
Tk_GCForColor	generic/tkDecls.h	1323;"	d
Tk_GenericProc	generic/tk.h	/^typedef int (Tk_GenericProc) (ClientData clientData, XEvent *eventPtr);$/;"	t
Tk_GeomLostSlaveProc	generic/tk.h	/^typedef void (Tk_GeomLostSlaveProc) (ClientData clientData, Tk_Window tkwin);$/;"	t
Tk_GeomMgr	generic/tk.h	/^typedef struct Tk_GeomMgr {$/;"	s
Tk_GeomMgr	generic/tk.h	/^} Tk_GeomMgr;$/;"	t	typeref:struct:Tk_GeomMgr
Tk_GeomRequestProc	generic/tk.h	/^typedef void (Tk_GeomRequestProc) (ClientData clientData, Tk_Window tkwin);$/;"	t
Tk_GeometryRequest	generic/tkDecls.h	1325;"	d
Tk_GeometryRequest	generic/tkGeometry.c	/^Tk_GeometryRequest($/;"	f
Tk_Get3DBorder	generic/tk3d.c	/^Tk_Get3DBorder($/;"	f
Tk_Get3DBorder	generic/tkDecls.h	1327;"	d
Tk_Get3DBorderFromObj	generic/tk3d.c	/^Tk_Get3DBorderFromObj($/;"	f
Tk_Get3DBorderFromObj	generic/tkDecls.h	1565;"	d
Tk_GetAllBindings	generic/tkBind.c	/^Tk_GetAllBindings($/;"	f
Tk_GetAllBindings	generic/tkDecls.h	1329;"	d
Tk_GetAnchor	generic/tkDecls.h	1331;"	d
Tk_GetAnchor	generic/tkGet.c	/^Tk_GetAnchor($/;"	f
Tk_GetAnchorFromObj	generic/tkDecls.h	1567;"	d
Tk_GetAnchorFromObj	generic/tkGet.c	/^Tk_GetAnchorFromObj($/;"	f
Tk_GetAtomName	generic/tkAtom.c	/^Tk_GetAtomName($/;"	f
Tk_GetAtomName	generic/tkDecls.h	1333;"	d
Tk_GetBinding	generic/tkBind.c	/^Tk_GetBinding($/;"	f
Tk_GetBinding	generic/tkDecls.h	1335;"	d
Tk_GetBitmap	generic/tkBitmap.c	/^Tk_GetBitmap($/;"	f
Tk_GetBitmap	generic/tkDecls.h	1337;"	d
Tk_GetBitmapFromData	generic/tkBitmap.c	/^Tk_GetBitmapFromData($/;"	f
Tk_GetBitmapFromData	generic/tkDecls.h	1339;"	d
Tk_GetBitmapFromObj	generic/tkBitmap.c	/^Tk_GetBitmapFromObj($/;"	f
Tk_GetBitmapFromObj	generic/tkDecls.h	1569;"	d
Tk_GetCapStyle	generic/tkDecls.h	1341;"	d
Tk_GetCapStyle	generic/tkGet.c	/^Tk_GetCapStyle($/;"	f
Tk_GetClassProc	generic/tk.h	606;"	d
Tk_GetColor	generic/tkColor.c	/^Tk_GetColor($/;"	f
Tk_GetColor	generic/tkDecls.h	1343;"	d
Tk_GetColorByValue	generic/tkColor.c	/^Tk_GetColorByValue($/;"	f
Tk_GetColorByValue	generic/tkDecls.h	1345;"	d
Tk_GetColorFromObj	generic/tkColor.c	/^Tk_GetColorFromObj($/;"	f
Tk_GetColorFromObj	generic/tkDecls.h	1571;"	d
Tk_GetColormap	generic/tkDecls.h	1347;"	d
Tk_GetColormap	generic/tkVisual.c	/^Tk_GetColormap($/;"	f
Tk_GetCursor	generic/tkCursor.c	/^Tk_GetCursor($/;"	f
Tk_GetCursor	generic/tkDecls.h	1349;"	d
Tk_GetCursorFromData	generic/tkCursor.c	/^Tk_GetCursorFromData($/;"	f
Tk_GetCursorFromData	generic/tkDecls.h	1351;"	d
Tk_GetCursorFromObj	generic/tkCursor.c	/^Tk_GetCursorFromObj($/;"	f
Tk_GetCursorFromObj	generic/tkDecls.h	1573;"	d
Tk_GetDash	generic/tkCanvUtil.c	/^Tk_GetDash($/;"	f
Tk_GetDash	generic/tkDecls.h	1605;"	d
Tk_GetDoublePixelsFromObj	generic/tkObj.c	/^Tk_GetDoublePixelsFromObj($/;"	f
Tk_GetElementBorderWidth	generic/tkDecls.h	1691;"	d
Tk_GetElementBorderWidth	generic/tkStyle.c	/^Tk_GetElementBorderWidth($/;"	f
Tk_GetElementBorderWidthProc	generic/tk.h	/^typedef int (Tk_GetElementBorderWidthProc) (ClientData clientData,$/;"	t
Tk_GetElementBox	generic/tkDecls.h	1689;"	d
Tk_GetElementBox	generic/tkStyle.c	/^Tk_GetElementBox($/;"	f
Tk_GetElementBoxProc	generic/tk.h	/^typedef void (Tk_GetElementBoxProc) (ClientData clientData, char *recordPtr,$/;"	t
Tk_GetElementId	generic/tkDecls.h	1669;"	d
Tk_GetElementId	generic/tkStyle.c	/^Tk_GetElementId($/;"	f
Tk_GetElementSize	generic/tkDecls.h	1687;"	d
Tk_GetElementSize	generic/tkStyle.c	/^Tk_GetElementSize($/;"	f
Tk_GetElementSizeProc	generic/tk.h	/^typedef void (Tk_GetElementSizeProc) (ClientData clientData, char *recordPtr,$/;"	t
Tk_GetEmbeddedHWnd	win/tkWinEmbed.c	/^Tk_GetEmbeddedHWnd($/;"	f
Tk_GetEmbeddedMenuHWND	win/tkWinEmbed.c	/^Tk_GetEmbeddedMenuHWND($/;"	f
Tk_GetFont	generic/tkDecls.h	1353;"	d
Tk_GetFont	generic/tkFont.c	/^Tk_GetFont($/;"	f
Tk_GetFontFromObj	generic/tkDecls.h	1355;"	d
Tk_GetFontFromObj	generic/tkFont.c	/^Tk_GetFontFromObj($/;"	f
Tk_GetFontMetrics	generic/tkDecls.h	1357;"	d
Tk_GetFontMetrics	generic/tkFont.c	/^Tk_GetFontMetrics($/;"	f
Tk_GetGC	generic/tkDecls.h	1359;"	d
Tk_GetGC	generic/tkGC.c	/^Tk_GetGC($/;"	f
Tk_GetHINSTANCE	generic/tkPlatDecls.h	129;"	d
Tk_GetHINSTANCE	generic/tkStubInit.c	/^void *Tk_GetHINSTANCE()$/;"	f
Tk_GetHINSTANCE	win/tkWinX.c	/^Tk_GetHINSTANCE(void)$/;"	f
Tk_GetHWND	generic/tkPlatDecls.h	131;"	d
Tk_GetHWND	generic/tkStubInit.c	171;"	d	file:
Tk_GetHWND	win/tkWinWindow.c	/^Tk_GetHWND($/;"	f
Tk_GetImage	generic/tkDecls.h	1361;"	d
Tk_GetImage	generic/tkImage.c	/^Tk_GetImage($/;"	f
Tk_GetImageMasterData	generic/tkDecls.h	1363;"	d
Tk_GetImageMasterData	generic/tkImage.c	/^Tk_GetImageMasterData($/;"	f
Tk_GetItemTypes	generic/tkCanvas.c	/^Tk_GetItemTypes(void)$/;"	f
Tk_GetItemTypes	generic/tkDecls.h	1365;"	d
Tk_GetJoinStyle	generic/tkDecls.h	1367;"	d
Tk_GetJoinStyle	generic/tkGet.c	/^Tk_GetJoinStyle($/;"	f
Tk_GetJustify	generic/tkDecls.h	1369;"	d
Tk_GetJustify	generic/tkGet.c	/^Tk_GetJustify($/;"	f
Tk_GetJustifyFromObj	generic/tkDecls.h	1579;"	d
Tk_GetJustifyFromObj	generic/tkGet.c	/^Tk_GetJustifyFromObj($/;"	f
Tk_GetMMFromObj	generic/tkDecls.h	1581;"	d
Tk_GetMMFromObj	generic/tkObj.c	/^Tk_GetMMFromObj($/;"	f
Tk_GetMenuHWND	win/tkWinMenu.c	/^Tk_GetMenuHWND($/;"	f
Tk_GetNumMainWindows	generic/tkDecls.h	1371;"	d
Tk_GetNumMainWindows	generic/tkWindow.c	/^Tk_GetNumMainWindows(void)$/;"	f
Tk_GetOpenFileObjCmd	macosx/tkMacOSXDialog.c	/^Tk_GetOpenFileObjCmd($/;"	f
Tk_GetOpenFileObjCmd	unix/tkUnixDialog.c	/^Tk_GetOpenFileObjCmd($/;"	f
Tk_GetOpenFileObjCmd	win/tkWinDialog.c	/^Tk_GetOpenFileObjCmd($/;"	f
Tk_GetOption	generic/tkDecls.h	1373;"	d
Tk_GetOption	generic/tkOption.c	/^Tk_GetOption($/;"	f
Tk_GetOptionInfo	generic/tkConfig.c	/^Tk_GetOptionInfo($/;"	f
Tk_GetOptionInfo	generic/tkDecls.h	1575;"	d
Tk_GetOptionValue	generic/tkConfig.c	/^Tk_GetOptionValue($/;"	f
Tk_GetOptionValue	generic/tkDecls.h	1577;"	d
Tk_GetPixels	generic/tkDecls.h	1375;"	d
Tk_GetPixels	generic/tkGet.c	/^Tk_GetPixels($/;"	f
Tk_GetPixelsFromObj	generic/tkDecls.h	1583;"	d
Tk_GetPixelsFromObj	generic/tkObj.c	/^Tk_GetPixelsFromObj($/;"	f
Tk_GetPixmap	generic/tkDecls.h	1377;"	d
Tk_GetPixmap	macosx/tkMacOSXSubwindows.c	/^Tk_GetPixmap($/;"	f
Tk_GetPixmap	unix/tkUnixXId.c	/^Tk_GetPixmap($/;"	f
Tk_GetPixmap	win/tkWinPixmap.c	/^Tk_GetPixmap($/;"	f
Tk_GetRelief	generic/tk3d.c	/^Tk_GetRelief($/;"	f
Tk_GetRelief	generic/tkDecls.h	1379;"	d
Tk_GetReliefFromObj	generic/tk3d.c	/^Tk_GetReliefFromObj($/;"	f
Tk_GetReliefFromObj	generic/tkDecls.h	1585;"	d
Tk_GetRootCoords	generic/tkDecls.h	1381;"	d
Tk_GetRootCoords	macosx/tkMacOSXWm.c	/^Tk_GetRootCoords($/;"	f
Tk_GetRootCoords	unix/tkUnixWm.c	/^Tk_GetRootCoords($/;"	f
Tk_GetRootCoords	win/tkWinWm.c	/^Tk_GetRootCoords($/;"	f
Tk_GetSaveFileObjCmd	macosx/tkMacOSXDialog.c	/^Tk_GetSaveFileObjCmd($/;"	f
Tk_GetSaveFileObjCmd	unix/tkUnixDialog.c	/^Tk_GetSaveFileObjCmd($/;"	f
Tk_GetSaveFileObjCmd	win/tkWinDialog.c	/^Tk_GetSaveFileObjCmd($/;"	f
Tk_GetScreenMM	generic/tkDecls.h	1385;"	d
Tk_GetScreenMM	generic/tkGet.c	/^Tk_GetScreenMM($/;"	f
Tk_GetScrollInfo	generic/tkDecls.h	1383;"	d
Tk_GetScrollInfo	generic/tkUtil.c	/^Tk_GetScrollInfo($/;"	f
Tk_GetScrollInfoObj	generic/tkDecls.h	1587;"	d
Tk_GetScrollInfoObj	generic/tkUtil.c	/^Tk_GetScrollInfoObj($/;"	f
Tk_GetSelProc	generic/tk.h	/^typedef int (Tk_GetSelProc) (ClientData clientData, Tcl_Interp *interp,$/;"	t
Tk_GetSelection	generic/tkDecls.h	1387;"	d
Tk_GetSelection	generic/tkSelect.c	/^Tk_GetSelection($/;"	f
Tk_GetStyle	generic/tkDecls.h	1673;"	d
Tk_GetStyle	generic/tkStyle.c	/^Tk_GetStyle($/;"	f
Tk_GetStyleEngine	generic/tkDecls.h	1665;"	d
Tk_GetStyleEngine	generic/tkStyle.c	/^Tk_GetStyleEngine($/;"	f
Tk_GetStyleFromObj	generic/tkDecls.h	1681;"	d
Tk_GetStyleFromObj	generic/tkStyle.c	/^Tk_GetStyleFromObj($/;"	f
Tk_GetStyledElement	generic/tkDecls.h	1685;"	d
Tk_GetStyledElement	generic/tkStyle.c	/^Tk_GetStyledElement($/;"	f
Tk_GetUid	generic/tkDecls.h	1389;"	d
Tk_GetUid	generic/tkGet.c	/^Tk_GetUid($/;"	f
Tk_GetUserInactiveTime	generic/tkDecls.h	1703;"	d
Tk_GetUserInactiveTime	macosx/tkMacOSXXStubs.c	/^Tk_GetUserInactiveTime($/;"	f
Tk_GetUserInactiveTime	unix/tkUnix.c	/^Tk_GetUserInactiveTime($/;"	f
Tk_GetUserInactiveTime	win/tkWinX.c	/^Tk_GetUserInactiveTime($/;"	f
Tk_GetVRootGeometry	generic/tkDecls.h	1393;"	d
Tk_GetVRootGeometry	macosx/tkMacOSXWm.c	/^Tk_GetVRootGeometry($/;"	f
Tk_GetVRootGeometry	unix/tkUnixWm.c	/^Tk_GetVRootGeometry($/;"	f
Tk_GetVRootGeometry	win/tkWinWm.c	/^Tk_GetVRootGeometry($/;"	f
Tk_GetVisual	generic/tkDecls.h	1391;"	d
Tk_GetVisual	generic/tkVisual.c	/^Tk_GetVisual($/;"	f
Tk_Grab	generic/tkDecls.h	1395;"	d
Tk_Grab	generic/tkGrab.c	/^Tk_Grab($/;"	f
Tk_GrabObjCmd	generic/tkGrab.c	/^Tk_GrabObjCmd($/;"	f
Tk_GridObjCmd	generic/tkGrid.c	/^Tk_GridObjCmd($/;"	f
Tk_HWNDToWindow	generic/tkPlatDecls.h	133;"	d
Tk_HWNDToWindow	generic/tkStubInit.c	172;"	d	file:
Tk_HWNDToWindow	win/tkWinWindow.c	/^Tk_HWNDToWindow($/;"	f
Tk_HandleEvent	generic/tkDecls.h	1397;"	d
Tk_HandleEvent	generic/tkEvent.c	/^Tk_HandleEvent($/;"	f
Tk_HasWrapper	generic/tk.h	739;"	d
Tk_Height	generic/tk.h	727;"	d
Tk_IdToWindow	generic/tkDecls.h	1399;"	d
Tk_IdToWindow	generic/tkWindow.c	/^Tk_IdToWindow($/;"	f
Tk_IdleProc	generic/tk.h	1476;"	d
Tk_Image	generic/tk.h	/^typedef struct Tk_Image__ *Tk_Image;$/;"	t	typeref:struct:Tk_Image__
Tk_ImageChanged	generic/tkDecls.h	1401;"	d
Tk_ImageChanged	generic/tkImage.c	/^Tk_ImageChanged($/;"	f
Tk_ImageChangedProc	generic/tk.h	/^typedef void (Tk_ImageChangedProc) (ClientData clientData, int x, int y,$/;"	t
Tk_ImageCreateProc	generic/tk.h	/^typedef int (Tk_ImageCreateProc) (Tcl_Interp *interp, CONST86 char *name, int objc,$/;"	t
Tk_ImageCreateProc	generic/tk.h	/^typedef int (Tk_ImageCreateProc) (Tcl_Interp *interp, char *name, int argc,$/;"	t
Tk_ImageDeleteProc	generic/tk.h	/^typedef void (Tk_ImageDeleteProc) (ClientData masterData);$/;"	t
Tk_ImageDisplayProc	generic/tk.h	/^typedef void (Tk_ImageDisplayProc) (ClientData instanceData, Display *display,$/;"	t
Tk_ImageFileMatchProc	generic/tk.h	/^typedef int (Tk_ImageFileMatchProc) (Tcl_Channel chan, char *fileName,$/;"	t
Tk_ImageFileMatchProc	generic/tk.h	/^typedef int (Tk_ImageFileMatchProc) (Tcl_Channel chan, const char *fileName,$/;"	t
Tk_ImageFileReadProc	generic/tk.h	/^typedef int (Tk_ImageFileReadProc) (Tcl_Interp *interp, Tcl_Channel chan,$/;"	t
Tk_ImageFileWriteProc	generic/tk.h	/^typedef int (Tk_ImageFileWriteProc) (Tcl_Interp *interp, char *fileName,$/;"	t
Tk_ImageFileWriteProc	generic/tk.h	/^typedef int (Tk_ImageFileWriteProc) (Tcl_Interp *interp, const char *fileName,$/;"	t
Tk_ImageFreeProc	generic/tk.h	/^typedef void (Tk_ImageFreeProc) (ClientData instanceData, Display *display);$/;"	t
Tk_ImageGetProc	generic/tk.h	/^typedef ClientData (Tk_ImageGetProc) (Tk_Window tkwin, ClientData masterData);$/;"	t
Tk_ImageMaster	generic/tk.h	/^typedef struct Tk_ImageMaster_ *Tk_ImageMaster;$/;"	t	typeref:struct:Tk_ImageMaster_
Tk_ImageObjCmd	generic/tkImage.c	/^Tk_ImageObjCmd($/;"	f
Tk_ImagePostscriptProc	generic/tk.h	/^typedef int (Tk_ImagePostscriptProc) (ClientData clientData,$/;"	t
Tk_ImageStringMatchProc	generic/tk.h	/^typedef int (Tk_ImageStringMatchProc) (Tcl_Obj *dataObj, Tcl_Obj *format,$/;"	t
Tk_ImageStringMatchProc	generic/tk.h	/^typedef int (Tk_ImageStringMatchProc) (char *string, char *formatString,$/;"	t
Tk_ImageStringReadProc	generic/tk.h	/^typedef int (Tk_ImageStringReadProc) (Tcl_Interp *interp, Tcl_Obj *dataObj,$/;"	t
Tk_ImageStringReadProc	generic/tk.h	/^typedef int (Tk_ImageStringReadProc) (Tcl_Interp *interp, char *string,$/;"	t
Tk_ImageStringWriteProc	generic/tk.h	/^typedef int (Tk_ImageStringWriteProc) (Tcl_Interp *interp, Tcl_Obj *format,$/;"	t
Tk_ImageStringWriteProc	generic/tk.h	/^typedef int (Tk_ImageStringWriteProc) (Tcl_Interp *interp,$/;"	t
Tk_ImageType	generic/tk.h	/^struct Tk_ImageType {$/;"	s
Tk_ImageType	generic/tk.h	/^typedef struct Tk_ImageType Tk_ImageType;$/;"	t	typeref:struct:Tk_ImageType
Tk_Init	generic/tkDecls.h	1403;"	d
Tk_Init	generic/tkDecls.h	1720;"	d
Tk_Init	generic/tkWindow.c	/^Tk_Init($/;"	f
Tk_InitConsoleChannels	generic/tkConsole.c	/^Tk_InitConsoleChannels($/;"	f
Tk_InitConsoleChannels	generic/tkDecls.h	1597;"	d
Tk_InitImageArgs	generic/tk.h	1516;"	d
Tk_InitOptions	generic/tkConfig.c	/^Tk_InitOptions($/;"	f
Tk_InitOptions	generic/tkDecls.h	1589;"	d
Tk_InitStubs	generic/tk.h	1512;"	d
Tk_InitStubs	generic/tkStubLib.c	/^Tk_InitStubs($/;"	f
Tk_InitStubs	generic/tkStubLib.c	71;"	d	file:
Tk_InternAtom	generic/tkAtom.c	/^Tk_InternAtom($/;"	f
Tk_InternAtom	generic/tkDecls.h	1405;"	d
Tk_InternalBorderBottom	generic/tk.h	758;"	d
Tk_InternalBorderLeft	generic/tk.h	752;"	d
Tk_InternalBorderRight	generic/tk.h	754;"	d
Tk_InternalBorderTop	generic/tk.h	756;"	d
Tk_InternalBorderWidth	generic/tk.h	750;"	d
Tk_Interp	generic/tkDecls.h	1707;"	d
Tk_Interp	generic/tkWindow.c	/^Tk_Interp($/;"	f
Tk_IntersectTextLayout	generic/tkDecls.h	1407;"	d
Tk_IntersectTextLayout	generic/tkFont.c	/^Tk_IntersectTextLayout($/;"	f
Tk_IsContainer	generic/tk.h	733;"	d
Tk_IsEmbedded	generic/tk.h	731;"	d
Tk_IsManageable	generic/tk.h	745;"	d
Tk_IsMapped	generic/tk.h	735;"	d
Tk_IsTopLevel	generic/tk.h	737;"	d
Tk_Item	generic/tk.h	/^typedef struct Tk_Item {$/;"	s
Tk_Item	generic/tk.h	/^} Tk_Item;$/;"	t	typeref:struct:Tk_Item
Tk_ItemAreaProc	generic/tk.h	/^typedef int	(Tk_ItemAreaProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemConfigureProc	generic/tk.h	/^typedef int	(Tk_ItemConfigureProc)(Tcl_Interp *interp, Tk_Canvas canvas,$/;"	t
Tk_ItemCoordProc	generic/tk.h	/^typedef int	(Tk_ItemCoordProc)(Tcl_Interp *interp, Tk_Canvas canvas,$/;"	t
Tk_ItemCreateProc	generic/tk.h	/^typedef int	(Tk_ItemCreateProc)(Tcl_Interp *interp, Tk_Canvas canvas,$/;"	t
Tk_ItemCursorProc	generic/tk.h	/^typedef void	(Tk_ItemCursorProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemDCharsProc	generic/tk.h	/^typedef void	(Tk_ItemDCharsProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemDeleteProc	generic/tk.h	/^typedef void	(Tk_ItemDeleteProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemDisplayProc	generic/tk.h	/^typedef void	(Tk_ItemDisplayProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemIndexProc	generic/tk.h	/^typedef int	(Tk_ItemIndexProc)(Tcl_Interp *interp, Tk_Canvas canvas,$/;"	t
Tk_ItemInsertProc	generic/tk.h	/^typedef void	(Tk_ItemInsertProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemPointProc	generic/tk.h	/^typedef double	(Tk_ItemPointProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemPostscriptProc	generic/tk.h	/^typedef int	(Tk_ItemPostscriptProc)(Tcl_Interp *interp, Tk_Canvas canvas,$/;"	t
Tk_ItemScaleProc	generic/tk.h	/^typedef void	(Tk_ItemScaleProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemSelectionProc	generic/tk.h	/^typedef int	(Tk_ItemSelectionProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemTranslateProc	generic/tk.h	/^typedef void	(Tk_ItemTranslateProc)(Tk_Canvas canvas, Tk_Item *itemPtr,$/;"	t
Tk_ItemType	generic/tk.h	/^typedef struct Tk_ItemType {$/;"	s
Tk_ItemType	generic/tk.h	/^} Tk_ItemType;$/;"	t	typeref:struct:Tk_ItemType
Tk_Justify	generic/tk.h	/^} Tk_Justify;$/;"	t	typeref:enum:__anon8
Tk_LabelObjCmd	generic/tkButton.c	/^Tk_LabelObjCmd($/;"	f
Tk_LabelframeObjCmd	generic/tkFrame.c	/^Tk_LabelframeObjCmd($/;"	f
Tk_ListboxObjCmd	generic/tkListbox.c	/^Tk_ListboxObjCmd($/;"	f
Tk_LostSelProc	generic/tk.h	/^typedef void (Tk_LostSelProc) (ClientData clientData);$/;"	t
Tk_LowerObjCmd	generic/tkCmds.c	/^Tk_LowerObjCmd($/;"	f
Tk_MacOSXEmbedGetClipProc	macosx/tkMacOSX.h	/^typedef void (Tk_MacOSXEmbedGetClipProc) (Tk_Window window, TkRegion rgn);$/;"	t
Tk_MacOSXEmbedGetGrafPortProc	macosx/tkMacOSX.h	/^typedef void* (Tk_MacOSXEmbedGetGrafPortProc) (Tk_Window window);$/;"	t
Tk_MacOSXEmbedGetOffsetInParentProc	macosx/tkMacOSX.h	/^typedef void (Tk_MacOSXEmbedGetOffsetInParentProc) (Tk_Window window, void *ulCorner);$/;"	t
Tk_MacOSXEmbedMakeContainerExistProc	macosx/tkMacOSX.h	/^typedef int (Tk_MacOSXEmbedMakeContainerExistProc) (Tk_Window window);$/;"	t
Tk_MacOSXEmbedRegisterWinProc	macosx/tkMacOSX.h	/^typedef int (Tk_MacOSXEmbedRegisterWinProc) (long winID, Tk_Window window);$/;"	t
Tk_MacOSXIsAppInFront	generic/tkPlatDecls.h	161;"	d
Tk_MacOSXIsAppInFront	macosx/tkMacOSXWindowEvent.c	/^Tk_MacOSXIsAppInFront(void)$/;"	f
Tk_MacOSXSetEmbedHandler	generic/tkPlatDecls.h	141;"	d
Tk_MacOSXSetEmbedHandler	macosx/tkMacOSXEmbed.c	/^Tk_MacOSXSetEmbedHandler($/;"	f
Tk_MacOSXSetupTkNotifier	generic/tkPlatDecls.h	159;"	d
Tk_MacOSXSetupTkNotifier	macosx/tkMacOSXNotify.c	/^Tk_MacOSXSetupTkNotifier(void)$/;"	f
Tk_MacOSXTkOwnsCursor	generic/tkPlatDecls.h	145;"	d
Tk_MacOSXTkOwnsCursor	macosx/tkMacOSXCursor.c	/^Tk_MacOSXTkOwnsCursor($/;"	f
Tk_MacOSXTurnOffMenus	generic/tkPlatDecls.h	143;"	d
Tk_MacOSXTurnOffMenus	macosx/tkMacOSXMenu.c	/^Tk_MacOSXTurnOffMenus(void)$/;"	f
Tk_Main	generic/tk.h	1500;"	d
Tk_Main	generic/tk.h	1503;"	d
Tk_MainEx	generic/tkDecls.h	1591;"	d
Tk_MainEx	generic/tkDecls.h	1719;"	d
Tk_MainEx	generic/tkDecls.h	1725;"	d
Tk_MainEx	generic/tkMain.c	/^Tk_MainEx($/;"	f
Tk_MainEx	generic/tkStubInit.c	40;"	d	file:
Tk_MainLoop	generic/tkDecls.h	1167;"	d
Tk_MainLoop	generic/tkEvent.c	/^Tk_MainLoop(void)$/;"	f
Tk_MainWindow	generic/tkDecls.h	1411;"	d
Tk_MainWindow	generic/tkWindow.c	/^Tk_MainWindow($/;"	f
Tk_MaintainGeometry	generic/tkDecls.h	1409;"	d
Tk_MaintainGeometry	generic/tkGeometry.c	/^Tk_MaintainGeometry($/;"	f
Tk_MakeWindowExist	generic/tkDecls.h	1413;"	d
Tk_MakeWindowExist	generic/tkWindow.c	/^Tk_MakeWindowExist($/;"	f
Tk_ManageGeometry	generic/tkDecls.h	1415;"	d
Tk_ManageGeometry	generic/tkGeometry.c	/^Tk_ManageGeometry($/;"	f
Tk_MapEmbeddedWindow	win/tkWinEmbed.c	/^void Tk_MapEmbeddedWindow($/;"	f	file:
Tk_MapWindow	generic/tkDecls.h	1417;"	d
Tk_MapWindow	generic/tkWindow.c	/^Tk_MapWindow($/;"	f
Tk_MeasureChars	generic/tkDecls.h	1419;"	d
Tk_MeasureChars	macosx/tkMacOSXFont.c	/^Tk_MeasureChars($/;"	f
Tk_MeasureChars	unix/tkUnixFont.c	/^Tk_MeasureChars($/;"	f
Tk_MeasureChars	unix/tkUnixRFont.c	/^Tk_MeasureChars($/;"	f
Tk_MeasureChars	win/tkWinFont.c	/^Tk_MeasureChars($/;"	f
Tk_MenuObjCmd	generic/tkMenu.c	/^Tk_MenuObjCmd($/;"	f
Tk_MenubuttonObjCmd	generic/tkMenubutton.c	/^Tk_MenubuttonObjCmd($/;"	f
Tk_MessageBoxCmd	unix/tkUnixDialog.c	/^Tk_MessageBoxCmd($/;"	f
Tk_MessageBoxObjCmd	macosx/tkMacOSXDialog.c	/^Tk_MessageBoxObjCmd($/;"	f
Tk_MessageBoxObjCmd	win/tkWinDialog.c	/^Tk_MessageBoxObjCmd($/;"	f
Tk_MessageObjCmd	generic/tkMessage.c	/^Tk_MessageObjCmd($/;"	f
Tk_MinReqHeight	generic/tk.h	761;"	d
Tk_MinReqWidth	generic/tk.h	760;"	d
Tk_MoveResizeWindow	generic/tkDecls.h	1421;"	d
Tk_MoveResizeWindow	generic/tkWindow.c	/^Tk_MoveResizeWindow($/;"	f
Tk_MoveToplevelWindow	generic/tkDecls.h	1425;"	d
Tk_MoveToplevelWindow	macosx/tkMacOSXWm.c	/^Tk_MoveToplevelWindow($/;"	f
Tk_MoveToplevelWindow	unix/tkUnixWm.c	/^Tk_MoveToplevelWindow($/;"	f
Tk_MoveToplevelWindow	win/tkWinWm.c	/^Tk_MoveToplevelWindow($/;"	f
Tk_MoveWindow	generic/tkDecls.h	1423;"	d
Tk_MoveWindow	generic/tkWindow.c	/^Tk_MoveWindow($/;"	f
Tk_Name	generic/tk.h	722;"	d
Tk_NameOf3DBorder	generic/tk3d.c	/^Tk_NameOf3DBorder($/;"	f
Tk_NameOf3DBorder	generic/tkDecls.h	1427;"	d
Tk_NameOfAnchor	generic/tkDecls.h	1429;"	d
Tk_NameOfAnchor	generic/tkGet.c	/^Tk_NameOfAnchor($/;"	f
Tk_NameOfBitmap	generic/tkBitmap.c	/^Tk_NameOfBitmap($/;"	f
Tk_NameOfBitmap	generic/tkDecls.h	1431;"	d
Tk_NameOfCapStyle	generic/tkDecls.h	1433;"	d
Tk_NameOfCapStyle	generic/tkGet.c	/^Tk_NameOfCapStyle($/;"	f
Tk_NameOfColor	generic/tkColor.c	/^Tk_NameOfColor($/;"	f
Tk_NameOfColor	generic/tkDecls.h	1435;"	d
Tk_NameOfCursor	generic/tkCursor.c	/^Tk_NameOfCursor($/;"	f
Tk_NameOfCursor	generic/tkDecls.h	1437;"	d
Tk_NameOfFont	generic/tkDecls.h	1439;"	d
Tk_NameOfFont	generic/tkFont.c	/^Tk_NameOfFont($/;"	f
Tk_NameOfImage	generic/tkDecls.h	1441;"	d
Tk_NameOfImage	generic/tkImage.c	/^Tk_NameOfImage($/;"	f
Tk_NameOfJoinStyle	generic/tkDecls.h	1443;"	d
Tk_NameOfJoinStyle	generic/tkGet.c	/^Tk_NameOfJoinStyle($/;"	f
Tk_NameOfJustify	generic/tkDecls.h	1445;"	d
Tk_NameOfJustify	generic/tkGet.c	/^Tk_NameOfJustify($/;"	f
Tk_NameOfRelief	generic/tk3d.c	/^Tk_NameOfRelief($/;"	f
Tk_NameOfRelief	generic/tkDecls.h	1447;"	d
Tk_NameOfStyle	generic/tkDecls.h	1677;"	d
Tk_NameOfStyle	generic/tkStyle.c	/^Tk_NameOfStyle($/;"	f
Tk_NameToWindow	generic/tkDecls.h	1449;"	d
Tk_NameToWindow	generic/tkWindow.c	/^Tk_NameToWindow($/;"	f
Tk_ObjCustomOption	generic/tk.h	/^typedef struct Tk_ObjCustomOption {$/;"	s
Tk_ObjCustomOption	generic/tk.h	/^} Tk_ObjCustomOption;$/;"	t	typeref:struct:Tk_ObjCustomOption
Tk_Offset	generic/tk.h	270;"	d
Tk_Offset	generic/tk.h	272;"	d
Tk_OptionObjCmd	generic/tkOption.c	/^Tk_OptionObjCmd($/;"	f
Tk_OptionParseProc	generic/tk.h	/^typedef int (Tk_OptionParseProc) (ClientData clientData, Tcl_Interp *interp,$/;"	t
Tk_OptionPrintProc	generic/tk.h	/^typedef CONST86 char *(Tk_OptionPrintProc) (ClientData clientData,$/;"	t
Tk_OptionSpec	generic/tk.h	/^typedef struct Tk_OptionSpec {$/;"	s
Tk_OptionSpec	generic/tk.h	/^} Tk_OptionSpec;$/;"	t	typeref:struct:Tk_OptionSpec
Tk_OptionTable	generic/tk.h	/^typedef struct Tk_OptionTable_ *Tk_OptionTable;$/;"	t	typeref:struct:Tk_OptionTable_
Tk_OptionType	generic/tk.h	/^} Tk_OptionType;$/;"	t	typeref:enum:__anon3
Tk_Outline	generic/tk.h	/^typedef struct Tk_Outline {$/;"	s
Tk_Outline	generic/tk.h	/^} Tk_Outline;$/;"	t	typeref:struct:Tk_Outline
Tk_OwnSelection	generic/tkDecls.h	1451;"	d
Tk_OwnSelection	generic/tkSelect.c	/^Tk_OwnSelection($/;"	f
Tk_PackObjCmd	generic/tkPack.c	/^Tk_PackObjCmd($/;"	f
Tk_PanedWindowObjCmd	generic/tkPanedWindow.c	/^Tk_PanedWindowObjCmd($/;"	f
Tk_Parent	generic/tk.h	762;"	d
Tk_ParseArgv	generic/tkArgv.c	/^Tk_ParseArgv($/;"	f
Tk_ParseArgv	generic/tkDecls.h	1453;"	d
Tk_PathName	generic/tk.h	721;"	d
Tk_PhotoBlank	generic/tkDecls.h	1461;"	d
Tk_PhotoBlank	generic/tkImgPhoto.c	/^Tk_PhotoBlank($/;"	f
Tk_PhotoExpand	generic/tk.h	1589;"	d
Tk_PhotoExpand	generic/tk.h	1591;"	d
Tk_PhotoExpand	generic/tkDecls.h	1695;"	d
Tk_PhotoExpand	generic/tkImgPhoto.c	/^Tk_PhotoExpand($/;"	f
Tk_PhotoExpand_Panic	generic/tkDecls.h	1463;"	d
Tk_PhotoExpand_Panic	generic/tkImgPhoto.c	/^Tk_PhotoExpand_Panic($/;"	f
Tk_PhotoGetImage	generic/tkDecls.h	1459;"	d
Tk_PhotoGetImage	generic/tkImgPhoto.c	/^Tk_PhotoGetImage($/;"	f
Tk_PhotoGetSize	generic/tkDecls.h	1465;"	d
Tk_PhotoGetSize	generic/tkImgPhoto.c	/^Tk_PhotoGetSize($/;"	f
Tk_PhotoHandle	generic/tk.h	/^typedef void *Tk_PhotoHandle;$/;"	t
Tk_PhotoImageBlock	generic/tk.h	/^typedef struct Tk_PhotoImageBlock {$/;"	s
Tk_PhotoImageBlock	generic/tk.h	/^} Tk_PhotoImageBlock;$/;"	t	typeref:struct:Tk_PhotoImageBlock
Tk_PhotoImageFormat	generic/tk.h	/^struct Tk_PhotoImageFormat {$/;"	s
Tk_PhotoImageFormat	generic/tk.h	/^typedef struct Tk_PhotoImageFormat Tk_PhotoImageFormat;$/;"	t	typeref:struct:Tk_PhotoImageFormat
Tk_PhotoPutBlock	generic/tk.h	1567;"	d
Tk_PhotoPutBlock	generic/tk.h	1569;"	d
Tk_PhotoPutBlock	generic/tk.h	1578;"	d
Tk_PhotoPutBlock	generic/tk.h	1580;"	d
Tk_PhotoPutBlock	generic/tkDecls.h	1697;"	d
Tk_PhotoPutBlock	generic/tkImgPhoto.c	/^Tk_PhotoPutBlock($/;"	f
Tk_PhotoPutBlock_NoComposite	generic/tkDecls.h	1455;"	d
Tk_PhotoPutBlock_NoComposite	generic/tkImgPhoto.c	/^Tk_PhotoPutBlock_NoComposite($/;"	f
Tk_PhotoPutBlock_Panic	generic/tkDecls.h	1657;"	d
Tk_PhotoPutBlock_Panic	generic/tkImgPhoto.c	/^Tk_PhotoPutBlock_Panic($/;"	f
Tk_PhotoPutZoomedBlock	generic/tk.h	1571;"	d
Tk_PhotoPutZoomedBlock	generic/tk.h	1573;"	d
Tk_PhotoPutZoomedBlock	generic/tk.h	1582;"	d
Tk_PhotoPutZoomedBlock	generic/tk.h	1584;"	d
Tk_PhotoPutZoomedBlock	generic/tkDecls.h	1699;"	d
Tk_PhotoPutZoomedBlock	generic/tkImgPhoto.c	/^Tk_PhotoPutZoomedBlock($/;"	f
Tk_PhotoPutZoomedBlock_NoComposite	generic/tkDecls.h	1457;"	d
Tk_PhotoPutZoomedBlock_NoComposite	generic/tkImgPhoto.c	/^Tk_PhotoPutZoomedBlock_NoComposite($/;"	f
Tk_PhotoPutZoomedBlock_Panic	generic/tkDecls.h	1659;"	d
Tk_PhotoPutZoomedBlock_Panic	generic/tkImgPhoto.c	/^Tk_PhotoPutZoomedBlock_Panic($/;"	f
Tk_PhotoSetSize	generic/tk.h	1593;"	d
Tk_PhotoSetSize	generic/tk.h	1595;"	d
Tk_PhotoSetSize	generic/tkDecls.h	1701;"	d
Tk_PhotoSetSize	generic/tkImgPhoto.c	/^Tk_PhotoSetSize($/;"	f
Tk_PhotoSetSize_Panic	generic/tkDecls.h	1467;"	d
Tk_PhotoSetSize_Panic	generic/tkImgPhoto.c	/^Tk_PhotoSetSize_Panic($/;"	f
Tk_PkgInitStubsCheck	generic/tkWindow.c	/^Tk_PkgInitStubsCheck($/;"	f
Tk_PlaceObjCmd	generic/tkPlace.c	/^Tk_PlaceObjCmd($/;"	f
Tk_PointToChar	generic/tkDecls.h	1469;"	d
Tk_PointToChar	generic/tkFont.c	/^Tk_PointToChar($/;"	f
Tk_PointerEvent	generic/tkPlatDecls.h	135;"	d
Tk_PointerEvent	generic/tkStubInit.c	173;"	d	file:
Tk_PointerEvent	win/tkWinPointer.c	/^Tk_PointerEvent($/;"	f
Tk_PostscriptBitmap	generic/tkCanvPs.c	/^Tk_PostscriptBitmap($/;"	f
Tk_PostscriptBitmap	generic/tkDecls.h	1627;"	d
Tk_PostscriptColor	generic/tkCanvPs.c	/^Tk_PostscriptColor($/;"	f
Tk_PostscriptColor	generic/tkDecls.h	1629;"	d
Tk_PostscriptFont	generic/tkCanvPs.c	/^Tk_PostscriptFont($/;"	f
Tk_PostscriptFont	generic/tkDecls.h	1631;"	d
Tk_PostscriptFontName	generic/tkDecls.h	1471;"	d
Tk_PostscriptFontName	generic/tkFont.c	/^Tk_PostscriptFontName($/;"	f
Tk_PostscriptImage	generic/tkDecls.h	1633;"	d
Tk_PostscriptImage	generic/tkImage.c	/^Tk_PostscriptImage($/;"	f
Tk_PostscriptInfo	generic/tk.h	/^typedef struct Tk_PostscriptInfo_ *Tk_PostscriptInfo;$/;"	t	typeref:struct:Tk_PostscriptInfo_
Tk_PostscriptPath	generic/tkCanvPs.c	/^Tk_PostscriptPath($/;"	f
Tk_PostscriptPath	generic/tkDecls.h	1635;"	d
Tk_PostscriptPhoto	generic/tkCanvPs.c	/^Tk_PostscriptPhoto($/;"	f
Tk_PostscriptPhoto	generic/tkDecls.h	1641;"	d
Tk_PostscriptStipple	generic/tkCanvPs.c	/^Tk_PostscriptStipple($/;"	f
Tk_PostscriptStipple	generic/tkDecls.h	1637;"	d
Tk_PostscriptY	generic/tkCanvPs.c	/^Tk_PostscriptY($/;"	f
Tk_PostscriptY	generic/tkDecls.h	1639;"	d
Tk_Preserve	generic/tk.h	1495;"	d
Tk_PreserveColormap	generic/tkDecls.h	1473;"	d
Tk_PreserveColormap	generic/tkVisual.c	/^Tk_PreserveColormap($/;"	f
Tk_QueueWindowEvent	generic/tkDecls.h	1475;"	d
Tk_QueueWindowEvent	generic/tkEvent.c	/^Tk_QueueWindowEvent($/;"	f
Tk_RadiobuttonObjCmd	generic/tkButton.c	/^Tk_RadiobuttonObjCmd($/;"	f
Tk_RaiseObjCmd	generic/tkCmds.c	/^Tk_RaiseObjCmd($/;"	f
Tk_RedrawImage	generic/tkDecls.h	1477;"	d
Tk_RedrawImage	generic/tkImage.c	/^Tk_RedrawImage($/;"	f
Tk_RegisterStyleEngine	generic/tkDecls.h	1663;"	d
Tk_RegisterStyleEngine	generic/tkStyle.c	/^Tk_RegisterStyleEngine($/;"	f
Tk_RegisterStyledElement	generic/tkDecls.h	1667;"	d
Tk_RegisterStyledElement	generic/tkStyle.c	/^Tk_RegisterStyledElement($/;"	f
Tk_Release	generic/tk.h	1496;"	d
Tk_ReqHeight	generic/tk.h	748;"	d
Tk_ReqWidth	generic/tk.h	747;"	d
Tk_ResetOutlineGC	generic/tkCanvUtil.c	/^Tk_ResetOutlineGC($/;"	f
Tk_ResetOutlineGC	generic/tkDecls.h	1615;"	d
Tk_ResetUserInactiveTime	generic/tkDecls.h	1705;"	d
Tk_ResetUserInactiveTime	macosx/tkMacOSXXStubs.c	/^Tk_ResetUserInactiveTime($/;"	f
Tk_ResetUserInactiveTime	unix/tkUnix.c	/^Tk_ResetUserInactiveTime($/;"	f
Tk_ResetUserInactiveTime	win/tkWinX.c	/^Tk_ResetUserInactiveTime($/;"	f
Tk_ResizeWindow	generic/tkDecls.h	1479;"	d
Tk_ResizeWindow	generic/tkWindow.c	/^Tk_ResizeWindow($/;"	f
Tk_RestackWindow	generic/tkDecls.h	1481;"	d
Tk_RestackWindow	generic/tkWindow.c	/^Tk_RestackWindow($/;"	f
Tk_RestoreSavedOptions	generic/tkConfig.c	/^Tk_RestoreSavedOptions($/;"	f
Tk_RestoreSavedOptions	generic/tkDecls.h	1593;"	d
Tk_RestrictAction	generic/tk.h	/^} Tk_RestrictAction;$/;"	t	typeref:enum:__anon6
Tk_RestrictEvents	generic/tkDecls.h	1483;"	d
Tk_RestrictEvents	generic/tkEvent.c	/^Tk_RestrictEvents($/;"	f
Tk_RestrictProc	generic/tk.h	/^typedef Tk_RestrictAction (Tk_RestrictProc) (ClientData clientData,$/;"	t
Tk_SafeInit	generic/tkDecls.h	1485;"	d
Tk_SafeInit	generic/tkDecls.h	1721;"	d
Tk_SafeInit	generic/tkWindow.c	/^Tk_SafeInit($/;"	f
Tk_SavedOption	generic/tk.h	/^typedef struct Tk_SavedOption {$/;"	s
Tk_SavedOption	generic/tk.h	/^} Tk_SavedOption;$/;"	t	typeref:struct:Tk_SavedOption
Tk_SavedOptions	generic/tk.h	/^typedef struct Tk_SavedOptions {$/;"	s
Tk_SavedOptions	generic/tk.h	/^} Tk_SavedOptions;$/;"	t	typeref:struct:Tk_SavedOptions
Tk_ScaleObjCmd	generic/tkScale.c	/^Tk_ScaleObjCmd($/;"	f
Tk_Screen	generic/tk.h	716;"	d
Tk_ScreenNumber	generic/tk.h	715;"	d
Tk_ScrollbarObjCmd	generic/tkScrollbar.c	/^Tk_ScrollbarObjCmd($/;"	f
Tk_SegCheckProc	generic/tkText.h	/^typedef void		Tk_SegCheckProc(TkTextSegment *segPtr,$/;"	t
Tk_SegCleanupProc	generic/tkText.h	/^typedef TkTextSegment *	Tk_SegCleanupProc(struct TkTextSegment *segPtr,$/;"	t
Tk_SegDeleteProc	generic/tkText.h	/^typedef int		Tk_SegDeleteProc(struct TkTextSegment *segPtr,$/;"	t
Tk_SegLayoutProc	generic/tkText.h	/^typedef int		Tk_SegLayoutProc(struct TkText *textPtr,$/;"	t
Tk_SegLineChangeProc	generic/tkText.h	/^typedef void		Tk_SegLineChangeProc(struct TkTextSegment *segPtr,$/;"	t
Tk_SegSplitProc	generic/tkText.h	/^typedef TkTextSegment *	Tk_SegSplitProc(struct TkTextSegment *segPtr,$/;"	t
Tk_SegType	generic/tkText.h	/^typedef struct Tk_SegType {$/;"	s
Tk_SegType	generic/tkText.h	/^} Tk_SegType;$/;"	t	typeref:struct:Tk_SegType
Tk_SelectionObjCmd	generic/tkSelect.c	/^Tk_SelectionObjCmd($/;"	f
Tk_SelectionProc	generic/tk.h	/^typedef int (Tk_SelectionProc) (ClientData clientData, int offset,$/;"	t
Tk_SendObjCmd	macosx/tkMacOSXSend.c	/^Tk_SendObjCmd($/;"	f
Tk_SendObjCmd	unix/tkUnixSend.c	/^Tk_SendObjCmd($/;"	f
Tk_SendObjCmd	win/tkWinSend.c	/^Tk_SendObjCmd($/;"	f
Tk_SetAppName	generic/tkDecls.h	1487;"	d
Tk_SetAppName	macosx/tkMacOSXSend.c	/^Tk_SetAppName($/;"	f
Tk_SetAppName	unix/tkUnixSend.c	/^Tk_SetAppName($/;"	f
Tk_SetAppName	win/tkWinSend.c	/^Tk_SetAppName($/;"	f
Tk_SetBackgroundFromBorder	generic/tk3d.c	/^Tk_SetBackgroundFromBorder($/;"	f
Tk_SetBackgroundFromBorder	generic/tkDecls.h	1489;"	d
Tk_SetCaretPos	generic/tkDecls.h	1655;"	d
Tk_SetCaretPos	macosx/tkMacOSXKeyEvent.c	/^Tk_SetCaretPos($/;"	f
Tk_SetCaretPos	unix/tkUnixKey.c	/^Tk_SetCaretPos($/;"	f
Tk_SetCaretPos	win/tkWinX.c	/^Tk_SetCaretPos($/;"	f
Tk_SetClass	generic/tkDecls.h	1491;"	d
Tk_SetClass	generic/tkWindow.c	/^Tk_SetClass($/;"	f
Tk_SetClassProcs	generic/tkDecls.h	1649;"	d
Tk_SetClassProcs	generic/tkWindow.c	/^Tk_SetClassProcs($/;"	f
Tk_SetGrid	generic/tkDecls.h	1493;"	d
Tk_SetGrid	macosx/tkMacOSXWm.c	/^Tk_SetGrid($/;"	f
Tk_SetGrid	unix/tkUnixWm.c	/^Tk_SetGrid($/;"	f
Tk_SetGrid	win/tkWinWm.c	/^Tk_SetGrid($/;"	f
Tk_SetInternalBorder	generic/tkDecls.h	1495;"	d
Tk_SetInternalBorder	generic/tkGeometry.c	/^Tk_SetInternalBorder($/;"	f
Tk_SetInternalBorderEx	generic/tkDecls.h	1651;"	d
Tk_SetInternalBorderEx	generic/tkGeometry.c	/^Tk_SetInternalBorderEx($/;"	f
Tk_SetMinimumRequestSize	generic/tkDecls.h	1653;"	d
Tk_SetMinimumRequestSize	generic/tkGeometry.c	/^Tk_SetMinimumRequestSize($/;"	f
Tk_SetOptions	generic/tkConfig.c	/^Tk_SetOptions($/;"	f
Tk_SetOptions	generic/tkDecls.h	1595;"	d
Tk_SetTSOrigin	generic/tkDecls.h	1619;"	d
Tk_SetTSOrigin	generic/tkImage.c	/^Tk_SetTSOrigin($/;"	f
Tk_SetWindowBackground	generic/tkDecls.h	1497;"	d
Tk_SetWindowBackground	generic/tkWindow.c	/^Tk_SetWindowBackground($/;"	f
Tk_SetWindowBackgroundPixmap	generic/tkDecls.h	1499;"	d
Tk_SetWindowBackgroundPixmap	generic/tkWindow.c	/^Tk_SetWindowBackgroundPixmap($/;"	f
Tk_SetWindowBorder	generic/tkDecls.h	1501;"	d
Tk_SetWindowBorder	generic/tkWindow.c	/^Tk_SetWindowBorder($/;"	f
Tk_SetWindowBorderPixmap	generic/tkDecls.h	1505;"	d
Tk_SetWindowBorderPixmap	generic/tkWindow.c	/^Tk_SetWindowBorderPixmap($/;"	f
Tk_SetWindowBorderWidth	generic/tkDecls.h	1503;"	d
Tk_SetWindowBorderWidth	generic/tkWindow.c	/^Tk_SetWindowBorderWidth($/;"	f
Tk_SetWindowColormap	generic/tkDecls.h	1507;"	d
Tk_SetWindowColormap	generic/tkWindow.c	/^Tk_SetWindowColormap($/;"	f
Tk_SetWindowVisual	generic/tkDecls.h	1509;"	d
Tk_SetWindowVisual	generic/tkWindow.c	/^Tk_SetWindowVisual($/;"	f
Tk_SizeOfBitmap	generic/tkBitmap.c	/^Tk_SizeOfBitmap($/;"	f
Tk_SizeOfBitmap	generic/tkDecls.h	1511;"	d
Tk_SizeOfImage	generic/tkDecls.h	1513;"	d
Tk_SizeOfImage	generic/tkImage.c	/^Tk_SizeOfImage($/;"	f
Tk_Sleep	generic/tk.h	1489;"	d
Tk_SmoothMethod	generic/tk.h	/^typedef struct Tk_SmoothMethod {$/;"	s
Tk_SmoothMethod	generic/tk.h	/^} Tk_SmoothMethod;$/;"	t	typeref:struct:Tk_SmoothMethod
Tk_SpinboxObjCmd	generic/tkEntry.c	/^Tk_SpinboxObjCmd($/;"	f
Tk_State	generic/tk.h	/^} Tk_State;$/;"	t	typeref:enum:__anon11
Tk_StrictMotif	generic/tkDecls.h	1515;"	d
Tk_StrictMotif	generic/tkWindow.c	/^Tk_StrictMotif($/;"	f
Tk_Style	generic/tk.h	/^typedef struct Tk_Style_ *Tk_Style;$/;"	t	typeref:struct:Tk_Style_
Tk_StyleEngine	generic/tk.h	/^typedef struct Tk_StyleEngine_ *Tk_StyleEngine;$/;"	t	typeref:struct:Tk_StyleEngine_
Tk_StyledElement	generic/tk.h	/^typedef struct Tk_StyledElement_ *Tk_StyledElement;$/;"	t	typeref:struct:Tk_StyledElement_
Tk_TSOffset	generic/tk.h	/^typedef struct Tk_TSOffset {$/;"	s
Tk_TSOffset	generic/tk.h	/^} Tk_TSOffset;$/;"	t	typeref:struct:Tk_TSOffset
Tk_TextLayout	generic/tk.h	/^typedef struct Tk_TextLayout_ *Tk_TextLayout;$/;"	t	typeref:struct:Tk_TextLayout_
Tk_TextLayoutToPostscript	generic/tkDecls.h	1517;"	d
Tk_TextLayoutToPostscript	generic/tkFont.c	/^Tk_TextLayoutToPostscript($/;"	f
Tk_TextObjCmd	generic/tkText.c	/^Tk_TextObjCmd($/;"	f
Tk_TextWidth	generic/tkDecls.h	1519;"	d
Tk_TextWidth	generic/tkFont.c	/^Tk_TextWidth($/;"	f
Tk_TimerProc	generic/tk.h	1478;"	d
Tk_TimerToken	generic/tk.h	1479;"	d
Tk_TkwaitObjCmd	generic/tkCmds.c	/^Tk_TkwaitObjCmd($/;"	f
Tk_TopCoordsToWindow	generic/tkIntPlatDecls.h	606;"	d
Tk_TopCoordsToWindow	macosx/tkMacOSXWm.c	/^Tk_TopCoordsToWindow($/;"	f
Tk_TopWinHierarchy	generic/tk.h	743;"	d
Tk_ToplevelObjCmd	generic/tkFrame.c	/^Tk_ToplevelObjCmd($/;"	f
Tk_TranslateWinEvent	generic/tkPlatDecls.h	137;"	d
Tk_TranslateWinEvent	generic/tkStubInit.c	174;"	d	file:
Tk_TranslateWinEvent	win/tkWinX.c	/^Tk_TranslateWinEvent($/;"	f
Tk_Uid	generic/tk.h	/^typedef const char *Tk_Uid;$/;"	t
Tk_UndefineCursor	generic/tkDecls.h	1521;"	d
Tk_UndefineCursor	generic/tkWindow.c	/^Tk_UndefineCursor($/;"	f
Tk_UnderlineChars	generic/tkDecls.h	1523;"	d
Tk_UnderlineChars	generic/tkFont.c	/^Tk_UnderlineChars($/;"	f
Tk_UnderlineTextLayout	generic/tkDecls.h	1525;"	d
Tk_UnderlineTextLayout	generic/tkFont.c	/^Tk_UnderlineTextLayout($/;"	f
Tk_Ungrab	generic/tkDecls.h	1527;"	d
Tk_Ungrab	generic/tkGrab.c	/^Tk_Ungrab($/;"	f
Tk_UnmaintainGeometry	generic/tkDecls.h	1529;"	d
Tk_UnmaintainGeometry	generic/tkGeometry.c	/^Tk_UnmaintainGeometry($/;"	f
Tk_UnmapWindow	generic/tkDecls.h	1531;"	d
Tk_UnmapWindow	generic/tkWindow.c	/^Tk_UnmapWindow($/;"	f
Tk_UnsetGrid	generic/tkDecls.h	1533;"	d
Tk_UnsetGrid	macosx/tkMacOSXWm.c	/^Tk_UnsetGrid($/;"	f
Tk_UnsetGrid	unix/tkUnixWm.c	/^Tk_UnsetGrid($/;"	f
Tk_UnsetGrid	win/tkWinWm.c	/^Tk_UnsetGrid($/;"	f
Tk_UpdateObjCmd	generic/tkCmds.c	/^Tk_UpdateObjCmd($/;"	f
Tk_UpdatePointer	generic/tkDecls.h	1535;"	d
Tk_UpdatePointer	generic/tkPointer.c	/^Tk_UpdatePointer($/;"	f
Tk_UpdatePointer	unix/tkUnix.c	/^Tk_UpdatePointer($/;"	f
Tk_Visual	generic/tk.h	719;"	d
Tk_Width	generic/tk.h	726;"	d
Tk_WinManaged	generic/tk.h	741;"	d
Tk_Window	generic/tk.h	/^typedef struct Tk_Window_ *Tk_Window;$/;"	t	typeref:struct:Tk_Window_
Tk_WindowId	generic/tk.h	720;"	d
Tk_WinfoObjCmd	generic/tkCmds.c	/^Tk_WinfoObjCmd($/;"	f
Tk_WmObjCmd	macosx/tkMacOSXWm.c	/^Tk_WmObjCmd($/;"	f
Tk_WmObjCmd	unix/tkUnixWm.c	/^Tk_WmObjCmd($/;"	f
Tk_WmObjCmd	win/tkWinWm.c	/^Tk_WmObjCmd($/;"	f
Tk_X	generic/tk.h	724;"	d
Tk_Y	generic/tk.h	725;"	d
TkcCreateBitmap	generic/tkCanvBmap.c	/^TkcCreateBitmap($/;"	f	file:
TkcGetCursor	generic/tkCursor.c	/^TkcGetCursor($/;"	f	file:
TkpAlwaysShowSelection	generic/tkWindow.c	/^TkpAlwaysShowSelection($/;"	f
TkpBuildRegionFromAlphaData	macosx/tkMacOSXRegion.c	/^TkpBuildRegionFromAlphaData($/;"	f
TkpBuildRegionFromAlphaData	unix/tkUnix.c	/^TkpBuildRegionFromAlphaData($/;"	f
TkpBuildRegionFromAlphaData	win/tkWinRegion.c	/^TkpBuildRegionFromAlphaData($/;"	f
TkpButtonSetDefaults	macosx/tkMacOSXButton.c	/^TkpButtonSetDefaults()$/;"	f
TkpButtonSetDefaults	unix/tkUnixPort.h	166;"	d
TkpButtonSetDefaults	win/tkWinButton.c	/^TkpButtonSetDefaults()$/;"	f
TkpChangeFocus	generic/tkIntDecls.h	891;"	d
TkpChangeFocus	macosx/tkMacOSXWm.c	/^TkpChangeFocus($/;"	f
TkpChangeFocus	unix/tkUnixFocus.c	/^TkpChangeFocus($/;"	f
TkpChangeFocus	win/tkWinPointer.c	/^TkpChangeFocus($/;"	f
TkpClaimFocus	generic/tkIntDecls.h	895;"	d
TkpClaimFocus	macosx/tkMacOSXEmbed.c	/^TkpClaimFocus($/;"	f
TkpClaimFocus	unix/tkUnixEmbed.c	/^TkpClaimFocus($/;"	f
TkpClaimFocus	win/tkWinEmbed.c	/^TkpClaimFocus($/;"	f
TkpClipDrawableToRect	macosx/tkMacOSXDraw.c	/^TkpClipDrawableToRect($/;"	f
TkpClipMask	generic/tkInt.h	/^typedef struct TkpClipMask {$/;"	s
TkpClipMask	generic/tkInt.h	/^} TkpClipMask;$/;"	t	typeref:struct:TkpClipMask
TkpCloseDisplay	generic/tkIntDecls.h	893;"	d
TkpCloseDisplay	macosx/tkMacOSXXStubs.c	/^TkpCloseDisplay($/;"	f
TkpCloseDisplay	unix/tkUnixEvent.c	/^TkpCloseDisplay($/;"	f
TkpCloseDisplay	win/tkWinX.c	/^TkpCloseDisplay($/;"	f
TkpCmapStressed	generic/tkIntPlatDecls.h	510;"	d
TkpCmapStressed	generic/tkIntPlatDecls.h	639;"	d
TkpCmapStressed	generic/tkStubInit.c	/^TkpCmapStressed(Tk_Window tkwin, Colormap colormap)$/;"	f
TkpCmapStressed	macosx/tkMacOSXPort.h	126;"	d
TkpCmapStressed	unix/tkUnixColor.c	/^TkpCmapStressed($/;"	f
TkpComputeButtonGeometry	macosx/tkMacOSXButton.c	/^TkpComputeButtonGeometry($/;"	f
TkpComputeButtonGeometry	unix/tkUnixButton.c	/^TkpComputeButtonGeometry($/;"	f
TkpComputeButtonGeometry	win/tkWinButton.c	/^TkpComputeButtonGeometry($/;"	f
TkpComputeMenuButtonGeometry	macosx/tkMacOSXMenubutton.c	/^TkpComputeMenuButtonGeometry(butPtr)$/;"	f
TkpComputeMenuButtonGeometry	unix/tkUnixMenubu.c	/^TkpComputeMenuButtonGeometry($/;"	f
TkpComputeMenubarGeometry	macosx/tkMacOSXMenu.c	/^TkpComputeMenubarGeometry($/;"	f
TkpComputeMenubarGeometry	unix/tkUnixMenu.c	/^TkpComputeMenubarGeometry($/;"	f
TkpComputeMenubarGeometry	win/tkWinMenu.c	/^TkpComputeMenubarGeometry($/;"	f
TkpComputeScrollbarGeometry	macosx/tkMacOSXScrlbr.c	/^TkpComputeScrollbarGeometry($/;"	f
TkpComputeScrollbarGeometry	unix/tkUnixScrlbr.c	/^TkpComputeScrollbarGeometry($/;"	f
TkpComputeScrollbarGeometry	win/tkWinScrlbr.c	/^TkpComputeScrollbarGeometry($/;"	f
TkpComputeStandardMenuGeometry	macosx/tkMacOSXMenu.c	/^TkpComputeStandardMenuGeometry($/;"	f
TkpComputeStandardMenuGeometry	unix/tkUnixMenu.c	/^TkpComputeStandardMenuGeometry($/;"	f
TkpComputeStandardMenuGeometry	win/tkWinMenu.c	/^TkpComputeStandardMenuGeometry($/;"	f
TkpConfigureMenuEntry	macosx/tkMacOSXMenu.c	/^TkpConfigureMenuEntry($/;"	f
TkpConfigureMenuEntry	unix/tkUnixMenu.c	/^TkpConfigureMenuEntry($/;"	f
TkpConfigureMenuEntry	win/tkWinMenu.c	/^TkpConfigureMenuEntry($/;"	f
TkpConfigureScrollbar	macosx/tkMacOSXScrlbr.c	/^TkpConfigureScrollbar($/;"	f
TkpConfigureScrollbar	unix/tkUnixScrlbr.c	/^TkpConfigureScrollbar($/;"	f
TkpConfigureScrollbar	win/tkWinScrlbr.c	/^TkpConfigureScrollbar($/;"	f
TkpCreateBusy	macosx/tkMacOSXEmbed.c	/^TkpCreateBusy($/;"	f
TkpCreateBusy	unix/tkUnixEmbed.c	/^TkpCreateBusy($/;"	f
TkpCreateBusy	win/tkWinWindow.c	/^TkpCreateBusy($/;"	f
TkpCreateButton	macosx/tkMacOSXButton.c	/^TkpCreateButton($/;"	f
TkpCreateButton	unix/tkUnixButton.c	/^TkpCreateButton($/;"	f
TkpCreateButton	win/tkWinButton.c	/^TkpCreateButton($/;"	f
TkpCreateMenuButton	macosx/tkMacOSXMenubutton.c	/^TkpCreateMenuButton($/;"	f
TkpCreateMenuButton	unix/tkUnixMenubu.c	/^TkpCreateMenuButton($/;"	f
TkpCreateNativeBitmap	generic/tkIntDecls.h	1021;"	d
TkpCreateNativeBitmap	macosx/tkMacOSXBitmap.c	/^TkpCreateNativeBitmap($/;"	f
TkpCreateNativeBitmap	unix/tkUnixPort.h	179;"	d
TkpCreateNativeBitmap	win/tkWinPort.h	120;"	d
TkpCreateScale	macosx/tkMacOSXScale.c	/^TkpCreateScale($/;"	f
TkpCreateScale	unix/tkUnixScale.c	/^TkpCreateScale($/;"	f
TkpCreateScrollbar	macosx/tkMacOSXScrlbr.c	/^TkpCreateScrollbar($/;"	f
TkpCreateScrollbar	unix/tkUnixScrlbr.c	/^TkpCreateScrollbar($/;"	f
TkpCreateScrollbar	win/tkWinScrlbr.c	/^TkpCreateScrollbar($/;"	f
TkpCursor	generic/tkInt.h	/^typedef struct TkpCursor_ *TkpCursor;$/;"	t	typeref:struct:TkpCursor_
TkpDefineNativeBitmaps	generic/tkIntDecls.h	1025;"	d
TkpDefineNativeBitmaps	macosx/tkMacOSXBitmap.c	/^TkpDefineNativeBitmaps(void)$/;"	f
TkpDefineNativeBitmaps	unix/tkUnixPort.h	178;"	d
TkpDefineNativeBitmaps	win/tkWinPort.h	119;"	d
TkpDeleteFont	macosx/tkMacOSXFont.c	/^TkpDeleteFont($/;"	f
TkpDeleteFont	unix/tkUnixFont.c	/^TkpDeleteFont($/;"	f
TkpDeleteFont	unix/tkUnixRFont.c	/^TkpDeleteFont($/;"	f
TkpDeleteFont	win/tkWinFont.c	/^TkpDeleteFont($/;"	f
TkpDestroyButton	macosx/tkMacOSXButton.c	/^TkpDestroyButton($/;"	f
TkpDestroyButton	unix/tkUnixPort.h	167;"	d
TkpDestroyButton	win/tkWinButton.c	/^TkpDestroyButton($/;"	f
TkpDestroyMenu	macosx/tkMacOSXMenu.c	/^TkpDestroyMenu($/;"	f
TkpDestroyMenu	unix/tkUnixMenu.c	/^TkpDestroyMenu($/;"	f
TkpDestroyMenu	win/tkWinMenu.c	/^TkpDestroyMenu($/;"	f
TkpDestroyMenuButton	macosx/tkMacOSXMenubutton.c	/^TkpDestroyMenuButton($/;"	f
TkpDestroyMenuButton	unix/tkUnixMenubu.c	/^TkpDestroyMenuButton($/;"	f
TkpDestroyMenuEntry	macosx/tkMacOSXMenu.c	/^TkpDestroyMenuEntry($/;"	f
TkpDestroyMenuEntry	unix/tkUnixMenu.c	/^TkpDestroyMenuEntry($/;"	f
TkpDestroyMenuEntry	win/tkWinMenu.c	/^TkpDestroyMenuEntry($/;"	f
TkpDestroyScale	macosx/tkMacOSXScale.c	/^TkpDestroyScale($/;"	f
TkpDestroyScale	unix/tkUnixScale.c	/^TkpDestroyScale($/;"	f
TkpDestroyScrollbar	macosx/tkMacOSXScrlbr.c	/^TkpDestroyScrollbar($/;"	f
TkpDestroyScrollbar	unix/tkUnixScrlbr.c	/^TkpDestroyScrollbar($/;"	f
TkpDestroyScrollbar	win/tkWinScrlbr.c	/^TkpDestroyScrollbar($/;"	f
TkpDisplayButton	macosx/tkMacOSXButton.c	/^TkpDisplayButton($/;"	f
TkpDisplayButton	unix/tkUnixButton.c	/^TkpDisplayButton($/;"	f
TkpDisplayButton	win/tkWinButton.c	/^TkpDisplayButton($/;"	f
TkpDisplayMenuButton	macosx/tkMacOSXMenubutton.c	/^TkpDisplayMenuButton($/;"	f
TkpDisplayMenuButton	unix/tkUnixMenubu.c	/^TkpDisplayMenuButton($/;"	f
TkpDisplayScale	macosx/tkMacOSXScale.c	/^TkpDisplayScale($/;"	f
TkpDisplayScale	unix/tkUnixScale.c	/^TkpDisplayScale($/;"	f
TkpDisplayScrollbar	macosx/tkMacOSXScrlbr.c	/^TkpDisplayScrollbar($/;"	f
TkpDisplayScrollbar	unix/tkUnixScrlbr.c	/^TkpDisplayScrollbar($/;"	f
TkpDisplayScrollbar	win/tkWinScrlbr.c	/^TkpDisplayScrollbar($/;"	f
TkpDisplayWarning	generic/tkIntDecls.h	897;"	d
TkpDisplayWarning	macosx/tkMacOSXInit.c	/^TkpDisplayWarning($/;"	f
TkpDisplayWarning	unix/tkUnixInit.c	/^TkpDisplayWarning($/;"	f
TkpDisplayWarning	win/tkWinInit.c	/^TkpDisplayWarning($/;"	f
TkpDrawCharsInContext	macosx/tkMacOSXFont.c	/^TkpDrawCharsInContext($/;"	f
TkpDrawCharsInContext	unix/tkUnixFont.c	/^TkpDrawCharsInContext($/;"	f
TkpDrawCharsInContext	win/tkWinFont.c	/^TkpDrawCharsInContext($/;"	f
TkpDrawCheckIndicator	unix/tkUnixButton.c	/^TkpDrawCheckIndicator($/;"	f
TkpDrawEntryBorderAndFocus	generic/tkEntry.c	/^TkpDrawEntryBorderAndFocus($/;"	f
TkpDrawEntryBorderAndFocus	macosx/tkMacOSXEntry.c	/^TkpDrawEntryBorderAndFocus($/;"	f
TkpDrawFrame	generic/tkIntDecls.h	1077;"	d
TkpDrawFrame	macosx/tkMacOSXDraw.c	/^TkpDrawFrame($/;"	f
TkpDrawFrame	unix/tkUnixDraw.c	/^TkpDrawFrame($/;"	f
TkpDrawFrame	win/tkWinDraw.c	/^TkpDrawFrame($/;"	f
TkpDrawHighlightBorder	generic/tkIntDecls.h	1043;"	d
TkpDrawHighlightBorder	macosx/tkMacOSXDraw.c	/^TkpDrawHighlightBorder ($/;"	f
TkpDrawHighlightBorder	unix/tkUnixDraw.c	/^TkpDrawHighlightBorder($/;"	f
TkpDrawHighlightBorder	win/tkWinDraw.c	/^TkpDrawHighlightBorder($/;"	f
TkpDrawMenuEntry	macosx/tkMacOSXMenu.c	/^TkpDrawMenuEntry($/;"	f
TkpDrawMenuEntry	unix/tkUnixMenu.c	/^TkpDrawMenuEntry($/;"	f
TkpDrawMenuEntry	win/tkWinMenu.c	/^TkpDrawMenuEntry($/;"	f
TkpDrawSpinboxButtons	generic/tkEntry.c	/^TkpDrawSpinboxButtons($/;"	f
TkpDrawSpinboxButtons	macosx/tkMacOSXEntry.c	/^TkpDrawSpinboxButtons($/;"	f
TkpFontPkgInit	macosx/tkMacOSXFont.c	/^TkpFontPkgInit($/;"	f
TkpFontPkgInit	unix/tkUnixFont.c	/^TkpFontPkgInit($/;"	f
TkpFontPkgInit	unix/tkUnixRFont.c	/^TkpFontPkgInit($/;"	f
TkpFontPkgInit	win/tkWinFont.c	/^TkpFontPkgInit($/;"	f
TkpFreeBorder	unix/tkUnix3d.c	/^TkpFreeBorder($/;"	f
TkpFreeBorder	win/tkWin3d.c	/^TkpFreeBorder($/;"	f
TkpFreeColor	macosx/tkMacOSXPort.h	127;"	d
TkpFreeColor	unix/tkUnixColor.c	/^TkpFreeColor($/;"	f
TkpFreeColor	win/tkWinColor.c	/^TkpFreeColor($/;"	f
TkpFreeCursor	generic/tkIntDecls.h	839;"	d
TkpFreeCursor	macosx/tkMacOSXCursor.c	/^TkpFreeCursor($/;"	f
TkpFreeCursor	unix/tkUnixCursor.c	/^TkpFreeCursor($/;"	f
TkpFreeCursor	win/tkWinCursor.c	/^TkpFreeCursor($/;"	f
TkpFreeGCCache	macosx/tkMacOSXColor.c	/^TkpFreeGCCache($/;"	f
TkpFreeGCCache	xlib/xgc.c	21;"	d	file:
TkpGCCache	macosx/tkMacOSXInt.h	/^} TkpGCCache;$/;"	t	typeref:struct:__anon197
TkpGetAppName	generic/tkIntDecls.h	899;"	d
TkpGetAppName	macosx/tkMacOSXInit.c	/^TkpGetAppName($/;"	f
TkpGetAppName	unix/tkUnixInit.c	/^TkpGetAppName($/;"	f
TkpGetAppName	win/tkWinInit.c	/^TkpGetAppName($/;"	f
TkpGetBindingXEvent	generic/tkBind.c	/^TkpGetBindingXEvent($/;"	f
TkpGetBorder	unix/tkUnix3d.c	/^TkpGetBorder(void)$/;"	f
TkpGetBorder	win/tkWin3d.c	/^TkpGetBorder(void)$/;"	f
TkpGetColor	macosx/tkMacOSXColor.c	/^TkpGetColor($/;"	f
TkpGetColor	unix/tkUnixColor.c	/^TkpGetColor($/;"	f
TkpGetColor	win/tkWinColor.c	/^TkpGetColor($/;"	f
TkpGetColorByValue	macosx/tkMacOSXColor.c	/^TkpGetColorByValue($/;"	f
TkpGetColorByValue	unix/tkUnixColor.c	/^TkpGetColorByValue($/;"	f
TkpGetColorByValue	win/tkWinColor.c	/^TkpGetColorByValue($/;"	f
TkpGetFontAttrsForChar	macosx/tkMacOSXFont.c	/^TkpGetFontAttrsForChar($/;"	f
TkpGetFontAttrsForChar	unix/tkUnixFont.c	/^TkpGetFontAttrsForChar($/;"	f
TkpGetFontAttrsForChar	unix/tkUnixRFont.c	/^TkpGetFontAttrsForChar($/;"	f
TkpGetFontAttrsForChar	win/tkWinFont.c	/^TkpGetFontAttrsForChar($/;"	f
TkpGetFontFamilies	macosx/tkMacOSXFont.c	/^TkpGetFontFamilies($/;"	f
TkpGetFontFamilies	unix/tkUnixFont.c	/^TkpGetFontFamilies($/;"	f
TkpGetFontFamilies	unix/tkUnixRFont.c	/^TkpGetFontFamilies($/;"	f
TkpGetFontFamilies	win/tkWinFont.c	/^TkpGetFontFamilies($/;"	f
TkpGetFontFromAttributes	macosx/tkMacOSXFont.c	/^TkpGetFontFromAttributes($/;"	f
TkpGetFontFromAttributes	unix/tkUnixFont.c	/^TkpGetFontFromAttributes($/;"	f
TkpGetFontFromAttributes	unix/tkUnixRFont.c	/^TkpGetFontFromAttributes($/;"	f
TkpGetFontFromAttributes	win/tkWinFont.c	/^TkpGetFontFromAttributes($/;"	f
TkpGetGCCache	xlib/xgc.c	/^TkpGetGCCache(GC gc) {$/;"	f
TkpGetGCCache	xlib/xgc.c	22;"	d	file:
TkpGetKeySym	generic/tkIntDecls.h	1049;"	d
TkpGetKeySym	macosx/tkMacOSXKeyboard.c	/^TkpGetKeySym($/;"	f
TkpGetKeySym	unix/tkUnixKey.c	/^TkpGetKeySym($/;"	f
TkpGetKeySym	win/tkWinKey.c	/^TkpGetKeySym($/;"	f
TkpGetMS	generic/tkIntPlatDecls.h	440;"	d
TkpGetMS	generic/tkIntPlatDecls.h	627;"	d
TkpGetMS	generic/tkStubInit.c	177;"	d	file:
TkpGetMS	macosx/tkMacOSXWm.c	/^TkpGetMS(void)$/;"	f
TkpGetMS	win/tkWinX.c	/^TkpGetMS(void)$/;"	f
TkpGetNativeAppBitmap	generic/tkIntDecls.h	1030;"	d
TkpGetNativeAppBitmap	macosx/tkMacOSXBitmap.c	/^TkpGetNativeAppBitmap($/;"	f
TkpGetNativeAppBitmap	unix/tkUnixPort.h	180;"	d
TkpGetNativeAppBitmap	win/tkWinPort.h	121;"	d
TkpGetNativeFont	macosx/tkMacOSXFont.c	/^TkpGetNativeFont($/;"	f
TkpGetNativeFont	unix/tkUnixFont.c	/^TkpGetNativeFont($/;"	f
TkpGetNativeFont	unix/tkUnixRFont.c	/^TkpGetNativeFont($/;"	f
TkpGetNativeFont	win/tkWinFont.c	/^TkpGetNativeFont($/;"	f
TkpGetOtherWindow	generic/tkIntDecls.h	901;"	d
TkpGetOtherWindow	macosx/tkMacOSXEmbed.c	/^TkpGetOtherWindow($/;"	f
TkpGetOtherWindow	unix/tkUnixEmbed.c	/^TkpGetOtherWindow($/;"	f
TkpGetOtherWindow	win/tkWinEmbed.c	/^TkpGetOtherWindow($/;"	f
TkpGetPixel	macosx/tkMacOSXPort.h	137;"	d
TkpGetPixel	win/tkWinPort.h	111;"	d
TkpGetShadows	unix/tkUnix3d.c	/^TkpGetShadows($/;"	f
TkpGetShadows	win/tkWin3d.c	/^TkpGetShadows($/;"	f
TkpGetString	generic/tkIntDecls.h	997;"	d
TkpGetString	macosx/tkMacOSXKeyboard.c	/^TkpGetString($/;"	f
TkpGetString	unix/tkUnixKey.c	/^TkpGetString($/;"	f
TkpGetString	win/tkWinKey.c	/^TkpGetString($/;"	f
TkpGetSubFonts	generic/tkIntDecls.h	999;"	d
TkpGetSubFonts	macosx/tkMacOSXFont.c	/^TkpGetSubFonts($/;"	f
TkpGetSubFonts	unix/tkUnixFont.c	/^TkpGetSubFonts($/;"	f
TkpGetSubFonts	unix/tkUnixRFont.c	/^TkpGetSubFonts($/;"	f
TkpGetSubFonts	win/tkWinFont.c	/^TkpGetSubFonts($/;"	f
TkpGetSystemDefault	generic/tkIntDecls.h	1001;"	d
TkpGetSystemDefault	macosx/tkMacOSXConfig.c	/^TkpGetSystemDefault($/;"	f
TkpGetSystemDefault	unix/tkUnixConfig.c	/^TkpGetSystemDefault($/;"	f
TkpGetSystemDefault	win/tkWinConfig.c	/^TkpGetSystemDefault($/;"	f
TkpGetWrapperWindow	generic/tkIntDecls.h	903;"	d
TkpGetWrapperWindow	macosx/tkMacOSXWm.c	/^TkpGetWrapperWindow($/;"	f
TkpGetWrapperWindow	unix/tkUnixWm.c	/^TkpGetWrapperWindow($/;"	f
TkpGetWrapperWindow	win/tkWinWm.c	/^TkpGetWrapperWindow($/;"	f
TkpHideBusyWindow	macosx/tkMacOSXEmbed.c	/^TkpHideBusyWindow($/;"	f
TkpHideBusyWindow	unix/tkUnixEmbed.c	/^TkpHideBusyWindow($/;"	f
TkpHideBusyWindow	win/tkWinWindow.c	/^TkpHideBusyWindow($/;"	f
TkpInit	generic/tkIntDecls.h	905;"	d
TkpInit	macosx/tkMacOSXInit.c	/^TkpInit($/;"	f
TkpInit	unix/tkUnixInit.c	/^TkpInit($/;"	f
TkpInit	win/tkWinInit.c	/^TkpInit($/;"	f
TkpInitGCCache	macosx/tkMacOSXColor.c	/^TkpInitGCCache($/;"	f
TkpInitGCCache	xlib/xgc.c	20;"	d	file:
TkpInitKeymapInfo	generic/tkIntDecls.h	1051;"	d
TkpInitKeymapInfo	macosx/tkMacOSXKeyboard.c	/^TkpInitKeymapInfo($/;"	f
TkpInitKeymapInfo	unix/tkUnixKey.c	/^TkpInitKeymapInfo($/;"	f
TkpInitKeymapInfo	win/tkWinKey.c	/^TkpInitKeymapInfo($/;"	f
TkpInitializeMenuBindings	generic/tkIntDecls.h	907;"	d
TkpInitializeMenuBindings	macosx/tkMacOSXMenu.c	/^TkpInitializeMenuBindings($/;"	f
TkpInitializeMenuBindings	unix/tkUnixMenu.c	/^TkpInitializeMenuBindings($/;"	f
TkpInitializeMenuBindings	win/tkWinMenu.c	/^TkpInitializeMenuBindings($/;"	f
TkpIsWindowFloating	generic/tkIntPlatDecls.h	614;"	d
TkpIsWindowFloating	macosx/tkMacOSXWm.c	/^TkpIsWindowFloating($/;"	f
TkpMakeContainer	generic/tkIntDecls.h	909;"	d
TkpMakeContainer	macosx/tkMacOSXEmbed.c	/^TkpMakeContainer($/;"	f
TkpMakeContainer	unix/tkUnixEmbed.c	/^TkpMakeContainer($/;"	f
TkpMakeContainer	win/tkWinEmbed.c	/^TkpMakeContainer($/;"	f
TkpMakeMenuWindow	generic/tkIntDecls.h	911;"	d
TkpMakeMenuWindow	macosx/tkMacOSXWm.c	/^TkpMakeMenuWindow($/;"	f
TkpMakeMenuWindow	unix/tkUnixWm.c	/^TkpMakeMenuWindow($/;"	f
TkpMakeMenuWindow	win/tkWinWm.c	/^TkpMakeMenuWindow($/;"	f
TkpMakeTransparentWindowExist	macosx/tkMacOSXEmbed.c	/^TkpMakeTransparentWindowExist($/;"	f
TkpMakeTransparentWindowExist	unix/tkUnixEmbed.c	/^TkpMakeTransparentWindowExist($/;"	f
TkpMakeTransparentWindowExist	win/tkWinWindow.c	/^TkpMakeTransparentWindowExist($/;"	f
TkpMakeWindow	generic/tkIntDecls.h	913;"	d
TkpMakeWindow	macosx/tkMacOSXEmbed.c	/^TkpMakeWindow($/;"	f
TkpMakeWindow	unix/tkUnixEmbed.c	/^TkpMakeWindow($/;"	f
TkpMakeWindow	win/tkWinWindow.c	/^TkpMakeWindow($/;"	f
TkpMeasureCharsInContext	macosx/tkMacOSXFont.c	/^TkpMeasureCharsInContext($/;"	f
TkpMeasureCharsInContext	unix/tkUnixFont.c	/^TkpMeasureCharsInContext($/;"	f
TkpMeasureCharsInContext	unix/tkUnixRFont.c	/^TkpMeasureCharsInContext($/;"	f
TkpMeasureCharsInContext	win/tkWinFont.c	/^TkpMeasureCharsInContext($/;"	f
TkpMenuInit	macosx/tkMacOSXMenu.c	/^TkpMenuInit(void)$/;"	f
TkpMenuInit	unix/tkUnixMenu.c	/^TkpMenuInit(void)$/;"	f
TkpMenuInit	win/tkWinMenu.c	/^TkpMenuInit(void)$/;"	f
TkpMenuNewEntry	macosx/tkMacOSXMenu.c	/^TkpMenuNewEntry($/;"	f
TkpMenuNewEntry	unix/tkUnixMenu.c	/^TkpMenuNewEntry($/;"	f
TkpMenuNewEntry	win/tkWinMenu.c	/^TkpMenuNewEntry($/;"	f
TkpMenuNotifyToplevelCreate	generic/tkIntDecls.h	915;"	d
TkpMenuNotifyToplevelCreate	macosx/tkMacOSXMenu.c	/^TkpMenuNotifyToplevelCreate($/;"	f
TkpMenuNotifyToplevelCreate	unix/tkUnixMenu.c	/^TkpMenuNotifyToplevelCreate($/;"	f
TkpMenuNotifyToplevelCreate	win/tkWinMenu.c	/^TkpMenuNotifyToplevelCreate($/;"	f
TkpMenuThreadInit	generic/tkIntDecls.h	1003;"	d
TkpMenuThreadInit	macosx/tkMacOSXMenu.c	/^TkpMenuThreadInit(void)$/;"	f
TkpMenuThreadInit	unix/tkUnixMenu.c	/^TkpMenuThreadInit(void)$/;"	f
TkpMenuThreadInit	win/tkWinMenu.c	/^TkpMenuThreadInit(void)$/;"	f
TkpNewMenu	macosx/tkMacOSXMenu.c	/^TkpNewMenu($/;"	f
TkpNewMenu	unix/tkUnixMenu.c	/^TkpNewMenu($/;"	f
TkpNewMenu	win/tkWinMenu.c	/^TkpNewMenu($/;"	f
TkpOpenDisplay	generic/tkIntDecls.h	917;"	d
TkpOpenDisplay	macosx/tkMacOSXXStubs.c	/^TkpOpenDisplay($/;"	f
TkpOpenDisplay	unix/tkUnixEvent.c	/^TkpOpenDisplay($/;"	f
TkpOpenDisplay	win/tkWinX.c	/^TkpOpenDisplay($/;"	f
TkpPostMenu	macosx/tkMacOSXMenu.c	/^TkpPostMenu($/;"	f
TkpPostMenu	unix/tkUnixMenu.c	/^TkpPostMenu($/;"	f
TkpPostMenu	win/tkWinMenu.c	/^TkpPostMenu($/;"	f
TkpPrintWindowId	generic/tkIntPlatDecls.h	444;"	d
TkpPrintWindowId	generic/tkStubInit.c	/^TkpPrintWindowId($/;"	f
TkpPrintWindowId	macosx/tkMacOSXPort.h	146;"	d
TkpPrintWindowId	unix/tkUnixPort.h	188;"	d
TkpPrintWindowId	win/tkWinWindow.c	/^TkpPrintWindowId($/;"	f
TkpRedirectKeyEvent	generic/tkIntDecls.h	927;"	d
TkpRedirectKeyEvent	macosx/tkMacOSXEmbed.c	/^TkpRedirectKeyEvent($/;"	f
TkpRedirectKeyEvent	unix/tkUnixEmbed.c	/^TkpRedirectKeyEvent($/;"	f
TkpRedirectKeyEvent	win/tkWinEmbed.c	/^TkpRedirectKeyEvent($/;"	f
TkpReleaseRegion	macosx/tkMacOSXRegion.c	/^TkpReleaseRegion($/;"	f
TkpRetainRegion	macosx/tkMacOSXRegion.c	/^TkpRetainRegion($/;"	f
TkpScaleElement	macosx/tkMacOSXScale.c	/^TkpScaleElement($/;"	f
TkpScaleElement	unix/tkUnixScale.c	/^TkpScaleElement($/;"	f
TkpScanWindowId	generic/tkIntPlatDecls.h	446;"	d
TkpScanWindowId	generic/tkIntPlatDecls.h	631;"	d
TkpScanWindowId	generic/tkIntPlatDecls.h	649;"	d
TkpScanWindowId	macosx/tkMacOSXEmbed.c	/^TkpScanWindowId($/;"	f
TkpScanWindowId	unix/tkUnixXId.c	/^TkpScanWindowId($/;"	f
TkpScanWindowId	win/tkWinWindow.c	/^TkpScanWindowId($/;"	f
TkpScrollbarPosition	macosx/tkMacOSXScrlbr.c	/^TkpScrollbarPosition($/;"	f
TkpScrollbarPosition	unix/tkUnixScrlbr.c	/^TkpScrollbarPosition($/;"	f
TkpScrollbarPosition	win/tkWinScrlbr.c	/^TkpScrollbarPosition($/;"	f
TkpSetCapture	generic/tkIntPlatDecls.h	448;"	d
TkpSetCapture	generic/tkIntPlatDecls.h	534;"	d
TkpSetCapture	generic/tkStubInit.c	179;"	d	file:
TkpSetCapture	macosx/tkMacOSXKeyEvent.c	/^TkpSetCapture($/;"	f
TkpSetCapture	win/tkWinPointer.c	/^TkpSetCapture($/;"	f
TkpSetCursor	generic/tkIntPlatDecls.h	450;"	d
TkpSetCursor	generic/tkIntPlatDecls.h	536;"	d
TkpSetCursor	generic/tkStubInit.c	180;"	d	file:
TkpSetCursor	macosx/tkMacOSXCursor.c	/^TkpSetCursor($/;"	f
TkpSetCursor	win/tkWinCursor.c	/^TkpSetCursor($/;"	f
TkpSetKeycodeAndState	generic/tkIntDecls.h	1047;"	d
TkpSetKeycodeAndState	macosx/tkMacOSXKeyboard.c	/^TkpSetKeycodeAndState($/;"	f
TkpSetKeycodeAndState	unix/tkUnixKey.c	/^TkpSetKeycodeAndState($/;"	f
TkpSetKeycodeAndState	win/tkWinKey.c	/^TkpSetKeycodeAndState($/;"	f
TkpSetMainMenubar	generic/tkIntDecls.h	929;"	d
TkpSetMainMenubar	macosx/tkMacOSXMenu.c	/^TkpSetMainMenubar($/;"	f
TkpSetMainMenubar	unix/tkUnixMenu.c	/^TkpSetMainMenubar($/;"	f
TkpSetMainMenubar	win/tkWinMenu.c	/^TkpSetMainMenubar($/;"	f
TkpSetWindowMenuBar	macosx/tkMacOSXMenu.c	/^TkpSetWindowMenuBar($/;"	f
TkpSetWindowMenuBar	unix/tkUnixMenu.c	/^TkpSetWindowMenuBar($/;"	f
TkpSetWindowMenuBar	win/tkWinMenu.c	/^TkpSetWindowMenuBar($/;"	f
TkpShowBusyWindow	macosx/tkMacOSXEmbed.c	/^TkpShowBusyWindow($/;"	f
TkpShowBusyWindow	unix/tkUnixEmbed.c	/^TkpShowBusyWindow($/;"	f
TkpShowBusyWindow	win/tkWinWindow.c	/^TkpShowBusyWindow($/;"	f
TkpSync	generic/tkIntPlatDecls.h	512;"	d
TkpSync	generic/tkIntPlatDecls.h	641;"	d
TkpSync	generic/tkStubInit.c	/^TkpSync(Display *display)$/;"	f
TkpSync	macosx/tkMacOSXPort.h	129;"	d
TkpSync	unix/tkUnixEvent.c	/^TkpSync($/;"	f
TkpTestembedCmd	generic/tkIntDecls.h	1084;"	d
TkpTestembedCmd	macosx/tkMacOSXEmbed.c	/^TkpTestembedCmd($/;"	f
TkpTestembedCmd	unix/tkUnixEmbed.c	/^TkpTestembedCmd($/;"	f
TkpTestembedCmd	win/tkWinEmbed.c	/^TkpTestembedCmd($/;"	f
TkpTestsendCmd	generic/tkIntPlatDecls.h	524;"	d
TkpTestsendCmd	generic/tkIntPlatDecls.h	658;"	d
TkpTestsendCmd	generic/tkStubInit.c	67;"	d	file:
TkpTestsendCmd	unix/tkUnixSend.c	/^TkpTestsendCmd($/;"	f
TkpTesttextCmd	generic/tkIntDecls.h	1086;"	d
TkpTesttextCmd	generic/tkText.c	/^TkpTesttextCmd($/;"	f
TkpUseWindow	generic/tkIntDecls.h	931;"	d
TkpUseWindow	macosx/tkMacOSXEmbed.c	/^TkpUseWindow($/;"	f
TkpUseWindow	unix/tkUnixEmbed.c	/^TkpUseWindow($/;"	f
TkpUseWindow	win/tkWinEmbed.c	/^TkpUseWindow($/;"	f
TkpWarpPointer	macosx/tkMacOSXMouseEvent.c	/^TkpWarpPointer($/;"	f
TkpWarpPointer	unix/tkUnixEvent.c	/^TkpWarpPointer($/;"	f
TkpWarpPointer	win/tkWinPointer.c	/^TkpWarpPointer($/;"	f
TkpWinToplevelDeiconify	win/tkWinWm.c	/^TkpWinToplevelDeiconify($/;"	f
TkpWinToplevelDetachWindow	win/tkWinWm.c	/^TkpWinToplevelDetachWindow($/;"	f
TkpWinToplevelIconify	win/tkWinWm.c	/^TkpWinToplevelIconify($/;"	f
TkpWinToplevelIsControlledByWm	win/tkWinWm.c	/^TkpWinToplevelIsControlledByWm($/;"	f
TkpWinToplevelMove	win/tkWinWm.c	/^TkpWinToplevelMove($/;"	f
TkpWinToplevelOverrideRedirect	win/tkWinWm.c	/^TkpWinToplevelOverrideRedirect($/;"	f
TkpWinToplevelWithDraw	win/tkWinWm.c	/^TkpWinToplevelWithDraw($/;"	f
TkpWmGetState	win/tkWinWm.c	/^TkpWmGetState($/;"	f
TkpWmSetFullScreen	win/tkWinWm.c	/^TkpWmSetFullScreen($/;"	f	file:
TkpWmSetState	generic/tkIntPlatDecls.h	452;"	d
TkpWmSetState	generic/tkIntPlatDecls.h	538;"	d
TkpWmSetState	generic/tkIntPlatDecls.h	656;"	d
TkpWmSetState	macosx/tkMacOSXWm.c	/^TkpWmSetState($/;"	f
TkpWmSetState	unix/tkUnixWm.c	/^TkpWmSetState($/;"	f
TkpWmSetState	win/tkWinWm.c	/^TkpWmSetState($/;"	f
TkplatformtestInit	generic/tkInt.h	1248;"	d
TkplatformtestInit	macosx/tkMacOSXTest.c	/^TkplatformtestInit($/;"	f
TkplatformtestInit	win/tkWinTest.c	/^TkplatformtestInit($/;"	f
Tktest_Init	generic/tkTest.c	/^Tktest_Init($/;"	f
ToggleCheckProc	generic/tkTextBTree.c	/^ToggleCheckProc($/;"	f	file:
ToggleCleanupProc	generic/tkTextBTree.c	/^ToggleCleanupProc($/;"	f	file:
ToggleComplexAlphaIfNeeded	generic/tkImgPhoto.c	/^ToggleComplexAlphaIfNeeded($/;"	f	file:
ToggleDeleteProc	generic/tkTextBTree.c	/^ToggleDeleteProc($/;"	f	file:
ToggleLineChangeProc	generic/tkTextBTree.c	/^ToggleLineChangeProc($/;"	f	file:
ToolbarBackgroundElementDraw	macosx/ttkMacOSXTheme.c	/^static void ToolbarBackgroundElementDraw($/;"	f	file:
ToolbarBackgroundElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec ToolbarBackgroundElementSpec = {$/;"	v	file:
TopIf	xlib/X11/X.h	419;"	d
TopLevelEventProc	macosx/tkMacOSXWm.c	/^TopLevelEventProc($/;"	f	file:
TopLevelEventProc	win/tkWinWm.c	/^TopLevelEventProc($/;"	f	file:
TopLevelProc	win/tkWinWm.c	/^TopLevelProc($/;"	f	file:
TopLevelReqProc	macosx/tkMacOSXWm.c	/^TopLevelReqProc($/;"	f	file:
TopLevelReqProc	unix/tkUnixWm.c	/^TopLevelReqProc($/;"	f	file:
TopLevelReqProc	win/tkWinWm.c	/^TopLevelReqProc($/;"	f	file:
ToplevelFocusInfo	generic/tkFocus.c	/^} ToplevelFocusInfo;$/;"	t	typeref:struct:TkToplevelFocusInfo	file:
Tour	library/demos/knightstour.tcl	/^proc Tour {dlg {square {}}} {$/;"	p
TrackElement	macosx/ttkMacOSXTheme.c	/^} TrackElement;$/;"	t	typeref:struct:__anon212	file:
TrackElementData	macosx/ttkMacOSXTheme.c	/^} TrackElementData;$/;"	t	typeref:struct:__anon211	file:
TrackElementDraw	macosx/ttkMacOSXTheme.c	/^static void TrackElementDraw($/;"	f	file:
TrackElementOptions	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementOptionSpec TrackElementOptions[] = {$/;"	v	file:
TrackElementSize	macosx/ttkMacOSXTheme.c	/^static void TrackElementSize($/;"	f	file:
TrackElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec TrackElementSpec = {$/;"	v	file:
TransferXEventsToTcl	unix/tkUnixEvent.c	/^TransferXEventsToTcl($/;"	f	file:
TranslateAndAppendCoords	generic/tkCanvUtil.c	/^TranslateAndAppendCoords($/;"	f	file:
TranslateArc	generic/tkCanvArc.c	/^TranslateArc($/;"	f	file:
TranslateBitmap	generic/tkCanvBmap.c	/^TranslateBitmap($/;"	f	file:
TranslateImage	generic/tkCanvImg.c	/^TranslateImage($/;"	f	file:
TranslateLine	generic/tkCanvLine.c	/^TranslateLine($/;"	f	file:
TranslatePolygon	generic/tkCanvPoly.c	/^TranslatePolygon($/;"	f	file:
TranslateRectOval	generic/tkRectOval.c	/^TranslateRectOval($/;"	f	file:
TranslateText	generic/tkCanvText.c	/^TranslateText($/;"	f	file:
TranslateWinItem	generic/tkCanvWind.c	/^TranslateWinItem($/;"	f	file:
TreeColumn	generic/ttk/ttkTreeview.c	/^} TreeColumn;$/;"	t	typeref:struct:__anon82	file:
TreeHeaderAdornmentTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable TreeHeaderAdornmentTable[] = {$/;"	v	file:
TreeHeaderElementDraw	macosx/ttkMacOSXTheme.c	/^static void TreeHeaderElementDraw($/;"	f	file:
TreeHeaderElementSpec	macosx/ttkMacOSXTheme.c	/^static Ttk_ElementSpec TreeHeaderElementSpec = {$/;"	v	file:
TreeHeaderValueTable	macosx/ttkMacOSXTheme.c	/^static Ttk_StateTable TreeHeaderValueTable[] = {$/;"	v	file:
TreeIndicatorElementDraw	win/ttkWinXPTheme.c	/^static void TreeIndicatorElementDraw($/;"	f	file:
TreeIndicatorElementSpec	win/ttkWinXPTheme.c	/^static Ttk_ElementSpec TreeIndicatorElementSpec =$/;"	v	file:
TreeItem	generic/ttk/ttkTreeview.c	/^typedef struct TreeItemRec TreeItem;$/;"	t	typeref:struct:TreeItemRec	file:
TreeItemRec	generic/ttk/ttkTreeview.c	/^struct TreeItemRec {$/;"	s	file:
TreePart	generic/ttk/ttkTreeview.c	/^} TreePart;$/;"	t	typeref:struct:__anon83	file:
TreeRegion	generic/ttk/ttkTreeview.c	/^} TreeRegion;$/;"	t	typeref:enum:__anon85	file:
TreeWidth	generic/ttk/ttkTreeview.c	/^static int TreeWidth(Treeview *tv)$/;"	f	file:
TreeitemIndicator	generic/ttk/ttkDefaultTheme.c	/^} TreeitemIndicator;$/;"	t	typeref:struct:__anon98	file:
TreeitemIndicator	generic/ttk/ttkTreeview.c	/^} TreeitemIndicator;$/;"	t	typeref:struct:__anon86	file:
TreeitemIndicatorDraw	generic/ttk/ttkDefaultTheme.c	/^static void TreeitemIndicatorDraw($/;"	f	file:
TreeitemIndicatorDraw	generic/ttk/ttkTreeview.c	/^static void TreeitemIndicatorDraw($/;"	f	file:
TreeitemIndicatorElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec TreeitemIndicatorElementSpec = {$/;"	v	file:
TreeitemIndicatorElementSpec	generic/ttk/ttkTreeview.c	/^static Ttk_ElementSpec TreeitemIndicatorElementSpec = {$/;"	v	file:
TreeitemIndicatorOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec TreeitemIndicatorOptions[] = {$/;"	v	file:
TreeitemIndicatorOptions	generic/ttk/ttkTreeview.c	/^static Ttk_ElementOptionSpec TreeitemIndicatorOptions[] = {$/;"	v	file:
TreeitemIndicatorSize	generic/ttk/ttkDefaultTheme.c	/^static void TreeitemIndicatorSize($/;"	f	file:
TreeitemIndicatorSize	generic/ttk/ttkTreeview.c	/^static void TreeitemIndicatorSize($/;"	f	file:
Treeview	generic/ttk/ttkTreeview.c	/^} Treeview;$/;"	t	typeref:struct:__anon84	file:
TreeviewBBoxCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewBBoxCommand($/;"	f	file:
TreeviewBindEventMask	generic/ttk/ttkTreeview.c	/^static const unsigned int TreeviewBindEventMask =$/;"	v	file:
TreeviewBindEventProc	generic/ttk/ttkTreeview.c	/^static void TreeviewBindEventProc(void *clientData, XEvent *event)$/;"	f	file:
TreeviewChildrenCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewChildrenCommand($/;"	f	file:
TreeviewCleanup	generic/ttk/ttkTreeview.c	/^static void TreeviewCleanup(void *recordPtr)$/;"	f	file:
TreeviewColumnCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewColumnCommand($/;"	f	file:
TreeviewCommands	generic/ttk/ttkTreeview.c	/^static const Ttk_Ensemble TreeviewCommands[] = {$/;"	v	file:
TreeviewConfigure	generic/ttk/ttkTreeview.c	/^TreeviewConfigure(Tcl_Interp *interp, void *recordPtr, int mask)$/;"	f	file:
TreeviewDeleteCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewDeleteCommand($/;"	f	file:
TreeviewDetachCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewDetachCommand($/;"	f	file:
TreeviewDisplay	generic/ttk/ttkTreeview.c	/^static void TreeviewDisplay(void *clientData, Drawable d)$/;"	f	file:
TreeviewDoLayout	generic/ttk/ttkTreeview.c	/^static void TreeviewDoLayout(void *clientData)$/;"	f	file:
TreeviewDragCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewDragCommand($/;"	f	file:
TreeviewExistsCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewExistsCommand($/;"	f	file:
TreeviewFocusCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewFocusCommand($/;"	f	file:
TreeviewFreeColumns	generic/ttk/ttkTreeview.c	/^static void TreeviewFreeColumns(Treeview *tv)$/;"	f	file:
TreeviewGetLayout	generic/ttk/ttkTreeview.c	/^static Ttk_Layout TreeviewGetLayout($/;"	f	file:
TreeviewHeadingCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewHeadingCommand($/;"	f	file:
TreeviewHorribleIdentify	generic/ttk/ttkTreeview.c	/^static int TreeviewHorribleIdentify($/;"	f	file:
TreeviewIdentifyCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewIdentifyCommand($/;"	f	file:
TreeviewIndexCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewIndexCommand($/;"	f	file:
TreeviewInitColumns	generic/ttk/ttkTreeview.c	/^static int TreeviewInitColumns(Tcl_Interp *interp, Treeview *tv)$/;"	f	file:
TreeviewInitDisplayColumns	generic/ttk/ttkTreeview.c	/^static int TreeviewInitDisplayColumns(Tcl_Interp *interp, Treeview *tv)$/;"	f	file:
TreeviewInitialize	generic/ttk/ttkTreeview.c	/^static void TreeviewInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f	file:
TreeviewInsertCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewInsertCommand($/;"	f	file:
TreeviewItemCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewItemCommand($/;"	f	file:
TreeviewMoveCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewMoveCommand($/;"	f	file:
TreeviewNextCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewNextCommand($/;"	f	file:
TreeviewOptionSpecs	generic/ttk/ttkTreeview.c	/^static Tk_OptionSpec TreeviewOptionSpecs[] = {$/;"	v	file:
TreeviewParentCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewParentCommand($/;"	f	file:
TreeviewPrevCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewPrevCommand($/;"	f	file:
TreeviewSeeCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewSeeCommand($/;"	f	file:
TreeviewSelectionCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewSelectionCommand($/;"	f	file:
TreeviewSetCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewSetCommand($/;"	f	file:
TreeviewSize	generic/ttk/ttkTreeview.c	/^static int TreeviewSize(void *clientData, int *widthPtr, int *heightPtr)$/;"	f	file:
TreeviewTagAddCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewTagAddCommand($/;"	f	file:
TreeviewTagBindCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewTagBindCommand($/;"	f	file:
TreeviewTagCommands	generic/ttk/ttkTreeview.c	/^static const Ttk_Ensemble TreeviewTagCommands[] = {$/;"	v	file:
TreeviewTagConfigureCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewTagConfigureCommand($/;"	f	file:
TreeviewTagHasCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewTagHasCommand($/;"	f	file:
TreeviewTagNamesCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewTagNamesCommand($/;"	f	file:
TreeviewTagRemoveCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewTagRemoveCommand($/;"	f	file:
TreeviewWidgetSpec	generic/ttk/ttkTreeview.c	/^static WidgetSpec TreeviewWidgetSpec = {$/;"	v	file:
TreeviewXViewCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewXViewCommand($/;"	f	file:
TreeviewYViewCommand	generic/ttk/ttkTreeview.c	/^static int TreeviewYViewCommand($/;"	f	file:
TrivialCmdDeletedProc	generic/tkTest.c	/^TrivialCmdDeletedProc($/;"	f	file:
TrivialCommandHeader	generic/tkTest.c	/^typedef struct TrivialCommandHeader {$/;"	s	file:
TrivialCommandHeader	generic/tkTest.c	/^} TrivialCommandHeader;$/;"	t	typeref:struct:TrivialCommandHeader	file:
TrivialConfigObjCmd	generic/tkTest.c	/^TrivialConfigObjCmd($/;"	f	file:
TrivialEventProc	generic/tkTest.c	/^TrivialEventProc($/;"	f	file:
TroughBox	generic/ttk/ttkScale.c	/^static Ttk_Box TroughBox(Scale *scalePtr)$/;"	f	file:
TroughClientData	win/ttkWinTheme.c	/^} TroughClientData;$/;"	t	typeref:struct:__anon249	file:
TroughClientDataDeleteProc	win/ttkWinTheme.c	/^static void TroughClientDataDeleteProc(void *clientData)$/;"	f	file:
TroughClientDataInit	win/ttkWinTheme.c	/^static TroughClientData *TroughClientDataInit(Tcl_Interp *interp)$/;"	f	file:
TroughElement	generic/ttk/ttkDefaultTheme.c	/^} TroughElement;$/;"	t	typeref:struct:__anon95	file:
TroughElement	generic/ttk/ttkElements.c	/^} TroughElement;$/;"	t	typeref:struct:__anon43	file:
TroughElementDraw	generic/ttk/ttkClamTheme.c	/^static void TroughElementDraw($/;"	f	file:
TroughElementDraw	generic/ttk/ttkDefaultTheme.c	/^static void TroughElementDraw($/;"	f	file:
TroughElementDraw	generic/ttk/ttkElements.c	/^static void TroughElementDraw($/;"	f	file:
TroughElementDraw	win/ttkWinTheme.c	/^static void TroughElementDraw($/;"	f	file:
TroughElementOptions	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementOptionSpec TroughElementOptions[] = {$/;"	v	file:
TroughElementOptions	generic/ttk/ttkElements.c	/^static Ttk_ElementOptionSpec TroughElementOptions[] = {$/;"	v	file:
TroughElementSize	generic/ttk/ttkDefaultTheme.c	/^static void TroughElementSize($/;"	f	file:
TroughElementSize	generic/ttk/ttkElements.c	/^static void TroughElementSize($/;"	f	file:
TroughElementSpec	generic/ttk/ttkClamTheme.c	/^static Ttk_ElementSpec TroughElementSpec = {$/;"	v	file:
TroughElementSpec	generic/ttk/ttkDefaultTheme.c	/^static Ttk_ElementSpec TroughElementSpec = {$/;"	v	file:
TroughElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec TroughElementSpec = {$/;"	v	file:
TroughElementSpec	win/ttkWinTheme.c	/^static Ttk_ElementSpec TroughElementSpec = {$/;"	v	file:
TroughRange	generic/ttk/ttkScale.c	/^static Ttk_Box TroughRange(Scale *scalePtr)$/;"	f	file:
True	xlib/X11/Xlib.h	64;"	d
TrueColor	xlib/X11/X.h	663;"	d
TtkAltTheme_Init	generic/ttk/ttkDefaultTheme.c	/^MODULE_SCOPE int TtkAltTheme_Init(Tcl_Interp *interp)$/;"	f
TtkArrowSize	generic/ttk/ttkDefaultTheme.c	/^void TtkArrowSize(int h, ArrowDirection dir, int *widthPtr, int *heightPtr)$/;"	f
TtkBlinkCursor	generic/ttk/ttkBlink.c	/^void TtkBlinkCursor(WidgetCore *corePtr)$/;"	f
TtkCheckStateOption	generic/ttk/ttkInit.c	/^void TtkCheckStateOption(WidgetCore *corePtr, Tcl_Obj *objPtr)$/;"	f
TtkCoreConfigure	generic/ttk/ttkWidget.c	/^int TtkCoreConfigure(Tcl_Interp *interp, void *clientData, int mask)$/;"	f
TtkCreateScrollHandle	generic/ttk/ttkScroll.c	/^ScrollHandle TtkCreateScrollHandle(WidgetCore *corePtr, Scrollable *scrollPtr)$/;"	f
TtkDrawArrow	generic/ttk/ttkDefaultTheme.c	/^void TtkDrawArrow($/;"	f
TtkElements_Init	generic/ttk/ttkElements.c	/^void TtkElements_Init(Tcl_Interp *interp)$/;"	f
TtkEnsemble	generic/ttk/ttkTheme.h	/^typedef struct TtkEnsemble {$/;"	s
TtkEnumerateHashTable	generic/ttk/ttkTheme.c	/^int TtkEnumerateHashTable(Tcl_Interp *interp, Tcl_HashTable *ht)$/;"	f
TtkEnumerateOptions	generic/ttk/ttkInit.c	/^int TtkEnumerateOptions($/;"	f
TtkFillArrow	generic/ttk/ttkDefaultTheme.c	/^void TtkFillArrow($/;"	f
TtkFreeImageSpec	generic/ttk/ttkImage.c	/^void TtkFreeImageSpec(Ttk_ImageSpec *imageSpec)$/;"	f
TtkFreeScrollHandle	generic/ttk/ttkScroll.c	/^void TtkFreeScrollHandle(ScrollHandle h)$/;"	f
TtkGetImageSpec	generic/ttk/ttkImage.c	/^TtkGetImageSpec(Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr)$/;"	f
TtkGetOptionValue	generic/ttk/ttkInit.c	/^int TtkGetOptionValue($/;"	f
TtkImageSpec	generic/ttk/ttkImage.c	/^struct TtkImageSpec {$/;"	s	file:
TtkImage_Init	generic/ttk/ttkImage.c	/^void TtkImage_Init(Tcl_Interp *interp)$/;"	f
TtkInitializeStubs	generic/ttk/ttkStubLib.c	/^TtkInitializeStubs($/;"	f
TtkLabel_Init	generic/ttk/ttkLabel.c	/^void TtkLabel_Init(Tcl_Interp *interp)$/;"	f
TtkManager_	generic/ttk/ttkManager.c	/^struct TtkManager_$/;"	s	file:
TtkNullCleanup	generic/ttk/ttkWidget.c	/^void TtkNullCleanup(void *recordPtr)$/;"	f
TtkNullElementDraw	generic/ttk/ttkElements.c	/^TtkNullElementDraw($/;"	f
TtkNullElementOptions	generic/ttk/ttkElements.c	/^\/* public *\/ Ttk_ElementOptionSpec TtkNullElementOptions[] = { { NULL, 0, 0, NULL } };$/;"	v
TtkNullElementOptions	generic/ttk/ttkTheme.h	/^MODULE_SCOPE Ttk_ElementOptionSpec TtkNullElementOptions[];$/;"	v
TtkNullElementSize	generic/ttk/ttkElements.c	/^TtkNullElementSize($/;"	f
TtkNullInitialize	generic/ttk/ttkWidget.c	/^void TtkNullInitialize(Tcl_Interp *interp, void *recordPtr)$/;"	f
TtkNullPostConfigure	generic/ttk/ttkWidget.c	/^int TtkNullPostConfigure(Tcl_Interp *interp, void *clientData, int mask)$/;"	f
TtkRedisplayWidget	generic/ttk/ttkWidget.c	/^void TtkRedisplayWidget(WidgetCore *corePtr)$/;"	f
TtkResizeWidget	generic/ttk/ttkWidget.c	/^void TtkResizeWidget(WidgetCore *corePtr)$/;"	f
TtkScrollTo	generic/ttk/ttkScroll.c	/^void TtkScrollTo(ScrollHandle h, int newFirst)$/;"	f
TtkScrollbarUpdateRequired	generic/ttk/ttkScroll.c	/^void TtkScrollbarUpdateRequired(ScrollHandle h)$/;"	f
TtkScrolled	generic/ttk/ttkScroll.c	/^void TtkScrolled(ScrollHandle h, int first, int last, int total)$/;"	f
TtkScrollviewCommand	generic/ttk/ttkScroll.c	/^int TtkScrollviewCommand($/;"	f
TtkSelectImage	generic/ttk/ttkImage.c	/^Tk_Image TtkSelectImage(Ttk_ImageSpec *imageSpec, Ttk_State state)$/;"	f
TtkSendVirtualEvent	generic/ttk/ttkInit.c	/^void TtkSendVirtualEvent(Tk_Window tgtWin, const char *eventName)$/;"	f
TtkStubs	generic/ttk/ttkDecls.h	/^typedef struct TtkStubs {$/;"	s
TtkStubs	generic/ttk/ttkDecls.h	/^} TtkStubs;$/;"	t	typeref:struct:TtkStubs
TtkTag	generic/ttk/ttkTagSet.c	/^struct TtkTag {$/;"	s	file:
TtkTagSet	generic/ttk/ttkWidget.h	/^typedef struct TtkTagSet {	\/* TODO: make opaque *\/$/;"	s
TtkTagTable	generic/ttk/ttkTagSet.c	/^struct TtkTagTable {$/;"	s	file:
TtkTraceHandle_	generic/ttk/ttkTrace.c	/^struct TtkTraceHandle_$/;"	s	file:
TtkTrackElementState	generic/ttk/ttkTrack.c	/^void TtkTrackElementState(WidgetCore *corePtr)$/;"	f
TtkTreeview_Init	generic/ttk/ttkTreeview.c	/^void TtkTreeview_Init(Tcl_Interp *interp)$/;"	f
TtkWidgetCgetCommand	generic/ttk/ttkWidget.c	/^int TtkWidgetCgetCommand($/;"	f
TtkWidgetChangeState	generic/ttk/ttkWidget.c	/^void TtkWidgetChangeState(WidgetCore *corePtr,$/;"	f
TtkWidgetConfigureCommand	generic/ttk/ttkWidget.c	/^int TtkWidgetConfigureCommand($/;"	f
TtkWidgetConstructorObjCmd	generic/ttk/ttkWidget.c	/^int TtkWidgetConstructorObjCmd($/;"	f
TtkWidgetDisplay	generic/ttk/ttkWidget.c	/^void TtkWidgetDisplay(void *recordPtr, Drawable d)$/;"	f
TtkWidgetDoLayout	generic/ttk/ttkWidget.c	/^void TtkWidgetDoLayout(void *clientData)$/;"	f
TtkWidgetGetLayout	generic/ttk/ttkWidget.c	/^Ttk_Layout TtkWidgetGetLayout($/;"	f
TtkWidgetGetOrientedLayout	generic/ttk/ttkWidget.c	/^Ttk_Layout TtkWidgetGetOrientedLayout($/;"	f
TtkWidgetIdentifyCommand	generic/ttk/ttkWidget.c	/^int TtkWidgetIdentifyCommand($/;"	f
TtkWidgetInstateCommand	generic/ttk/ttkWidget.c	/^int TtkWidgetInstateCommand($/;"	f
TtkWidgetSize	generic/ttk/ttkWidget.c	/^int TtkWidgetSize(void *recordPtr, int *widthPtr, int *heightPtr)$/;"	f
TtkWidgetStateCommand	generic/ttk/ttkWidget.c	/^int TtkWidgetStateCommand($/;"	f
TtkXPTheme_Init	win/ttkWinXPTheme.c	/^MODULE_SCOPE int TtkXPTheme_Init(Tcl_Interp *interp, HWND hwnd)$/;"	f
TtkXPTheme_Init	win/ttkWinXPTheme.c	/^int TtkXPTheme_Init(Tcl_Interp *interp, HWND hwnd) { return TCL_OK; }$/;"	f
Ttk_AddPadding	generic/ttk/ttkDecls.h	241;"	d
Ttk_AddPadding	generic/ttk/ttkLayout.c	/^Ttk_Padding Ttk_AddPadding(Ttk_Padding p1, Ttk_Padding p2)$/;"	f
Ttk_AnchorBox	generic/ttk/ttkDecls.h	253;"	d
Ttk_AnchorBox	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_AnchorBox(Ttk_Box parcel, int width, int height, Tk_Anchor anchor)$/;"	f
Ttk_Box	generic/ttk/ttkTheme.h	/^} Ttk_Box;$/;"	t	typeref:struct:__anon73
Ttk_BoxContains	generic/ttk/ttkDecls.h	247;"	d
Ttk_BoxContains	generic/ttk/ttkLayout.c	/^Ttk_BoxContains(Ttk_Box box, int x, int y)$/;"	f
Ttk_BuildLayoutTemplate	generic/ttk/ttkLayout.c	/^Ttk_LayoutTemplate Ttk_BuildLayoutTemplate(Ttk_LayoutSpec spec)$/;"	f
Ttk_ButtonDefaultState	generic/ttk/ttkTheme.h	/^} Ttk_ButtonDefaultState;$/;"	t	typeref:enum:__anon77
Ttk_ChangeElementState	generic/ttk/ttkLayout.c	/^void Ttk_ChangeElementState(Ttk_LayoutNode *node,unsigned set,unsigned clr)$/;"	f
Ttk_CleanupProc	generic/ttk/ttkTheme.h	/^typedef void (Ttk_CleanupProc)(void *clientData);$/;"	t
Ttk_ClearCache	generic/ttk/ttkCache.c	/^static void Ttk_ClearCache(Ttk_ResourceCache cache)$/;"	f	file:
Ttk_ClientRegion	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_ClientRegion(Ttk_Layout layout, const char *elementName)$/;"	f
Ttk_CloneElement	generic/ttk/ttkTheme.c	/^static int Ttk_CloneElement($/;"	f	file:
Ttk_Compound	generic/ttk/ttkTheme.h	/^} Ttk_Compound;$/;"	t	typeref:enum:__anon78
Ttk_ConfigureTag	generic/ttk/ttkTagSet.c	/^int Ttk_ConfigureTag($/;"	f
Ttk_CreateImageElement	generic/ttk/ttkImage.c	/^Ttk_CreateImageElement($/;"	f	file:
Ttk_CreateLayout	generic/ttk/ttkLayout.c	/^Ttk_Layout Ttk_CreateLayout($/;"	f
Ttk_CreateManager	generic/ttk/ttkManager.c	/^Ttk_Manager *Ttk_CreateManager($/;"	f
Ttk_CreateResourceCache	generic/ttk/ttkCache.c	/^Ttk_ResourceCache Ttk_CreateResourceCache(Tcl_Interp *interp)$/;"	f
Ttk_CreateSublayout	generic/ttk/ttkLayout.c	/^Ttk_CreateSublayout($/;"	f
Ttk_CreateTagTable	generic/ttk/ttkTagSet.c	/^Ttk_TagTable Ttk_CreateTagTable($/;"	f
Ttk_CreateTheme	generic/ttk/ttkDecls.h	203;"	d
Ttk_CreateTheme	generic/ttk/ttkTheme.c	/^Ttk_CreateTheme($/;"	f
Ttk_CreateVsapiElement	win/ttkWinXPTheme.c	/^Ttk_CreateVsapiElement($/;"	f	file:
Ttk_DeleteManager	generic/ttk/ttkManager.c	/^void Ttk_DeleteManager(Ttk_Manager *mgr)$/;"	f
Ttk_DeleteTagTable	generic/ttk/ttkTagSet.c	/^void Ttk_DeleteTagTable(Ttk_TagTable tagTable)$/;"	f
Ttk_DrawElement	generic/ttk/ttkTheme.c	/^Ttk_DrawElement($/;"	f
Ttk_DrawLayout	generic/ttk/ttkLayout.c	/^void Ttk_DrawLayout(Ttk_Layout layout, Ttk_State state, Drawable d)$/;"	f
Ttk_DrawNodeList	generic/ttk/ttkLayout.c	/^static void Ttk_DrawNodeList($/;"	f	file:
Ttk_Element	generic/ttk/ttkTheme.h	/^typedef struct Ttk_LayoutNode_ *Ttk_Element;$/;"	t	typeref:struct:Ttk_LayoutNode_
Ttk_ElementClass	generic/ttk/ttkTheme.h	/^typedef struct Ttk_ElementClass_ Ttk_ElementClass;$/;"	t	typeref:struct:Ttk_ElementClass_
Ttk_ElementClassName	generic/ttk/ttkTheme.c	/^const char *Ttk_ElementClassName(Ttk_ElementClass *elementClass)$/;"	f
Ttk_ElementClass_	generic/ttk/ttkTheme.c	/^struct Ttk_ElementClass_ {$/;"	s	file:
Ttk_ElementDrawProc	generic/ttk/ttkTheme.h	/^typedef void (Ttk_ElementDrawProc)(void *clientData, void *elementRecord,$/;"	t
Ttk_ElementFactory	generic/ttk/ttkTheme.h	/^typedef int (*Ttk_ElementFactory)$/;"	t
Ttk_ElementName	generic/ttk/ttkLayout.c	/^const char *Ttk_ElementName(Ttk_Element node)$/;"	f
Ttk_ElementOptionSpec	generic/ttk/ttkTheme.h	/^typedef struct Ttk_ElementOptionSpec$/;"	s
Ttk_ElementOptionSpec	generic/ttk/ttkTheme.h	/^} Ttk_ElementOptionSpec;$/;"	t	typeref:struct:Ttk_ElementOptionSpec
Ttk_ElementParcel	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_ElementParcel(Ttk_Element node)$/;"	f
Ttk_ElementSize	generic/ttk/ttkTheme.c	/^Ttk_ElementSize($/;"	f
Ttk_ElementSizeProc	generic/ttk/ttkTheme.h	/^typedef void (Ttk_ElementSizeProc)(void *clientData, void *elementRecord,$/;"	t
Ttk_ElementSpec	generic/ttk/ttkTheme.h	/^typedef struct Ttk_ElementSpec {$/;"	s
Ttk_ElementSpec	generic/ttk/ttkTheme.h	/^} Ttk_ElementSpec;$/;"	t	typeref:struct:Ttk_ElementSpec
Ttk_Ensemble	generic/ttk/ttkTheme.h	/^} Ttk_Ensemble;$/;"	t	typeref:struct:TtkEnsemble
Ttk_EnumerateTagOptions	generic/ttk/ttkTagSet.c	/^int Ttk_EnumerateTagOptions($/;"	f
Ttk_EnumerateTags	generic/ttk/ttkTagSet.c	/^int Ttk_EnumerateTags($/;"	f
Ttk_ExpandBox	generic/ttk/ttkDecls.h	257;"	d
Ttk_ExpandBox	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_ExpandBox(Ttk_Box b, Ttk_Padding p)$/;"	f
Ttk_Fill	generic/ttk/ttkImage.c	/^static void Ttk_Fill($/;"	f	file:
Ttk_FindElement	generic/ttk/ttkLayout.c	/^Ttk_Element Ttk_FindElement(Ttk_Layout layout, const char *nodeName)$/;"	f
Ttk_FindLayoutTemplate	generic/ttk/ttkTheme.c	/^Ttk_FindLayoutTemplate(Ttk_Theme themePtr, const char *layoutName)$/;"	f
Ttk_FireTrace	generic/ttk/ttkTrace.c	/^int Ttk_FireTrace(Ttk_TraceHandle *tracePtr)$/;"	f
Ttk_ForgetSlave	generic/ttk/ttkManager.c	/^void Ttk_ForgetSlave(Ttk_Manager *mgr, int slaveIndex)$/;"	f
Ttk_FreeLayout	generic/ttk/ttkLayout.c	/^void Ttk_FreeLayout(Ttk_Layout layout)$/;"	f
Ttk_FreeLayoutNode	generic/ttk/ttkLayout.c	/^static void Ttk_FreeLayoutNode(Ttk_LayoutNode *node)$/;"	f	file:
Ttk_FreeLayoutTemplate	generic/ttk/ttkLayout.c	/^void Ttk_FreeLayoutTemplate(Ttk_LayoutTemplate op)$/;"	f
Ttk_FreeResourceCache	generic/ttk/ttkCache.c	/^void Ttk_FreeResourceCache(Ttk_ResourceCache cache)$/;"	f
Ttk_FreeTagSet	generic/ttk/ttkTagSet.c	/^void Ttk_FreeTagSet(Ttk_TagSet tagset)$/;"	f
Ttk_GCForColor	generic/ttk/ttkClamTheme.c	/^static GC Ttk_GCForColor(Tk_Window tkwin, Tcl_Obj* colorObj, Drawable d)$/;"	f	file:
Ttk_GeometryRequestProc	generic/ttk/ttkManager.c	/^void Ttk_GeometryRequestProc(ClientData clientData, Tk_Window slaveWindow)$/;"	f
Ttk_GetBorderFromObj	generic/ttk/ttkDecls.h	233;"	d
Ttk_GetBorderFromObj	generic/ttk/ttkLayout.c	/^int Ttk_GetBorderFromObj(Tcl_Interp *interp, Tcl_Obj *objPtr, Ttk_Padding *pad)$/;"	f
Ttk_GetButtonDefaultStateFromObj	generic/ttk/ttkInit.c	/^int Ttk_GetButtonDefaultStateFromObj($/;"	f
Ttk_GetCompoundFromObj	generic/ttk/ttkInit.c	/^int Ttk_GetCompoundFromObj($/;"	f
Ttk_GetCurrentTheme	generic/ttk/ttkDecls.h	201;"	d
Ttk_GetCurrentTheme	generic/ttk/ttkTheme.c	/^Ttk_Theme Ttk_GetCurrentTheme(Tcl_Interp *interp)$/;"	f
Ttk_GetDefaultTheme	generic/ttk/ttkDecls.h	199;"	d
Ttk_GetDefaultTheme	generic/ttk/ttkTheme.c	/^Ttk_Theme Ttk_GetDefaultTheme(Tcl_Interp *interp)$/;"	f
Ttk_GetElement	generic/ttk/ttkTheme.c	/^Ttk_ElementClass *Ttk_GetElement(Ttk_Theme themePtr, const char *elementName)$/;"	f
Ttk_GetOrientFromObj	generic/ttk/ttkDecls.h	267;"	d
Ttk_GetOrientFromObj	generic/ttk/ttkInit.c	/^int Ttk_GetOrientFromObj($/;"	f
Ttk_GetPaddingFromObj	generic/ttk/ttkDecls.h	231;"	d
Ttk_GetPaddingFromObj	generic/ttk/ttkLayout.c	/^int Ttk_GetPaddingFromObj($/;"	f
Ttk_GetResourceCache	generic/ttk/ttkTheme.c	/^Ttk_GetResourceCache(Tcl_Interp *interp)$/;"	f
Ttk_GetSlaveIndexFromObj	generic/ttk/ttkManager.c	/^int Ttk_GetSlaveIndexFromObj($/;"	f
Ttk_GetStateMapFromObj	generic/ttk/ttkDecls.h	220;"	d
Ttk_GetStateMapFromObj	generic/ttk/ttkState.c	/^Ttk_StateMap Ttk_GetStateMapFromObj($/;"	f
Ttk_GetStateSpecFromObj	generic/ttk/ttkDecls.h	216;"	d
Ttk_GetStateSpecFromObj	generic/ttk/ttkState.c	/^int Ttk_GetStateSpecFromObj($/;"	f
Ttk_GetStickyFromObj	generic/ttk/ttkDecls.h	235;"	d
Ttk_GetStickyFromObj	generic/ttk/ttkLayout.c	/^int Ttk_GetStickyFromObj($/;"	f
Ttk_GetStyle	generic/ttk/ttkTheme.c	/^Ttk_Style Ttk_GetStyle(Ttk_Theme themePtr, const char *styleName)$/;"	f
Ttk_GetTag	generic/ttk/ttkTagSet.c	/^Ttk_Tag Ttk_GetTag(Ttk_TagTable tagTable, const char *tagName)$/;"	f
Ttk_GetTagFromObj	generic/ttk/ttkTagSet.c	/^Ttk_Tag Ttk_GetTagFromObj(Ttk_TagTable tagTable, Tcl_Obj *objPtr)$/;"	f
Ttk_GetTagSetFromObj	generic/ttk/ttkTagSet.c	/^Ttk_TagSet Ttk_GetTagSetFromObj($/;"	f
Ttk_GetTheme	generic/ttk/ttkDecls.h	197;"	d
Ttk_GetTheme	generic/ttk/ttkTheme.c	/^Ttk_Theme Ttk_GetTheme(Tcl_Interp *interp, const char *themeName)$/;"	f
Ttk_IdentifyElement	generic/ttk/ttkLayout.c	/^Ttk_Element Ttk_IdentifyElement(Ttk_Layout layout, int x, int y)$/;"	f
Ttk_ImageSpec	generic/ttk/ttkTheme.h	/^typedef struct TtkImageSpec Ttk_ImageSpec;$/;"	t	typeref:struct:TtkImageSpec
Ttk_Init	generic/ttk/ttkInit.c	/^Ttk_Init(Tcl_Interp *interp)$/;"	f
Ttk_InitStubs	generic/ttk/ttkDecls.h	12;"	d
Ttk_InitStubs	generic/ttk/ttkDecls.h	16;"	d
Ttk_InsertSlave	generic/ttk/ttkManager.c	/^void Ttk_InsertSlave($/;"	f
Ttk_InstantiateLayout	generic/ttk/ttkLayout.c	/^Ttk_InstantiateLayout(Ttk_Theme theme, Ttk_TemplateNode *op)$/;"	f	file:
Ttk_InvokeEnsemble	generic/ttk/ttkTheme.c	/^int Ttk_InvokeEnsemble(	\/* Run an ensemble command *\/$/;"	f
Ttk_Layout	generic/ttk/ttkTheme.h	/^typedef struct Ttk_Layout_ *Ttk_Layout;$/;"	t	typeref:struct:Ttk_Layout_
Ttk_LayoutNode	generic/ttk/ttkLayout.c	/^typedef struct Ttk_LayoutNode_ Ttk_LayoutNode;$/;"	t	typeref:struct:Ttk_LayoutNode_	file:
Ttk_LayoutNodeInternalPadding	generic/ttk/ttkLayout.c	/^Ttk_Padding Ttk_LayoutNodeInternalPadding($/;"	f
Ttk_LayoutNodeInternalParcel	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_LayoutNodeInternalParcel(Ttk_Layout layout, Ttk_LayoutNode *node)$/;"	f
Ttk_LayoutNodeReqSize	generic/ttk/ttkLayout.c	/^void Ttk_LayoutNodeReqSize(	\/* @@@ Rename this *\/$/;"	f
Ttk_LayoutNode_	generic/ttk/ttkLayout.c	/^struct Ttk_LayoutNode_$/;"	s	file:
Ttk_LayoutSize	generic/ttk/ttkLayout.c	/^void Ttk_LayoutSize($/;"	f
Ttk_LayoutSpec	generic/ttk/ttkTheme.h	/^} TTKLayoutInstruction, *Ttk_LayoutSpec;$/;"	t	typeref:struct:__anon76
Ttk_LayoutStyle	generic/ttk/ttkLayout.c	/^Ttk_Style Ttk_LayoutStyle(Ttk_Layout layout)$/;"	f
Ttk_LayoutTemplate	generic/ttk/ttkThemeInt.h	/^typedef struct Ttk_TemplateNode_ Ttk_TemplateNode, *Ttk_LayoutTemplate;$/;"	t	typeref:struct:
Ttk_Layout_	generic/ttk/ttkLayout.c	/^struct Ttk_Layout_$/;"	s	file:
Ttk_LostSlaveProc	generic/ttk/ttkManager.c	/^void Ttk_LostSlaveProc(ClientData clientData, Tk_Window slaveWindow)$/;"	f
Ttk_MacOSXPlatformInit	macosx/ttkMacOSXTheme.c	/^int Ttk_MacOSXPlatformInit(Tcl_Interp *interp)$/;"	f
Ttk_Maintainable	generic/ttk/ttkManager.c	/^int Ttk_Maintainable(Tcl_Interp *interp, Tk_Window slave, Tk_Window master)$/;"	f
Ttk_MakeBox	generic/ttk/ttkDecls.h	245;"	d
Ttk_MakeBox	generic/ttk/ttkLayout.c	/^Ttk_MakeBox(int x, int y, int width, int height)$/;"	f
Ttk_MakePadding	generic/ttk/ttkDecls.h	237;"	d
Ttk_MakePadding	generic/ttk/ttkLayout.c	/^Ttk_Padding Ttk_MakePadding(short left, short top, short right, short bottom)$/;"	f
Ttk_Manager	generic/ttk/ttkManager.h	/^typedef struct TtkManager_ Ttk_Manager;$/;"	t	typeref:struct:TtkManager_
Ttk_ManagerLayoutChanged	generic/ttk/ttkManager.c	/^void Ttk_ManagerLayoutChanged(Ttk_Manager *mgr)$/;"	f
Ttk_ManagerSizeChanged	generic/ttk/ttkManager.c	/^void Ttk_ManagerSizeChanged(Ttk_Manager *mgr)$/;"	f
Ttk_ManagerSpec	generic/ttk/ttkManager.h	/^} Ttk_ManagerSpec;$/;"	t	typeref:struct:__anon109
Ttk_ModifyState	generic/ttk/ttkTheme.h	71;"	d
Ttk_NewBoxObj	generic/ttk/ttkDecls.h	261;"	d
Ttk_NewBoxObj	generic/ttk/ttkLayout.c	/^Ttk_NewBoxObj(Ttk_Box box)$/;"	f
Ttk_NewLayoutNode	generic/ttk/ttkLayout.c	/^static Ttk_LayoutNode *Ttk_NewLayoutNode($/;"	f	file:
Ttk_NewStateSpecObj	generic/ttk/ttkDecls.h	218;"	d
Ttk_NewStateSpecObj	generic/ttk/ttkState.c	/^Tcl_Obj *Ttk_NewStateSpecObj(unsigned int onbits, unsigned int offbits)$/;"	f
Ttk_NewStickyObj	generic/ttk/ttkLayout.c	/^Tcl_Obj *Ttk_NewStickyObj(Ttk_Sticky sticky)$/;"	f
Ttk_NewTagSetObj	generic/ttk/ttkTagSet.c	/^Tcl_Obj *Ttk_NewTagSetObj(Ttk_TagSet tagset)$/;"	f
Ttk_NewTemplateNode	generic/ttk/ttkLayout.c	/^static Ttk_TemplateNode *Ttk_NewTemplateNode(const char *name, unsigned flags)$/;"	f	file:
Ttk_NodeListSize	generic/ttk/ttkLayout.c	/^static void Ttk_NodeListSize($/;"	f	file:
Ttk_NodeSize	generic/ttk/ttkLayout.c	/^static void Ttk_NodeSize($/;"	f	file:
Ttk_NumberSlaves	generic/ttk/ttkManager.c	/^int Ttk_NumberSlaves(Ttk_Manager *mgr)$/;"	f
Ttk_Orient	generic/ttk/ttkTheme.h	/^} Ttk_Orient;$/;"	t	typeref:enum:__anon79
Ttk_PackBox	generic/ttk/ttkDecls.h	249;"	d
Ttk_PackBox	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_PackBox(Ttk_Box *cavity, int width, int height, Ttk_Side side)$/;"	f
Ttk_PadBox	generic/ttk/ttkDecls.h	255;"	d
Ttk_PadBox	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_PadBox(Ttk_Box b, Ttk_Padding p)$/;"	f
Ttk_Padding	generic/ttk/ttkTheme.h	/^} Ttk_Padding;$/;"	t	typeref:struct:__anon72
Ttk_PaddingHeight	generic/ttk/ttkTheme.h	118;"	d
Ttk_PaddingWidth	generic/ttk/ttkTheme.h	117;"	d
Ttk_ParseLayoutTemplate	generic/ttk/ttkLayout.c	/^Ttk_LayoutTemplate Ttk_ParseLayoutTemplate(Tcl_Interp *interp, Tcl_Obj *objPtr)$/;"	f
Ttk_PlaceBox	generic/ttk/ttkDecls.h	259;"	d
Ttk_PlaceBox	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_PlaceBox($/;"	f
Ttk_PlaceElement	generic/ttk/ttkLayout.c	/^void Ttk_PlaceElement(Ttk_Layout layout, Ttk_Element node, Ttk_Box b)$/;"	f
Ttk_PlaceLayout	generic/ttk/ttkLayout.c	/^void Ttk_PlaceLayout(Ttk_Layout layout, Ttk_State state, Ttk_Box b)$/;"	f
Ttk_PlaceNodeList	generic/ttk/ttkLayout.c	/^static void Ttk_PlaceNodeList($/;"	f	file:
Ttk_PlaceSlave	generic/ttk/ttkManager.c	/^void Ttk_PlaceSlave($/;"	f
Ttk_PlatformInit	generic/ttk/ttkWidget.h	264;"	d
Ttk_PlatformInit	generic/ttk/ttkWidget.h	267;"	d
Ttk_PlatformInit	generic/ttk/ttkWidget.h	270;"	d
Ttk_PositionBox	generic/ttk/ttkLayout.c	/^Ttk_PositionBox(Ttk_Box *cavity, int width, int height, Ttk_PositionSpec flags)$/;"	f
Ttk_PositionSpec	generic/ttk/ttkTheme.h	/^typedef unsigned int Ttk_PositionSpec;	\/* See below *\/$/;"	t
Ttk_QueryOption	generic/ttk/ttkLayout.c	/^Tcl_Obj *Ttk_QueryOption($/;"	f
Ttk_QueryStyle	generic/ttk/ttkTheme.c	/^Tcl_Obj *Ttk_QueryStyle($/;"	f
Ttk_RebindSublayout	generic/ttk/ttkLayout.c	/^void Ttk_RebindSublayout(Ttk_Layout layout, void *recordPtr)$/;"	f
Ttk_RegisterCleanup	generic/ttk/ttkDecls.h	205;"	d
Ttk_RegisterCleanup	generic/ttk/ttkTheme.c	/^void Ttk_RegisterCleanup($/;"	f
Ttk_RegisterElement	generic/ttk/ttkDecls.h	209;"	d
Ttk_RegisterElement	generic/ttk/ttkTheme.c	/^Ttk_ElementClass *Ttk_RegisterElement($/;"	f
Ttk_RegisterElementFactory	generic/ttk/ttkDecls.h	211;"	d
Ttk_RegisterElementFactory	generic/ttk/ttkTheme.c	/^int Ttk_RegisterElementFactory($/;"	f
Ttk_RegisterElementSpec	generic/ttk/ttkDecls.h	207;"	d
Ttk_RegisterElementSpec	generic/ttk/ttkTheme.c	/^int Ttk_RegisterElementSpec(Ttk_Theme theme,$/;"	f
Ttk_RegisterLayout	generic/ttk/ttkDecls.h	213;"	d
Ttk_RegisterLayout	generic/ttk/ttkTheme.c	/^void Ttk_RegisterLayout($/;"	f
Ttk_RegisterLayoutTemplate	generic/ttk/ttkTheme.c	/^void Ttk_RegisterLayoutTemplate($/;"	f
Ttk_RegisterLayouts	generic/ttk/ttkLayout.c	/^void Ttk_RegisterLayouts(Ttk_Theme theme, Ttk_LayoutSpec spec)$/;"	f
Ttk_RegisterNamedColor	generic/ttk/ttkCache.c	/^void Ttk_RegisterNamedColor($/;"	f
Ttk_RelievePadding	generic/ttk/ttkDecls.h	243;"	d
Ttk_RelievePadding	generic/ttk/ttkLayout.c	/^Ttk_Padding Ttk_RelievePadding(Ttk_Padding padding, int relief, int n)$/;"	f
Ttk_ReorderSlave	generic/ttk/ttkManager.c	/^void Ttk_ReorderSlave(Ttk_Manager *mgr, int fromIndex, int toIndex)$/;"	f
Ttk_ResourceCache	generic/ttk/ttkTheme.h	/^typedef struct Ttk_ResourceCache_ *Ttk_ResourceCache;$/;"	t	typeref:struct:Ttk_ResourceCache_
Ttk_ResourceCache_	generic/ttk/ttkCache.c	/^struct Ttk_ResourceCache_ {$/;"	s	file:
Ttk_SetMargins	generic/ttk/ttkTheme.h	120;"	d
Ttk_SetThemeEnabledProc	generic/ttk/ttkTheme.c	/^void Ttk_SetThemeEnabledProc($/;"	f
Ttk_Side	generic/ttk/ttkTheme.h	/^} Ttk_Side;$/;"	t	typeref:enum:__anon74
Ttk_Slave	generic/ttk/ttkManager.c	/^} Ttk_Slave;$/;"	t	typeref:struct:__anon69	file:
Ttk_SlaveData	generic/ttk/ttkManager.c	/^void *Ttk_SlaveData(Ttk_Manager *mgr, int slaveIndex)$/;"	f
Ttk_SlaveIndex	generic/ttk/ttkManager.c	/^int Ttk_SlaveIndex(Ttk_Manager *mgr, Tk_Window slaveWindow)$/;"	f
Ttk_SlaveWindow	generic/ttk/ttkManager.c	/^Tk_Window Ttk_SlaveWindow(Ttk_Manager *mgr, int slaveIndex)$/;"	f
Ttk_State	generic/ttk/ttkTheme.h	/^typedef unsigned int Ttk_State;$/;"	t
Ttk_StateMap	generic/ttk/ttkTheme.h	/^typedef Tcl_Obj *Ttk_StateMap;$/;"	t
Ttk_StateMapLookup	generic/ttk/ttkDecls.h	222;"	d
Ttk_StateMapLookup	generic/ttk/ttkState.c	/^Tcl_Obj *Ttk_StateMapLookup($/;"	f
Ttk_StateMatches	generic/ttk/ttkTheme.h	68;"	d
Ttk_StateSpec	generic/ttk/ttkTheme.h	/^} Ttk_StateSpec;$/;"	t	typeref:struct:__anon70
Ttk_StateTable	generic/ttk/ttkTheme.h	/^} Ttk_StateTable;$/;"	t	typeref:struct:__anon71
Ttk_StateTableLookup	generic/ttk/ttkDecls.h	224;"	d
Ttk_StateTableLookup	generic/ttk/ttkState.c	/^int Ttk_StateTableLookup(Ttk_StateTable *map, unsigned int state)$/;"	f
Ttk_StickBox	generic/ttk/ttkDecls.h	251;"	d
Ttk_StickBox	generic/ttk/ttkLayout.c	/^Ttk_Box Ttk_StickBox(Ttk_Box parcel, int width, int height, unsigned sticky)$/;"	f
Ttk_Sticky	generic/ttk/ttkTheme.h	/^typedef unsigned int Ttk_Sticky;$/;"	t
Ttk_Stripe	generic/ttk/ttkImage.c	/^static void Ttk_Stripe($/;"	f	file:
Ttk_Style	generic/ttk/ttkTheme.h	/^typedef struct Ttk_Style_ *Ttk_Style;$/;"	t	typeref:struct:Ttk_Style_
Ttk_StyleDefault	generic/ttk/ttkTheme.c	/^Tcl_Obj *Ttk_StyleDefault(Ttk_Style style, const char *optionName)$/;"	f
Ttk_StyleMap	generic/ttk/ttkTheme.c	/^Tcl_Obj *Ttk_StyleMap(Ttk_Style style, const char *optionName, Ttk_State state)$/;"	f
Ttk_StyleName	generic/ttk/ttkTheme.c	/^const char *Ttk_StyleName(Ttk_Style stylePtr)$/;"	f
Ttk_StylePkgFree	generic/ttk/ttkTheme.c	/^static void Ttk_StylePkgFree(ClientData clientData, Tcl_Interp *interp)$/;"	f	file:
Ttk_StylePkgInit	generic/ttk/ttkTheme.c	/^void Ttk_StylePkgInit(Tcl_Interp *interp)$/;"	f
Ttk_Style_	generic/ttk/ttkTheme.c	/^typedef struct Ttk_Style_$/;"	s	file:
Ttk_Tag	generic/ttk/ttkWidget.h	/^typedef struct TtkTag *Ttk_Tag;$/;"	t	typeref:struct:TtkTag
Ttk_TagOptionValue	generic/ttk/ttkTagSet.c	/^Tcl_Obj *Ttk_TagOptionValue($/;"	f
Ttk_TagSet	generic/ttk/ttkWidget.h	/^} *Ttk_TagSet;$/;"	t	typeref:struct:TtkTagSet
Ttk_TagSetAdd	generic/ttk/ttkTagSet.c	/^int Ttk_TagSetAdd(Ttk_TagSet tagset, Ttk_Tag tag)$/;"	f
Ttk_TagSetApplyStyle	generic/ttk/ttkTagSet.c	/^void Ttk_TagSetApplyStyle($/;"	f
Ttk_TagSetContains	generic/ttk/ttkTagSet.c	/^int Ttk_TagSetContains(Ttk_TagSet tagset, Ttk_Tag tag)$/;"	f
Ttk_TagSetRemove	generic/ttk/ttkTagSet.c	/^int Ttk_TagSetRemove(Ttk_TagSet tagset, Ttk_Tag tag)$/;"	f
Ttk_TagSetValues	generic/ttk/ttkTagSet.c	/^void Ttk_TagSetValues(Ttk_TagTable tagTable, Ttk_TagSet tagSet, void *record)$/;"	f
Ttk_TagTable	generic/ttk/ttkWidget.h	/^typedef struct TtkTagTable *Ttk_TagTable;$/;"	t	typeref:struct:TtkTagTable
Ttk_TemplateNode	generic/ttk/ttkThemeInt.h	/^typedef struct Ttk_TemplateNode_ Ttk_TemplateNode, *Ttk_LayoutTemplate;$/;"	t	typeref:struct:Ttk_TemplateNode_
Ttk_TemplateNode_	generic/ttk/ttkLayout.c	/^struct Ttk_TemplateNode_ {$/;"	s	file:
Ttk_Theme	generic/ttk/ttkTheme.h	/^typedef struct Ttk_Theme_ *Ttk_Theme;$/;"	t	typeref:struct:Ttk_Theme_
Ttk_ThemeEnabledProc	generic/ttk/ttkTheme.h	/^typedef int (Ttk_ThemeEnabledProc)(Ttk_Theme theme, void *clientData);$/;"	t
Ttk_Theme_	generic/ttk/ttkTheme.c	/^typedef struct Ttk_Theme_$/;"	s	file:
Ttk_Tile	generic/ttk/ttkImage.c	/^static void Ttk_Tile($/;"	f	file:
Ttk_TraceHandle	generic/ttk/ttkWidget.h	/^typedef struct TtkTraceHandle_ Ttk_TraceHandle;$/;"	t	typeref:struct:TtkTraceHandle_
Ttk_TraceProc	generic/ttk/ttkWidget.h	/^typedef void (*Ttk_TraceProc)(void *recordPtr, const char *value);$/;"	t
Ttk_TraceVariable	generic/ttk/ttkTrace.c	/^Ttk_TraceHandle *Ttk_TraceVariable($/;"	f
Ttk_UniformPadding	generic/ttk/ttkDecls.h	239;"	d
Ttk_UniformPadding	generic/ttk/ttkLayout.c	/^Ttk_Padding Ttk_UniformPadding(short borderWidth)$/;"	f
Ttk_UnmapSlave	generic/ttk/ttkManager.c	/^void Ttk_UnmapSlave(Ttk_Manager *mgr, int slaveIndex)$/;"	f
Ttk_UnparseLayoutTemplate	generic/ttk/ttkLayout.c	/^Tcl_Obj *Ttk_UnparseLayoutTemplate(Ttk_TemplateNode *node)$/;"	f
Ttk_UntraceVariable	generic/ttk/ttkTrace.c	/^void Ttk_UntraceVariable(Ttk_TraceHandle *h)$/;"	f
Ttk_Use	generic/ttk/ttkCache.c	/^static Tcl_Obj *Ttk_Use($/;"	f	file:
Ttk_UseBorder	generic/ttk/ttkCache.c	/^Tcl_Obj *Ttk_UseBorder($/;"	f
Ttk_UseColor	generic/ttk/ttkCache.c	/^Tcl_Obj *Ttk_UseColor(Ttk_ResourceCache cache, Tk_Window tkwin, Tcl_Obj *objPtr)$/;"	f
Ttk_UseFont	generic/ttk/ttkCache.c	/^Tcl_Obj *Ttk_UseFont(Ttk_ResourceCache cache, Tk_Window tkwin, Tcl_Obj *objPtr)$/;"	f
Ttk_UseImage	generic/ttk/ttkCache.c	/^Tk_Image Ttk_UseImage(Ttk_ResourceCache cache, Tk_Window tkwin, Tcl_Obj *objPtr)$/;"	f
Ttk_UseTheme	generic/ttk/ttkTheme.c	/^int Ttk_UseTheme(Tcl_Interp *interp, Ttk_Theme  theme)$/;"	f
Ttk_WinBox	generic/ttk/ttkTheme.h	138;"	d
Ttk_WinPlatformInit	win/ttkWinMonitor.c	/^MODULE_SCOPE int Ttk_WinPlatformInit(Tcl_Interp *interp)$/;"	f
U	generic/tkImgGIF.c	234;"	d	file:
U	generic/tkImgGIF.c	236;"	d	file:
UCHAR	generic/tkInt.h	901;"	d
UINT	unix/tkUnixPort.h	114;"	d
UINT2PTR	generic/tkInt.h	79;"	d
UINT2PTR	generic/tkInt.h	82;"	d
UISF_HIDEACCEL	win/tkWinMenu.c	74;"	d	file:
UIS_CLEAR	win/tkWinMenu.c	71;"	d	file:
UIS_SET	win/tkWinMenu.c	68;"	d	file:
UNICODE	generic/tkMain.c	24;"	d	file:
UNICODE	generic/tkMain.c	27;"	d	file:
UNICODE_NOCHAR	win/tkWinX.c	53;"	d	file:
UNIFORM_PREALLOC	generic/tkGrid.c	43;"	d	file:
UNIX_DIR	macosx/GNUmakefile	/^UNIX_DIR		:= ${CURDIR}\/..\/unix$/;"	m
UNIX_DIR	unix/Makefile	/^UNIX_DIR		= $(TOP_DIR)\/unix$/;"	m
UNIX_TK	generic/tkStubInit.c	16;"	d	file:
UNKNOWN_TYPE	generic/tkMenu.h	466;"	d
UNMAP	generic/tkBind.c	472;"	d	file:
UPDATE_H_SCROLLBAR	generic/tkListbox.c	208;"	d	file:
UPDATE_SCROLLBAR	generic/tkEntry.h	263;"	d
UPDATE_SCROLLBARS	generic/tkCanvas.h	272;"	d
UPDATE_SCROLLBARS	generic/tkText.h	816;"	d
UPDATE_V_SCROLLBAR	generic/tkListbox.c	207;"	d	file:
URL_MAX_LENGTH	macosx/tkMacOSXHLEvents.c	18;"	d	file:
US	xlib/xcolors.c	335;"	d	file:
USEINITPROC	generic/tkWindow.c	101;"	d	file:
USER_EVENTS	unix/tkUnixEmbed.c	1110;"	d	file:
USER_MASK	generic/ttk/ttkTreeview.c	432;"	d	file:
USE_OLD_IMAGE	generic/tkOldTest.c	18;"	d	file:
USE_PANIC_ON_PHOTO_ALLOC_FAILURE	generic/tk.h	1574;"	d
USE_TCL_STUBS	generic/tkOldTest.c	20;"	d	file:
USE_TCL_STUBS	generic/tkSquare.c	20;"	d	file:
USE_TCL_STUBS	generic/tkTest.c	19;"	d	file:
USE_TCL_STUBS	generic/ttk/ttkStubLib.c	6;"	d	file:
USE_TCL_STUBS	generic/ttk/ttkStubLib.c	7;"	d	file:
USE_TCL_STUBS	win/tkWinTest.c	15;"	d	file:
USE_TCL_STUBS	win/tkWinTest.c	16;"	d	file:
USE_TK_STUBS	generic/tkOldTest.c	23;"	d	file:
USE_TK_STUBS	generic/tkSquare.c	23;"	d	file:
USE_TK_STUBS	generic/tkTest.c	22;"	d	file:
USE_TK_STUBS	win/tkWinTest.c	17;"	d	file:
USE_TK_STUBS	win/tkWinTest.c	18;"	d	file:
USE_TTK_STUBS	generic/ttk/ttkStubLib.c	11;"	d	file:
USPosition	xlib/X11/Xutil.h	74;"	d
USSize	xlib/X11/Xutil.h	75;"	d
Ucs2beToUtfProc	unix/tkUnixFont.c	/^Ucs2beToUtfProc($/;"	f	file:
Unadvise	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Unadvise )( IFileOpenDialog *, DWORD);$/;"	m	struct:IFileOpenDialogVtbl	file:
Unadvise	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Unadvise )( IFileSaveDialog *, DWORD);$/;"	m	struct:IFileSaveDialogVtbl	file:
Unadvise	win/tkWinDialog.c	/^    HRESULT ( STDMETHODCALLTYPE *Unadvise )(IFileDialog *, DWORD);$/;"	m	struct:IFileDialogVtbl	file:
UnfilterLine	generic/tkImgPNG.c	/^UnfilterLine($/;"	f	file:
UnhookCascadeEntry	generic/tkMenu.c	/^UnhookCascadeEntry($/;"	f	file:
UniformGroup	generic/tkGrid.c	/^typedef struct UniformGroup {$/;"	s	file:
UniformGroup	generic/tkGrid.c	/^} UniformGroup;$/;"	t	typeref:struct:UniformGroup	file:
UnixBorder	unix/tkUnix3d.c	/^} UnixBorder;$/;"	t	typeref:struct:__anon218	file:
UnixButton	unix/tkUnixButton.c	/^typedef struct UnixButton {$/;"	s	file:
UnixButton	unix/tkUnixButton.c	/^} UnixButton;$/;"	t	typeref:struct:UnixButton	file:
UnixFont	unix/tkUnixFont.c	/^typedef struct UnixFont {$/;"	s	file:
UnixFont	unix/tkUnixFont.c	/^} UnixFont;$/;"	t	typeref:struct:UnixFont	file:
UnixFtFace	unix/tkUnixRFont.c	/^} UnixFtFace;$/;"	t	typeref:struct:__anon220	file:
UnixFtFont	unix/tkUnixRFont.c	/^} UnixFtFont;$/;"	t	typeref:struct:__anon221	file:
UnixScrollbar	unix/tkUnixScrlbr.c	/^typedef struct UnixScrollbar {$/;"	s	file:
UnixScrollbar	unix/tkUnixScrlbr.c	/^} UnixScrollbar;$/;"	t	typeref:struct:UnixScrollbar	file:
Unlink	generic/tkGrid.c	/^Unlink($/;"	f	file:
Unlink	generic/tkPack.c	/^Unlink($/;"	f	file:
Unlink	generic/tkPanedWindow.c	/^Unlink($/;"	f	file:
UnlinkSlave	generic/tkPlace.c	/^UnlinkSlave($/;"	f	file:
UnlinkWindow	generic/tkWindow.c	/^UnlinkWindow($/;"	f	file:
UnmapGravity	xlib/X11/X.h	390;"	d
UnmapNotify	xlib/X11/X.h	157;"	d
Unsorted	xlib/X11/X.h	495;"	d
UpdateButtonEventState	generic/tkEvent.c	/^UpdateButtonEventState($/;"	f	file:
UpdateClipboard	win/tkWinClipboard.c	/^UpdateClipboard($/;"	f	file:
UpdateCommWindow	unix/tkUnixSend.c	/^UpdateCommWindow($/;"	f	file:
UpdateCommand	unix/tkUnixWm.c	/^UpdateCommand($/;"	f	file:
UpdateControlValues	macosx/tkMacOSXScrlbr.c	/^UpdateControlValues($/;"	f	file:
UpdateCursor	generic/tkPointer.c	/^UpdateCursor($/;"	f	file:
UpdateDependentFonts	generic/tkFont.c	/^UpdateDependentFonts($/;"	f	file:
UpdateDirtyFlag	generic/tkText.c	/^UpdateDirtyFlag($/;"	f	file:
UpdateDisplayInfo	generic/tkTextDisp.c	/^UpdateDisplayInfo($/;"	f	file:
UpdateEmbeddedMenu	win/tkWinMenu.c	/^UpdateEmbeddedMenu($/;"	f	file:
UpdateGeometryInfo	macosx/tkMacOSXWm.c	/^UpdateGeometryInfo($/;"	f	file:
UpdateGeometryInfo	unix/tkUnixWm.c	/^UpdateGeometryInfo($/;"	f	file:
UpdateGeometryInfo	win/tkWinWm.c	/^UpdateGeometryInfo($/;"	f	file:
UpdateHints	unix/tkUnixWm.c	/^UpdateHints($/;"	f	file:
UpdateInputLanguage	win/tkWinX.c	/^UpdateInputLanguage($/;"	f	file:
UpdateLayout	generic/ttk/ttkWidget.c	/^static int UpdateLayout(Tcl_Interp *interp, WidgetCore *corePtr)$/;"	f	file:
UpdateNetWmState	unix/tkUnixWm.c	/^UpdateNetWmState($/;"	f	file:
UpdateOffsets	macosx/tkMacOSXSubwindows.c	/^UpdateOffsets($/;"	f	file:
UpdatePhotoIcon	unix/tkUnixWm.c	/^UpdatePhotoIcon($/;"	f	file:
UpdateScrollbar	generic/ttk/ttkScroll.c	/^static int UpdateScrollbar(Tcl_Interp *interp, ScrollHandle h)$/;"	f	file:
UpdateScrollbar	win/tkWinScrlbr.c	/^UpdateScrollbar($/;"	f	file:
UpdateScrollbarBG	generic/ttk/ttkScroll.c	/^static void UpdateScrollbarBG(ClientData clientData)$/;"	f	file:
UpdateScrollbarMetrics	win/tkWinScrlbr.c	/^UpdateScrollbarMetrics(void)$/;"	f
UpdateSizeHints	macosx/tkMacOSXWm.c	/^UpdateSizeHints($/;"	f	file:
UpdateSizeHints	unix/tkUnixWm.c	/^UpdateSizeHints($/;"	f	file:
UpdateStringOfMM	generic/tkObj.c	/^UpdateStringOfMM($/;"	f	file:
UpdateStringOfTextIndex	generic/tkTextIndex.c	/^UpdateStringOfTextIndex($/;"	f	file:
UpdateTitle	unix/tkUnixWm.c	/^UpdateTitle($/;"	f	file:
UpdateVRootGeometry	macosx/tkMacOSXWm.c	/^UpdateVRootGeometry($/;"	f	file:
UpdateVRootGeometry	unix/tkUnixWm.c	/^UpdateVRootGeometry($/;"	f	file:
UpdateWmProtocols	unix/tkUnixWm.c	/^UpdateWmProtocols($/;"	f	file:
UpdateWrapper	win/tkWinWm.c	/^UpdateWrapper($/;"	f	file:
UseinputmethodsCmd	generic/tkCmds.c	/^UseinputmethodsCmd($/;"	f
UtfToUcs2beProc	unix/tkUnixFont.c	/^UtfToUcs2beProc($/;"	f	file:
VALGRINDARGS	unix/Makefile	/^VALGRINDARGS=--tool=memcheck --num-callers=8 --leak-resolution=high --leak-check=yes --show-reachable=yes -v$/;"	m
VALIDATE_ABORT	generic/tkEntry.h	268;"	d
VALIDATE_ALL	generic/tkEntry.c	/^    VALIDATE_ALL, VALIDATE_KEY, VALIDATE_FOCUS,$/;"	e	enum:validateType	file:
VALIDATE_BUTTON	generic/tkEntry.c	/^    VALIDATE_FORCED, VALIDATE_DELETE, VALIDATE_INSERT, VALIDATE_BUTTON$/;"	e	enum:validateType	file:
VALIDATE_DELETE	generic/tkEntry.c	/^    VALIDATE_FORCED, VALIDATE_DELETE, VALIDATE_INSERT, VALIDATE_BUTTON$/;"	e	enum:validateType	file:
VALIDATE_DELETE	generic/ttk/ttkEntry.c	/^    VALIDATE_INSERT, VALIDATE_DELETE,$/;"	e	enum:validateReason	file:
VALIDATE_FOCUS	generic/tkEntry.c	/^    VALIDATE_ALL, VALIDATE_KEY, VALIDATE_FOCUS,$/;"	e	enum:validateType	file:
VALIDATE_FOCUSIN	generic/tkEntry.c	/^    VALIDATE_FOCUSIN, VALIDATE_FOCUSOUT, VALIDATE_NONE,$/;"	e	enum:validateType	file:
VALIDATE_FOCUSIN	generic/ttk/ttkEntry.c	/^    VALIDATE_FOCUSIN, VALIDATE_FOCUSOUT,$/;"	e	enum:validateReason	file:
VALIDATE_FOCUSOUT	generic/tkEntry.c	/^    VALIDATE_FOCUSIN, VALIDATE_FOCUSOUT, VALIDATE_NONE,$/;"	e	enum:validateType	file:
VALIDATE_FOCUSOUT	generic/ttk/ttkEntry.c	/^    VALIDATE_FOCUSIN, VALIDATE_FOCUSOUT,$/;"	e	enum:validateReason	file:
VALIDATE_FORCED	generic/tkEntry.c	/^    VALIDATE_FORCED, VALIDATE_DELETE, VALIDATE_INSERT, VALIDATE_BUTTON$/;"	e	enum:validateType	file:
VALIDATE_FORCED	generic/ttk/ttkEntry.c	/^    VALIDATE_FORCED$/;"	e	enum:validateReason	file:
VALIDATE_INSERT	generic/tkEntry.c	/^    VALIDATE_FORCED, VALIDATE_DELETE, VALIDATE_INSERT, VALIDATE_BUTTON$/;"	e	enum:validateType	file:
VALIDATE_INSERT	generic/ttk/ttkEntry.c	/^    VALIDATE_INSERT, VALIDATE_DELETE,$/;"	e	enum:validateReason	file:
VALIDATE_KEY	generic/tkEntry.c	/^    VALIDATE_ALL, VALIDATE_KEY, VALIDATE_FOCUS,$/;"	e	enum:validateType	file:
VALIDATE_NONE	generic/tkEntry.c	/^    VALIDATE_FOCUSIN, VALIDATE_FOCUSOUT, VALIDATE_NONE,$/;"	e	enum:validateType	file:
VALIDATE_VAR	generic/tkEntry.h	267;"	d
VALIDATING	generic/tkEntry.h	266;"	d
VALIDATING	generic/ttk/ttkEntry.c	24;"	d	file:
VALIDATION_SET_VALUE	generic/ttk/ttkEntry.c	25;"	d	file:
VERSION	macosx/GNUmakefile	/^VERSION			:= $(shell awk -F= '\/^TK_VERSION\/ {print $$2; nextfile}' ${UNIX_DIR}\/configure.in)$/;"	m
VERSION	macosx/GNUmakefile	/^VERSION			:= ${VERSION}-X11$/;"	m
VERSION	unix/Makefile	/^VERSION 		= 8.6$/;"	m
VIRTUAL	generic/tkBind.c	480;"	d	file:
VISIBILITY	generic/tkBind.c	469;"	d	file:
VISIBILITY_HIDDEN	macosx/tkMacOSXPrivate.h	255;"	d
VMODE	generic/ttk/ttkEntry.c	/^} VMODE;$/;"	t	typeref:enum:validateMode	file:
VMODE_ALL	generic/ttk/ttkEntry.c	/^    VMODE_ALL, VMODE_KEY, VMODE_FOCUS, VMODE_FOCUSIN, VMODE_FOCUSOUT, VMODE_NONE$/;"	e	enum:validateMode	file:
VMODE_FOCUS	generic/ttk/ttkEntry.c	/^    VMODE_ALL, VMODE_KEY, VMODE_FOCUS, VMODE_FOCUSIN, VMODE_FOCUSOUT, VMODE_NONE$/;"	e	enum:validateMode	file:
VMODE_FOCUSIN	generic/ttk/ttkEntry.c	/^    VMODE_ALL, VMODE_KEY, VMODE_FOCUS, VMODE_FOCUSIN, VMODE_FOCUSOUT, VMODE_NONE$/;"	e	enum:validateMode	file:
VMODE_FOCUSOUT	generic/ttk/ttkEntry.c	/^    VMODE_ALL, VMODE_KEY, VMODE_FOCUS, VMODE_FOCUSIN, VMODE_FOCUSOUT, VMODE_NONE$/;"	e	enum:validateMode	file:
VMODE_KEY	generic/ttk/ttkEntry.c	/^    VMODE_ALL, VMODE_KEY, VMODE_FOCUS, VMODE_FOCUSIN, VMODE_FOCUSOUT, VMODE_NONE$/;"	e	enum:validateMode	file:
VMODE_NONE	generic/ttk/ttkEntry.c	/^    VMODE_ALL, VMODE_KEY, VMODE_FOCUS, VMODE_FOCUSIN, VMODE_FOCUSOUT, VMODE_NONE$/;"	e	enum:validateMode	file:
VREASON	generic/ttk/ttkEntry.c	/^} VREASON;$/;"	t	typeref:enum:validateReason	file:
ValidMoves	library/demos/knightstour.tcl	/^proc ValidMoves {square} {$/;"	p
ValidSashIndex	generic/tkPanedWindow.c	247;"	d	file:
ValidateName	unix/tkUnixSend.c	/^ValidateName($/;"	f	file:
ValueKey	generic/tkColor.c	/^} ValueKey;$/;"	t	typeref:struct:__anon157	file:
ValueKey	generic/tkGC.c	/^} ValueKey;$/;"	t	typeref:struct:__anon141	file:
ValueToPoint	generic/ttk/ttkScale.c	/^ValueToPoint(Scale *scalePtr, double value)$/;"	f	file:
VarTraceProc	generic/ttk/ttkTrace.c	/^VarTraceProc($/;"	f	file:
VariableChanged	generic/ttk/ttkProgress.c	/^static void VariableChanged(void *recordPtr, const char *value)$/;"	f	file:
VendorRelease	xlib/X11/Xlib.h	91;"	d
VertLineToArc	generic/tkCanvArc.c	/^VertLineToArc($/;"	f	file:
VerticalSeparatorElementDraw	generic/ttk/ttkElements.c	/^static void VerticalSeparatorElementDraw($/;"	f	file:
VerticalSeparatorElementSpec	generic/ttk/ttkElements.c	/^static Ttk_ElementSpec VerticalSeparatorElementSpec = {$/;"	v	file:
VirtualEvent	generic/tk.h	650;"	d
VirtualEventMask	generic/tk.h	658;"	d
VirtualEventTable	generic/tkBind.c	/^} VirtualEventTable;$/;"	t	typeref:struct:__anon167	file:
VirtualOwners	generic/tkBind.c	/^typedef struct VirtualOwners {$/;"	s	file:
VirtualOwners	generic/tkBind.c	/^} VirtualOwners;$/;"	t	typeref:struct:VirtualOwners	file:
VisibilityChangeMask	xlib/X11/X.h	127;"	d
VisibilityFullyObscured	xlib/X11/X.h	248;"	d
VisibilityNotify	xlib/X11/X.h	154;"	d
VisibilityPartiallyObscured	xlib/X11/X.h	247;"	d
VisibilityUnobscured	xlib/X11/X.h	246;"	d
VistaFileDialogsAvailable	win/tkWinDialog.c	/^static int VistaFileDialogsAvailable()$/;"	f	file:
Visual	xlib/X11/Xlib.h	/^} Visual;$/;"	t	typeref:struct:__anon269
VisualAllMask	xlib/X11/Xutil.h	252;"	d
VisualBitsPerRGBMask	xlib/X11/Xutil.h	251;"	d
VisualBlueMaskMask	xlib/X11/Xutil.h	249;"	d
VisualClassMask	xlib/X11/Xutil.h	246;"	d
VisualColormapSizeMask	xlib/X11/Xutil.h	250;"	d
VisualDepthMask	xlib/X11/Xutil.h	245;"	d
VisualDictionary	generic/tkVisual.c	/^typedef struct VisualDictionary {$/;"	s	file:
VisualDictionary	generic/tkVisual.c	/^} VisualDictionary;$/;"	t	typeref:struct:VisualDictionary	file:
VisualGreenMaskMask	xlib/X11/Xutil.h	248;"	d
VisualID	xlib/X11/X.h	/^typedef unsigned long VisualID;$/;"	t
VisualIDMask	xlib/X11/Xutil.h	243;"	d
VisualNoMask	xlib/X11/Xutil.h	242;"	d
VisualRedMaskMask	xlib/X11/Xutil.h	247;"	d
VisualScreenMask	xlib/X11/Xutil.h	244;"	d
WHITE	macosx/tkMacOSXDefault.h	35;"	d
WHITE	unix/tkUnixDefault.h	28;"	d
WHITE	win/tkWinDefault.h	27;"	d
WIDGET_DELETED	generic/tkPanedWindow.c	176;"	d	file:
WIDGET_DESTROYED	generic/ttk/ttkWidget.h	12;"	d
WIDGET_INHERIT_OPTIONS	generic/ttk/ttkWidget.h	129;"	d
WIDGET_TAKEFOCUS_FALSE	generic/ttk/ttkWidget.h	121;"	d
WIDGET_TAKEFOCUS_TRUE	generic/ttk/ttkWidget.h	118;"	d
WIDGET_USER_FLAG	generic/ttk/ttkWidget.h	15;"	d
WIDG_OBJS	unix/Makefile	/^WIDG_OBJS = tkButton.o tkEntry.o tkFrame.o tkListbox.o \\$/;"	m
WIDTHBYTES	win/tkWinWm.c	552;"	d	file:
WILDCARD	generic/tkOption.c	94;"	d	file:
WILDCARD_LEAF_CLASS	generic/tkOption.c	101;"	d	file:
WILDCARD_LEAF_NAME	generic/tkOption.c	100;"	d	file:
WILDCARD_NODE_CLASS	generic/tkOption.c	103;"	d	file:
WILDCARD_NODE_NAME	generic/tkOption.c	102;"	d	file:
WIN32_LEAN_AND_MEAN	win/tkWin.h	35;"	d
WIN32_LEAN_AND_MEAN	win/tkWin.h	37;"	d
WIN32_LEAN_AND_MEAN	win/ttkWinMonitor.c	2;"	d	file:
WIN32_LEAN_AND_MEAN	win/ttkWinTheme.c	5;"	d	file:
WIN32_LEAN_AND_MEAN	win/winMain.c	16;"	d	file:
WIN32_LEAN_AND_MEAN	win/winMain.c	18;"	d	file:
WIN32_XDRAWLINE_HACK	generic/ttk/ttkClamTheme.c	16;"	d	file:
WIN32_XDRAWLINE_HACK	generic/ttk/ttkClamTheme.c	18;"	d	file:
WIN32_XDRAWLINE_HACK	generic/ttk/ttkDefaultTheme.c	/^static const int WIN32_XDRAWLINE_HACK = 0;$/;"	v	file:
WIN32_XDRAWLINE_HACK	generic/ttk/ttkDefaultTheme.c	/^static const int WIN32_XDRAWLINE_HACK = 1;$/;"	v	file:
WINDOW_BODY_PIXEL	macosx/tkMacOSXPort.h	170;"	d
WINMACONLY	generic/tkWindow.c	100;"	d	file:
WINVER	win/tkWin.h	25;"	d
WINVER	win/ttkWinXPTheme.c	24;"	d	file:
WISH	macosx/GNUmakefile	/^WISH			= wish${VERSION}$/;"	m
WISH_EXE	unix/Makefile	/^WISH_EXE		= wish${EXE_SUFFIX}$/;"	m
WISH_LIBS	unix/Makefile	/^WISH_LIBS = $(TCL_LIB_SPEC)  -lpthread $(X11_LIB_SWITCHES) -ldl -lz  -lpthread -lieee -lm $/;"	m
WISH_OBJS	unix/Makefile	/^WISH_OBJS = tkAppInit.o$/;"	m
WISH_RSRC_FILE	unix/Makefile	/^WISH_RSRC_FILE		= wish$(VERSION).rsrc$/;"	m
WMATT_ALPHA	macosx/tkMacOSXWm.c	/^    WMATT_ALPHA, WMATT_FULLSCREEN, WMATT_MODIFIED, WMATT_NOTIFY,$/;"	e	enum:__anon206	file:
WMATT_ALPHA	unix/tkUnixWm.c	/^    WMATT_ALPHA, WMATT_TOPMOST, WMATT_ZOOMED, WMATT_FULLSCREEN,$/;"	e	enum:__anon215	file:
WMATT_FULLSCREEN	macosx/tkMacOSXWm.c	/^    WMATT_ALPHA, WMATT_FULLSCREEN, WMATT_MODIFIED, WMATT_NOTIFY,$/;"	e	enum:__anon206	file:
WMATT_FULLSCREEN	unix/tkUnixWm.c	/^    WMATT_ALPHA, WMATT_TOPMOST, WMATT_ZOOMED, WMATT_FULLSCREEN,$/;"	e	enum:__anon215	file:
WMATT_MODIFIED	macosx/tkMacOSXWm.c	/^    WMATT_ALPHA, WMATT_FULLSCREEN, WMATT_MODIFIED, WMATT_NOTIFY,$/;"	e	enum:__anon206	file:
WMATT_NOTIFY	macosx/tkMacOSXWm.c	/^    WMATT_ALPHA, WMATT_FULLSCREEN, WMATT_MODIFIED, WMATT_NOTIFY,$/;"	e	enum:__anon206	file:
WMATT_TITLEPATH	macosx/tkMacOSXWm.c	/^    WMATT_TITLEPATH, WMATT_TOPMOST, WMATT_TRANSPARENT,$/;"	e	enum:__anon206	file:
WMATT_TOPMOST	macosx/tkMacOSXWm.c	/^    WMATT_TITLEPATH, WMATT_TOPMOST, WMATT_TRANSPARENT,$/;"	e	enum:__anon206	file:
WMATT_TOPMOST	unix/tkUnixWm.c	/^    WMATT_ALPHA, WMATT_TOPMOST, WMATT_ZOOMED, WMATT_FULLSCREEN,$/;"	e	enum:__anon215	file:
WMATT_TRANSPARENT	macosx/tkMacOSXWm.c	/^    WMATT_TITLEPATH, WMATT_TOPMOST, WMATT_TRANSPARENT,$/;"	e	enum:__anon206	file:
WMATT_TYPE	unix/tkUnixWm.c	/^    WMATT_TYPE, _WMATT_LAST_ATTRIBUTE$/;"	e	enum:__anon215	file:
WMATT_ZOOMED	unix/tkUnixWm.c	/^    WMATT_ALPHA, WMATT_TOPMOST, WMATT_ZOOMED, WMATT_FULLSCREEN,$/;"	e	enum:__anon215	file:
WM_ABOUT_TO_MAP	macosx/tkMacOSXWm.h	241;"	d
WM_ABOUT_TO_MAP	unix/tkUnixWm.c	272;"	d	file:
WM_ADDED_TOPLEVEL_COLORMAP	macosx/tkMacOSXWm.h	244;"	d
WM_ADDED_TOPLEVEL_COLORMAP	unix/tkUnixWm.c	275;"	d	file:
WM_ADDED_TOPLEVEL_COLORMAP	win/tkWinWm.c	333;"	d	file:
WM_COLORMAPS_EXPLICIT	macosx/tkMacOSXWm.h	243;"	d
WM_COLORMAPS_EXPLICIT	unix/tkUnixWm.c	274;"	d	file:
WM_COLORMAPS_EXPLICIT	win/tkWinWm.c	332;"	d	file:
WM_CREATE_PENDING	win/tkWinWm.c	330;"	d	file:
WM_FULLSCREEN	macosx/tkMacOSXWm.h	248;"	d
WM_FULLSCREEN	win/tkWinWm.c	337;"	d	file:
WM_FULLSCREEN_STYLE	win/tkWinWm.c	346;"	d	file:
WM_HEIGHT_NOT_RESIZABLE	macosx/tkMacOSXWm.h	246;"	d
WM_HEIGHT_NOT_RESIZABLE	unix/tkUnixWm.c	277;"	d	file:
WM_HEIGHT_NOT_RESIZABLE	win/tkWinWm.c	335;"	d	file:
WM_LBSELCHANGED	win/tkWinDialog.c	/^    UINT WM_LBSELCHANGED;	\/* Holds a registered windows event used for$/;"	m	struct:ThreadSpecificData	file:
WM_MOVE_PENDING	macosx/tkMacOSXWm.h	242;"	d
WM_MOVE_PENDING	unix/tkUnixWm.c	273;"	d	file:
WM_MOVE_PENDING	win/tkWinWm.c	331;"	d	file:
WM_NEGATIVE_X	macosx/tkMacOSXWm.h	236;"	d
WM_NEGATIVE_X	unix/tkUnixWm.c	267;"	d	file:
WM_NEGATIVE_X	win/tkWinWm.c	326;"	d	file:
WM_NEGATIVE_Y	macosx/tkMacOSXWm.h	237;"	d
WM_NEGATIVE_Y	unix/tkUnixWm.c	268;"	d	file:
WM_NEGATIVE_Y	win/tkWinWm.c	327;"	d	file:
WM_NEVER_MAPPED	macosx/tkMacOSXWm.h	234;"	d
WM_NEVER_MAPPED	unix/tkUnixWm.c	265;"	d	file:
WM_NEVER_MAPPED	win/tkWinWm.c	324;"	d	file:
WM_NSMASK_SHIFT	macosx/tkMacOSXWm.c	36;"	d	file:
WM_OVERRIDE_STYLE	win/tkWinWm.c	343;"	d	file:
WM_SYNC_PENDING	macosx/tkMacOSXWm.h	239;"	d
WM_SYNC_PENDING	unix/tkUnixWm.c	270;"	d	file:
WM_SYNC_PENDING	win/tkWinWm.c	329;"	d	file:
WM_THEMECHANGED	win/ttkWinMonitor.c	9;"	d	file:
WM_TOPLEVEL_STYLE	win/tkWinWm.c	349;"	d	file:
WM_TOPMOST	macosx/tkMacOSXWm.h	247;"	d
WM_TRANSIENT_STYLE	win/tkWinWm.c	352;"	d	file:
WM_TRANSPARENT	macosx/tkMacOSXWm.h	249;"	d
WM_UNICHAR	win/tkWinX.c	52;"	d	file:
WM_UNINITMENUPOPUP	win/tkWinMenu.c	78;"	d	file:
WM_UPDATEUISTATE	win/tkWinMenu.c	65;"	d	file:
WM_UPDATE_PENDING	macosx/tkMacOSXWm.h	235;"	d
WM_UPDATE_PENDING	unix/tkUnixWm.c	266;"	d	file:
WM_UPDATE_PENDING	win/tkWinWm.c	325;"	d	file:
WM_UPDATE_SIZE_HINTS	macosx/tkMacOSXWm.h	238;"	d
WM_UPDATE_SIZE_HINTS	unix/tkUnixWm.c	269;"	d	file:
WM_UPDATE_SIZE_HINTS	win/tkWinWm.c	328;"	d	file:
WM_VROOT_OFFSET_STALE	macosx/tkMacOSXWm.h	240;"	d
WM_VROOT_OFFSET_STALE	unix/tkUnixWm.c	271;"	d	file:
WM_WIDTH_NOT_RESIZABLE	macosx/tkMacOSXWm.h	245;"	d
WM_WIDTH_NOT_RESIZABLE	unix/tkUnixWm.c	276;"	d	file:
WM_WIDTH_NOT_RESIZABLE	win/tkWinWm.c	334;"	d	file:
WM_WITHDRAWN	unix/tkUnixWm.c	278;"	d	file:
WM_WITHDRAWN	win/tkWinWm.c	336;"	d	file:
WNDPROC	unix/tkUnixPort.h	122;"	d
WORDS_BIGENDIAN	generic/tkInt.h	38;"	d
WORDS_BIGENDIAN	generic/tkInt.h	39;"	d
WORDS_BIGENDIAN	generic/tkInt.h	44;"	d
WPARAM	unix/tkUnixPort.h	123;"	d
WS_EX_LAYERED	win/tkWinWm.c	24;"	d	file:
WS_EX_TOOLWINDOW	win/tkWinInt.h	34;"	d
WaitForConfigureNotify	unix/tkUnixWm.c	/^WaitForConfigureNotify($/;"	f	file:
WaitForEvent	unix/tkUnixWm.c	/^WaitForEvent($/;"	f	file:
WaitForMapNotify	unix/tkUnixWm.c	/^WaitForMapNotify($/;"	f	file:
WaitRestrictInfo	unix/tkUnixWm.c	/^typedef struct WaitRestrictInfo {$/;"	s	file:
WaitRestrictInfo	unix/tkUnixWm.c	/^} WaitRestrictInfo;$/;"	t	typeref:struct:WaitRestrictInfo	file:
WaitRestrictProc	unix/tkUnixWm.c	/^WaitRestrictProc($/;"	f	file:
WaitRestrictProc	unix/tkUnixWm.c	/^static Tk_RestrictProc WaitRestrictProc;$/;"	v	file:
WaitVariableProc	generic/tkCmds.c	/^WaitVariableProc($/;"	f	file:
WaitVisibilityProc	generic/tkCmds.c	/^WaitVisibilityProc($/;"	f	file:
WaitWindowProc	generic/tkCmds.c	/^WaitWindowProc($/;"	f	file:
WestGravity	xlib/X11/X.h	380;"	d
WhenMapped	xlib/X11/X.h	395;"	d
WhitePixel	xlib/X11/Xlib.h	78;"	d
WhitePixelOfScreen	xlib/X11/Xlib.h	108;"	d
WidgetCore	generic/ttk/ttkWidget.h	/^} WidgetCore;$/;"	t	typeref:struct:__anon48
WidgetDestroyed	generic/ttk/ttkWidget.h	140;"	d
WidgetInstanceObjCmd	generic/ttk/ttkWidget.c	/^WidgetInstanceObjCmd($/;"	f	file:
WidgetInstanceObjCmdDeleted	generic/ttk/ttkWidget.c	/^WidgetInstanceObjCmdDeleted(ClientData clientData)$/;"	f	file:
WidgetSpec	generic/ttk/ttkWidget.h	/^typedef struct WidgetSpec_ WidgetSpec;	\/* Forward *\/$/;"	t	typeref:struct:WidgetSpec_
WidgetSpec_	generic/ttk/ttkWidget.h	/^struct WidgetSpec_$/;"	s
WidgetWorldChanged	generic/ttk/ttkWidget.c	/^static void WidgetWorldChanged(ClientData clientData)$/;"	f	file:
Width	win/tkWinWm.c	/^    UINT Width, Height, Colors;	\/* Width, Height and bpp *\/$/;"	m	struct:__anon233	file:
WidthMMOfScreen	xlib/X11/Xlib.h	115;"	d
WidthOfScreen	xlib/X11/Xlib.h	113;"	d
WidthValue	xlib/X11/Xutil.h	43;"	d
WinBorder	win/tkWin3d.c	/^} WinBorder;$/;"	t	typeref:struct:__anon252	file:
WinButton	win/tkWinButton.c	/^typedef struct WinButton {$/;"	s	file:
WinButton	win/tkWinButton.c	/^} WinButton;$/;"	t	typeref:struct:WinButton	file:
WinColor	win/tkWinColor.c	/^typedef struct WinColor {$/;"	s	file:
WinColor	win/tkWinColor.c	/^} WinColor;$/;"	t	typeref:struct:WinColor	file:
WinDrawFunc	win/tkWinDraw.c	/^typedef BOOL (CALLBACK *WinDrawFunc)(HDC dc, const POINT *points, int npoints);$/;"	t	file:
WinFont	win/tkWinFont.c	/^typedef struct WinFont {$/;"	s	file:
WinFont	win/tkWinFont.c	/^} WinFont;$/;"	t	typeref:struct:WinFont	file:
WinFontCanUseProc	win/tkWinFont.c	/^WinFontCanUseProc($/;"	f	file:
WinFontExistProc	win/tkWinFont.c	/^WinFontExistProc($/;"	f	file:
WinFontFamilyEnumProc	win/tkWinFont.c	/^WinFontFamilyEnumProc($/;"	f	file:
WinIconInstance	win/tkWinWm.c	/^typedef struct WinIconInstance {$/;"	s	file:
WinIconInstance	win/tkWinWm.c	/^} WinIconInstance;$/;"	t	typeref:struct:WinIconInstance	file:
WinIconPtr	win/tkWinWm.c	/^typedef struct WinIconInstance *WinIconPtr;$/;"	t	typeref:struct:WinIconInstance	file:
WinIsTty	generic/tkMain.c	/^static int WinIsTty(int fd) {$/;"	f	file:
WinItemCoords	generic/tkCanvWind.c	/^WinItemCoords($/;"	f	file:
WinItemLostSlaveProc	generic/tkCanvWind.c	/^WinItemLostSlaveProc($/;"	f	file:
WinItemRequestProc	generic/tkCanvWind.c	/^WinItemRequestProc($/;"	f	file:
WinItemStructureProc	generic/tkCanvWind.c	/^WinItemStructureProc($/;"	f	file:
WinItemToArea	generic/tkCanvWind.c	/^WinItemToArea($/;"	f	file:
WinItemToPoint	generic/tkCanvWind.c	/^WinItemToPoint($/;"	f	file:
WinItemToPostscript	generic/tkCanvWind.c	/^WinItemToPostscript($/;"	f	file:
WinMain	win/winMain.c	/^WinMain($/;"	f
WinScrollbar	win/tkWinScrlbr.c	/^typedef struct WinScrollbar {$/;"	s	file:
WinScrollbar	win/tkWinScrlbr.c	/^} WinScrollbar;$/;"	t	typeref:struct:WinScrollbar	file:
WinScrollbarEventProc	win/tkWinScrlbr.c	/^WinScrollbarEventProc(ClientData clientData, XEvent *eventPtr)$/;"	f	file:
WinSendCom_GetIDsOfNames	win/tkWinSendCom.c	/^WinSendCom_GetIDsOfNames($/;"	f	file:
WinSendCom_GetTypeInfo	win/tkWinSendCom.c	/^WinSendCom_GetTypeInfo($/;"	f	file:
WinSendCom_GetTypeInfoCount	win/tkWinSendCom.c	/^WinSendCom_GetTypeInfoCount($/;"	f	file:
WinSendCom_Invoke	win/tkWinSendCom.c	/^WinSendCom_Invoke($/;"	f	file:
WinSendCom_QueryInterface	win/tkWinSendCom.c	/^WinSendCom_QueryInterface($/;"	f	file:
WinSetIcon	win/tkWinWm.c	/^WinSetIcon($/;"	f	file:
WindingRule	xlib/X11/X.h	486;"	d
Window	xlib/X11/X.h	/^typedef XID Window;$/;"	t
WindowEventProc	generic/tkEvent.c	/^WindowEventProc($/;"	f	file:
WindowGroupHint	xlib/X11/Xutil.h	112;"	d
WindowItem	generic/tkCanvWind.c	/^typedef struct WindowItem  {$/;"	s	file:
WindowItem	generic/tkCanvWind.c	/^} WindowItem;$/;"	t	typeref:struct:WindowItem	file:
WindowRep	generic/tkObj.c	/^typedef struct WindowRep {$/;"	s	file:
WindowRep	generic/tkObj.c	/^} WindowRep;$/;"	t	typeref:struct:WindowRep	file:
WindowingsystemCmd	generic/tkCmds.c	/^WindowingsystemCmd($/;"	f
WithdrawnState	xlib/X11/Xutil.h	117;"	d
WmAspectCmd	macosx/tkMacOSXWm.c	/^WmAspectCmd($/;"	f	file:
WmAspectCmd	unix/tkUnixWm.c	/^WmAspectCmd($/;"	f	file:
WmAspectCmd	win/tkWinWm.c	/^WmAspectCmd($/;"	f	file:
WmAttribute	macosx/tkMacOSXWm.c	/^} WmAttribute;$/;"	t	typeref:enum:__anon206	file:
WmAttribute	unix/tkUnixWm.c	/^} WmAttribute;$/;"	t	typeref:enum:__anon215	file:
WmAttributeNames	macosx/tkMacOSXWm.c	/^static const char *const WmAttributeNames[] = {$/;"	v	file:
WmAttributeNames	unix/tkUnixWm.c	/^static const char *const WmAttributeNames[] = {$/;"	v	file:
WmAttributes	unix/tkUnixWm.c	/^} WmAttributes;$/;"	t	typeref:struct:__anon214	file:
WmAttributesCmd	macosx/tkMacOSXWm.c	/^WmAttributesCmd($/;"	f	file:
WmAttributesCmd	unix/tkUnixWm.c	/^WmAttributesCmd($/;"	f	file:
WmAttributesCmd	win/tkWinWm.c	/^WmAttributesCmd($/;"	f	file:
WmClientCmd	macosx/tkMacOSXWm.c	/^WmClientCmd($/;"	f	file:
WmClientCmd	unix/tkUnixWm.c	/^WmClientCmd($/;"	f	file:
WmClientCmd	win/tkWinWm.c	/^WmClientCmd($/;"	f	file:
WmColormapwindowsCmd	macosx/tkMacOSXWm.c	/^WmColormapwindowsCmd($/;"	f	file:
WmColormapwindowsCmd	unix/tkUnixWm.c	/^WmColormapwindowsCmd($/;"	f	file:
WmColormapwindowsCmd	win/tkWinWm.c	/^WmColormapwindowsCmd($/;"	f	file:
WmCommandCmd	macosx/tkMacOSXWm.c	/^WmCommandCmd($/;"	f	file:
WmCommandCmd	unix/tkUnixWm.c	/^WmCommandCmd($/;"	f	file:
WmCommandCmd	win/tkWinWm.c	/^WmCommandCmd($/;"	f	file:
WmDeiconifyCmd	macosx/tkMacOSXWm.c	/^WmDeiconifyCmd($/;"	f	file:
WmDeiconifyCmd	unix/tkUnixWm.c	/^WmDeiconifyCmd($/;"	f	file:
WmDeiconifyCmd	win/tkWinWm.c	/^WmDeiconifyCmd($/;"	f	file:
WmFocusmodelCmd	macosx/tkMacOSXWm.c	/^WmFocusmodelCmd($/;"	f	file:
WmFocusmodelCmd	unix/tkUnixWm.c	/^WmFocusmodelCmd($/;"	f	file:
WmFocusmodelCmd	win/tkWinWm.c	/^WmFocusmodelCmd($/;"	f	file:
WmForgetCmd	macosx/tkMacOSXWm.c	/^WmForgetCmd($/;"	f	file:
WmForgetCmd	unix/tkUnixWm.c	/^WmForgetCmd($/;"	f	file:
WmForgetCmd	win/tkWinWm.c	/^WmForgetCmd($/;"	f	file:
WmFrameCmd	macosx/tkMacOSXWm.c	/^WmFrameCmd($/;"	f	file:
WmFrameCmd	unix/tkUnixWm.c	/^WmFrameCmd($/;"	f	file:
WmFrameCmd	win/tkWinWm.c	/^WmFrameCmd($/;"	f	file:
WmGeometryCmd	macosx/tkMacOSXWm.c	/^WmGeometryCmd($/;"	f	file:
WmGeometryCmd	unix/tkUnixWm.c	/^WmGeometryCmd($/;"	f	file:
WmGeometryCmd	win/tkWinWm.c	/^WmGeometryCmd($/;"	f	file:
WmGetAttribute	macosx/tkMacOSXWm.c	/^WmGetAttribute($/;"	f	file:
WmGetAttribute	unix/tkUnixWm.c	/^WmGetAttribute($/;"	f	file:
WmGridCmd	macosx/tkMacOSXWm.c	/^WmGridCmd($/;"	f	file:
WmGridCmd	unix/tkUnixWm.c	/^WmGridCmd($/;"	f	file:
WmGridCmd	win/tkWinWm.c	/^WmGridCmd($/;"	f	file:
WmGroupCmd	macosx/tkMacOSXWm.c	/^WmGroupCmd($/;"	f	file:
WmGroupCmd	unix/tkUnixWm.c	/^WmGroupCmd($/;"	f	file:
WmGroupCmd	win/tkWinWm.c	/^WmGroupCmd($/;"	f	file:
WmIconbitmapCmd	macosx/tkMacOSXWm.c	/^WmIconbitmapCmd($/;"	f	file:
WmIconbitmapCmd	unix/tkUnixWm.c	/^WmIconbitmapCmd($/;"	f	file:
WmIconbitmapCmd	win/tkWinWm.c	/^WmIconbitmapCmd($/;"	f	file:
WmIconifyCmd	macosx/tkMacOSXWm.c	/^WmIconifyCmd($/;"	f	file:
WmIconifyCmd	unix/tkUnixWm.c	/^WmIconifyCmd($/;"	f	file:
WmIconifyCmd	win/tkWinWm.c	/^WmIconifyCmd($/;"	f	file:
WmIconmaskCmd	macosx/tkMacOSXWm.c	/^WmIconmaskCmd($/;"	f	file:
WmIconmaskCmd	unix/tkUnixWm.c	/^WmIconmaskCmd($/;"	f	file:
WmIconmaskCmd	win/tkWinWm.c	/^WmIconmaskCmd($/;"	f	file:
WmIconnameCmd	macosx/tkMacOSXWm.c	/^WmIconnameCmd($/;"	f	file:
WmIconnameCmd	unix/tkUnixWm.c	/^WmIconnameCmd($/;"	f	file:
WmIconnameCmd	win/tkWinWm.c	/^WmIconnameCmd($/;"	f	file:
WmIconphotoCmd	macosx/tkMacOSXWm.c	/^WmIconphotoCmd($/;"	f	file:
WmIconphotoCmd	unix/tkUnixWm.c	/^WmIconphotoCmd($/;"	f	file:
WmIconphotoCmd	win/tkWinWm.c	/^WmIconphotoCmd($/;"	f	file:
WmIconpositionCmd	macosx/tkMacOSXWm.c	/^WmIconpositionCmd($/;"	f	file:
WmIconpositionCmd	unix/tkUnixWm.c	/^WmIconpositionCmd($/;"	f	file:
WmIconpositionCmd	win/tkWinWm.c	/^WmIconpositionCmd($/;"	f	file:
WmIconwindowCmd	macosx/tkMacOSXWm.c	/^WmIconwindowCmd($/;"	f	file:
WmIconwindowCmd	unix/tkUnixWm.c	/^WmIconwindowCmd($/;"	f	file:
WmIconwindowCmd	win/tkWinWm.c	/^WmIconwindowCmd($/;"	f	file:
WmInfo	macosx/tkMacOSXWm.h	/^} WmInfo;$/;"	t	typeref:struct:TkWmInfo
WmInfo	unix/tkUnixWm.c	/^} WmInfo;$/;"	t	typeref:struct:TkWmInfo	file:
WmInfo	win/tkWinWm.c	/^} WmInfo;$/;"	t	typeref:struct:TkWmInfo	file:
WmManageCmd	macosx/tkMacOSXWm.c	/^WmManageCmd($/;"	f	file:
WmManageCmd	unix/tkUnixWm.c	/^WmManageCmd($/;"	f	file:
WmManageCmd	win/tkWinWm.c	/^WmManageCmd($/;"	f	file:
WmMaxsizeCmd	macosx/tkMacOSXWm.c	/^WmMaxsizeCmd($/;"	f	file:
WmMaxsizeCmd	unix/tkUnixWm.c	/^WmMaxsizeCmd($/;"	f	file:
WmMaxsizeCmd	win/tkWinWm.c	/^WmMaxsizeCmd($/;"	f	file:
WmMinsizeCmd	macosx/tkMacOSXWm.c	/^WmMinsizeCmd($/;"	f	file:
WmMinsizeCmd	unix/tkUnixWm.c	/^WmMinsizeCmd($/;"	f	file:
WmMinsizeCmd	win/tkWinWm.c	/^WmMinsizeCmd($/;"	f	file:
WmOverrideredirectCmd	macosx/tkMacOSXWm.c	/^WmOverrideredirectCmd($/;"	f	file:
WmOverrideredirectCmd	unix/tkUnixWm.c	/^WmOverrideredirectCmd($/;"	f	file:
WmOverrideredirectCmd	win/tkWinWm.c	/^WmOverrideredirectCmd($/;"	f	file:
WmPositionfromCmd	macosx/tkMacOSXWm.c	/^WmPositionfromCmd($/;"	f	file:
WmPositionfromCmd	unix/tkUnixWm.c	/^WmPositionfromCmd($/;"	f	file:
WmPositionfromCmd	win/tkWinWm.c	/^WmPositionfromCmd($/;"	f	file:
WmProc	win/tkWinWm.c	/^WmProc($/;"	f	file:
WmProtocolCmd	macosx/tkMacOSXWm.c	/^WmProtocolCmd($/;"	f	file:
WmProtocolCmd	unix/tkUnixWm.c	/^WmProtocolCmd($/;"	f	file:
WmProtocolCmd	win/tkWinWm.c	/^WmProtocolCmd($/;"	f	file:
WmResizableCmd	macosx/tkMacOSXWm.c	/^WmResizableCmd($/;"	f	file:
WmResizableCmd	unix/tkUnixWm.c	/^WmResizableCmd($/;"	f	file:
WmResizableCmd	win/tkWinWm.c	/^WmResizableCmd($/;"	f	file:
WmSetAttribute	macosx/tkMacOSXWm.c	/^WmSetAttribute($/;"	f	file:
WmSetAttribute	unix/tkUnixWm.c	/^WmSetAttribute($/;"	f	file:
WmSizefromCmd	macosx/tkMacOSXWm.c	/^WmSizefromCmd($/;"	f	file:
WmSizefromCmd	unix/tkUnixWm.c	/^WmSizefromCmd($/;"	f	file:
WmSizefromCmd	win/tkWinWm.c	/^WmSizefromCmd($/;"	f	file:
WmStackorderCmd	macosx/tkMacOSXWm.c	/^WmStackorderCmd($/;"	f	file:
WmStackorderCmd	unix/tkUnixWm.c	/^WmStackorderCmd($/;"	f	file:
WmStackorderCmd	win/tkWinWm.c	/^WmStackorderCmd($/;"	f	file:
WmStackorderToplevelWrapperMap	macosx/tkMacOSXWm.c	/^WmStackorderToplevelWrapperMap($/;"	f	file:
WmStateCmd	macosx/tkMacOSXWm.c	/^WmStateCmd($/;"	f	file:
WmStateCmd	unix/tkUnixWm.c	/^WmStateCmd($/;"	f	file:
WmStateCmd	win/tkWinWm.c	/^WmStateCmd($/;"	f	file:
WmTitleCmd	macosx/tkMacOSXWm.c	/^WmTitleCmd($/;"	f	file:
WmTitleCmd	unix/tkUnixWm.c	/^WmTitleCmd($/;"	f	file:
WmTitleCmd	win/tkWinWm.c	/^WmTitleCmd($/;"	f	file:
WmTransientCmd	macosx/tkMacOSXWm.c	/^WmTransientCmd($/;"	f	file:
WmTransientCmd	unix/tkUnixWm.c	/^WmTransientCmd($/;"	f	file:
WmTransientCmd	win/tkWinWm.c	/^WmTransientCmd($/;"	f	file:
WmUpdateGeom	macosx/tkMacOSXWm.c	/^WmUpdateGeom($/;"	f	file:
WmUpdateGeom	unix/tkUnixWm.c	/^WmUpdateGeom($/;"	f	file:
WmUpdateGeom	win/tkWinWm.c	/^WmUpdateGeom($/;"	f	file:
WmWaitMapProc	unix/tkUnixWm.c	/^WmWaitMapProc($/;"	f	file:
WmWaitVisibilityOrMapProc	win/tkWinWm.c	/^WmWaitVisibilityOrMapProc($/;"	f	file:
WmWinStyle	macosx/tkMacOSXWm.c	/^WmWinStyle($/;"	f	file:
WmWithdrawCmd	macosx/tkMacOSXWm.c	/^WmWithdrawCmd($/;"	f	file:
WmWithdrawCmd	unix/tkUnixWm.c	/^WmWithdrawCmd($/;"	f	file:
WmWithdrawCmd	win/tkWinWm.c	/^WmWithdrawCmd($/;"	f	file:
WndProc	win/ttkWinMonitor.c	/^WndProc(HWND hwnd, UINT msg, WPARAM wp, LPARAM lp)$/;"	f	file:
WrapperEventMask	unix/tkUnixWm.c	/^static const unsigned WrapperEventMask =$/;"	v	file:
WrapperEventProc	unix/tkUnixWm.c	/^WrapperEventProc($/;"	f	file:
WriteByte	generic/tkImgPNG.c	/^WriteByte($/;"	f	file:
WriteBytesFunc	generic/tkImgGIF.c	/^typedef int (WriteBytesFunc) (ClientData clientData, const char *bytes,$/;"	t	file:
WriteChunk	generic/tkImgPNG.c	/^WriteChunk($/;"	f	file:
WriteData	generic/tkImgPNG.c	/^WriteData($/;"	f	file:
WriteExtraChunks	generic/tkImgPNG.c	/^WriteExtraChunks($/;"	f	file:
WriteIDAT	generic/tkImgPNG.c	/^WriteIDAT($/;"	f	file:
WriteIHDR	generic/tkImgPNG.c	/^WriteIHDR($/;"	f	file:
WriteInt32	generic/tkImgPNG.c	/^WriteInt32($/;"	f	file:
WriteToByteArray	generic/tkImgGIF.c	/^WriteToByteArray($/;"	f	file:
WriteToByteArray	generic/tkImgGIF.c	/^static WriteBytesFunc	WriteToByteArray;$/;"	v	file:
WriteToChannel	generic/tkImgGIF.c	/^WriteToChannel($/;"	f	file:
WriteToChannel	generic/tkImgGIF.c	/^static WriteBytesFunc	WriteToChannel;$/;"	v	file:
X11_INCLUDES	unix/Makefile	/^X11_INCLUDES		= $/;"	m
X11_LIB_SWITCHES	unix/Makefile	/^X11_LIB_SWITCHES	= $(XFT_LIBS) -lX11$/;"	m
X11_OBJS	unix/Makefile	/^X11_OBJS = tkUnix.o tkUnix3d.o tkUnixButton.o tkUnixColor.o tkUnixConfig.o \\$/;"	m
X11_PRIVATE_HDRS	unix/Makefile	/^X11_PRIVATE_HDRS = $(UNIX_DIR)\/tkUnixPort.h $(UNIX_DIR)\/tkUnixInt.h $(GENERIC_DIR)\/tkIntXlibDecls.h$/;"	m
X11_SRCS	unix/Makefile	/^X11_SRCS = \\$/;"	m
XATOM_H	xlib/X11/Xatom.h	2;"	d
XA_ARC	xlib/X11/Xatom.h	11;"	d
XA_ATOM	xlib/X11/Xatom.h	12;"	d
XA_BITMAP	xlib/X11/Xatom.h	13;"	d
XA_CAP_HEIGHT	xlib/X11/Xatom.h	74;"	d
XA_CARDINAL	xlib/X11/Xatom.h	14;"	d
XA_COLORMAP	xlib/X11/Xatom.h	15;"	d
XA_COPYRIGHT	xlib/X11/Xatom.h	69;"	d
XA_CURSOR	xlib/X11/Xatom.h	16;"	d
XA_CUT_BUFFER0	xlib/X11/Xatom.h	17;"	d
XA_CUT_BUFFER1	xlib/X11/Xatom.h	18;"	d
XA_CUT_BUFFER2	xlib/X11/Xatom.h	19;"	d
XA_CUT_BUFFER3	xlib/X11/Xatom.h	20;"	d
XA_CUT_BUFFER4	xlib/X11/Xatom.h	21;"	d
XA_CUT_BUFFER5	xlib/X11/Xatom.h	22;"	d
XA_CUT_BUFFER6	xlib/X11/Xatom.h	23;"	d
XA_CUT_BUFFER7	xlib/X11/Xatom.h	24;"	d
XA_DRAWABLE	xlib/X11/Xatom.h	25;"	d
XA_END_SPACE	xlib/X11/Xatom.h	54;"	d
XA_FAMILY_NAME	xlib/X11/Xatom.h	72;"	d
XA_FONT	xlib/X11/Xatom.h	26;"	d
XA_FONT_NAME	xlib/X11/Xatom.h	71;"	d
XA_FULL_NAME	xlib/X11/Xatom.h	73;"	d
XA_INTEGER	xlib/X11/Xatom.h	27;"	d
XA_ITALIC_ANGLE	xlib/X11/Xatom.h	63;"	d
XA_LAST_PREDEFINED	xlib/X11/Xatom.h	78;"	d
XA_MAX_SPACE	xlib/X11/Xatom.h	53;"	d
XA_MIN_SPACE	xlib/X11/Xatom.h	51;"	d
XA_NORM_SPACE	xlib/X11/Xatom.h	52;"	d
XA_NOTICE	xlib/X11/Xatom.h	70;"	d
XA_PIXMAP	xlib/X11/Xatom.h	28;"	d
XA_POINT	xlib/X11/Xatom.h	29;"	d
XA_POINT_SIZE	xlib/X11/Xatom.h	67;"	d
XA_PRIMARY	xlib/X11/Xatom.h	9;"	d
XA_QUAD_WIDTH	xlib/X11/Xatom.h	65;"	d
XA_RECTANGLE	xlib/X11/Xatom.h	30;"	d
XA_RESOLUTION	xlib/X11/Xatom.h	68;"	d
XA_RESOURCE_MANAGER	xlib/X11/Xatom.h	31;"	d
XA_RGB_BEST_MAP	xlib/X11/Xatom.h	33;"	d
XA_RGB_BLUE_MAP	xlib/X11/Xatom.h	34;"	d
XA_RGB_COLOR_MAP	xlib/X11/Xatom.h	32;"	d
XA_RGB_DEFAULT_MAP	xlib/X11/Xatom.h	35;"	d
XA_RGB_GRAY_MAP	xlib/X11/Xatom.h	36;"	d
XA_RGB_GREEN_MAP	xlib/X11/Xatom.h	37;"	d
XA_RGB_RED_MAP	xlib/X11/Xatom.h	38;"	d
XA_SECONDARY	xlib/X11/Xatom.h	10;"	d
XA_STRIKEOUT_ASCENT	xlib/X11/Xatom.h	61;"	d
XA_STRIKEOUT_DESCENT	xlib/X11/Xatom.h	62;"	d
XA_STRING	xlib/X11/Xatom.h	39;"	d
XA_SUBSCRIPT_X	xlib/X11/Xatom.h	57;"	d
XA_SUBSCRIPT_Y	xlib/X11/Xatom.h	58;"	d
XA_SUPERSCRIPT_X	xlib/X11/Xatom.h	55;"	d
XA_SUPERSCRIPT_Y	xlib/X11/Xatom.h	56;"	d
XA_UNDERLINE_POSITION	xlib/X11/Xatom.h	59;"	d
XA_UNDERLINE_THICKNESS	xlib/X11/Xatom.h	60;"	d
XA_VISUALID	xlib/X11/Xatom.h	40;"	d
XA_WEIGHT	xlib/X11/Xatom.h	66;"	d
XA_WINDOW	xlib/X11/Xatom.h	41;"	d
XA_WM_CLASS	xlib/X11/Xatom.h	75;"	d
XA_WM_CLIENT_MACHINE	xlib/X11/Xatom.h	44;"	d
XA_WM_COMMAND	xlib/X11/Xatom.h	42;"	d
XA_WM_HINTS	xlib/X11/Xatom.h	43;"	d
XA_WM_ICON_NAME	xlib/X11/Xatom.h	45;"	d
XA_WM_ICON_SIZE	xlib/X11/Xatom.h	46;"	d
XA_WM_NAME	xlib/X11/Xatom.h	47;"	d
XA_WM_NORMAL_HINTS	xlib/X11/Xatom.h	48;"	d
XA_WM_SIZE_HINTS	xlib/X11/Xatom.h	49;"	d
XA_WM_TRANSIENT_FOR	xlib/X11/Xatom.h	76;"	d
XA_WM_ZOOM_HINTS	xlib/X11/Xatom.h	50;"	d
XA_X_HEIGHT	xlib/X11/Xatom.h	64;"	d
XActivateDeactivateEvent	generic/tk.h	/^} XActivateDeactivateEvent;$/;"	t	typeref:struct:__anon10
XActivateEvent	generic/tk.h	/^typedef XActivateDeactivateEvent XActivateEvent;$/;"	t
XAddPixel	xlib/X11/Xutil.h	175;"	d
XAfterFunction	generic/tkIntXlibDecls.h	/^typedef int (*XAfterFunction) (	    \/* WARNING, this type not in Xlib spec *\/$/;"	t
XAllocColor	generic/tkIntXlibDecls.h	1110;"	d
XAllocColor	generic/tkIntXlibDecls.h	891;"	d
XAllocColor	macosx/tkMacOSXColor.c	/^XAllocColor($/;"	f
XAllocColor	win/tkWinColor.c	/^XAllocColor($/;"	f
XAllocID	xlib/X11/Xlib.h	963;"	d
XAngleToRadians	win/tkWinDraw.c	20;"	d	file:
XAnyEvent	xlib/X11/Xlib.h	/^} XAnyEvent;$/;"	t	typeref:struct:__anon318
XArc	xlib/X11/Xlib.h	/^} XArc;$/;"	t	typeref:struct:__anon281
XBell	generic/tkIntXlibDecls.h	1112;"	d
XBell	generic/tkIntXlibDecls.h	893;"	d
XBell	macosx/tkMacOSXXStubs.c	/^XBell($/;"	f
XBell	win/tkWinX.c	/^XBell($/;"	f
XBufferOverflow	xlib/X11/Xlib.h	1107;"	d
XButtonEvent	xlib/X11/Xlib.h	/^} XButtonEvent;$/;"	t	typeref:struct:__anon288
XButtonPressedEvent	xlib/X11/Xlib.h	/^typedef XButtonEvent XButtonPressedEvent;$/;"	t
XButtonReleasedEvent	xlib/X11/Xlib.h	/^typedef XButtonEvent XButtonReleasedEvent;$/;"	t
XCNOENT	xlib/X11/Xutil.h	293;"	d
XCNOMEM	xlib/X11/Xutil.h	292;"	d
XCSUCCESS	xlib/X11/Xutil.h	291;"	d
XC_X_cursor	xlib/X11/cursorfont.h	3;"	d
XC_arrow	xlib/X11/cursorfont.h	4;"	d
XC_based_arrow_down	xlib/X11/cursorfont.h	5;"	d
XC_based_arrow_up	xlib/X11/cursorfont.h	6;"	d
XC_boat	xlib/X11/cursorfont.h	7;"	d
XC_bogosity	xlib/X11/cursorfont.h	8;"	d
XC_bottom_left_corner	xlib/X11/cursorfont.h	9;"	d
XC_bottom_right_corner	xlib/X11/cursorfont.h	10;"	d
XC_bottom_side	xlib/X11/cursorfont.h	11;"	d
XC_bottom_tee	xlib/X11/cursorfont.h	12;"	d
XC_box_spiral	xlib/X11/cursorfont.h	13;"	d
XC_center_ptr	xlib/X11/cursorfont.h	14;"	d
XC_circle	xlib/X11/cursorfont.h	15;"	d
XC_clock	xlib/X11/cursorfont.h	16;"	d
XC_coffee_mug	xlib/X11/cursorfont.h	17;"	d
XC_cross	xlib/X11/cursorfont.h	18;"	d
XC_cross_reverse	xlib/X11/cursorfont.h	19;"	d
XC_crosshair	xlib/X11/cursorfont.h	20;"	d
XC_diamond_cross	xlib/X11/cursorfont.h	21;"	d
XC_dot	xlib/X11/cursorfont.h	22;"	d
XC_dotbox	xlib/X11/cursorfont.h	23;"	d
XC_double_arrow	xlib/X11/cursorfont.h	24;"	d
XC_draft_large	xlib/X11/cursorfont.h	25;"	d
XC_draft_small	xlib/X11/cursorfont.h	26;"	d
XC_draped_box	xlib/X11/cursorfont.h	27;"	d
XC_exchange	xlib/X11/cursorfont.h	28;"	d
XC_fleur	xlib/X11/cursorfont.h	29;"	d
XC_gobbler	xlib/X11/cursorfont.h	30;"	d
XC_gumby	xlib/X11/cursorfont.h	31;"	d
XC_hand1	xlib/X11/cursorfont.h	32;"	d
XC_hand2	xlib/X11/cursorfont.h	33;"	d
XC_heart	xlib/X11/cursorfont.h	34;"	d
XC_icon	xlib/X11/cursorfont.h	35;"	d
XC_iron_cross	xlib/X11/cursorfont.h	36;"	d
XC_left_ptr	xlib/X11/cursorfont.h	37;"	d
XC_left_side	xlib/X11/cursorfont.h	38;"	d
XC_left_tee	xlib/X11/cursorfont.h	39;"	d
XC_leftbutton	xlib/X11/cursorfont.h	40;"	d
XC_ll_angle	xlib/X11/cursorfont.h	41;"	d
XC_lr_angle	xlib/X11/cursorfont.h	42;"	d
XC_man	xlib/X11/cursorfont.h	43;"	d
XC_middlebutton	xlib/X11/cursorfont.h	44;"	d
XC_mouse	xlib/X11/cursorfont.h	45;"	d
XC_num_glyphs	xlib/X11/cursorfont.h	2;"	d
XC_pencil	xlib/X11/cursorfont.h	46;"	d
XC_pirate	xlib/X11/cursorfont.h	47;"	d
XC_plus	xlib/X11/cursorfont.h	48;"	d
XC_question_arrow	xlib/X11/cursorfont.h	49;"	d
XC_right_ptr	xlib/X11/cursorfont.h	50;"	d
XC_right_side	xlib/X11/cursorfont.h	51;"	d
XC_right_tee	xlib/X11/cursorfont.h	52;"	d
XC_rightbutton	xlib/X11/cursorfont.h	53;"	d
XC_rtl_logo	xlib/X11/cursorfont.h	54;"	d
XC_sailboat	xlib/X11/cursorfont.h	55;"	d
XC_sb_down_arrow	xlib/X11/cursorfont.h	56;"	d
XC_sb_h_double_arrow	xlib/X11/cursorfont.h	57;"	d
XC_sb_left_arrow	xlib/X11/cursorfont.h	58;"	d
XC_sb_right_arrow	xlib/X11/cursorfont.h	59;"	d
XC_sb_up_arrow	xlib/X11/cursorfont.h	60;"	d
XC_sb_v_double_arrow	xlib/X11/cursorfont.h	61;"	d
XC_shuttle	xlib/X11/cursorfont.h	62;"	d
XC_sizing	xlib/X11/cursorfont.h	63;"	d
XC_spider	xlib/X11/cursorfont.h	64;"	d
XC_spraycan	xlib/X11/cursorfont.h	65;"	d
XC_star	xlib/X11/cursorfont.h	66;"	d
XC_target	xlib/X11/cursorfont.h	67;"	d
XC_tcross	xlib/X11/cursorfont.h	68;"	d
XC_top_left_arrow	xlib/X11/cursorfont.h	69;"	d
XC_top_left_corner	xlib/X11/cursorfont.h	70;"	d
XC_top_right_corner	xlib/X11/cursorfont.h	71;"	d
XC_top_side	xlib/X11/cursorfont.h	72;"	d
XC_top_tee	xlib/X11/cursorfont.h	73;"	d
XC_trek	xlib/X11/cursorfont.h	74;"	d
XC_ul_angle	xlib/X11/cursorfont.h	75;"	d
XC_umbrella	xlib/X11/cursorfont.h	76;"	d
XC_ur_angle	xlib/X11/cursorfont.h	77;"	d
XC_watch	xlib/X11/cursorfont.h	78;"	d
XC_xterm	xlib/X11/cursorfont.h	79;"	d
XChangeGC	generic/tkIntXlibDecls.h	1036;"	d
XChangeGC	generic/tkIntXlibDecls.h	1220;"	d
XChangeGC	xlib/xgc.c	/^XChangeGC($/;"	f
XChangeProperty	generic/tkIntXlibDecls.h	1114;"	d
XChangeProperty	generic/tkIntXlibDecls.h	895;"	d
XChangeProperty	macosx/tkMacOSXXStubs.c	/^XChangeProperty($/;"	f
XChangeProperty	win/stubs.c	/^XChangeProperty($/;"	f
XChangeWindowAttributes	generic/tkIntXlibDecls.h	1116;"	d
XChangeWindowAttributes	generic/tkIntXlibDecls.h	897;"	d
XChangeWindowAttributes	macosx/tkMacOSXXStubs.c	/^XChangeWindowAttributes($/;"	f
XChangeWindowAttributes	win/tkWinWindow.c	/^XChangeWindowAttributes($/;"	f
XChar2b	xlib/X11/Xlib.h	/^} XChar2b;$/;"	t	typeref:struct:__anon323
XCharStruct	xlib/X11/Xlib.h	/^} XCharStruct;$/;"	t	typeref:struct:__anon319
XCirculateEvent	xlib/X11/Xlib.h	/^} XCirculateEvent;$/;"	t	typeref:struct:__anon307
XCirculateRequestEvent	xlib/X11/Xlib.h	/^} XCirculateRequestEvent;$/;"	t	typeref:struct:__anon308
XClassHint	xlib/X11/Xutil.h	/^} XClassHint;$/;"	t	typeref:struct:__anon263
XClearWindow	generic/tkIntXlibDecls.h	1254;"	d
XClearWindow	generic/tkIntXlibDecls.h	899;"	d
XClearWindow	macosx/tkMacOSXXStubs.c	/^XClearWindow($/;"	f
XClearWindow	win/tkWinWindow.c	/^XClearWindow($/;"	f
XClientMessageEvent	xlib/X11/Xlib.h	/^} XClientMessageEvent;$/;"	t	typeref:struct:__anon314
XColor	xlib/X11/Xlib.h	/^} XColor;$/;"	t	typeref:struct:__anon277
XColormapEvent	xlib/X11/Xlib.h	/^} XColormapEvent;$/;"	t	typeref:struct:__anon313
XComposeStatus	xlib/X11/Xutil.h	/^} XComposeStatus;$/;"	t	typeref:struct:_XComposeStatus
XCompoundTextStyle	xlib/X11/Xutil.h	/^    XCompoundTextStyle,		\/* COMPOUND_TEXT *\/$/;"	e	enum:__anon261
XConfigureEvent	xlib/X11/Xlib.h	/^} XConfigureEvent;$/;"	t	typeref:struct:__anon303
XConfigureRequestEvent	xlib/X11/Xlib.h	/^} XConfigureRequestEvent;$/;"	t	typeref:struct:__anon306
XConfigureWindow	generic/tkIntXlibDecls.h	1118;"	d
XConfigureWindow	generic/tkIntXlibDecls.h	901;"	d
XConfigureWindow	macosx/tkMacOSXSubwindows.c	/^XConfigureWindow($/;"	f
XConfigureWindow	win/tkWinWindow.c	/^XConfigureWindow($/;"	f
XContext	xlib/X11/Xutil.h	/^typedef int XContext;$/;"	t
XConverterNotFound	xlib/X11/Xutil.h	143;"	d
XCopyArea	generic/tkIntXlibDecls.h	1120;"	d
XCopyArea	generic/tkIntXlibDecls.h	903;"	d
XCopyArea	macosx/tkMacOSXDraw.c	/^XCopyArea($/;"	f
XCopyArea	win/tkWinDraw.c	/^XCopyArea($/;"	f
XCopyPlane	generic/tkIntXlibDecls.h	1122;"	d
XCopyPlane	generic/tkIntXlibDecls.h	905;"	d
XCopyPlane	macosx/tkMacOSXDraw.c	/^XCopyPlane($/;"	f
XCopyPlane	win/tkWinDraw.c	/^XCopyPlane($/;"	f
XCreateBitmapFromData	generic/tkIntXlibDecls.h	1124;"	d
XCreateBitmapFromData	generic/tkIntXlibDecls.h	907;"	d
XCreateBitmapFromData	xlib/ximage.c	/^XCreateBitmapFromData($/;"	f
XCreateColormap	generic/tkIntXlibDecls.h	1098;"	d
XCreateColormap	generic/tkIntXlibDecls.h	867;"	d
XCreateColormap	macosx/tkMacOSXColor.c	/^XCreateColormap($/;"	f
XCreateColormap	win/tkWinColor.c	/^XCreateColormap($/;"	f
XCreateGC	generic/tkIntXlibDecls.h	1020;"	d
XCreateGC	generic/tkIntXlibDecls.h	1204;"	d
XCreateGC	xlib/xgc.c	/^XCreateGC($/;"	f
XCreateGlyphCursor	generic/tkIntXlibDecls.h	871;"	d
XCreateGlyphCursor	win/stubs.c	/^XCreateGlyphCursor($/;"	f
XCreateIC	generic/tkIntXlibDecls.h	1054;"	d
XCreateIC	generic/tkIntXlibDecls.h	1238;"	d
XCreateIC	macosx/tkMacOSXXStubs.c	/^XCreateIC(void)$/;"	f
XCreateIC	win/stubs.c	/^XCreateIC(XIM xim, ...)$/;"	f
XCreateImage	generic/tkIntXlibDecls.h	1090;"	d
XCreateImage	generic/tkIntXlibDecls.h	859;"	d
XCreateImage	macosx/tkMacOSXXStubs.c	/^XCreateImage($/;"	f
XCreateImage	win/tkWinImage.c	/^XCreateImage($/;"	f
XCreatePixmapCursor	generic/tkIntXlibDecls.h	869;"	d
XCreatePixmapCursor	win/stubs.c	/^XCreatePixmapCursor($/;"	f
XCreateWindow	unix/configure	/^XCreateWindow ();$/;"	f
XCreateWindowEvent	xlib/X11/Xlib.h	/^} XCreateWindowEvent;$/;"	t	typeref:struct:__anon297
XCrossingEvent	xlib/X11/Xlib.h	/^} XCrossingEvent;$/;"	t	typeref:struct:__anon290
XDeactivateEvent	generic/tk.h	/^typedef XActivateDeactivateEvent XDeactivateEvent;$/;"	t
XDefineCursor	generic/tkIntXlibDecls.h	1126;"	d
XDefineCursor	generic/tkIntXlibDecls.h	909;"	d
XDefineCursor	generic/tkPointer.c	/^XDefineCursor($/;"	f
XDeleteProperty	generic/tkIntXlibDecls.h	911;"	d
XDeleteProperty	win/stubs.c	/^XDeleteProperty($/;"	f
XDestroyIC	generic/tkIntXlibDecls.h	1009;"	d
XDestroyIC	win/stubs.c	/^XDestroyIC($/;"	f
XDestroyImage	xlib/X11/Xutil.h	167;"	d
XDestroyWindow	generic/tkIntXlibDecls.h	1128;"	d
XDestroyWindow	generic/tkIntXlibDecls.h	913;"	d
XDestroyWindow	macosx/tkMacOSXSubwindows.c	/^XDestroyWindow($/;"	f
XDestroyWindow	win/tkWinWindow.c	/^XDestroyWindow($/;"	f
XDestroyWindowEvent	xlib/X11/Xlib.h	/^} XDestroyWindowEvent;$/;"	t	typeref:struct:__anon298
XDrawArc	generic/tkIntXlibDecls.h	1130;"	d
XDrawArc	generic/tkIntXlibDecls.h	915;"	d
XDrawArc	macosx/tkMacOSXDraw.c	/^XDrawArc($/;"	f
XDrawArc	win/tkWinDraw.c	/^XDrawArc($/;"	f
XDrawArcs	macosx/tkMacOSXDraw.c	/^XDrawArcs($/;"	f
XDrawLine	generic/tkIntXlibDecls.h	1062;"	d
XDrawLine	generic/tkIntXlibDecls.h	1250;"	d
XDrawLine	xlib/xdraw.c	/^XDrawLine($/;"	f
XDrawLines	generic/tkIntXlibDecls.h	1132;"	d
XDrawLines	generic/tkIntXlibDecls.h	917;"	d
XDrawLines	macosx/tkMacOSXDraw.c	/^XDrawLines($/;"	f
XDrawLines	win/tkWinDraw.c	/^XDrawLines($/;"	f
XDrawPoint	generic/tkIntXlibDecls.h	1256;"	d
XDrawPoint	xlib/xgc.c	/^XDrawPoint($/;"	f
XDrawPoints	generic/tkIntXlibDecls.h	1258;"	d
XDrawPoints	xlib/xgc.c	/^XDrawPoints($/;"	f
XDrawRectangle	generic/tkIntXlibDecls.h	1134;"	d
XDrawRectangle	generic/tkIntXlibDecls.h	919;"	d
XDrawRectangle	macosx/tkMacOSXDraw.c	/^XDrawRectangle($/;"	f
XDrawRectangle	win/tkWinDraw.c	/^XDrawRectangle($/;"	f
XDrawRectangles	macosx/tkMacOSXDraw.c	/^XDrawRectangles($/;"	f
XDrawSegments	generic/tkIntXlibDecls.h	1246;"	d
XDrawSegments	macosx/tkMacOSXDraw.c	/^XDrawSegments($/;"	f
XDrawSegments	xlib/xgc.c	/^XDrawSegments($/;"	f
XEDataObject	xlib/X11/Xlib.h	/^		XFontStruct *font; } XEDataObject;$/;"	t	typeref:union:__anon325
XEnterWindowEvent	xlib/X11/Xlib.h	/^typedef XCrossingEvent XEnterWindowEvent;$/;"	t
XErrorEvent	xlib/X11/Xlib.h	/^} XErrorEvent;$/;"	t	typeref:struct:__anon317
XErrorHandler	xlib/X11/Xlib.h	/^typedef int (*XErrorHandler) (	    \/* WARNING, this type not in Xlib spec *\/$/;"	t
XEvent	xlib/X11/Xlib.h	/^} XEvent;$/;"	t	typeref:union:_XEvent
XExpansion	generic/tkPack.c	/^XExpansion($/;"	f	file:
XExposeEvent	xlib/X11/Xlib.h	/^} XExposeEvent;$/;"	t	typeref:struct:__anon293
XExtCodes	xlib/X11/Xlib.h	/^} XExtCodes;$/;"	t	typeref:struct:__anon266
XExtData	xlib/X11/Xlib.h	/^} XExtData;$/;"	t	typeref:struct:_XExtData
XFT_CFLAGS	unix/Makefile	/^XFT_CFLAGS		= $/;"	m
XFT_LIBS	unix/Makefile	/^XFT_LIBS		= $/;"	m
XFillArc	generic/tkIntXlibDecls.h	1136;"	d
XFillArc	generic/tkIntXlibDecls.h	921;"	d
XFillArc	macosx/tkMacOSXDraw.c	/^XFillArc($/;"	f
XFillArc	win/tkWinDraw.c	/^XFillArc($/;"	f
XFillArcs	macosx/tkMacOSXDraw.c	/^XFillArcs($/;"	f
XFillPolygon	generic/tkIntXlibDecls.h	1138;"	d
XFillPolygon	generic/tkIntXlibDecls.h	923;"	d
XFillPolygon	macosx/tkMacOSXDraw.c	/^XFillPolygon($/;"	f
XFillPolygon	win/tkWinDraw.c	/^XFillPolygon($/;"	f
XFillRectangle	generic/tkIntXlibDecls.h	1066;"	d
XFillRectangle	generic/tkIntXlibDecls.h	1252;"	d
XFillRectangle	xlib/xdraw.c	/^XFillRectangle($/;"	f
XFillRectangles	generic/tkIntXlibDecls.h	1140;"	d
XFillRectangles	generic/tkIntXlibDecls.h	925;"	d
XFillRectangles	macosx/tkMacOSXDraw.c	/^XFillRectangles($/;"	f
XFillRectangles	win/tkWinDraw.c	/^XFillRectangles($/;"	f
XFilterEvent	generic/tkIntXlibDecls.h	1011;"	d
XFilterEvent	win/stubs.c	/^XFilterEvent($/;"	f
XFlush	generic/tkIntXlibDecls.h	1068;"	d
XFlush	macosx/tkMacOSXPort.h	114;"	d
XFlush	win/stubs.c	/^XFlush($/;"	f
XFocusChangeEvent	xlib/X11/Xlib.h	/^} XFocusChangeEvent;$/;"	t	typeref:struct:__anon291
XFocusInEvent	xlib/X11/Xlib.h	/^typedef XFocusChangeEvent XFocusInEvent;$/;"	t
XFocusOutEvent	xlib/X11/Xlib.h	/^typedef XFocusChangeEvent XFocusOutEvent;$/;"	t
XFontProp	xlib/X11/Xlib.h	/^} XFontProp;$/;"	t	typeref:struct:__anon320
XFontSet	xlib/X11/Xlib.h	/^typedef struct _XFontSet *XFontSet;$/;"	t	typeref:struct:_XFontSet
XFontSetExtents	xlib/X11/Xlib.h	/^} XFontSetExtents;$/;"	t	typeref:struct:__anon326
XFontStruct	xlib/X11/Xlib.h	/^} XFontStruct;$/;"	t	typeref:struct:__anon321
XForceScreenSaver	generic/tkIntXlibDecls.h	1248;"	d
XForceScreenSaver	generic/tkIntXlibDecls.h	927;"	d
XForceScreenSaver	macosx/tkMacOSXXStubs.c	/^XForceScreenSaver($/;"	f
XForceScreenSaver	win/stubs.c	/^XForceScreenSaver($/;"	f
XFree	generic/tkIntXlibDecls.h	1074;"	d
XFree	macosx/tkMacOSXPort.h	115;"	d
XFree	win/stubs.c	/^XFree($/;"	f
XFreeColormap	generic/tkIntXlibDecls.h	1142;"	d
XFreeColormap	generic/tkIntXlibDecls.h	929;"	d
XFreeColormap	macosx/tkMacOSXColor.c	/^XFreeColormap($/;"	f
XFreeColormap	win/tkWinColor.c	/^XFreeColormap($/;"	f
XFreeColors	generic/tkIntXlibDecls.h	1144;"	d
XFreeColors	generic/tkIntXlibDecls.h	931;"	d
XFreeColors	macosx/tkMacOSXColor.c	/^XFreeColors($/;"	f
XFreeColors	win/tkWinColor.c	/^XFreeColors($/;"	f
XFreeCursor	generic/tkIntXlibDecls.h	933;"	d
XFreeCursor	win/stubs.c	/^XFreeCursor($/;"	f
XFreeGC	generic/tkIntXlibDecls.h	1022;"	d
XFreeGC	generic/tkIntXlibDecls.h	1206;"	d
XFreeGC	xlib/xgc.c	/^int XFreeGC($/;"	f
XFreeModifiermap	generic/tkIntXlibDecls.h	1146;"	d
XFreeModifiermap	generic/tkIntXlibDecls.h	935;"	d
XFreeModifiermap	macosx/tkMacOSXKeyboard.c	/^XFreeModifiermap($/;"	f
XFreeModifiermap	win/tkWinKey.c	/^XFreeModifiermap($/;"	f
XGCValues	xlib/X11/Xlib.h	/^} XGCValues;$/;"	t	typeref:struct:__anon268
XGContextFromGC	generic/tkIntXlibDecls.h	1100;"	d
XGContextFromGC	generic/tkIntXlibDecls.h	873;"	d
XGContextFromGC	macosx/tkMacOSXXStubs.c	/^XGContextFromGC($/;"	f
XGContextFromGC	win/stubs.c	/^XGContextFromGC($/;"	f
XGetAtomName	generic/tkIntXlibDecls.h	1094;"	d
XGetAtomName	generic/tkIntXlibDecls.h	863;"	d
XGetAtomName	macosx/tkMacOSXXStubs.c	/^XGetAtomName($/;"	f
XGetAtomName	win/stubs.c	/^XGetAtomName($/;"	f
XGetGeometry	generic/tkIntXlibDecls.h	1148;"	d
XGetGeometry	generic/tkIntXlibDecls.h	937;"	d
XGetGeometry	macosx/tkMacOSXXStubs.c	/^XGetGeometry($/;"	f
XGetGeometry	win/tkWinPixmap.c	/^XGetGeometry($/;"	f
XGetImage	generic/tkIntXlibDecls.h	1092;"	d
XGetImage	generic/tkIntXlibDecls.h	861;"	d
XGetImage	macosx/tkMacOSXXStubs.c	/^XGetImage($/;"	f
XGetImage	win/tkWinImage.c	/^XGetImage($/;"	f
XGetImageZPixmap	win/tkWinImage.c	/^XGetImageZPixmap($/;"	f	file:
XGetInputFocus	generic/tkIntXlibDecls.h	939;"	d
XGetInputFocus	win/tkWinPointer.c	/^XGetInputFocus($/;"	f
XGetModifierMapping	generic/tkIntXlibDecls.h	1088;"	d
XGetModifierMapping	generic/tkIntXlibDecls.h	857;"	d
XGetModifierMapping	macosx/tkMacOSXKeyboard.c	/^XGetModifierMapping($/;"	f
XGetModifierMapping	win/tkWinKey.c	/^XGetModifierMapping($/;"	f
XGetPixel	xlib/X11/Xutil.h	169;"	d
XGetVisualInfo	generic/tkIntXlibDecls.h	1056;"	d
XGetVisualInfo	generic/tkIntXlibDecls.h	1240;"	d
XGetVisualInfo	xlib/xutil.c	/^XGetVisualInfo($/;"	f
XGetWMColormapWindows	generic/tkIntXlibDecls.h	889;"	d
XGetWMColormapWindows	win/stubs.c	/^XGetWMColormapWindows($/;"	f
XGetWindowAttributes	generic/tkIntXlibDecls.h	943;"	d
XGetWindowAttributes	win/stubs.c	/^XGetWindowAttributes($/;"	f
XGetWindowProperty	generic/tkIntXlibDecls.h	1150;"	d
XGetWindowProperty	generic/tkIntXlibDecls.h	941;"	d
XGetWindowProperty	macosx/tkMacOSXXStubs.c	/^XGetWindowProperty($/;"	f
XGetWindowProperty	win/stubs.c	/^XGetWindowProperty($/;"	f
XGrabKeyboard	generic/tkIntXlibDecls.h	1152;"	d
XGrabKeyboard	generic/tkIntXlibDecls.h	945;"	d
XGrabKeyboard	macosx/tkMacOSXKeyEvent.c	/^XGrabKeyboard($/;"	f
XGrabKeyboard	win/tkWinPointer.c	/^XGrabKeyboard($/;"	f
XGrabPointer	generic/tkIntXlibDecls.h	1154;"	d
XGrabPointer	generic/tkIntXlibDecls.h	947;"	d
XGrabPointer	generic/tkPointer.c	/^XGrabPointer($/;"	f
XGrabServer	generic/tkIntXlibDecls.h	1070;"	d
XGrabServer	macosx/tkMacOSXPort.h	116;"	d
XGrabServer	win/stubs.c	/^XGrabServer($/;"	f
XGraphicsExposeEvent	xlib/X11/Xlib.h	/^} XGraphicsExposeEvent;$/;"	t	typeref:struct:__anon294
XGravityEvent	xlib/X11/Xlib.h	/^} XGravityEvent;$/;"	t	typeref:struct:__anon304
XHostAddress	xlib/X11/Xlib.h	/^} XHostAddress;$/;"	t	typeref:struct:__anon275
XIC	xlib/X11/Xlib.h	/^typedef struct _XIC *XIC;$/;"	t	typeref:struct:_XIC
XICCEncodingStyle	xlib/X11/Xutil.h	/^} XICCEncodingStyle;$/;"	t	typeref:enum:__anon261
XID	xlib/X11/X.h	/^typedef __int64 XID;$/;"	t
XID	xlib/X11/X.h	/^typedef unsigned long XID;$/;"	t
XIM	xlib/X11/Xlib.h	/^typedef struct _XIM *XIM;$/;"	t	typeref:struct:_XIM
XIMAbsolutePosition	xlib/X11/Xlib.h	/^    XIMAbsolutePosition,$/;"	e	enum:__anon332
XIMBackwardChar	xlib/X11/Xlib.h	/^    XIMForwardChar, XIMBackwardChar,$/;"	e	enum:__anon332
XIMBackwardWord	xlib/X11/Xlib.h	/^    XIMForwardWord, XIMBackwardWord,$/;"	e	enum:__anon332
XIMBitmapType	xlib/X11/Xlib.h	/^    XIMBitmapType$/;"	e	enum:__anon334
XIMCallback	xlib/X11/Xlib.h	/^} XIMCallback;$/;"	t	typeref:struct:__anon330
XIMCaretDirection	xlib/X11/Xlib.h	/^} XIMCaretDirection;$/;"	t	typeref:enum:__anon332
XIMCaretDown	xlib/X11/Xlib.h	/^    XIMCaretUp, XIMCaretDown,$/;"	e	enum:__anon332
XIMCaretStyle	xlib/X11/Xlib.h	/^} XIMCaretStyle;$/;"	t	typeref:enum:__anon333
XIMCaretUp	xlib/X11/Xlib.h	/^    XIMCaretUp, XIMCaretDown,$/;"	e	enum:__anon332
XIMDontChange	xlib/X11/Xlib.h	/^    XIMDontChange$/;"	e	enum:__anon332
XIMFeedback	xlib/X11/Xlib.h	/^typedef unsigned long XIMFeedback;$/;"	t
XIMForwardChar	xlib/X11/Xlib.h	/^    XIMForwardChar, XIMBackwardChar,$/;"	e	enum:__anon332
XIMForwardWord	xlib/X11/Xlib.h	/^    XIMForwardWord, XIMBackwardWord,$/;"	e	enum:__anon332
XIMHighlight	xlib/X11/Xlib.h	1128;"	d
XIMIsInvisible	xlib/X11/Xlib.h	/^    XIMIsInvisible,	\/* Disable caret feedback *\/$/;"	e	enum:__anon333
XIMIsPrimary	xlib/X11/Xlib.h	/^    XIMIsPrimary,	\/* UI defined caret feedback *\/$/;"	e	enum:__anon333
XIMIsSecondary	xlib/X11/Xlib.h	/^    XIMIsSecondary	\/* UI defined caret feedback *\/$/;"	e	enum:__anon333
XIMLineEnd	xlib/X11/Xlib.h	/^    XIMLineStart, XIMLineEnd,$/;"	e	enum:__anon332
XIMLineStart	xlib/X11/Xlib.h	/^    XIMLineStart, XIMLineEnd,$/;"	e	enum:__anon332
XIMNextLine	xlib/X11/Xlib.h	/^    XIMNextLine, XIMPreviousLine,$/;"	e	enum:__anon332
XIMPreeditArea	xlib/X11/Xlib.h	1068;"	d
XIMPreeditCallbacks	xlib/X11/Xlib.h	1069;"	d
XIMPreeditCaretCallbackStruct	xlib/X11/Xlib.h	/^} XIMPreeditCaretCallbackStruct;$/;"	t	typeref:struct:_XIMPreeditCaretCallbackStruct
XIMPreeditDrawCallbackStruct	xlib/X11/Xlib.h	/^} XIMPreeditDrawCallbackStruct;$/;"	t	typeref:struct:_XIMPreeditDrawCallbackStruct
XIMPreeditNone	xlib/X11/Xlib.h	1072;"	d
XIMPreeditNothing	xlib/X11/Xlib.h	1071;"	d
XIMPreeditPosition	xlib/X11/Xlib.h	1070;"	d
XIMPreviousLine	xlib/X11/Xlib.h	/^    XIMNextLine, XIMPreviousLine,$/;"	e	enum:__anon332
XIMPrimary	xlib/X11/Xlib.h	1129;"	d
XIMProc	xlib/X11/Xlib.h	/^typedef void (*XIMProc)();$/;"	t
XIMReverse	xlib/X11/Xlib.h	1126;"	d
XIMSecondary	xlib/X11/Xlib.h	1130;"	d
XIMStatusArea	xlib/X11/Xlib.h	1073;"	d
XIMStatusCallbacks	xlib/X11/Xlib.h	1074;"	d
XIMStatusDataType	xlib/X11/Xlib.h	/^} XIMStatusDataType;$/;"	t	typeref:enum:__anon334
XIMStatusDrawCallbackStruct	xlib/X11/Xlib.h	/^} XIMStatusDrawCallbackStruct;$/;"	t	typeref:struct:_XIMStatusDrawCallbackStruct
XIMStatusNone	xlib/X11/Xlib.h	1076;"	d
XIMStatusNothing	xlib/X11/Xlib.h	1075;"	d
XIMStyle	xlib/X11/Xlib.h	/^typedef unsigned long XIMStyle;$/;"	t
XIMStyles	xlib/X11/Xlib.h	/^} XIMStyles;$/;"	t	typeref:struct:__anon329
XIMTertiary	xlib/X11/Xlib.h	1131;"	d
XIMText	xlib/X11/Xlib.h	/^} XIMText;$/;"	t	typeref:struct:_XIMText
XIMTextType	xlib/X11/Xlib.h	/^    XIMTextType,$/;"	e	enum:__anon334
XIMUnderline	xlib/X11/Xlib.h	1127;"	d
XIconSize	xlib/X11/Xutil.h	/^} XIconSize;$/;"	t	typeref:struct:__anon262
XIconifyWindow	generic/tkIntXlibDecls.h	885;"	d
XIconifyWindow	win/stubs.c	/^XIconifyWindow($/;"	f
XImage	xlib/X11/Xlib.h	/^} XImage;$/;"	t	typeref:struct:_XImage
XInternAtom	generic/tkIntXlibDecls.h	1024;"	d
XInternAtom	generic/tkIntXlibDecls.h	1208;"	d
XInternAtom	xlib/xutil.c	/^XInternAtom($/;"	f
XK_0	xlib/X11/keysymdef.h	262;"	d
XK_1	xlib/X11/keysymdef.h	263;"	d
XK_2	xlib/X11/keysymdef.h	264;"	d
XK_3	xlib/X11/keysymdef.h	265;"	d
XK_4	xlib/X11/keysymdef.h	266;"	d
XK_5	xlib/X11/keysymdef.h	267;"	d
XK_6	xlib/X11/keysymdef.h	268;"	d
XK_7	xlib/X11/keysymdef.h	269;"	d
XK_8	xlib/X11/keysymdef.h	270;"	d
XK_9	xlib/X11/keysymdef.h	271;"	d
XK_A	xlib/X11/keysymdef.h	279;"	d
XK_AE	xlib/X11/keysymdef.h	381;"	d
XK_Aacute	xlib/X11/keysymdef.h	376;"	d
XK_Abreve	xlib/X11/keysymdef.h	474;"	d
XK_Acircumflex	xlib/X11/keysymdef.h	377;"	d
XK_Adiaeresis	xlib/X11/keysymdef.h	379;"	d
XK_Agrave	xlib/X11/keysymdef.h	375;"	d
XK_Alt_L	xlib/X11/keysymdef.h	232;"	d
XK_Alt_R	xlib/X11/keysymdef.h	233;"	d
XK_Amacron	xlib/X11/keysymdef.h	561;"	d
XK_Aogonek	xlib/X11/keysymdef.h	449;"	d
XK_App	xlib/X11/keysymdef.h	91;"	d
XK_Arabic_ain	xlib/X11/keysymdef.h	694;"	d
XK_Arabic_alef	xlib/X11/keysymdef.h	676;"	d
XK_Arabic_alefmaksura	xlib/X11/keysymdef.h	706;"	d
XK_Arabic_beh	xlib/X11/keysymdef.h	677;"	d
XK_Arabic_comma	xlib/X11/keysymdef.h	667;"	d
XK_Arabic_dad	xlib/X11/keysymdef.h	691;"	d
XK_Arabic_dal	xlib/X11/keysymdef.h	684;"	d
XK_Arabic_damma	xlib/X11/keysymdef.h	712;"	d
XK_Arabic_dammatan	xlib/X11/keysymdef.h	709;"	d
XK_Arabic_fatha	xlib/X11/keysymdef.h	711;"	d
XK_Arabic_fathatan	xlib/X11/keysymdef.h	708;"	d
XK_Arabic_feh	xlib/X11/keysymdef.h	697;"	d
XK_Arabic_ghain	xlib/X11/keysymdef.h	695;"	d
XK_Arabic_ha	xlib/X11/keysymdef.h	703;"	d
XK_Arabic_hah	xlib/X11/keysymdef.h	682;"	d
XK_Arabic_hamza	xlib/X11/keysymdef.h	670;"	d
XK_Arabic_hamzaonalef	xlib/X11/keysymdef.h	672;"	d
XK_Arabic_hamzaonwaw	xlib/X11/keysymdef.h	673;"	d
XK_Arabic_hamzaonyeh	xlib/X11/keysymdef.h	675;"	d
XK_Arabic_hamzaunderalef	xlib/X11/keysymdef.h	674;"	d
XK_Arabic_heh	xlib/X11/keysymdef.h	704;"	d
XK_Arabic_jeem	xlib/X11/keysymdef.h	681;"	d
XK_Arabic_kaf	xlib/X11/keysymdef.h	699;"	d
XK_Arabic_kasra	xlib/X11/keysymdef.h	713;"	d
XK_Arabic_kasratan	xlib/X11/keysymdef.h	710;"	d
XK_Arabic_khah	xlib/X11/keysymdef.h	683;"	d
XK_Arabic_lam	xlib/X11/keysymdef.h	700;"	d
XK_Arabic_maddaonalef	xlib/X11/keysymdef.h	671;"	d
XK_Arabic_meem	xlib/X11/keysymdef.h	701;"	d
XK_Arabic_noon	xlib/X11/keysymdef.h	702;"	d
XK_Arabic_qaf	xlib/X11/keysymdef.h	698;"	d
XK_Arabic_question_mark	xlib/X11/keysymdef.h	669;"	d
XK_Arabic_ra	xlib/X11/keysymdef.h	686;"	d
XK_Arabic_sad	xlib/X11/keysymdef.h	690;"	d
XK_Arabic_seen	xlib/X11/keysymdef.h	688;"	d
XK_Arabic_semicolon	xlib/X11/keysymdef.h	668;"	d
XK_Arabic_shadda	xlib/X11/keysymdef.h	714;"	d
XK_Arabic_sheen	xlib/X11/keysymdef.h	689;"	d
XK_Arabic_sukun	xlib/X11/keysymdef.h	715;"	d
XK_Arabic_switch	xlib/X11/keysymdef.h	716;"	d
XK_Arabic_tah	xlib/X11/keysymdef.h	692;"	d
XK_Arabic_tatweel	xlib/X11/keysymdef.h	696;"	d
XK_Arabic_teh	xlib/X11/keysymdef.h	679;"	d
XK_Arabic_tehmarbuta	xlib/X11/keysymdef.h	678;"	d
XK_Arabic_thal	xlib/X11/keysymdef.h	685;"	d
XK_Arabic_theh	xlib/X11/keysymdef.h	680;"	d
XK_Arabic_waw	xlib/X11/keysymdef.h	705;"	d
XK_Arabic_yeh	xlib/X11/keysymdef.h	707;"	d
XK_Arabic_zah	xlib/X11/keysymdef.h	693;"	d
XK_Arabic_zain	xlib/X11/keysymdef.h	687;"	d
XK_Aring	xlib/X11/keysymdef.h	380;"	d
XK_Atilde	xlib/X11/keysymdef.h	378;"	d
XK_B	xlib/X11/keysymdef.h	280;"	d
XK_BackSpace	xlib/X11/keysymdef.h	36;"	d
XK_Begin	xlib/X11/keysymdef.h	85;"	d
XK_Break	xlib/X11/keysymdef.h	105;"	d
XK_Byelorussian_SHORTU	xlib/X11/keysymdef.h	764;"	d
XK_Byelorussian_shortu	xlib/X11/keysymdef.h	742;"	d
XK_C	xlib/X11/keysymdef.h	281;"	d
XK_Cabovedot	xlib/X11/keysymdef.h	524;"	d
XK_Cacute	xlib/X11/keysymdef.h	476;"	d
XK_Cancel	xlib/X11/keysymdef.h	103;"	d
XK_Caps_Lock	xlib/X11/keysymdef.h	227;"	d
XK_Ccaron	xlib/X11/keysymdef.h	477;"	d
XK_Ccedilla	xlib/X11/keysymdef.h	382;"	d
XK_Ccircumflex	xlib/X11/keysymdef.h	525;"	d
XK_Clear	xlib/X11/keysymdef.h	39;"	d
XK_Control_L	xlib/X11/keysymdef.h	225;"	d
XK_Control_R	xlib/X11/keysymdef.h	226;"	d
XK_Cyrillic_A	xlib/X11/keysymdef.h	800;"	d
XK_Cyrillic_BE	xlib/X11/keysymdef.h	801;"	d
XK_Cyrillic_CHE	xlib/X11/keysymdef.h	829;"	d
XK_Cyrillic_DE	xlib/X11/keysymdef.h	803;"	d
XK_Cyrillic_DZHE	xlib/X11/keysymdef.h	765;"	d
XK_Cyrillic_E	xlib/X11/keysymdef.h	827;"	d
XK_Cyrillic_EF	xlib/X11/keysymdef.h	805;"	d
XK_Cyrillic_EL	xlib/X11/keysymdef.h	811;"	d
XK_Cyrillic_EM	xlib/X11/keysymdef.h	812;"	d
XK_Cyrillic_EN	xlib/X11/keysymdef.h	813;"	d
XK_Cyrillic_ER	xlib/X11/keysymdef.h	817;"	d
XK_Cyrillic_ES	xlib/X11/keysymdef.h	818;"	d
XK_Cyrillic_GHE	xlib/X11/keysymdef.h	806;"	d
XK_Cyrillic_HA	xlib/X11/keysymdef.h	807;"	d
XK_Cyrillic_HARDSIGN	xlib/X11/keysymdef.h	830;"	d
XK_Cyrillic_I	xlib/X11/keysymdef.h	808;"	d
XK_Cyrillic_IE	xlib/X11/keysymdef.h	804;"	d
XK_Cyrillic_IO	xlib/X11/keysymdef.h	748;"	d
XK_Cyrillic_JE	xlib/X11/keysymdef.h	756;"	d
XK_Cyrillic_KA	xlib/X11/keysymdef.h	810;"	d
XK_Cyrillic_LJE	xlib/X11/keysymdef.h	758;"	d
XK_Cyrillic_NJE	xlib/X11/keysymdef.h	760;"	d
XK_Cyrillic_O	xlib/X11/keysymdef.h	814;"	d
XK_Cyrillic_PE	xlib/X11/keysymdef.h	815;"	d
XK_Cyrillic_SHA	xlib/X11/keysymdef.h	826;"	d
XK_Cyrillic_SHCHA	xlib/X11/keysymdef.h	828;"	d
XK_Cyrillic_SHORTI	xlib/X11/keysymdef.h	809;"	d
XK_Cyrillic_SOFTSIGN	xlib/X11/keysymdef.h	823;"	d
XK_Cyrillic_TE	xlib/X11/keysymdef.h	819;"	d
XK_Cyrillic_TSE	xlib/X11/keysymdef.h	802;"	d
XK_Cyrillic_U	xlib/X11/keysymdef.h	820;"	d
XK_Cyrillic_VE	xlib/X11/keysymdef.h	822;"	d
XK_Cyrillic_YA	xlib/X11/keysymdef.h	816;"	d
XK_Cyrillic_YERU	xlib/X11/keysymdef.h	824;"	d
XK_Cyrillic_YU	xlib/X11/keysymdef.h	799;"	d
XK_Cyrillic_ZE	xlib/X11/keysymdef.h	825;"	d
XK_Cyrillic_ZHE	xlib/X11/keysymdef.h	821;"	d
XK_Cyrillic_a	xlib/X11/keysymdef.h	768;"	d
XK_Cyrillic_be	xlib/X11/keysymdef.h	769;"	d
XK_Cyrillic_che	xlib/X11/keysymdef.h	797;"	d
XK_Cyrillic_de	xlib/X11/keysymdef.h	771;"	d
XK_Cyrillic_dzhe	xlib/X11/keysymdef.h	743;"	d
XK_Cyrillic_e	xlib/X11/keysymdef.h	795;"	d
XK_Cyrillic_ef	xlib/X11/keysymdef.h	773;"	d
XK_Cyrillic_el	xlib/X11/keysymdef.h	779;"	d
XK_Cyrillic_em	xlib/X11/keysymdef.h	780;"	d
XK_Cyrillic_en	xlib/X11/keysymdef.h	781;"	d
XK_Cyrillic_er	xlib/X11/keysymdef.h	785;"	d
XK_Cyrillic_es	xlib/X11/keysymdef.h	786;"	d
XK_Cyrillic_ghe	xlib/X11/keysymdef.h	774;"	d
XK_Cyrillic_ha	xlib/X11/keysymdef.h	775;"	d
XK_Cyrillic_hardsign	xlib/X11/keysymdef.h	798;"	d
XK_Cyrillic_i	xlib/X11/keysymdef.h	776;"	d
XK_Cyrillic_ie	xlib/X11/keysymdef.h	772;"	d
XK_Cyrillic_io	xlib/X11/keysymdef.h	726;"	d
XK_Cyrillic_je	xlib/X11/keysymdef.h	734;"	d
XK_Cyrillic_ka	xlib/X11/keysymdef.h	778;"	d
XK_Cyrillic_lje	xlib/X11/keysymdef.h	736;"	d
XK_Cyrillic_nje	xlib/X11/keysymdef.h	738;"	d
XK_Cyrillic_o	xlib/X11/keysymdef.h	782;"	d
XK_Cyrillic_pe	xlib/X11/keysymdef.h	783;"	d
XK_Cyrillic_sha	xlib/X11/keysymdef.h	794;"	d
XK_Cyrillic_shcha	xlib/X11/keysymdef.h	796;"	d
XK_Cyrillic_shorti	xlib/X11/keysymdef.h	777;"	d
XK_Cyrillic_softsign	xlib/X11/keysymdef.h	791;"	d
XK_Cyrillic_te	xlib/X11/keysymdef.h	787;"	d
XK_Cyrillic_tse	xlib/X11/keysymdef.h	770;"	d
XK_Cyrillic_u	xlib/X11/keysymdef.h	788;"	d
XK_Cyrillic_ve	xlib/X11/keysymdef.h	790;"	d
XK_Cyrillic_ya	xlib/X11/keysymdef.h	784;"	d
XK_Cyrillic_yeru	xlib/X11/keysymdef.h	792;"	d
XK_Cyrillic_yu	xlib/X11/keysymdef.h	767;"	d
XK_Cyrillic_ze	xlib/X11/keysymdef.h	793;"	d
XK_Cyrillic_zhe	xlib/X11/keysymdef.h	789;"	d
XK_D	xlib/X11/keysymdef.h	282;"	d
XK_Dcaron	xlib/X11/keysymdef.h	480;"	d
XK_Delete	xlib/X11/keysymdef.h	45;"	d
XK_Down	xlib/X11/keysymdef.h	79;"	d
XK_Dstroke	xlib/X11/keysymdef.h	481;"	d
XK_E	xlib/X11/keysymdef.h	283;"	d
XK_ENG	xlib/X11/keysymdef.h	559;"	d
XK_ETH	xlib/X11/keysymdef.h	391;"	d
XK_Eabovedot	xlib/X11/keysymdef.h	563;"	d
XK_Eacute	xlib/X11/keysymdef.h	384;"	d
XK_Ecaron	xlib/X11/keysymdef.h	479;"	d
XK_Ecircumflex	xlib/X11/keysymdef.h	385;"	d
XK_Ediaeresis	xlib/X11/keysymdef.h	386;"	d
XK_Egrave	xlib/X11/keysymdef.h	383;"	d
XK_Eisu_Shift	xlib/X11/keysymdef.h	70;"	d
XK_Eisu_toggle	xlib/X11/keysymdef.h	71;"	d
XK_Emacron	xlib/X11/keysymdef.h	550;"	d
XK_End	xlib/X11/keysymdef.h	84;"	d
XK_Eogonek	xlib/X11/keysymdef.h	478;"	d
XK_Escape	xlib/X11/keysymdef.h	44;"	d
XK_Eth	xlib/X11/keysymdef.h	392;"	d
XK_Execute	xlib/X11/keysymdef.h	97;"	d
XK_F	xlib/X11/keysymdef.h	284;"	d
XK_F1	xlib/X11/keysymdef.h	160;"	d
XK_F10	xlib/X11/keysymdef.h	169;"	d
XK_F11	xlib/X11/keysymdef.h	170;"	d
XK_F12	xlib/X11/keysymdef.h	172;"	d
XK_F13	xlib/X11/keysymdef.h	174;"	d
XK_F14	xlib/X11/keysymdef.h	176;"	d
XK_F15	xlib/X11/keysymdef.h	178;"	d
XK_F16	xlib/X11/keysymdef.h	180;"	d
XK_F17	xlib/X11/keysymdef.h	182;"	d
XK_F18	xlib/X11/keysymdef.h	184;"	d
XK_F19	xlib/X11/keysymdef.h	186;"	d
XK_F2	xlib/X11/keysymdef.h	161;"	d
XK_F20	xlib/X11/keysymdef.h	188;"	d
XK_F21	xlib/X11/keysymdef.h	190;"	d
XK_F22	xlib/X11/keysymdef.h	192;"	d
XK_F23	xlib/X11/keysymdef.h	194;"	d
XK_F24	xlib/X11/keysymdef.h	196;"	d
XK_F25	xlib/X11/keysymdef.h	198;"	d
XK_F26	xlib/X11/keysymdef.h	200;"	d
XK_F27	xlib/X11/keysymdef.h	202;"	d
XK_F28	xlib/X11/keysymdef.h	204;"	d
XK_F29	xlib/X11/keysymdef.h	206;"	d
XK_F3	xlib/X11/keysymdef.h	162;"	d
XK_F30	xlib/X11/keysymdef.h	208;"	d
XK_F31	xlib/X11/keysymdef.h	210;"	d
XK_F32	xlib/X11/keysymdef.h	212;"	d
XK_F33	xlib/X11/keysymdef.h	214;"	d
XK_F34	xlib/X11/keysymdef.h	216;"	d
XK_F35	xlib/X11/keysymdef.h	218;"	d
XK_F4	xlib/X11/keysymdef.h	163;"	d
XK_F5	xlib/X11/keysymdef.h	164;"	d
XK_F6	xlib/X11/keysymdef.h	165;"	d
XK_F7	xlib/X11/keysymdef.h	166;"	d
XK_F8	xlib/X11/keysymdef.h	167;"	d
XK_F9	xlib/X11/keysymdef.h	168;"	d
XK_Find	xlib/X11/keysymdef.h	102;"	d
XK_G	xlib/X11/keysymdef.h	285;"	d
XK_GREEK	xlib/X11/keysym.h	33;"	d
XK_Gabovedot	xlib/X11/keysymdef.h	526;"	d
XK_Gbreve	xlib/X11/keysymdef.h	517;"	d
XK_Gcedilla	xlib/X11/keysymdef.h	551;"	d
XK_Gcircumflex	xlib/X11/keysymdef.h	527;"	d
XK_Greek_ALPHA	xlib/X11/keysymdef.h	861;"	d
XK_Greek_ALPHAaccent	xlib/X11/keysymdef.h	839;"	d
XK_Greek_BETA	xlib/X11/keysymdef.h	862;"	d
XK_Greek_CHI	xlib/X11/keysymdef.h	883;"	d
XK_Greek_DELTA	xlib/X11/keysymdef.h	864;"	d
XK_Greek_EPSILON	xlib/X11/keysymdef.h	865;"	d
XK_Greek_EPSILONaccent	xlib/X11/keysymdef.h	840;"	d
XK_Greek_ETA	xlib/X11/keysymdef.h	867;"	d
XK_Greek_ETAaccent	xlib/X11/keysymdef.h	841;"	d
XK_Greek_GAMMA	xlib/X11/keysymdef.h	863;"	d
XK_Greek_IOTA	xlib/X11/keysymdef.h	869;"	d
XK_Greek_IOTAaccent	xlib/X11/keysymdef.h	842;"	d
XK_Greek_IOTAdiaeresis	xlib/X11/keysymdef.h	843;"	d
XK_Greek_KAPPA	xlib/X11/keysymdef.h	870;"	d
XK_Greek_LAMBDA	xlib/X11/keysymdef.h	872;"	d
XK_Greek_LAMDA	xlib/X11/keysymdef.h	871;"	d
XK_Greek_MU	xlib/X11/keysymdef.h	873;"	d
XK_Greek_NU	xlib/X11/keysymdef.h	874;"	d
XK_Greek_OMEGA	xlib/X11/keysymdef.h	885;"	d
XK_Greek_OMEGAaccent	xlib/X11/keysymdef.h	847;"	d
XK_Greek_OMICRON	xlib/X11/keysymdef.h	876;"	d
XK_Greek_OMICRONaccent	xlib/X11/keysymdef.h	844;"	d
XK_Greek_PHI	xlib/X11/keysymdef.h	882;"	d
XK_Greek_PI	xlib/X11/keysymdef.h	877;"	d
XK_Greek_PSI	xlib/X11/keysymdef.h	884;"	d
XK_Greek_RHO	xlib/X11/keysymdef.h	878;"	d
XK_Greek_SIGMA	xlib/X11/keysymdef.h	879;"	d
XK_Greek_TAU	xlib/X11/keysymdef.h	880;"	d
XK_Greek_THETA	xlib/X11/keysymdef.h	868;"	d
XK_Greek_UPSILON	xlib/X11/keysymdef.h	881;"	d
XK_Greek_UPSILONaccent	xlib/X11/keysymdef.h	845;"	d
XK_Greek_UPSILONdieresis	xlib/X11/keysymdef.h	846;"	d
XK_Greek_XI	xlib/X11/keysymdef.h	875;"	d
XK_Greek_ZETA	xlib/X11/keysymdef.h	866;"	d
XK_Greek_accentdieresis	xlib/X11/keysymdef.h	848;"	d
XK_Greek_alpha	xlib/X11/keysymdef.h	886;"	d
XK_Greek_alphaaccent	xlib/X11/keysymdef.h	850;"	d
XK_Greek_beta	xlib/X11/keysymdef.h	887;"	d
XK_Greek_chi	xlib/X11/keysymdef.h	909;"	d
XK_Greek_delta	xlib/X11/keysymdef.h	889;"	d
XK_Greek_epsilon	xlib/X11/keysymdef.h	890;"	d
XK_Greek_epsilonaccent	xlib/X11/keysymdef.h	851;"	d
XK_Greek_eta	xlib/X11/keysymdef.h	892;"	d
XK_Greek_etaaccent	xlib/X11/keysymdef.h	852;"	d
XK_Greek_finalsmallsigma	xlib/X11/keysymdef.h	905;"	d
XK_Greek_gamma	xlib/X11/keysymdef.h	888;"	d
XK_Greek_horizbar	xlib/X11/keysymdef.h	849;"	d
XK_Greek_iota	xlib/X11/keysymdef.h	894;"	d
XK_Greek_iotaaccent	xlib/X11/keysymdef.h	853;"	d
XK_Greek_iotaaccentdieresis	xlib/X11/keysymdef.h	855;"	d
XK_Greek_iotadieresis	xlib/X11/keysymdef.h	854;"	d
XK_Greek_kappa	xlib/X11/keysymdef.h	895;"	d
XK_Greek_lambda	xlib/X11/keysymdef.h	897;"	d
XK_Greek_lamda	xlib/X11/keysymdef.h	896;"	d
XK_Greek_mu	xlib/X11/keysymdef.h	898;"	d
XK_Greek_nu	xlib/X11/keysymdef.h	899;"	d
XK_Greek_omega	xlib/X11/keysymdef.h	911;"	d
XK_Greek_omegaaccent	xlib/X11/keysymdef.h	860;"	d
XK_Greek_omicron	xlib/X11/keysymdef.h	901;"	d
XK_Greek_omicronaccent	xlib/X11/keysymdef.h	856;"	d
XK_Greek_phi	xlib/X11/keysymdef.h	908;"	d
XK_Greek_pi	xlib/X11/keysymdef.h	902;"	d
XK_Greek_psi	xlib/X11/keysymdef.h	910;"	d
XK_Greek_rho	xlib/X11/keysymdef.h	903;"	d
XK_Greek_sigma	xlib/X11/keysymdef.h	904;"	d
XK_Greek_switch	xlib/X11/keysymdef.h	912;"	d
XK_Greek_tau	xlib/X11/keysymdef.h	906;"	d
XK_Greek_theta	xlib/X11/keysymdef.h	893;"	d
XK_Greek_upsilon	xlib/X11/keysymdef.h	907;"	d
XK_Greek_upsilonaccent	xlib/X11/keysymdef.h	857;"	d
XK_Greek_upsilonaccentdieresis	xlib/X11/keysymdef.h	859;"	d
XK_Greek_upsilondieresis	xlib/X11/keysymdef.h	858;"	d
XK_Greek_xi	xlib/X11/keysymdef.h	900;"	d
XK_Greek_zeta	xlib/X11/keysymdef.h	891;"	d
XK_H	xlib/X11/keysymdef.h	286;"	d
XK_Hankaku	xlib/X11/keysymdef.h	64;"	d
XK_Hcircumflex	xlib/X11/keysymdef.h	515;"	d
XK_Hebrew_switch	xlib/X11/keysymdef.h	1167;"	d
XK_Help	xlib/X11/keysymdef.h	104;"	d
XK_Henkan	xlib/X11/keysymdef.h	58;"	d
XK_Henkan_Mode	xlib/X11/keysymdef.h	57;"	d
XK_Hiragana	xlib/X11/keysymdef.h	60;"	d
XK_Hiragana_Katakana	xlib/X11/keysymdef.h	62;"	d
XK_Home	xlib/X11/keysymdef.h	75;"	d
XK_Hstroke	xlib/X11/keysymdef.h	514;"	d
XK_Hyper_L	xlib/X11/keysymdef.h	236;"	d
XK_Hyper_R	xlib/X11/keysymdef.h	237;"	d
XK_I	xlib/X11/keysymdef.h	287;"	d
XK_Iabovedot	xlib/X11/keysymdef.h	516;"	d
XK_Iacute	xlib/X11/keysymdef.h	388;"	d
XK_Icircumflex	xlib/X11/keysymdef.h	389;"	d
XK_Idiaeresis	xlib/X11/keysymdef.h	390;"	d
XK_Igrave	xlib/X11/keysymdef.h	387;"	d
XK_Imacron	xlib/X11/keysymdef.h	564;"	d
XK_Insert	xlib/X11/keysymdef.h	98;"	d
XK_Iogonek	xlib/X11/keysymdef.h	562;"	d
XK_Itilde	xlib/X11/keysymdef.h	548;"	d
XK_J	xlib/X11/keysymdef.h	288;"	d
XK_Jcircumflex	xlib/X11/keysymdef.h	518;"	d
XK_K	xlib/X11/keysymdef.h	289;"	d
XK_KP_0	xlib/X11/keysymdef.h	140;"	d
XK_KP_1	xlib/X11/keysymdef.h	141;"	d
XK_KP_2	xlib/X11/keysymdef.h	142;"	d
XK_KP_3	xlib/X11/keysymdef.h	143;"	d
XK_KP_4	xlib/X11/keysymdef.h	144;"	d
XK_KP_5	xlib/X11/keysymdef.h	145;"	d
XK_KP_6	xlib/X11/keysymdef.h	146;"	d
XK_KP_7	xlib/X11/keysymdef.h	147;"	d
XK_KP_8	xlib/X11/keysymdef.h	148;"	d
XK_KP_9	xlib/X11/keysymdef.h	149;"	d
XK_KP_Add	xlib/X11/keysymdef.h	134;"	d
XK_KP_Begin	xlib/X11/keysymdef.h	129;"	d
XK_KP_Decimal	xlib/X11/keysymdef.h	137;"	d
XK_KP_Delete	xlib/X11/keysymdef.h	131;"	d
XK_KP_Divide	xlib/X11/keysymdef.h	138;"	d
XK_KP_Down	xlib/X11/keysymdef.h	123;"	d
XK_KP_End	xlib/X11/keysymdef.h	128;"	d
XK_KP_Enter	xlib/X11/keysymdef.h	114;"	d
XK_KP_Equal	xlib/X11/keysymdef.h	132;"	d
XK_KP_F1	xlib/X11/keysymdef.h	115;"	d
XK_KP_F2	xlib/X11/keysymdef.h	116;"	d
XK_KP_F3	xlib/X11/keysymdef.h	117;"	d
XK_KP_F4	xlib/X11/keysymdef.h	118;"	d
XK_KP_Home	xlib/X11/keysymdef.h	119;"	d
XK_KP_Insert	xlib/X11/keysymdef.h	130;"	d
XK_KP_Left	xlib/X11/keysymdef.h	120;"	d
XK_KP_Multiply	xlib/X11/keysymdef.h	133;"	d
XK_KP_Next	xlib/X11/keysymdef.h	126;"	d
XK_KP_Page_Down	xlib/X11/keysymdef.h	127;"	d
XK_KP_Page_Up	xlib/X11/keysymdef.h	125;"	d
XK_KP_Prior	xlib/X11/keysymdef.h	124;"	d
XK_KP_Right	xlib/X11/keysymdef.h	122;"	d
XK_KP_Separator	xlib/X11/keysymdef.h	135;"	d
XK_KP_Space	xlib/X11/keysymdef.h	112;"	d
XK_KP_Subtract	xlib/X11/keysymdef.h	136;"	d
XK_KP_Tab	xlib/X11/keysymdef.h	113;"	d
XK_KP_Up	xlib/X11/keysymdef.h	121;"	d
XK_Kana_Lock	xlib/X11/keysymdef.h	68;"	d
XK_Kana_Shift	xlib/X11/keysymdef.h	69;"	d
XK_Kanji	xlib/X11/keysymdef.h	55;"	d
XK_Katakana	xlib/X11/keysymdef.h	61;"	d
XK_Kcedilla	xlib/X11/keysymdef.h	567;"	d
XK_L	xlib/X11/keysymdef.h	290;"	d
XK_L1	xlib/X11/keysymdef.h	171;"	d
XK_L10	xlib/X11/keysymdef.h	189;"	d
XK_L2	xlib/X11/keysymdef.h	173;"	d
XK_L3	xlib/X11/keysymdef.h	175;"	d
XK_L4	xlib/X11/keysymdef.h	177;"	d
XK_L5	xlib/X11/keysymdef.h	179;"	d
XK_L6	xlib/X11/keysymdef.h	181;"	d
XK_L7	xlib/X11/keysymdef.h	183;"	d
XK_L8	xlib/X11/keysymdef.h	185;"	d
XK_L9	xlib/X11/keysymdef.h	187;"	d
XK_LATIN1	xlib/X11/keysym.h	29;"	d
XK_LATIN2	xlib/X11/keysym.h	30;"	d
XK_LATIN3	xlib/X11/keysym.h	31;"	d
XK_LATIN4	xlib/X11/keysym.h	32;"	d
XK_Lacute	xlib/X11/keysymdef.h	475;"	d
XK_Lcaron	xlib/X11/keysymdef.h	452;"	d
XK_Lcedilla	xlib/X11/keysymdef.h	549;"	d
XK_Left	xlib/X11/keysymdef.h	76;"	d
XK_Linefeed	xlib/X11/keysymdef.h	38;"	d
XK_Lstroke	xlib/X11/keysymdef.h	451;"	d
XK_M	xlib/X11/keysymdef.h	291;"	d
XK_MISCELLANY	xlib/X11/keysym.h	28;"	d
XK_Macedonia_DSE	xlib/X11/keysymdef.h	751;"	d
XK_Macedonia_GJE	xlib/X11/keysymdef.h	747;"	d
XK_Macedonia_KJE	xlib/X11/keysymdef.h	763;"	d
XK_Macedonia_dse	xlib/X11/keysymdef.h	729;"	d
XK_Macedonia_gje	xlib/X11/keysymdef.h	725;"	d
XK_Macedonia_kje	xlib/X11/keysymdef.h	741;"	d
XK_Massyo	xlib/X11/keysymdef.h	67;"	d
XK_Menu	xlib/X11/keysymdef.h	101;"	d
XK_Meta_L	xlib/X11/keysymdef.h	230;"	d
XK_Meta_R	xlib/X11/keysymdef.h	231;"	d
XK_Mode_switch	xlib/X11/keysymdef.h	106;"	d
XK_Muhenkan	xlib/X11/keysymdef.h	56;"	d
XK_Multi_key	xlib/X11/keysymdef.h	51;"	d
XK_N	xlib/X11/keysymdef.h	292;"	d
XK_Nacute	xlib/X11/keysymdef.h	482;"	d
XK_Ncaron	xlib/X11/keysymdef.h	483;"	d
XK_Ncedilla	xlib/X11/keysymdef.h	565;"	d
XK_Next	xlib/X11/keysymdef.h	82;"	d
XK_Ntilde	xlib/X11/keysymdef.h	393;"	d
XK_Num_Lock	xlib/X11/keysymdef.h	108;"	d
XK_O	xlib/X11/keysymdef.h	293;"	d
XK_Oacute	xlib/X11/keysymdef.h	395;"	d
XK_Ocircumflex	xlib/X11/keysymdef.h	396;"	d
XK_Odiaeresis	xlib/X11/keysymdef.h	398;"	d
XK_Odoubleacute	xlib/X11/keysymdef.h	484;"	d
XK_Ograve	xlib/X11/keysymdef.h	394;"	d
XK_Omacron	xlib/X11/keysymdef.h	566;"	d
XK_Ooblique	xlib/X11/keysymdef.h	400;"	d
XK_Otilde	xlib/X11/keysymdef.h	397;"	d
XK_P	xlib/X11/keysymdef.h	294;"	d
XK_Page_Down	xlib/X11/keysymdef.h	83;"	d
XK_Page_Up	xlib/X11/keysymdef.h	81;"	d
XK_Pause	xlib/X11/keysymdef.h	41;"	d
XK_Print	xlib/X11/keysymdef.h	96;"	d
XK_Prior	xlib/X11/keysymdef.h	80;"	d
XK_Q	xlib/X11/keysymdef.h	295;"	d
XK_R	xlib/X11/keysymdef.h	296;"	d
XK_R1	xlib/X11/keysymdef.h	191;"	d
XK_R10	xlib/X11/keysymdef.h	209;"	d
XK_R11	xlib/X11/keysymdef.h	211;"	d
XK_R12	xlib/X11/keysymdef.h	213;"	d
XK_R13	xlib/X11/keysymdef.h	215;"	d
XK_R14	xlib/X11/keysymdef.h	217;"	d
XK_R15	xlib/X11/keysymdef.h	219;"	d
XK_R2	xlib/X11/keysymdef.h	193;"	d
XK_R3	xlib/X11/keysymdef.h	195;"	d
XK_R4	xlib/X11/keysymdef.h	197;"	d
XK_R5	xlib/X11/keysymdef.h	199;"	d
XK_R6	xlib/X11/keysymdef.h	201;"	d
XK_R7	xlib/X11/keysymdef.h	203;"	d
XK_R8	xlib/X11/keysymdef.h	205;"	d
XK_R9	xlib/X11/keysymdef.h	207;"	d
XK_Racute	xlib/X11/keysymdef.h	473;"	d
XK_Rcaron	xlib/X11/keysymdef.h	485;"	d
XK_Rcedilla	xlib/X11/keysymdef.h	547;"	d
XK_Redo	xlib/X11/keysymdef.h	100;"	d
XK_Return	xlib/X11/keysymdef.h	40;"	d
XK_Right	xlib/X11/keysymdef.h	78;"	d
XK_Romaji	xlib/X11/keysymdef.h	59;"	d
XK_S	xlib/X11/keysymdef.h	297;"	d
XK_Sacute	xlib/X11/keysymdef.h	453;"	d
XK_Scaron	xlib/X11/keysymdef.h	454;"	d
XK_Scedilla	xlib/X11/keysymdef.h	455;"	d
XK_Scircumflex	xlib/X11/keysymdef.h	529;"	d
XK_Scroll_Lock	xlib/X11/keysymdef.h	42;"	d
XK_Select	xlib/X11/keysymdef.h	95;"	d
XK_Serbian_DJE	xlib/X11/keysymdef.h	746;"	d
XK_Serbian_DZE	xlib/X11/keysymdef.h	766;"	d
XK_Serbian_JE	xlib/X11/keysymdef.h	757;"	d
XK_Serbian_LJE	xlib/X11/keysymdef.h	759;"	d
XK_Serbian_NJE	xlib/X11/keysymdef.h	761;"	d
XK_Serbian_TSHE	xlib/X11/keysymdef.h	762;"	d
XK_Serbian_dje	xlib/X11/keysymdef.h	724;"	d
XK_Serbian_dze	xlib/X11/keysymdef.h	744;"	d
XK_Serbian_je	xlib/X11/keysymdef.h	735;"	d
XK_Serbian_lje	xlib/X11/keysymdef.h	737;"	d
XK_Serbian_nje	xlib/X11/keysymdef.h	739;"	d
XK_Serbian_tshe	xlib/X11/keysymdef.h	740;"	d
XK_Shift_L	xlib/X11/keysymdef.h	223;"	d
XK_Shift_Lock	xlib/X11/keysymdef.h	228;"	d
XK_Shift_R	xlib/X11/keysymdef.h	224;"	d
XK_Super_L	xlib/X11/keysymdef.h	234;"	d
XK_Super_R	xlib/X11/keysymdef.h	235;"	d
XK_Sys_Req	xlib/X11/keysymdef.h	43;"	d
XK_T	xlib/X11/keysymdef.h	298;"	d
XK_THORN	xlib/X11/keysymdef.h	406;"	d
XK_Tab	xlib/X11/keysymdef.h	37;"	d
XK_Tcaron	xlib/X11/keysymdef.h	456;"	d
XK_Tcedilla	xlib/X11/keysymdef.h	488;"	d
XK_Thorn	xlib/X11/keysymdef.h	407;"	d
XK_Touroku	xlib/X11/keysymdef.h	66;"	d
XK_Tslash	xlib/X11/keysymdef.h	552;"	d
XK_U	xlib/X11/keysymdef.h	299;"	d
XK_Uacute	xlib/X11/keysymdef.h	402;"	d
XK_Ubreve	xlib/X11/keysymdef.h	528;"	d
XK_Ucircumflex	xlib/X11/keysymdef.h	403;"	d
XK_Udiaeresis	xlib/X11/keysymdef.h	404;"	d
XK_Udoubleacute	xlib/X11/keysymdef.h	487;"	d
XK_Ugrave	xlib/X11/keysymdef.h	401;"	d
XK_Ukrainian_I	xlib/X11/keysymdef.h	752;"	d
XK_Ukrainian_IE	xlib/X11/keysymdef.h	749;"	d
XK_Ukrainian_YI	xlib/X11/keysymdef.h	754;"	d
XK_Ukrainian_i	xlib/X11/keysymdef.h	730;"	d
XK_Ukrainian_ie	xlib/X11/keysymdef.h	727;"	d
XK_Ukrainian_yi	xlib/X11/keysymdef.h	732;"	d
XK_Ukranian_I	xlib/X11/keysymdef.h	753;"	d
XK_Ukranian_JE	xlib/X11/keysymdef.h	750;"	d
XK_Ukranian_YI	xlib/X11/keysymdef.h	755;"	d
XK_Ukranian_i	xlib/X11/keysymdef.h	731;"	d
XK_Ukranian_je	xlib/X11/keysymdef.h	728;"	d
XK_Ukranian_yi	xlib/X11/keysymdef.h	733;"	d
XK_Umacron	xlib/X11/keysymdef.h	570;"	d
XK_Undo	xlib/X11/keysymdef.h	99;"	d
XK_Uogonek	xlib/X11/keysymdef.h	568;"	d
XK_Up	xlib/X11/keysymdef.h	77;"	d
XK_Uring	xlib/X11/keysymdef.h	486;"	d
XK_Utilde	xlib/X11/keysymdef.h	569;"	d
XK_V	xlib/X11/keysymdef.h	300;"	d
XK_VoidSymbol	xlib/X11/keysymdef.h	27;"	d
XK_W	xlib/X11/keysymdef.h	301;"	d
XK_Win_L	xlib/X11/keysymdef.h	89;"	d
XK_Win_R	xlib/X11/keysymdef.h	90;"	d
XK_X	xlib/X11/keysymdef.h	302;"	d
XK_Y	xlib/X11/keysymdef.h	303;"	d
XK_Yacute	xlib/X11/keysymdef.h	405;"	d
XK_Z	xlib/X11/keysymdef.h	304;"	d
XK_Zabovedot	xlib/X11/keysymdef.h	459;"	d
XK_Zacute	xlib/X11/keysymdef.h	457;"	d
XK_Zcaron	xlib/X11/keysymdef.h	458;"	d
XK_Zenkaku	xlib/X11/keysymdef.h	63;"	d
XK_Zenkaku_Hankaku	xlib/X11/keysymdef.h	65;"	d
XK_a	xlib/X11/keysymdef.h	312;"	d
XK_aacute	xlib/X11/keysymdef.h	410;"	d
XK_abovedot	xlib/X11/keysymdef.h	505;"	d
XK_abreve	xlib/X11/keysymdef.h	490;"	d
XK_acircumflex	xlib/X11/keysymdef.h	411;"	d
XK_acute	xlib/X11/keysymdef.h	363;"	d
XK_adiaeresis	xlib/X11/keysymdef.h	413;"	d
XK_ae	xlib/X11/keysymdef.h	415;"	d
XK_agrave	xlib/X11/keysymdef.h	409;"	d
XK_amacron	xlib/X11/keysymdef.h	571;"	d
XK_ampersand	xlib/X11/keysymdef.h	251;"	d
XK_aogonek	xlib/X11/keysymdef.h	460;"	d
XK_apostrophe	xlib/X11/keysymdef.h	252;"	d
XK_approximate	xlib/X11/keysymdef.h	952;"	d
XK_aring	xlib/X11/keysymdef.h	414;"	d
XK_asciicircum	xlib/X11/keysymdef.h	308;"	d
XK_asciitilde	xlib/X11/keysymdef.h	341;"	d
XK_asterisk	xlib/X11/keysymdef.h	256;"	d
XK_at	xlib/X11/keysymdef.h	278;"	d
XK_atilde	xlib/X11/keysymdef.h	412;"	d
XK_b	xlib/X11/keysymdef.h	313;"	d
XK_backslash	xlib/X11/keysymdef.h	306;"	d
XK_ballotcross	xlib/X11/keysymdef.h	1081;"	d
XK_bar	xlib/X11/keysymdef.h	339;"	d
XK_blank	xlib/X11/keysymdef.h	978;"	d
XK_botintegral	xlib/X11/keysymdef.h	925;"	d
XK_botleftparens	xlib/X11/keysymdef.h	932;"	d
XK_botleftsqbracket	xlib/X11/keysymdef.h	928;"	d
XK_botleftsummation	xlib/X11/keysymdef.h	938;"	d
XK_botrightparens	xlib/X11/keysymdef.h	934;"	d
XK_botrightsqbracket	xlib/X11/keysymdef.h	930;"	d
XK_botrightsummation	xlib/X11/keysymdef.h	942;"	d
XK_bott	xlib/X11/keysymdef.h	999;"	d
XK_botvertsummationconnector	xlib/X11/keysymdef.h	940;"	d
XK_braceleft	xlib/X11/keysymdef.h	338;"	d
XK_braceright	xlib/X11/keysymdef.h	340;"	d
XK_bracketleft	xlib/X11/keysymdef.h	305;"	d
XK_bracketright	xlib/X11/keysymdef.h	307;"	d
XK_breve	xlib/X11/keysymdef.h	450;"	d
XK_brokenbar	xlib/X11/keysymdef.h	349;"	d
XK_c	xlib/X11/keysymdef.h	314;"	d
XK_cabovedot	xlib/X11/keysymdef.h	530;"	d
XK_cacute	xlib/X11/keysymdef.h	492;"	d
XK_careof	xlib/X11/keysymdef.h	1031;"	d
XK_caret	xlib/X11/keysymdef.h	1089;"	d
XK_caron	xlib/X11/keysymdef.h	465;"	d
XK_ccaron	xlib/X11/keysymdef.h	493;"	d
XK_ccedilla	xlib/X11/keysymdef.h	416;"	d
XK_ccircumflex	xlib/X11/keysymdef.h	531;"	d
XK_cedilla	xlib/X11/keysymdef.h	367;"	d
XK_cent	xlib/X11/keysymdef.h	345;"	d
XK_checkerboard	xlib/X11/keysymdef.h	980;"	d
XK_checkmark	xlib/X11/keysymdef.h	1080;"	d
XK_circle	xlib/X11/keysymdef.h	1113;"	d
XK_club	xlib/X11/keysymdef.h	1074;"	d
XK_colon	xlib/X11/keysymdef.h	272;"	d
XK_comma	xlib/X11/keysymdef.h	258;"	d
XK_copyright	xlib/X11/keysymdef.h	352;"	d
XK_cr	xlib/X11/keysymdef.h	983;"	d
XK_crossinglines	xlib/X11/keysymdef.h	991;"	d
XK_currency	xlib/X11/keysymdef.h	347;"	d
XK_cursor	xlib/X11/keysymdef.h	1092;"	d
XK_d	xlib/X11/keysymdef.h	315;"	d
XK_dagger	xlib/X11/keysymdef.h	1078;"	d
XK_dcaron	xlib/X11/keysymdef.h	496;"	d
XK_decimalpoint	xlib/X11/keysymdef.h	1034;"	d
XK_degree	xlib/X11/keysymdef.h	359;"	d
XK_diaeresis	xlib/X11/keysymdef.h	351;"	d
XK_diamond	xlib/X11/keysymdef.h	1075;"	d
XK_digitspace	xlib/X11/keysymdef.h	1014;"	d
XK_division	xlib/X11/keysymdef.h	432;"	d
XK_dollar	xlib/X11/keysymdef.h	249;"	d
XK_doubbaselinedot	xlib/X11/keysymdef.h	1022;"	d
XK_doubleacute	xlib/X11/keysymdef.h	470;"	d
XK_doubledagger	xlib/X11/keysymdef.h	1079;"	d
XK_doublelowquotemark	xlib/X11/keysymdef.h	1091;"	d
XK_downarrow	xlib/X11/keysymdef.h	969;"	d
XK_downcaret	xlib/X11/keysymdef.h	1103;"	d
XK_downshoe	xlib/X11/keysymdef.h	1115;"	d
XK_downstile	xlib/X11/keysymdef.h	1108;"	d
XK_downtack	xlib/X11/keysymdef.h	1106;"	d
XK_dstroke	xlib/X11/keysymdef.h	497;"	d
XK_e	xlib/X11/keysymdef.h	316;"	d
XK_eabovedot	xlib/X11/keysymdef.h	573;"	d
XK_eacute	xlib/X11/keysymdef.h	418;"	d
XK_ecaron	xlib/X11/keysymdef.h	495;"	d
XK_ecircumflex	xlib/X11/keysymdef.h	419;"	d
XK_ediaeresis	xlib/X11/keysymdef.h	420;"	d
XK_egrave	xlib/X11/keysymdef.h	417;"	d
XK_ellipsis	xlib/X11/keysymdef.h	1021;"	d
XK_em3space	xlib/X11/keysymdef.h	1012;"	d
XK_em4space	xlib/X11/keysymdef.h	1013;"	d
XK_emacron	xlib/X11/keysymdef.h	556;"	d
XK_emdash	xlib/X11/keysymdef.h	1018;"	d
XK_emfilledcircle	xlib/X11/keysymdef.h	1060;"	d
XK_emfilledrect	xlib/X11/keysymdef.h	1061;"	d
XK_emopencircle	xlib/X11/keysymdef.h	1046;"	d
XK_emopenrectangle	xlib/X11/keysymdef.h	1047;"	d
XK_emspace	xlib/X11/keysymdef.h	1010;"	d
XK_endash	xlib/X11/keysymdef.h	1019;"	d
XK_enfilledcircbullet	xlib/X11/keysymdef.h	1068;"	d
XK_enfilledsqbullet	xlib/X11/keysymdef.h	1069;"	d
XK_eng	xlib/X11/keysymdef.h	560;"	d
XK_enopencircbullet	xlib/X11/keysymdef.h	1062;"	d
XK_enopensquarebullet	xlib/X11/keysymdef.h	1063;"	d
XK_enspace	xlib/X11/keysymdef.h	1011;"	d
XK_eogonek	xlib/X11/keysymdef.h	494;"	d
XK_equal	xlib/X11/keysymdef.h	275;"	d
XK_eth	xlib/X11/keysymdef.h	425;"	d
XK_exclam	xlib/X11/keysymdef.h	246;"	d
XK_exclamdown	xlib/X11/keysymdef.h	344;"	d
XK_f	xlib/X11/keysymdef.h	317;"	d
XK_femalesymbol	xlib/X11/keysymdef.h	1085;"	d
XK_ff	xlib/X11/keysymdef.h	982;"	d
XK_figdash	xlib/X11/keysymdef.h	1032;"	d
XK_filledlefttribullet	xlib/X11/keysymdef.h	1058;"	d
XK_filledrectbullet	xlib/X11/keysymdef.h	1057;"	d
XK_filledrighttribullet	xlib/X11/keysymdef.h	1059;"	d
XK_filledtribulletdown	xlib/X11/keysymdef.h	1071;"	d
XK_filledtribulletup	xlib/X11/keysymdef.h	1070;"	d
XK_fiveeighths	xlib/X11/keysymdef.h	1039;"	d
XK_fivesixths	xlib/X11/keysymdef.h	1030;"	d
XK_fourfifths	xlib/X11/keysymdef.h	1028;"	d
XK_function	xlib/X11/keysymdef.h	965;"	d
XK_g	xlib/X11/keysymdef.h	318;"	d
XK_gabovedot	xlib/X11/keysymdef.h	532;"	d
XK_gbreve	xlib/X11/keysymdef.h	522;"	d
XK_gcedilla	xlib/X11/keysymdef.h	557;"	d
XK_gcircumflex	xlib/X11/keysymdef.h	533;"	d
XK_grave	xlib/X11/keysymdef.h	310;"	d
XK_greater	xlib/X11/keysymdef.h	276;"	d
XK_greaterthanequal	xlib/X11/keysymdef.h	946;"	d
XK_guillemotleft	xlib/X11/keysymdef.h	354;"	d
XK_guillemotright	xlib/X11/keysymdef.h	370;"	d
XK_h	xlib/X11/keysymdef.h	319;"	d
XK_hairspace	xlib/X11/keysymdef.h	1017;"	d
XK_hcircumflex	xlib/X11/keysymdef.h	520;"	d
XK_heart	xlib/X11/keysymdef.h	1076;"	d
XK_hebrew_aleph	xlib/X11/keysymdef.h	1129;"	d
XK_hebrew_ayin	xlib/X11/keysymdef.h	1154;"	d
XK_hebrew_bet	xlib/X11/keysymdef.h	1130;"	d
XK_hebrew_beth	xlib/X11/keysymdef.h	1131;"	d
XK_hebrew_chet	xlib/X11/keysymdef.h	1140;"	d
XK_hebrew_dalet	xlib/X11/keysymdef.h	1134;"	d
XK_hebrew_daleth	xlib/X11/keysymdef.h	1135;"	d
XK_hebrew_doublelowline	xlib/X11/keysymdef.h	1128;"	d
XK_hebrew_finalkaph	xlib/X11/keysymdef.h	1145;"	d
XK_hebrew_finalmem	xlib/X11/keysymdef.h	1148;"	d
XK_hebrew_finalnun	xlib/X11/keysymdef.h	1150;"	d
XK_hebrew_finalpe	xlib/X11/keysymdef.h	1155;"	d
XK_hebrew_finalzade	xlib/X11/keysymdef.h	1157;"	d
XK_hebrew_finalzadi	xlib/X11/keysymdef.h	1158;"	d
XK_hebrew_gimel	xlib/X11/keysymdef.h	1132;"	d
XK_hebrew_gimmel	xlib/X11/keysymdef.h	1133;"	d
XK_hebrew_he	xlib/X11/keysymdef.h	1136;"	d
XK_hebrew_het	xlib/X11/keysymdef.h	1141;"	d
XK_hebrew_kaph	xlib/X11/keysymdef.h	1146;"	d
XK_hebrew_kuf	xlib/X11/keysymdef.h	1162;"	d
XK_hebrew_lamed	xlib/X11/keysymdef.h	1147;"	d
XK_hebrew_mem	xlib/X11/keysymdef.h	1149;"	d
XK_hebrew_nun	xlib/X11/keysymdef.h	1151;"	d
XK_hebrew_pe	xlib/X11/keysymdef.h	1156;"	d
XK_hebrew_qoph	xlib/X11/keysymdef.h	1161;"	d
XK_hebrew_resh	xlib/X11/keysymdef.h	1163;"	d
XK_hebrew_samech	xlib/X11/keysymdef.h	1152;"	d
XK_hebrew_samekh	xlib/X11/keysymdef.h	1153;"	d
XK_hebrew_shin	xlib/X11/keysymdef.h	1164;"	d
XK_hebrew_taf	xlib/X11/keysymdef.h	1166;"	d
XK_hebrew_taw	xlib/X11/keysymdef.h	1165;"	d
XK_hebrew_tet	xlib/X11/keysymdef.h	1142;"	d
XK_hebrew_teth	xlib/X11/keysymdef.h	1143;"	d
XK_hebrew_waw	xlib/X11/keysymdef.h	1137;"	d
XK_hebrew_yod	xlib/X11/keysymdef.h	1144;"	d
XK_hebrew_zade	xlib/X11/keysymdef.h	1159;"	d
XK_hebrew_zadi	xlib/X11/keysymdef.h	1160;"	d
XK_hebrew_zain	xlib/X11/keysymdef.h	1138;"	d
XK_hebrew_zayin	xlib/X11/keysymdef.h	1139;"	d
XK_hexagram	xlib/X11/keysymdef.h	1056;"	d
XK_horizconnector	xlib/X11/keysymdef.h	923;"	d
XK_horizlinescan1	xlib/X11/keysymdef.h	992;"	d
XK_horizlinescan3	xlib/X11/keysymdef.h	993;"	d
XK_horizlinescan5	xlib/X11/keysymdef.h	994;"	d
XK_horizlinescan7	xlib/X11/keysymdef.h	995;"	d
XK_horizlinescan9	xlib/X11/keysymdef.h	996;"	d
XK_hstroke	xlib/X11/keysymdef.h	519;"	d
XK_ht	xlib/X11/keysymdef.h	981;"	d
XK_hyphen	xlib/X11/keysymdef.h	356;"	d
XK_i	xlib/X11/keysymdef.h	320;"	d
XK_iacute	xlib/X11/keysymdef.h	422;"	d
XK_icircumflex	xlib/X11/keysymdef.h	423;"	d
XK_identical	xlib/X11/keysymdef.h	956;"	d
XK_idiaeresis	xlib/X11/keysymdef.h	424;"	d
XK_idotless	xlib/X11/keysymdef.h	521;"	d
XK_ifonlyif	xlib/X11/keysymdef.h	954;"	d
XK_igrave	xlib/X11/keysymdef.h	421;"	d
XK_imacron	xlib/X11/keysymdef.h	574;"	d
XK_implies	xlib/X11/keysymdef.h	955;"	d
XK_includedin	xlib/X11/keysymdef.h	958;"	d
XK_includes	xlib/X11/keysymdef.h	959;"	d
XK_infinity	xlib/X11/keysymdef.h	950;"	d
XK_integral	xlib/X11/keysymdef.h	947;"	d
XK_intersection	xlib/X11/keysymdef.h	960;"	d
XK_iogonek	xlib/X11/keysymdef.h	572;"	d
XK_itilde	xlib/X11/keysymdef.h	554;"	d
XK_j	xlib/X11/keysymdef.h	321;"	d
XK_jcircumflex	xlib/X11/keysymdef.h	523;"	d
XK_jot	xlib/X11/keysymdef.h	1110;"	d
XK_k	xlib/X11/keysymdef.h	322;"	d
XK_kana_A	xlib/X11/keysymdef.h	608;"	d
XK_kana_CHI	xlib/X11/keysymdef.h	624;"	d
XK_kana_E	xlib/X11/keysymdef.h	611;"	d
XK_kana_FU	xlib/X11/keysymdef.h	637;"	d
XK_kana_HA	xlib/X11/keysymdef.h	635;"	d
XK_kana_HE	xlib/X11/keysymdef.h	639;"	d
XK_kana_HI	xlib/X11/keysymdef.h	636;"	d
XK_kana_HO	xlib/X11/keysymdef.h	640;"	d
XK_kana_HU	xlib/X11/keysymdef.h	638;"	d
XK_kana_I	xlib/X11/keysymdef.h	609;"	d
XK_kana_KA	xlib/X11/keysymdef.h	613;"	d
XK_kana_KE	xlib/X11/keysymdef.h	616;"	d
XK_kana_KI	xlib/X11/keysymdef.h	614;"	d
XK_kana_KO	xlib/X11/keysymdef.h	617;"	d
XK_kana_KU	xlib/X11/keysymdef.h	615;"	d
XK_kana_MA	xlib/X11/keysymdef.h	641;"	d
XK_kana_ME	xlib/X11/keysymdef.h	644;"	d
XK_kana_MI	xlib/X11/keysymdef.h	642;"	d
XK_kana_MO	xlib/X11/keysymdef.h	645;"	d
XK_kana_MU	xlib/X11/keysymdef.h	643;"	d
XK_kana_N	xlib/X11/keysymdef.h	655;"	d
XK_kana_NA	xlib/X11/keysymdef.h	630;"	d
XK_kana_NE	xlib/X11/keysymdef.h	633;"	d
XK_kana_NI	xlib/X11/keysymdef.h	631;"	d
XK_kana_NO	xlib/X11/keysymdef.h	634;"	d
XK_kana_NU	xlib/X11/keysymdef.h	632;"	d
XK_kana_O	xlib/X11/keysymdef.h	612;"	d
XK_kana_RA	xlib/X11/keysymdef.h	649;"	d
XK_kana_RE	xlib/X11/keysymdef.h	652;"	d
XK_kana_RI	xlib/X11/keysymdef.h	650;"	d
XK_kana_RO	xlib/X11/keysymdef.h	653;"	d
XK_kana_RU	xlib/X11/keysymdef.h	651;"	d
XK_kana_SA	xlib/X11/keysymdef.h	618;"	d
XK_kana_SE	xlib/X11/keysymdef.h	621;"	d
XK_kana_SHI	xlib/X11/keysymdef.h	619;"	d
XK_kana_SO	xlib/X11/keysymdef.h	622;"	d
XK_kana_SU	xlib/X11/keysymdef.h	620;"	d
XK_kana_TA	xlib/X11/keysymdef.h	623;"	d
XK_kana_TE	xlib/X11/keysymdef.h	628;"	d
XK_kana_TI	xlib/X11/keysymdef.h	625;"	d
XK_kana_TO	xlib/X11/keysymdef.h	629;"	d
XK_kana_TSU	xlib/X11/keysymdef.h	626;"	d
XK_kana_TU	xlib/X11/keysymdef.h	627;"	d
XK_kana_U	xlib/X11/keysymdef.h	610;"	d
XK_kana_WA	xlib/X11/keysymdef.h	654;"	d
XK_kana_WO	xlib/X11/keysymdef.h	596;"	d
XK_kana_YA	xlib/X11/keysymdef.h	646;"	d
XK_kana_YO	xlib/X11/keysymdef.h	648;"	d
XK_kana_YU	xlib/X11/keysymdef.h	647;"	d
XK_kana_a	xlib/X11/keysymdef.h	597;"	d
XK_kana_closingbracket	xlib/X11/keysymdef.h	592;"	d
XK_kana_comma	xlib/X11/keysymdef.h	593;"	d
XK_kana_conjunctive	xlib/X11/keysymdef.h	594;"	d
XK_kana_e	xlib/X11/keysymdef.h	600;"	d
XK_kana_fullstop	xlib/X11/keysymdef.h	590;"	d
XK_kana_i	xlib/X11/keysymdef.h	598;"	d
XK_kana_middledot	xlib/X11/keysymdef.h	595;"	d
XK_kana_o	xlib/X11/keysymdef.h	601;"	d
XK_kana_openingbracket	xlib/X11/keysymdef.h	591;"	d
XK_kana_switch	xlib/X11/keysymdef.h	658;"	d
XK_kana_tsu	xlib/X11/keysymdef.h	605;"	d
XK_kana_tu	xlib/X11/keysymdef.h	606;"	d
XK_kana_u	xlib/X11/keysymdef.h	599;"	d
XK_kana_ya	xlib/X11/keysymdef.h	602;"	d
XK_kana_yo	xlib/X11/keysymdef.h	604;"	d
XK_kana_yu	xlib/X11/keysymdef.h	603;"	d
XK_kappa	xlib/X11/keysymdef.h	546;"	d
XK_kcedilla	xlib/X11/keysymdef.h	577;"	d
XK_kra	xlib/X11/keysymdef.h	545;"	d
XK_l	xlib/X11/keysymdef.h	323;"	d
XK_lacute	xlib/X11/keysymdef.h	491;"	d
XK_latincross	xlib/X11/keysymdef.h	1055;"	d
XK_lcaron	xlib/X11/keysymdef.h	463;"	d
XK_lcedilla	xlib/X11/keysymdef.h	555;"	d
XK_leftanglebracket	xlib/X11/keysymdef.h	1033;"	d
XK_leftarrow	xlib/X11/keysymdef.h	966;"	d
XK_leftcaret	xlib/X11/keysymdef.h	1101;"	d
XK_leftdoublequotemark	xlib/X11/keysymdef.h	1050;"	d
XK_leftmiddlecurlybrace	xlib/X11/keysymdef.h	935;"	d
XK_leftopentriangle	xlib/X11/keysymdef.h	1044;"	d
XK_leftpointer	xlib/X11/keysymdef.h	1072;"	d
XK_leftradical	xlib/X11/keysymdef.h	921;"	d
XK_leftshoe	xlib/X11/keysymdef.h	1117;"	d
XK_leftsinglequotemark	xlib/X11/keysymdef.h	1048;"	d
XK_leftt	xlib/X11/keysymdef.h	997;"	d
XK_lefttack	xlib/X11/keysymdef.h	1118;"	d
XK_less	xlib/X11/keysymdef.h	274;"	d
XK_lessthanequal	xlib/X11/keysymdef.h	944;"	d
XK_lf	xlib/X11/keysymdef.h	984;"	d
XK_logicaland	xlib/X11/keysymdef.h	962;"	d
XK_logicalor	xlib/X11/keysymdef.h	963;"	d
XK_lowleftcorner	xlib/X11/keysymdef.h	990;"	d
XK_lowrightcorner	xlib/X11/keysymdef.h	987;"	d
XK_lstroke	xlib/X11/keysymdef.h	462;"	d
XK_m	xlib/X11/keysymdef.h	324;"	d
XK_macron	xlib/X11/keysymdef.h	358;"	d
XK_malesymbol	xlib/X11/keysymdef.h	1084;"	d
XK_maltesecross	xlib/X11/keysymdef.h	1077;"	d
XK_marker	xlib/X11/keysymdef.h	1036;"	d
XK_masculine	xlib/X11/keysymdef.h	369;"	d
XK_minus	xlib/X11/keysymdef.h	259;"	d
XK_minutes	xlib/X11/keysymdef.h	1053;"	d
XK_mu	xlib/X11/keysymdef.h	364;"	d
XK_multiply	xlib/X11/keysymdef.h	399;"	d
XK_musicalflat	xlib/X11/keysymdef.h	1083;"	d
XK_musicalsharp	xlib/X11/keysymdef.h	1082;"	d
XK_n	xlib/X11/keysymdef.h	325;"	d
XK_nabla	xlib/X11/keysymdef.h	951;"	d
XK_nacute	xlib/X11/keysymdef.h	498;"	d
XK_ncaron	xlib/X11/keysymdef.h	499;"	d
XK_ncedilla	xlib/X11/keysymdef.h	575;"	d
XK_nl	xlib/X11/keysymdef.h	985;"	d
XK_nobreakspace	xlib/X11/keysymdef.h	343;"	d
XK_notequal	xlib/X11/keysymdef.h	945;"	d
XK_notsign	xlib/X11/keysymdef.h	355;"	d
XK_ntilde	xlib/X11/keysymdef.h	426;"	d
XK_numbersign	xlib/X11/keysymdef.h	248;"	d
XK_numerosign	xlib/X11/keysymdef.h	745;"	d
XK_o	xlib/X11/keysymdef.h	326;"	d
XK_oacute	xlib/X11/keysymdef.h	428;"	d
XK_ocircumflex	xlib/X11/keysymdef.h	429;"	d
XK_odiaeresis	xlib/X11/keysymdef.h	431;"	d
XK_odoubleacute	xlib/X11/keysymdef.h	500;"	d
XK_ogonek	xlib/X11/keysymdef.h	461;"	d
XK_ograve	xlib/X11/keysymdef.h	427;"	d
XK_omacron	xlib/X11/keysymdef.h	576;"	d
XK_oneeighth	xlib/X11/keysymdef.h	1037;"	d
XK_onefifth	xlib/X11/keysymdef.h	1025;"	d
XK_onehalf	xlib/X11/keysymdef.h	372;"	d
XK_onequarter	xlib/X11/keysymdef.h	371;"	d
XK_onesixth	xlib/X11/keysymdef.h	1029;"	d
XK_onesuperior	xlib/X11/keysymdef.h	368;"	d
XK_onethird	xlib/X11/keysymdef.h	1023;"	d
XK_openrectbullet	xlib/X11/keysymdef.h	1064;"	d
XK_openstar	xlib/X11/keysymdef.h	1067;"	d
XK_opentribulletdown	xlib/X11/keysymdef.h	1066;"	d
XK_opentribulletup	xlib/X11/keysymdef.h	1065;"	d
XK_ordfeminine	xlib/X11/keysymdef.h	353;"	d
XK_oslash	xlib/X11/keysymdef.h	433;"	d
XK_otilde	xlib/X11/keysymdef.h	430;"	d
XK_overbar	xlib/X11/keysymdef.h	1105;"	d
XK_overline	xlib/X11/keysymdef.h	589;"	d
XK_p	xlib/X11/keysymdef.h	327;"	d
XK_paragraph	xlib/X11/keysymdef.h	365;"	d
XK_parenleft	xlib/X11/keysymdef.h	254;"	d
XK_parenright	xlib/X11/keysymdef.h	255;"	d
XK_partialderivative	xlib/X11/keysymdef.h	964;"	d
XK_percent	xlib/X11/keysymdef.h	250;"	d
XK_period	xlib/X11/keysymdef.h	260;"	d
XK_periodcentered	xlib/X11/keysymdef.h	366;"	d
XK_phonographcopyright	xlib/X11/keysymdef.h	1088;"	d
XK_plus	xlib/X11/keysymdef.h	257;"	d
XK_plusminus	xlib/X11/keysymdef.h	360;"	d
XK_prescription	xlib/X11/keysymdef.h	1052;"	d
XK_prolongedsound	xlib/X11/keysymdef.h	607;"	d
XK_punctspace	xlib/X11/keysymdef.h	1015;"	d
XK_q	xlib/X11/keysymdef.h	328;"	d
XK_quad	xlib/X11/keysymdef.h	1111;"	d
XK_question	xlib/X11/keysymdef.h	277;"	d
XK_questiondown	xlib/X11/keysymdef.h	374;"	d
XK_quotedbl	xlib/X11/keysymdef.h	247;"	d
XK_quoteleft	xlib/X11/keysymdef.h	311;"	d
XK_quoteright	xlib/X11/keysymdef.h	253;"	d
XK_r	xlib/X11/keysymdef.h	329;"	d
XK_racute	xlib/X11/keysymdef.h	489;"	d
XK_radical	xlib/X11/keysymdef.h	957;"	d
XK_rcaron	xlib/X11/keysymdef.h	502;"	d
XK_rcedilla	xlib/X11/keysymdef.h	553;"	d
XK_registered	xlib/X11/keysymdef.h	357;"	d
XK_rightanglebracket	xlib/X11/keysymdef.h	1035;"	d
XK_rightarrow	xlib/X11/keysymdef.h	968;"	d
XK_rightcaret	xlib/X11/keysymdef.h	1102;"	d
XK_rightdoublequotemark	xlib/X11/keysymdef.h	1051;"	d
XK_rightmiddlecurlybrace	xlib/X11/keysymdef.h	936;"	d
XK_rightmiddlesummation	xlib/X11/keysymdef.h	943;"	d
XK_rightopentriangle	xlib/X11/keysymdef.h	1045;"	d
XK_rightpointer	xlib/X11/keysymdef.h	1073;"	d
XK_rightshoe	xlib/X11/keysymdef.h	1116;"	d
XK_rightsinglequotemark	xlib/X11/keysymdef.h	1049;"	d
XK_rightt	xlib/X11/keysymdef.h	998;"	d
XK_righttack	xlib/X11/keysymdef.h	1119;"	d
XK_s	xlib/X11/keysymdef.h	330;"	d
XK_sacute	xlib/X11/keysymdef.h	464;"	d
XK_scaron	xlib/X11/keysymdef.h	466;"	d
XK_scedilla	xlib/X11/keysymdef.h	467;"	d
XK_scircumflex	xlib/X11/keysymdef.h	535;"	d
XK_script_switch	xlib/X11/keysymdef.h	107;"	d
XK_seconds	xlib/X11/keysymdef.h	1054;"	d
XK_section	xlib/X11/keysymdef.h	350;"	d
XK_semicolon	xlib/X11/keysymdef.h	273;"	d
XK_semivoicedsound	xlib/X11/keysymdef.h	657;"	d
XK_seveneighths	xlib/X11/keysymdef.h	1040;"	d
XK_signaturemark	xlib/X11/keysymdef.h	1042;"	d
XK_signifblank	xlib/X11/keysymdef.h	1020;"	d
XK_similarequal	xlib/X11/keysymdef.h	953;"	d
XK_singlelowquotemark	xlib/X11/keysymdef.h	1090;"	d
XK_slash	xlib/X11/keysymdef.h	261;"	d
XK_soliddiamond	xlib/X11/keysymdef.h	979;"	d
XK_space	xlib/X11/keysymdef.h	245;"	d
XK_ssharp	xlib/X11/keysymdef.h	408;"	d
XK_sterling	xlib/X11/keysymdef.h	346;"	d
XK_t	xlib/X11/keysymdef.h	331;"	d
XK_tcaron	xlib/X11/keysymdef.h	468;"	d
XK_tcedilla	xlib/X11/keysymdef.h	504;"	d
XK_telephone	xlib/X11/keysymdef.h	1086;"	d
XK_telephonerecorder	xlib/X11/keysymdef.h	1087;"	d
XK_therefore	xlib/X11/keysymdef.h	948;"	d
XK_thinspace	xlib/X11/keysymdef.h	1016;"	d
XK_thorn	xlib/X11/keysymdef.h	439;"	d
XK_threeeighths	xlib/X11/keysymdef.h	1038;"	d
XK_threefifths	xlib/X11/keysymdef.h	1027;"	d
XK_threequarters	xlib/X11/keysymdef.h	373;"	d
XK_threesuperior	xlib/X11/keysymdef.h	362;"	d
XK_topintegral	xlib/X11/keysymdef.h	924;"	d
XK_topleftparens	xlib/X11/keysymdef.h	931;"	d
XK_topleftradical	xlib/X11/keysymdef.h	922;"	d
XK_topleftsqbracket	xlib/X11/keysymdef.h	927;"	d
XK_topleftsummation	xlib/X11/keysymdef.h	937;"	d
XK_toprightparens	xlib/X11/keysymdef.h	933;"	d
XK_toprightsqbracket	xlib/X11/keysymdef.h	929;"	d
XK_toprightsummation	xlib/X11/keysymdef.h	941;"	d
XK_topt	xlib/X11/keysymdef.h	1000;"	d
XK_topvertsummationconnector	xlib/X11/keysymdef.h	939;"	d
XK_trademark	xlib/X11/keysymdef.h	1041;"	d
XK_trademarkincircle	xlib/X11/keysymdef.h	1043;"	d
XK_tslash	xlib/X11/keysymdef.h	558;"	d
XK_twofifths	xlib/X11/keysymdef.h	1026;"	d
XK_twosuperior	xlib/X11/keysymdef.h	361;"	d
XK_twothirds	xlib/X11/keysymdef.h	1024;"	d
XK_u	xlib/X11/keysymdef.h	332;"	d
XK_uacute	xlib/X11/keysymdef.h	435;"	d
XK_ubreve	xlib/X11/keysymdef.h	534;"	d
XK_ucircumflex	xlib/X11/keysymdef.h	436;"	d
XK_udiaeresis	xlib/X11/keysymdef.h	437;"	d
XK_udoubleacute	xlib/X11/keysymdef.h	501;"	d
XK_ugrave	xlib/X11/keysymdef.h	434;"	d
XK_umacron	xlib/X11/keysymdef.h	580;"	d
XK_underbar	xlib/X11/keysymdef.h	1109;"	d
XK_underscore	xlib/X11/keysymdef.h	309;"	d
XK_union	xlib/X11/keysymdef.h	961;"	d
XK_uogonek	xlib/X11/keysymdef.h	578;"	d
XK_uparrow	xlib/X11/keysymdef.h	967;"	d
XK_upcaret	xlib/X11/keysymdef.h	1104;"	d
XK_upleftcorner	xlib/X11/keysymdef.h	989;"	d
XK_uprightcorner	xlib/X11/keysymdef.h	988;"	d
XK_upshoe	xlib/X11/keysymdef.h	1107;"	d
XK_upstile	xlib/X11/keysymdef.h	1114;"	d
XK_uptack	xlib/X11/keysymdef.h	1112;"	d
XK_uring	xlib/X11/keysymdef.h	503;"	d
XK_utilde	xlib/X11/keysymdef.h	579;"	d
XK_v	xlib/X11/keysymdef.h	333;"	d
XK_variation	xlib/X11/keysymdef.h	949;"	d
XK_vertbar	xlib/X11/keysymdef.h	1001;"	d
XK_vertconnector	xlib/X11/keysymdef.h	926;"	d
XK_voicedsound	xlib/X11/keysymdef.h	656;"	d
XK_vt	xlib/X11/keysymdef.h	986;"	d
XK_w	xlib/X11/keysymdef.h	334;"	d
XK_x	xlib/X11/keysymdef.h	335;"	d
XK_y	xlib/X11/keysymdef.h	336;"	d
XK_yacute	xlib/X11/keysymdef.h	438;"	d
XK_ydiaeresis	xlib/X11/keysymdef.h	440;"	d
XK_yen	xlib/X11/keysymdef.h	348;"	d
XK_z	xlib/X11/keysymdef.h	337;"	d
XK_zabovedot	xlib/X11/keysymdef.h	472;"	d
XK_zacute	xlib/X11/keysymdef.h	469;"	d
XK_zcaron	xlib/X11/keysymdef.h	471;"	d
XKeyEvent	xlib/X11/Xlib.h	/^} XKeyEvent;$/;"	t	typeref:struct:__anon287
XKeyPressedEvent	xlib/X11/Xlib.h	/^typedef XKeyEvent XKeyPressedEvent;$/;"	t
XKeyReleasedEvent	xlib/X11/Xlib.h	/^typedef XKeyEvent XKeyReleasedEvent;$/;"	t
XKeyboardControl	xlib/X11/Xlib.h	/^} XKeyboardControl;$/;"	t	typeref:struct:__anon282
XKeyboardState	xlib/X11/Xlib.h	/^} XKeyboardState;$/;"	t	typeref:struct:__anon283
XKeycodeToKeysym	generic/tkIntXlibDecls.h	1102;"	d
XKeycodeToKeysym	generic/tkIntXlibDecls.h	877;"	d
XKeycodeToKeysym	macosx/tkMacOSXKeyboard.c	/^XKeycodeToKeysym($/;"	f
XKeycodeToKeysym	win/tkWinKey.c	/^XKeycodeToKeysym($/;"	f
XKeymapEvent	xlib/X11/Xlib.h	/^} XKeymapEvent;$/;"	t	typeref:struct:__anon292
XKeysymToKeycode	generic/tkIntXlibDecls.h	1156;"	d
XKeysymToKeycode	generic/tkIntXlibDecls.h	949;"	d
XKeysymToKeycode	macosx/tkMacOSXKeyboard.c	/^XKeysymToKeycode($/;"	f
XKeysymToKeycode	win/tkWinKey.c	/^XKeysymToKeycode($/;"	f
XKeysymToMacKeycode	macosx/tkMacOSXKeyboard.c	/^XKeysymToMacKeycode($/;"	f	file:
XKeysymToString	generic/tkIntXlibDecls.h	1096;"	d
XKeysymToString	generic/tkIntXlibDecls.h	865;"	d
XKeysymToString	macosx/tkMacOSXKeyboard.c	/^XKeysymToString($/;"	f
XKeysymToString	win/tkWinKey.c	/^XKeysymToString($/;"	f
XLFD_ADD_STYLE	generic/tkFont.h	174;"	d
XLFD_AVERAGE_WIDTH	generic/tkFont.h	180;"	d
XLFD_CHARSET	generic/tkFont.h	181;"	d
XLFD_FAMILY	generic/tkFont.h	170;"	d
XLFD_FOUNDRY	generic/tkFont.h	169;"	d
XLFD_NUMFIELDS	generic/tkFont.h	182;"	d
XLFD_PIXEL_SIZE	generic/tkFont.h	175;"	d
XLFD_POINT_SIZE	generic/tkFont.h	176;"	d
XLFD_RESOLUTION_X	generic/tkFont.h	177;"	d
XLFD_RESOLUTION_Y	generic/tkFont.h	178;"	d
XLFD_SETWIDTH	generic/tkFont.h	173;"	d
XLFD_SLANT	generic/tkFont.h	172;"	d
XLFD_SPACING	generic/tkFont.h	179;"	d
XLFD_WEIGHT	generic/tkFont.h	171;"	d
XLIB_DIR	unix/Makefile	/^XLIB_DIR		= $(TOP_DIR)\/xlib$/;"	m
XLeaveWindowEvent	xlib/X11/Xlib.h	/^typedef XCrossingEvent XLeaveWindowEvent;$/;"	t
XListHosts	generic/tkIntXlibDecls.h	875;"	d
XListHosts	win/stubs.c	/^XListHosts($/;"	f
XLocaleNotSupported	xlib/X11/Xutil.h	142;"	d
XLookupBoth	xlib/X11/Xlib.h	1111;"	d
XLookupChars	xlib/X11/Xlib.h	1109;"	d
XLookupColor	generic/tkIntXlibDecls.h	951;"	d
XLookupColor	win/stubs.c	/^XLookupColor($/;"	f
XLookupKeySym	xlib/X11/Xlib.h	1110;"	d
XLookupNone	xlib/X11/Xlib.h	1108;"	d
XMapEvent	xlib/X11/Xlib.h	/^} XMapEvent;$/;"	t	typeref:struct:__anon300
XMapRequestEvent	xlib/X11/Xlib.h	/^} XMapRequestEvent;$/;"	t	typeref:struct:__anon301
XMapWindow	generic/tkIntXlibDecls.h	1158;"	d
XMapWindow	generic/tkIntXlibDecls.h	953;"	d
XMapWindow	macosx/tkMacOSXSubwindows.c	/^XMapWindow($/;"	f
XMapWindow	win/tkWinWindow.c	/^XMapWindow($/;"	f
XMappingEvent	xlib/X11/Xlib.h	/^} XMappingEvent;$/;"	t	typeref:struct:__anon316
XMaxRequestSize	macosx/tkMacOSXDraw.c	/^XMaxRequestSize($/;"	f
XMaxTransChars	xlib/X11/Xlib.h	530;"	d
XModifierKeymap	xlib/X11/Xlib.h	/^} XModifierKeymap;$/;"	t	typeref:struct:__anon285
XMotionEvent	xlib/X11/Xlib.h	/^} XMotionEvent;$/;"	t	typeref:struct:__anon289
XMoveResizeWindow	generic/tkIntXlibDecls.h	1160;"	d
XMoveResizeWindow	generic/tkIntXlibDecls.h	955;"	d
XMoveResizeWindow	macosx/tkMacOSXSubwindows.c	/^XMoveResizeWindow($/;"	f
XMoveResizeWindow	win/tkWinWindow.c	/^XMoveResizeWindow($/;"	f
XMoveWindow	generic/tkIntXlibDecls.h	1162;"	d
XMoveWindow	generic/tkIntXlibDecls.h	957;"	d
XMoveWindow	macosx/tkMacOSXSubwindows.c	/^XMoveWindow($/;"	f
XMoveWindow	win/tkWinWindow.c	/^XMoveWindow($/;"	f
XNArea	xlib/X11/Xlib.h	1095;"	d
XNAreaNeeded	xlib/X11/Xlib.h	1096;"	d
XNBackground	xlib/X11/Xlib.h	1101;"	d
XNBackgroundPixmap	xlib/X11/Xlib.h	1102;"	d
XNClientWindow	xlib/X11/Xlib.h	1079;"	d
XNColormap	xlib/X11/Xlib.h	1098;"	d
XNCursor	xlib/X11/Xlib.h	1105;"	d
XNFilterEvents	xlib/X11/Xlib.h	1085;"	d
XNFocusWindow	xlib/X11/Xlib.h	1081;"	d
XNFontSet	xlib/X11/Xlib.h	1103;"	d
XNForeground	xlib/X11/Xlib.h	1100;"	d
XNGeometryCallback	xlib/X11/Xlib.h	1084;"	d
XNInputStyle	xlib/X11/Xlib.h	1080;"	d
XNLineSpace	xlib/X11/Xlib.h	1104;"	d
XNPreeditAttributes	xlib/X11/Xlib.h	1090;"	d
XNPreeditCaretCallback	xlib/X11/Xlib.h	1089;"	d
XNPreeditDoneCallback	xlib/X11/Xlib.h	1087;"	d
XNPreeditDrawCallback	xlib/X11/Xlib.h	1088;"	d
XNPreeditStartCallback	xlib/X11/Xlib.h	1086;"	d
XNResourceClass	xlib/X11/Xlib.h	1083;"	d
XNResourceName	xlib/X11/Xlib.h	1082;"	d
XNSpotLocation	xlib/X11/Xlib.h	1097;"	d
XNStatusAttributes	xlib/X11/Xlib.h	1094;"	d
XNStatusDoneCallback	xlib/X11/Xlib.h	1092;"	d
XNStatusDrawCallback	xlib/X11/Xlib.h	1093;"	d
XNStatusStartCallback	xlib/X11/Xlib.h	1091;"	d
XNStdColormap	xlib/X11/Xlib.h	1099;"	d
XNVaNestedList	xlib/X11/Xlib.h	1078;"	d
XNegative	xlib/X11/Xutil.h	46;"	d
XNextEvent	generic/tkIntXlibDecls.h	959;"	d
XNextEvent	win/stubs.c	/^XNextEvent($/;"	f
XNoExposeEvent	xlib/X11/Xlib.h	/^} XNoExposeEvent;$/;"	t	typeref:struct:__anon295
XNoMemory	xlib/X11/Xutil.h	141;"	d
XNoOp	generic/tkIntXlibDecls.h	1076;"	d
XNoOp	macosx/tkMacOSXPort.h	117;"	d
XNoOp	win/stubs.c	/^XNoOp($/;"	f
XPAD	generic/tkEntry.c	27;"	d	file:
XPThemeData	win/ttkWinXPTheme.c	/^} XPThemeData;$/;"	t	typeref:struct:__anon239	file:
XPThemeDeleteProc	win/ttkWinXPTheme.c	/^XPThemeDeleteProc(void *clientData)$/;"	f	file:
XPThemeEnabled	win/ttkWinXPTheme.c	/^XPThemeEnabled(Ttk_Theme theme, void *clientData)$/;"	f	file:
XPThemeProcs	win/ttkWinXPTheme.c	/^} XPThemeProcs;$/;"	t	typeref:struct:__anon238	file:
XParseColor	generic/tkColor.c	837;"	d	file:
XParseColor	generic/tkIntXlibDecls.h	1018;"	d
XParseColor	generic/tkIntXlibDecls.h	1202;"	d
XParseColor	generic/tkStubInit.c	75;"	d	file:
XParseColor	xlib/xcolors.c	/^XParseColor($/;"	f
XPixmapFormatValues	xlib/X11/Xlib.h	/^} XPixmapFormatValues;$/;"	t	typeref:struct:__anon267
XPoint	xlib/X11/Xlib.h	/^} XPoint;$/;"	t	typeref:struct:__anon279
XPointer	xlib/X11/Xlib.h	/^typedef char *XPointer;$/;"	t
XPointerMovedEvent	xlib/X11/Xlib.h	/^typedef XMotionEvent XPointerMovedEvent;$/;"	t
XPropertyEvent	xlib/X11/Xlib.h	/^} XPropertyEvent;$/;"	t	typeref:struct:__anon309
XPutBackEvent	generic/tkIntXlibDecls.h	961;"	d
XPutBackEvent	win/stubs.c	/^XPutBackEvent($/;"	f
XPutPixel	xlib/X11/Xutil.h	171;"	d
XQueryColor	generic/tkIntXlibDecls.h	1262;"	d
XQueryColor	macosx/tkMacOSXXStubs.c	/^XQueryColor($/;"	f
XQueryColors	generic/tkIntXlibDecls.h	1264;"	d
XQueryColors	generic/tkIntXlibDecls.h	963;"	d
XQueryColors	macosx/tkMacOSXXStubs.c	/^XQueryColors($/;"	f
XQueryColors	win/stubs.c	/^XQueryColors($/;"	f
XQueryPointer	generic/tkIntXlibDecls.h	1164;"	d
XQueryPointer	generic/tkIntXlibDecls.h	965;"	d
XQueryPointer	macosx/tkMacOSXMouseEvent.c	/^XQueryPointer($/;"	f
XQueryPointer	win/tkWinPointer.c	/^XQueryPointer($/;"	f
XQueryTree	generic/tkIntXlibDecls.h	1266;"	d
XQueryTree	generic/tkIntXlibDecls.h	967;"	d
XQueryTree	macosx/tkMacOSXXStubs.c	/^XQueryTree(display, w, root_return, parent_return, children_return,$/;"	f
XQueryTree	win/stubs.c	/^XQueryTree($/;"	f
XRaiseWindow	generic/tkIntXlibDecls.h	1166;"	d
XRaiseWindow	generic/tkIntXlibDecls.h	969;"	d
XRaiseWindow	macosx/tkMacOSXSubwindows.c	/^XRaiseWindow($/;"	f
XRaiseWindow	win/tkWinWindow.c	/^XRaiseWindow($/;"	f
XRectangle	xlib/X11/Xlib.h	/^} XRectangle;$/;"	t	typeref:struct:__anon280
XRefreshKeyboardMapping	generic/tkIntXlibDecls.h	1168;"	d
XRefreshKeyboardMapping	generic/tkIntXlibDecls.h	971;"	d
XRefreshKeyboardMapping	macosx/tkMacOSXXStubs.c	/^XRefreshKeyboardMapping($/;"	f
XRefreshKeyboardMapping	win/stubs.c	/^XRefreshKeyboardMapping($/;"	f
XReparentEvent	xlib/X11/Xlib.h	/^} XReparentEvent;$/;"	t	typeref:struct:__anon302
XResizeRequestEvent	xlib/X11/Xlib.h	/^} XResizeRequestEvent;$/;"	t	typeref:struct:__anon305
XResizeWindow	generic/tkIntXlibDecls.h	1170;"	d
XResizeWindow	generic/tkIntXlibDecls.h	973;"	d
XResizeWindow	macosx/tkMacOSXSubwindows.c	/^XResizeWindow($/;"	f
XResizeWindow	win/tkWinWindow.c	/^XResizeWindow($/;"	f
XRootWindow	generic/tkIntXlibDecls.h	1106;"	d
XRootWindow	generic/tkIntXlibDecls.h	881;"	d
XRootWindow	macosx/tkMacOSXXStubs.c	/^XRootWindow($/;"	f
XRootWindow	win/stubs.c	/^XRootWindow($/;"	f
XScreenSaverQueryInfo	unix/configure	/^XScreenSaverQueryInfo ();$/;"	f
XSegment	xlib/X11/Xlib.h	/^} XSegment;$/;"	t	typeref:struct:__anon278
XSelectInput	generic/tkIntXlibDecls.h	1172;"	d
XSelectInput	generic/tkIntXlibDecls.h	975;"	d
XSelectInput	macosx/tkMacOSXXStubs.c	/^XSelectInput($/;"	f
XSelectInput	win/stubs.c	/^XSelectInput($/;"	f
XSelectionClearEvent	xlib/X11/Xlib.h	/^} XSelectionClearEvent;$/;"	t	typeref:struct:__anon310
XSelectionEvent	xlib/X11/Xlib.h	/^} XSelectionEvent;$/;"	t	typeref:struct:__anon312
XSelectionRequestEvent	xlib/X11/Xlib.h	/^} XSelectionRequestEvent;$/;"	t	typeref:struct:__anon311
XSendEvent	generic/tkIntXlibDecls.h	1174;"	d
XSendEvent	generic/tkIntXlibDecls.h	977;"	d
XSendEvent	macosx/tkMacOSXXStubs.c	/^XSendEvent($/;"	f
XSendEvent	win/stubs.c	/^XSendEvent($/;"	f
XSetArcMode	generic/tkIntXlibDecls.h	1040;"	d
XSetArcMode	generic/tkIntXlibDecls.h	1224;"	d
XSetArcMode	xlib/xgc.c	/^XSetArcMode($/;"	f
XSetBackground	generic/tkIntXlibDecls.h	1026;"	d
XSetBackground	generic/tkIntXlibDecls.h	1210;"	d
XSetBackground	xlib/xgc.c	/^XSetBackground($/;"	f
XSetClipMask	generic/tkIntXlibDecls.h	1030;"	d
XSetClipMask	generic/tkIntXlibDecls.h	1214;"	d
XSetClipMask	xlib/xgc.c	/^XSetClipMask($/;"	f
XSetClipOrigin	generic/tkIntXlibDecls.h	1032;"	d
XSetClipOrigin	generic/tkIntXlibDecls.h	1216;"	d
XSetClipOrigin	xlib/xgc.c	/^XSetClipOrigin($/;"	f
XSetCommand	generic/tkIntXlibDecls.h	979;"	d
XSetCommand	win/stubs.c	/^XSetCommand($/;"	f
XSetDashes	generic/tkIntXlibDecls.h	1086;"	d
XSetDashes	generic/tkIntXlibDecls.h	855;"	d
XSetDashes	xlib/xgc.c	/^XSetDashes($/;"	f
XSetErrorHandler	generic/tkIntXlibDecls.h	1108;"	d
XSetErrorHandler	generic/tkIntXlibDecls.h	883;"	d
XSetErrorHandler	macosx/tkMacOSXXStubs.c	/^XSetErrorHandler($/;"	f
XSetErrorHandler	win/stubs.c	/^XSetErrorHandler($/;"	f
XSetFillRule	generic/tkIntXlibDecls.h	1044;"	d
XSetFillRule	generic/tkIntXlibDecls.h	1228;"	d
XSetFillRule	xlib/xgc.c	/^XSetFillRule($/;"	f
XSetFillStyle	generic/tkIntXlibDecls.h	1046;"	d
XSetFillStyle	generic/tkIntXlibDecls.h	1230;"	d
XSetFillStyle	xlib/xgc.c	/^XSetFillStyle($/;"	f
XSetFont	generic/tkIntXlibDecls.h	1038;"	d
XSetFont	generic/tkIntXlibDecls.h	1222;"	d
XSetFont	xlib/xgc.c	/^XSetFont($/;"	f
XSetForeground	generic/tkIntXlibDecls.h	1028;"	d
XSetForeground	generic/tkIntXlibDecls.h	1212;"	d
XSetForeground	xlib/xgc.c	/^XSetForeground($/;"	f
XSetFunction	generic/tkIntXlibDecls.h	1048;"	d
XSetFunction	generic/tkIntXlibDecls.h	1232;"	d
XSetFunction	xlib/xgc.c	/^XSetFunction($/;"	f
XSetIconName	generic/tkIntXlibDecls.h	1176;"	d
XSetIconName	generic/tkIntXlibDecls.h	981;"	d
XSetIconName	macosx/tkMacOSXXStubs.c	/^XSetIconName($/;"	f
XSetIconName	win/stubs.c	/^XSetIconName($/;"	f
XSetInputFocus	generic/tkIntXlibDecls.h	1178;"	d
XSetInputFocus	generic/tkIntXlibDecls.h	983;"	d
XSetInputFocus	macosx/tkMacOSXWm.c	/^XSetInputFocus($/;"	f
XSetInputFocus	win/tkWinPointer.c	/^XSetInputFocus($/;"	f
XSetLineAttributes	generic/tkIntXlibDecls.h	1050;"	d
XSetLineAttributes	generic/tkIntXlibDecls.h	1234;"	d
XSetLineAttributes	xlib/xgc.c	/^XSetLineAttributes($/;"	f
XSetSelectionOwner	generic/tkIntXlibDecls.h	1180;"	d
XSetSelectionOwner	generic/tkIntXlibDecls.h	985;"	d
XSetSelectionOwner	macosx/tkMacOSXClipboard.c	/^XSetSelectionOwner($/;"	f
XSetSelectionOwner	win/tkWinClipboard.c	/^XSetSelectionOwner($/;"	f
XSetStipple	generic/tkIntXlibDecls.h	1042;"	d
XSetStipple	generic/tkIntXlibDecls.h	1226;"	d
XSetStipple	xlib/xgc.c	/^XSetStipple($/;"	f
XSetTSOrigin	generic/tkIntXlibDecls.h	1034;"	d
XSetTSOrigin	generic/tkIntXlibDecls.h	1218;"	d
XSetTSOrigin	xlib/xgc.c	/^XSetTSOrigin($/;"	f
XSetWMClientMachine	generic/tkIntXlibDecls.h	1058;"	d
XSetWMClientMachine	generic/tkIntXlibDecls.h	1242;"	d
XSetWMClientMachine	macosx/tkMacOSXXStubs.c	/^XSetWMClientMachine($/;"	f
XSetWMClientMachine	win/stubs.c	/^XSetWMClientMachine($/;"	f
XSetWindowAttributes	xlib/X11/Xlib.h	/^} XSetWindowAttributes;$/;"	t	typeref:struct:__anon273
XSetWindowBackground	generic/tkIntXlibDecls.h	1182;"	d
XSetWindowBackground	generic/tkIntXlibDecls.h	987;"	d
XSetWindowBackground	macosx/tkMacOSXXStubs.c	/^XSetWindowBackground($/;"	f
XSetWindowBackground	win/stubs.c	/^XSetWindowBackground($/;"	f
XSetWindowBackgroundPixmap	generic/tkIntXlibDecls.h	1184;"	d
XSetWindowBackgroundPixmap	generic/tkIntXlibDecls.h	989;"	d
XSetWindowBackgroundPixmap	macosx/tkMacOSXXStubs.c	/^XSetWindowBackgroundPixmap($/;"	f
XSetWindowBackgroundPixmap	win/stubs.c	/^XSetWindowBackgroundPixmap($/;"	f
XSetWindowBorder	generic/tkIntXlibDecls.h	1186;"	d
XSetWindowBorder	generic/tkIntXlibDecls.h	991;"	d
XSetWindowBorder	macosx/tkMacOSXXStubs.c	/^XSetWindowBorder($/;"	f
XSetWindowBorder	win/stubs.c	/^XSetWindowBorder($/;"	f
XSetWindowBorderPixmap	generic/tkIntXlibDecls.h	1188;"	d
XSetWindowBorderPixmap	generic/tkIntXlibDecls.h	993;"	d
XSetWindowBorderPixmap	macosx/tkMacOSXXStubs.c	/^XSetWindowBorderPixmap($/;"	f
XSetWindowBorderPixmap	win/stubs.c	/^XSetWindowBorderPixmap($/;"	f
XSetWindowBorderWidth	generic/tkIntXlibDecls.h	1190;"	d
XSetWindowBorderWidth	generic/tkIntXlibDecls.h	995;"	d
XSetWindowBorderWidth	macosx/tkMacOSXXStubs.c	/^XSetWindowBorderWidth($/;"	f
XSetWindowBorderWidth	win/stubs.c	/^XSetWindowBorderWidth($/;"	f
XSetWindowColormap	generic/tkIntXlibDecls.h	1192;"	d
XSetWindowColormap	generic/tkIntXlibDecls.h	997;"	d
XSetWindowColormap	macosx/tkMacOSXXStubs.c	/^XSetWindowColormap($/;"	f
XSetWindowColormap	win/stubs.c	/^XSetWindowColormap($/;"	f
XSizeHints	xlib/X11/Xutil.h	/^} XSizeHints;$/;"	t	typeref:struct:__anon257
XStandardColormap	xlib/X11/Xutil.h	/^} XStandardColormap;$/;"	t	typeref:struct:__anon265
XStdICCTextStyle	xlib/X11/Xutil.h	/^    XStdICCTextStyle		\/* STRING, else COMPOUND_TEXT *\/$/;"	e	enum:__anon261
XStringListToTextProperty	generic/tkIntXlibDecls.h	1060;"	d
XStringListToTextProperty	generic/tkIntXlibDecls.h	1244;"	d
XStringListToTextProperty	macosx/tkMacOSXXStubs.c	/^XStringListToTextProperty($/;"	f
XStringListToTextProperty	win/stubs.c	/^XStringListToTextProperty($/;"	f
XStringStyle	xlib/X11/Xutil.h	/^    XStringStyle,		\/* STRING *\/$/;"	e	enum:__anon261
XStringToContext	xlib/X11/Xutil.h	298;"	d
XStringToKeysym	generic/tkIntXlibDecls.h	1104;"	d
XStringToKeysym	generic/tkIntXlibDecls.h	879;"	d
XStringToKeysym	macosx/tkMacOSXKeyboard.c	/^XStringToKeysym($/;"	f
XStringToKeysym	win/tkWinKey.c	/^XStringToKeysym($/;"	f
XSubImage	xlib/X11/Xutil.h	173;"	d
XSync	generic/tkIntXlibDecls.h	1080;"	d
XSync	generic/tkIntXlibDecls.h	1268;"	d
XSync	macosx/tkMacOSXXStubs.c	/^XSync($/;"	f
XSync	win/stubs.c	/^XSync($/;"	f
XSynchronize	generic/tkIntXlibDecls.h	1078;"	d
XSynchronize	macosx/tkMacOSXPort.h	119;"	d
XSynchronize	win/stubs.c	/^XSynchronize($/;"	f
XTextItem	xlib/X11/Xlib.h	/^} XTextItem;$/;"	t	typeref:struct:__anon322
XTextItem16	xlib/X11/Xlib.h	/^} XTextItem16;$/;"	t	typeref:struct:__anon324
XTextProperty	xlib/X11/Xutil.h	/^} XTextProperty;$/;"	t	typeref:struct:__anon260
XTextStyle	xlib/X11/Xutil.h	/^    XTextStyle,			\/* text in owner's encoding (current locale)*\/$/;"	e	enum:__anon261
XTimeCoord	xlib/X11/Xlib.h	/^} XTimeCoord;$/;"	t	typeref:struct:__anon284
XTranslateCoordinates	generic/tkIntXlibDecls.h	999;"	d
XTranslateCoordinates	win/stubs.c	/^XTranslateCoordinates($/;"	f
XUngrabKeyboard	generic/tkIntXlibDecls.h	1001;"	d
XUngrabKeyboard	generic/tkIntXlibDecls.h	1194;"	d
XUngrabKeyboard	macosx/tkMacOSXKeyEvent.c	/^XUngrabKeyboard($/;"	f
XUngrabKeyboard	win/tkWinPointer.c	/^XUngrabKeyboard($/;"	f
XUngrabPointer	generic/tkIntXlibDecls.h	1003;"	d
XUngrabPointer	generic/tkIntXlibDecls.h	1196;"	d
XUngrabPointer	generic/tkPointer.c	/^XUngrabPointer($/;"	f
XUngrabServer	generic/tkIntXlibDecls.h	1072;"	d
XUngrabServer	macosx/tkMacOSXPort.h	118;"	d
XUngrabServer	win/stubs.c	/^XUngrabServer($/;"	f
XUniqueContext	xlib/X11/Xutil.h	297;"	d
XUnmapEvent	xlib/X11/Xlib.h	/^} XUnmapEvent;$/;"	t	typeref:struct:__anon299
XUnmapWindow	generic/tkIntXlibDecls.h	1005;"	d
XUnmapWindow	generic/tkIntXlibDecls.h	1198;"	d
XUnmapWindow	macosx/tkMacOSXSubwindows.c	/^XUnmapWindow($/;"	f
XUnmapWindow	win/tkWinWindow.c	/^XUnmapWindow($/;"	f
XVaNestedList	xlib/X11/Xlib.h	/^typedef XPointer XVaNestedList;$/;"	t
XVaNestedList	xlib/X11/Xlib.h	/^typedef void *XVaNestedList;$/;"	t
XValue	xlib/X11/Xutil.h	41;"	d
XVirtualEvent	generic/tk.h	/^} XVirtualEvent;$/;"	t	typeref:struct:__anon9
XVisibilityEvent	xlib/X11/Xlib.h	/^} XVisibilityEvent;$/;"	t	typeref:struct:__anon296
XVisualIDFromVisual	generic/tkIntXlibDecls.h	1082;"	d
XVisualIDFromVisual	macosx/tkMacOSXPort.h	120;"	d
XVisualIDFromVisual	win/stubs.c	/^XVisualIDFromVisual($/;"	f
XVisualInfo	xlib/X11/Xutil.h	/^} XVisualInfo;$/;"	t	typeref:struct:__anon264
XWMHints	xlib/X11/Xutil.h	/^} XWMHints;$/;"	t	typeref:struct:__anon259
XWarpPointer	generic/tkIntXlibDecls.h	1064;"	d
XWarpPointer	generic/tkIntXlibDecls.h	1260;"	d
XWarpPointer	macosx/tkMacOSXXStubs.c	/^XWarpPointer($/;"	f
XWarpPointer	win/tkWinPointer.c	/^XWarpPointer($/;"	f
XWindowAttributes	xlib/X11/Xlib.h	/^} XWindowAttributes;$/;"	t	typeref:struct:__anon274
XWindowChanges	xlib/X11/Xlib.h	/^} XWindowChanges;$/;"	t	typeref:struct:__anon276
XWindowEvent	generic/tkIntXlibDecls.h	1007;"	d
XWindowEvent	win/stubs.c	/^XWindowEvent($/;"	f
XWithdrawWindow	generic/tkIntXlibDecls.h	887;"	d
XWithdrawWindow	win/stubs.c	/^XWithdrawWindow($/;"	f
XYBitmap	xlib/X11/X.h	561;"	d
XYPixmap	xlib/X11/X.h	562;"	d
X_H	xlib/X11/X.h	8;"	d
X_PROTOCOL	xlib/X11/X.h	33;"	d
X_PROTOCOL_REVISION	xlib/X11/X.h	34;"	d
X_WCHAR	xlib/X11/Xlib.h	44;"	d
XftFontOpen	unix/configure	/^XftFontOpen ();$/;"	f
XkbKeycodeToKeysym	unix/configure	/^XkbKeycodeToKeysym ();$/;"	f
XkbKeycodeToKeysym	unix/tkUnixKey.c	23;"	d	file:
XkbOpenDisplay	unix/tkUnixEvent.c	18;"	d	file:
XlibSpecificationRelease	xlib/X11/Xlib.h	28;"	d
XmbLookupString	generic/tkIntXlibDecls.h	1013;"	d
XmbLookupString	win/stubs.c	/^XmbLookupString($/;"	f
XmbTextItem	xlib/X11/Xlib.h	/^} XmbTextItem;$/;"	t	typeref:struct:__anon327
XrmInitialize	macosx/configure	/^XrmInitialize ()$/;"	f
XrmInitialize	macosx/configure	/^XrmInitialize();$/;"	f
XrmInitialize	unix/configure	/^XrmInitialize();$/;"	f
XwcTextItem	xlib/X11/Xlib.h	/^} XwcTextItem;$/;"	t	typeref:struct:__anon328
YExpansion	generic/tkPack.c	/^YExpansion($/;"	f	file:
YNegative	xlib/X11/Xutil.h	47;"	d
YPAD	generic/tkEntry.c	28;"	d	file:
YScrollByLines	generic/tkTextDisp.c	/^YScrollByLines($/;"	f	file:
YScrollByPixels	generic/tkTextDisp.c	/^YScrollByPixels($/;"	f	file:
YSorted	xlib/X11/X.h	496;"	d
YValue	xlib/X11/Xutil.h	42;"	d
YXBanded	xlib/X11/X.h	498;"	d
YXSorted	xlib/X11/X.h	497;"	d
ZERO_OK	generic/tkEntry.c	385;"	d	file:
ZIPNAME	unix/Makefile	/^ZIPNAME	 = tk${MAJOR_VERSION}${MINOR_VERSION}${PATCH_LEVEL}-src.zip$/;"	m
ZPixmap	xlib/X11/X.h	563;"	d
ZoomState	xlib/X11/Xutil.h	125;"	d
_CRT_SECURE_NO_DEPRECATE	win/nmakehlp.c	15;"	d	file:
_CRT_glob	win/winMain.c	/^int _CRT_glob = 0;$/;"	v
_DEFAULT	generic/default.h	15;"	d
_FILEOPENDIALOGOPTIONS	win/tkWinDialog.c	/^enum _FILEOPENDIALOGOPTIONS {$/;"	g	file:
_FIXEDSIZE	win/ttkWinTheme.c	105;"	d	file:
_HALFMETRIC	win/ttkWinTheme.c	106;"	d	file:
_NET_WM_STATE_ADD	unix/tkUnixWm.c	5001;"	d	file:
_NET_WM_STATE_REMOVE	unix/tkUnixWm.c	5000;"	d	file:
_NET_WM_STATE_TOGGLE	unix/tkUnixWm.c	5002;"	d	file:
_ROTFLAGS_DEFINED	win/tkWinSend.c	22;"	d	file:
_RoundPoly2	library/demos/goldberg.tcl	/^proc _RoundPoly2 {x0 y0 x1 y1 x2 y2 radius} {$/;"	p
_STDLIB	compat/stdlib.h	18;"	d
_TCHAR_DEFINED	win/tkWinPort.h	59;"	d
_TK	generic/tk.h	17;"	d
_TK3D	generic/tk3d.h	13;"	d
_TKBUTTON	generic/tkButton.h	14;"	d
_TKCANVAS	generic/tkCanvas.h	15;"	d
_TKCOLOR	generic/tkColor.h	13;"	d
_TKDECLS	generic/tkDecls.h	13;"	d
_TKENTRY	generic/tkEntry.h	13;"	d
_TKFONT	generic/tkFont.h	15;"	d
_TKINT	generic/tkInt.h	16;"	d
_TKINTDECLS	generic/tkIntDecls.h	16;"	d
_TKINTPLATDECLS	generic/tkIntPlatDecls.h	14;"	d
_TKINTXLIBDECLS	generic/tkIntXlibDecls.h	14;"	d
_TKMAC	macosx/tkMacOSX.h	15;"	d
_TKMACDEBUG	macosx/tkMacOSXDebug.h	15;"	d
_TKMACDEFAULT	macosx/tkMacOSXDefault.h	17;"	d
_TKMACEVENT	macosx/tkMacOSXEvent.h	15;"	d
_TKMACINT	macosx/tkMacOSXInt.h	15;"	d
_TKMACPORT	macosx/tkMacOSXPort.h	17;"	d
_TKMACPRIV	macosx/tkMacOSXPrivate.h	16;"	d
_TKMACWM	macosx/tkMacOSXWm.h	14;"	d
_TKMENU	generic/tkMenu.h	14;"	d
_TKMENUBUTTON	generic/tkMenubutton.h	14;"	d
_TKPLATDECLS	generic/tkPlatDecls.h	13;"	d
_TKPORT	generic/tkPort.h	15;"	d
_TKSCALE	generic/tkScale.h	15;"	d
_TKSCROLLBAR	generic/tkScrollbar.h	14;"	d
_TKSELECT	generic/tkSelect.h	14;"	d
_TKTEXT	generic/tkText.h	14;"	d
_TKUNDO	generic/tkUndo.h	13;"	d
_TKUNIXDEFAULT	unix/tkUnixDefault.h	15;"	d
_TKUNIXINT	unix/tkUnixInt.h	14;"	d
_TKWIN	win/tkWin.h	14;"	d
_TKWINDEFAULT	win/tkWinDefault.h	14;"	d
_TKWININT	win/tkWinInt.h	15;"	d
_TK_ALLOW_DECREASING_TABS	generic/tkText.c	33;"	d	file:
_TK_FILE_FILTER	generic/tkFileFilter.h	14;"	d
_TTKDECLS	generic/ttk/ttkDecls.h	6;"	d
_TTKMANAGER	generic/ttk/ttkManager.h	8;"	d
_TTKTHEME	generic/ttk/ttkTheme.h	8;"	d
_TTKTHEMEINT	generic/ttk/ttkThemeInt.h	8;"	d
_TTKWIDGET	generic/ttk/ttkWidget.h	7;"	d
_TTK_CHILDREN	generic/ttk/ttkTheme.h	184;"	d
_TTK_LAYOUT	generic/ttk/ttkTheme.h	186;"	d
_TTK_LAYOUT_END	generic/ttk/ttkTheme.h	185;"	d
_TTK_MASK_PACK	generic/ttk/ttkTheme.h	189;"	d
_TTK_MASK_STICK	generic/ttk/ttkTheme.h	188;"	d
_UNICODE	generic/tkMain.c	25;"	d	file:
_UNICODE	generic/tkMain.c	28;"	d	file:
_UNISTD	compat/unistd.h	15;"	d
_UNIXPORT	unix/tkUnixPort.h	16;"	d
_WIN32_IE	win/tkWinX.c	23;"	d	file:
_WIN32_WINNT	win/tkWin.h	28;"	d
_WINPORT	win/tkWinPort.h	15;"	d
_WMATT_LAST_ATTRIBUTE	macosx/tkMacOSXWm.c	/^    _WMATT_LAST_ATTRIBUTE$/;"	e	enum:__anon206	file:
_WMATT_LAST_ATTRIBUTE	unix/tkUnixWm.c	/^    WMATT_TYPE, _WMATT_LAST_ATTRIBUTE$/;"	e	enum:__anon215	file:
_XBYTES	xlib/xbytes.h	13;"	d
_XComposeStatus	xlib/X11/Xutil.h	/^typedef struct _XComposeStatus {$/;"	s
_XDisplay	xlib/X11/Xlib.h	/^typedef struct _XDisplay {$/;"	s
_XEVENT_	xlib/X11/Xlib.h	526;"	d
_XEvent	xlib/X11/Xlib.h	/^typedef union _XEvent {$/;"	u
_XExtData	xlib/X11/Xlib.h	/^typedef struct _XExtData {$/;"	s
_XFUNCPROTOBEGIN	xlib/X11/Xfuncproto.h	51;"	d
_XFUNCPROTOBEGIN	xlib/X11/Xfuncproto.h	56;"	d
_XFUNCPROTOEND	xlib/X11/Xfuncproto.h	52;"	d
_XFUNCPROTOEND	xlib/X11/Xfuncproto.h	57;"	d
_XFUNCPROTO_H_	xlib/X11/Xfuncproto.h	20;"	d
_XIMPreeditCaretCallbackStruct	xlib/X11/Xlib.h	/^typedef struct _XIMPreeditCaretCallbackStruct {$/;"	s
_XIMPreeditDrawCallbackStruct	xlib/X11/Xlib.h	/^typedef struct _XIMPreeditDrawCallbackStruct {$/;"	s
_XIMStatusDrawCallbackStruct	xlib/X11/Xlib.h	/^typedef struct _XIMStatusDrawCallbackStruct {$/;"	s
_XIMText	xlib/X11/Xlib.h	/^typedef struct _XIMText {$/;"	s
_XImage	xlib/X11/Xlib.h	/^typedef struct _XImage {$/;"	s
_XInitImageFuncPtrs	generic/tkIntXlibDecls.h	/^    int (*_XInitImageFuncPtrs) (XImage *image); \/* 75 *\/$/;"	m	struct:TkIntXlibStubs
_XInitImageFuncPtrs	generic/tkIntXlibDecls.h	/^    int (*_XInitImageFuncPtrs) (XImage *image); \/* 99 *\/$/;"	m	struct:TkIntXlibStubs
_XInitImageFuncPtrs	generic/tkIntXlibDecls.h	1052;"	d
_XInitImageFuncPtrs	generic/tkIntXlibDecls.h	1236;"	d
_XInitImageFuncPtrs	macosx/tkMacOSXXStubs.c	/^_XInitImageFuncPtrs($/;"	f
_XInitImageFuncPtrs	win/stubs.c	/^_XInitImageFuncPtrs($/;"	f
_XLIB_H_	xlib/X11/Xlib.h	26;"	d
_XUTIL_H_	xlib/X11/Xutil.h	28;"	d
_Xconst	xlib/X11/Xfuncproto.h	37;"	d
__IShellItemArray_INTERFACE_DEFINED__	win/tkWinDialog.c	246;"	d	file:
__IShellItem_INTERFACE_DEFINED__	win/tkWinDialog.c	212;"	d	file:
__MIDL_IShellItem_0001	win/tkWinDialog.c	/^typedef enum __MIDL_IShellItem_0001 {$/;"	g	file:
__UNIX__	unix/tkUnixPort.h	18;"	d
__pthread_mutex_init	unix/configure	/^__pthread_mutex_init ();$/;"	f
_ascii	unix/configure	/^ _ascii (); _ebcdic ();$/;"	f
_tcscmp	generic/tkMain.c	72;"	d	file:
_tcslen	generic/tkMain.c	73;"	d	file:
_tcsncmp	generic/tkMain.c	74;"	d	file:
_tkWinSendCom_h_INCLUDE	win/tkWinSendCom.h	15;"	d
abortPtr	generic/tkGrid.c	/^    int *abortPtr;		\/* If non-NULL, it means that there is a$/;"	m	struct:Gridder	file:
abortPtr	generic/tkPack.c	/^    int *abortPtr;		\/* If non-NULL, it means that there is a$/;"	m	struct:Packer	file:
abortPtr	generic/tkPlace.c	/^    int *abortPtr;		\/* If non-NULL, it means that there is a nested$/;"	m	struct:Master	file:
abortSelections	generic/tkText.h	/^    int abortSelections;	\/* Set to 1 whenever the text is modified in a$/;"	m	struct:TkText
above	xlib/X11/Xlib.h	/^	Window above;$/;"	m	struct:__anon303
above	xlib/X11/Xlib.h	/^	Window above;$/;"	m	struct:__anon306
aboveVisRgn	macosx/tkMacOSXInt.h	/^    HIShapeRef aboveVisRgn;	\/* Visible region of window & its children *\/$/;"	m	struct:TkWindowPrivate
ac_fn_c_check_func	macosx/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	macosx/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	macosx/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	macosx/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	macosx/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	macosx/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	macosx/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	macosx/configure	/^ac_fn_c_try_run ()$/;"	f
accelLength	generic/tkMenu.h	/^    int accelLength;		\/* Number of non-NULL characters in$/;"	m	struct:TkMenuEntry
accelPtr	generic/tkMenu.h	/^    Tcl_Obj *accelPtr;		\/* Accelerator string displayed at right of$/;"	m	struct:TkMenuEntry
accumulatedByteCount	generic/tkImgGIF.c	/^    int accumulatedByteCount;$/;"	m	struct:__anon130	file:
action	generic/tkUndo.h	/^    Tcl_Obj *action;		\/* Command to apply the action that was$/;"	m	struct:TkUndoSubAtom
action	macosx/GNUmakefile	/^clean-%:		action := clean-$/;"	m
action	macosx/GNUmakefile	/^distclean-%:		action := distclean-$/;"	m
action	macosx/GNUmakefile	/^install-%:		action := install-$/;"	m
action	macosx/GNUmakefile	/^test-%:			action := test-$/;"	m
action	macosx/tkMacOSXMenus.c	/^+ (id) itemWithTitle: (NSString *) title action: (SEL) action$/;"	f
active	generic/tkListbox.c	/^    int active;			\/* Index of "active" element (the one that has$/;"	m	struct:__anon149	file:
active	generic/tkMenu.h	/^    int active;			\/* Index of active entry. -1 means nothing$/;"	m	struct:TkMenu
activeBgColor	generic/tkCanvBmap.c	/^    XColor *activeBgColor;	\/* Background color to use for bitmap. *\/$/;"	m	struct:BitmapItem	file:
activeBitmap	generic/tkCanvBmap.c	/^    Pixmap activeBitmap;	\/* Bitmap to display in window. *\/$/;"	m	struct:BitmapItem	file:
activeBorder	generic/tkButton.h	/^    Tk_3DBorder activeBorder;	\/* Value of -activebackground option: this is$/;"	m	struct:__anon178
activeBorder	generic/tkEntry.h	/^    Tk_3DBorder activeBorder;	\/* Used for drawing border around active$/;"	m	struct:__anon184
activeBorder	generic/tkMenubutton.h	/^    Tk_3DBorder activeBorder;	\/* Structure used to draw 3-D border and$/;"	m	struct:__anon137
activeBorder	generic/tkScale.h	/^    Tk_3DBorder activeBorder;	\/* For drawing the slider when active. *\/$/;"	m	struct:TkScale
activeBorder	generic/tkScrollbar.h	/^    Tk_3DBorder activeBorder;	\/* For drawing backgrounds when active (i.e.$/;"	m	struct:TkScrollbar
activeBorderPtr	generic/tkMenu.h	/^    Tcl_Obj *activeBorderPtr;	\/* Used to draw background and border for$/;"	m	struct:TkMenu
activeBorderPtr	generic/tkMenu.h	/^    Tcl_Obj *activeBorderPtr;	\/* Used to draw background and border when$/;"	m	struct:TkMenuEntry
activeBorderWidthPtr	generic/tkMenu.h	/^    Tcl_Obj *activeBorderWidthPtr;$/;"	m	struct:TkMenu
activeColor	generic/tk.h	/^    XColor *activeColor;	\/* Outline color if state is active. *\/$/;"	m	struct:Tk_Outline
activeColor	generic/tkCanvText.c	/^    XColor *activeColor;	\/* Color for text. *\/$/;"	m	struct:TextItem	file:
activeDash	generic/tk.h	/^    Tk_Dash activeDash;		\/* Dash pattern if state is active. *\/$/;"	m	struct:Tk_Outline
activeElement	generic/ttk/ttkTrack.c	/^    Ttk_Element 	activeElement;	\/* element under the mouse cursor *\/$/;"	m	struct:__anon50	file:
activeFg	generic/tkButton.h	/^    XColor *activeFg;		\/* Value of -activeforeground option:$/;"	m	struct:__anon178
activeFg	generic/tkMenubutton.h	/^    XColor *activeFg;		\/* Foreground color in active mode. NULL means$/;"	m	struct:__anon137
activeFgColor	generic/tkCanvBmap.c	/^    XColor *activeFgColor;	\/* Foreground color to use for bitmap. *\/$/;"	m	struct:BitmapItem	file:
activeFgPtr	generic/tkMenu.h	/^    Tcl_Obj *activeFgPtr;	\/* Foreground color for active entry. *\/$/;"	m	struct:TkMenu
activeFgPtr	generic/tkMenu.h	/^    Tcl_Obj *activeFgPtr;	\/* Foreground color to use when entry is$/;"	m	struct:TkMenuEntry
activeField	generic/tkScrollbar.h	/^    int activeField;		\/* Names field to be displayed in active$/;"	m	struct:TkScrollbar
activeFillColor	generic/tkCanvArc.c	/^    XColor *activeFillColor;	\/* Color for filling arc (used for drawing$/;"	m	struct:ArcItem	file:
activeFillColor	generic/tkCanvPoly.c	/^    XColor *activeFillColor;	\/* Foreground color for polygon if state is$/;"	m	struct:PolygonItem	file:
activeFillColor	generic/tkRectOval.c	/^    XColor *activeFillColor;	\/* Color for filling rectangle\/oval if state$/;"	m	struct:RectOvalItem	file:
activeFillStipple	generic/tkCanvArc.c	/^    Pixmap activeFillStipple;	\/* Stipple bitmap for filling item if state is$/;"	m	struct:ArcItem	file:
activeFillStipple	generic/tkCanvPoly.c	/^    Pixmap activeFillStipple;	\/* Stipple bitmap for filling polygon if state$/;"	m	struct:PolygonItem	file:
activeFillStipple	generic/tkRectOval.c	/^    Pixmap activeFillStipple;	\/* Stipple bitmap for filling item if state is$/;"	m	struct:RectOvalItem	file:
activeGC	generic/tkMenu.h	/^    GC activeGC;		\/* GC for drawing active entry. *\/$/;"	m	struct:TkMenu
activeGC	generic/tkMenu.h	/^    GC activeGC;		\/* GC for drawing text in entry when active.$/;"	m	struct:TkMenuEntry
activeImage	generic/tkCanvImg.c	/^    Tk_Image activeImage;	\/* Image to display in window, or NULL if no$/;"	m	struct:ImageItem	file:
activeImageString	generic/tkCanvImg.c	/^    char *activeImageString;	\/* String describing -activeimage option.$/;"	m	struct:ImageItem	file:
activeIndex	generic/ttk/ttkNotebook.c	/^    int activeIndex;		\/* index of currently active tab *\/$/;"	m	struct:__anon66	file:
activeRelief	generic/tkScrollbar.h	/^    int activeRelief;		\/* Value of -activeRelief option: relief to$/;"	m	struct:TkScrollbar
activeStipple	generic/tk.h	/^    Pixmap activeStipple;	\/* Outline Stipple pattern if state is$/;"	m	struct:Tk_Outline
activeStipple	generic/tkCanvText.c	/^    Pixmap activeStipple;	\/* Stipple bitmap for text, or None. *\/$/;"	m	struct:TextItem	file:
activeStyle	generic/tkListbox.c	/^    int activeStyle;		\/* Style in which to draw the active element.$/;"	m	struct:__anon149	file:
activeStyle	generic/tkListbox.c	/^enum activeStyle {$/;"	g	file:
activeStyleStrings	generic/tkListbox.c	/^static const char *const activeStyleStrings[] = {$/;"	v	file:
activeTextGC	generic/tkButton.h	/^    GC activeTextGC;		\/* GC for drawing text in active mode (NULL$/;"	m	struct:__anon178
activeTextGC	generic/tkMenubutton.h	/^    GC activeTextGC;		\/* GC for drawing text in active mode (NULL$/;"	m	struct:__anon137
activeWidth	generic/tk.h	/^    double activeWidth;		\/* Width of outline. *\/$/;"	m	struct:Tk_Outline
actualWidth	generic/tkCanvText.c	/^    int actualWidth;		\/* Width of text as computed. Used to make$/;"	m	struct:TextItem	file:
addLineProc	generic/tkText.c	/^    SearchAddLineProc *addLineProc;$/;"	m	struct:SearchSpec	file:
addSample	library/demos/unicodeout.tcl	/^proc addSample {w language args} {$/;"	p
add_pixel	xlib/X11/Xlib.h	/^	int (*add_pixel)            (struct _XImage *, long);$/;"	m	struct:_XImage::funcs
add_pixel	xlib/X11/Xlib.h	/^	int (*add_pixel)();$/;"	m	struct:_XImage::funcs
address	xlib/X11/Xlib.h	/^	char *address;		\/* pointer to where to find the bytes *\/$/;"	m	struct:__anon275
affectsDisplay	generic/tkText.h	/^    int affectsDisplay;		\/* Non-zero means that this tag affects the$/;"	m	struct:TkTextTag
affectsDisplayGeometry	generic/tkText.h	/^    int affectsDisplayGeometry;	\/* Non-zero means that this tag affects the$/;"	m	struct:TkTextTag
after	generic/tkPanedWindow.c	/^    Tk_Window after;		\/* Placeholder for parsing options. *\/$/;"	m	struct:Slave	file:
afterSyncCmd	generic/tkText.h	/^    Tcl_Obj *afterSyncCmd;	\/* Command to be executed when lines are up to$/;"	m	struct:TkText
alertButtonIndexAndTypeToNativeButtonIndex	macosx/tkMacOSXDialog.c	/^static const short alertButtonIndexAndTypeToNativeButtonIndex[][7] = {$/;"	v	file:
alertButtonNames	macosx/tkMacOSXDialog.c	/^static const NSString *const alertButtonNames[][3] = {$/;"	v	file:
alertButtonStrings	macosx/tkMacOSXDialog.c	/^static const char *const alertButtonStrings[] = {$/;"	v	file:
alertIconOptions	macosx/tkMacOSXDialog.c	/^enum alertIconOptions {$/;"	g	file:
alertIconStrings	macosx/tkMacOSXDialog.c	/^static const char *const alertIconStrings[] = {$/;"	v	file:
alertNativeButtonIndexAndTypeToButtonIndex	macosx/tkMacOSXDialog.c	/^static const short alertNativeButtonIndexAndTypeToButtonIndex[][3] = {$/;"	v	file:
alertOptionStrings	macosx/tkMacOSXDialog.c	/^static const char *const alertOptionStrings[] = {$/;"	v	file:
alertOptions	macosx/tkMacOSXDialog.c	/^enum alertOptions {$/;"	g	file:
alertStyles	macosx/tkMacOSXDialog.c	/^static const NSAlertStyle alertStyles[] = {$/;"	v	file:
alertTypeOptions	macosx/tkMacOSXDialog.c	/^enum alertTypeOptions {$/;"	g	file:
alertTypeStrings	macosx/tkMacOSXDialog.c	/^static const char *const alertTypeStrings[] = {$/;"	v	file:
aliasPattern	unix/tkUnixFont.c	/^    const char *aliasPattern;	\/* Pattern for encoding name, of the form that$/;"	m	struct:EncodingAlias	file:
align	generic/tkText.h	/^    int align;			\/* How to align image in vertical space. See$/;"	m	struct:TkTextEmbImage
align	generic/tkText.h	/^    int align;			\/* How to align window in vertical space. See$/;"	m	struct:TkTextEmbWindow
alignMode	generic/tkTextImage.c	/^} alignMode;$/;"	t	typeref:enum:__anon152	file:
alignMode	generic/tkTextWind.c	/^} alignMode;$/;"	t	typeref:enum:__anon181	file:
alignStrings	generic/tkTextImage.c	/^static const char *const alignStrings[] = {$/;"	v	file:
alignStrings	generic/tkTextWind.c	/^static const char *const alignStrings[] = {$/;"	v	file:
alignment	generic/tkText.h	/^    TkTextTabAlign alignment;	\/* Where the tab stop appears relative to the$/;"	m	struct:TkTextTab
all	generic/tkText.c	/^    int all;			\/* Whether all or the first match should be$/;"	m	struct:SearchSpec	file:
all	macosx/GNUmakefile	/^all			:= ${styles}$/;"	m
allTags	generic/tkText.h	/^    int allTags;		\/* Non-zero means ignore tag check: search for$/;"	m	struct:TkTextSearch
allUid	generic/tkCanvas.c	/^    Tk_Uid allUid;$/;"	m	struct:__anon154	file:
all_chars_exist	xlib/X11/Xlib.h	/^    Bool	all_chars_exist;\/* flag if all characters have non-zero size*\/$/;"	m	struct:__anon321
all_event_masks	xlib/X11/Xlib.h	/^    long all_event_masks;	\/* set of events all people have interest in*\/$/;"	m	struct:__anon274
allocated	generic/tkCanvas.h	/^    int allocated;		\/* Available space for array of uids. *\/$/;"	m	struct:TagSearchExpr_s
allocedByX	macosx/tkMacOSXSend.c	/^    int allocedByX;		\/* Non-zero means must free property with$/;"	m	struct:NameRegistry	file:
allocedByX	unix/tkUnixSend.c	/^    int allocedByX;		\/* Non-zero means must free property with$/;"	m	struct:NameRegistry	file:
allowedTypes	win/tkWinDialog.c	/^static const struct {int type; int btnIds[3];} allowedTypes[] = {$/;"	v	typeref:struct:__anon230	file:
alpha	generic/tkImgPNG.c	/^	unsigned char alpha;$/;"	m	struct:__anon179::__anon180	file:
alpha	generic/tkImgPNG.c	/^    double alpha;		\/* Alpha from -format option. *\/$/;"	m	struct:__anon179	file:
alpha	unix/tkUnixWm.c	/^    double alpha;		\/* Transparency; 0.0=transparent, 1.0=opaque *\/$/;"	m	struct:__anon214	file:
alpha	win/tkWinWm.c	/^    double alpha;		\/* Alpha transparency level 0.0 (fully$/;"	m	struct:TkWmInfo	file:
alphaOffset	generic/tkImgGIF.c	/^    int alphaOffset;$/;"	m	struct:__anon129	file:
altModMask	generic/tkInt.h	/^    unsigned int altModMask;	\/* Has one bit set to indicate the modifier$/;"	m	struct:TkDisplay
alwaysRedraw	generic/tk.h	/^    int alwaysRedraw;		\/* Non-zero means displayProc should be called$/;"	m	struct:Tk_ItemType
alwaysShowSelection	generic/tkInt.h	/^    int alwaysShowSelection;	\/* This is linked to the$/;"	m	struct:TkMainInfo
ancestor	generic/tkGeometry.c	/^    Tk_Window ancestor;		\/* The lowest ancestor of this window for$/;"	m	struct:MaintainMaster	file:
anchor	generic/tkButton.h	/^    Tk_Anchor anchor;		\/* Value of -anchor option: specifies where$/;"	m	struct:__anon178
anchor	generic/tkCanvBmap.c	/^    Tk_Anchor anchor;		\/* Where to anchor bitmap relative to (x,y) *\/$/;"	m	struct:BitmapItem	file:
anchor	generic/tkCanvImg.c	/^    Tk_Anchor anchor;		\/* Where to anchor image relative to (x,y). *\/$/;"	m	struct:ImageItem	file:
anchor	generic/tkCanvText.c	/^    Tk_Anchor anchor;		\/* Where to anchor text relative to (x,y). *\/$/;"	m	struct:TextItem	file:
anchor	generic/tkCanvWind.c	/^    Tk_Anchor anchor;		\/* Where to anchor window relative to$/;"	m	struct:WindowItem	file:
anchor	generic/tkGrid.c	/^    Tk_Anchor anchor;		\/* Value of anchor option: specifies where a$/;"	m	struct:__anon135	file:
anchor	generic/tkMenubutton.h	/^    Tk_Anchor anchor;		\/* Where text\/bitmap should be displayed$/;"	m	struct:__anon137
anchor	generic/tkMessage.c	/^    Tk_Anchor anchor;		\/* Where to position text within window region$/;"	m	struct:__anon153	file:
anchor	generic/tkPack.c	/^    Tk_Anchor anchor;		\/* If frame allocated for window is larger$/;"	m	struct:Packer	file:
anchor	generic/tkPlace.c	/^    Tk_Anchor anchor;		\/* Which point on tkwin is placed at the given$/;"	m	struct:Slave	file:
anchorItemPtr	generic/tk.h	/^    Tk_Item *anchorItemPtr;	\/* Item corresponding to "selectAnchor": not$/;"	m	struct:Tk_CanvasTextInfo
anchorObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *anchorObj;$/;"	m	struct:__anon15	file:
anchorObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*anchorObj;$/;"	m	struct:__anon61	file:
anchorObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *anchorObj;$/;"	m	struct:__anon111	file:
anchorObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*anchorObj;	\/* -anchor for cell data <<NOTE-ANCHOR>> *\/$/;"	m	struct:__anon82	file:
anchorObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *anchorObj;		\/* from column <<NOTE-ANCHOR>> *\/$/;"	m	struct:__anon81	file:
anchorStrings	generic/tkGet.c	/^static const char *const anchorStrings[] = {$/;"	v	file:
andUid	generic/tkCanvas.c	/^    Tk_Uid andUid;$/;"	m	struct:__anon154	file:
angle	generic/tkCanvText.c	/^    double angle;		\/* What angle, in degrees, to draw the text$/;"	m	struct:TextItem	file:
angle	unix/tkUnixRFont.c	/^    double angle;$/;"	m	struct:__anon220	file:
angle	win/tkWinFont.c	/^    double angle;$/;"	m	struct:SubFont	file:
angle1	xlib/X11/Xlib.h	/^    short angle1, angle2;$/;"	m	struct:__anon281
angle2	xlib/X11/Xlib.h	/^    short angle1, angle2;$/;"	m	struct:__anon281
animateLabelImage	library/demos/anilabel.tcl	/^proc animateLabelImage {w imageData interval} {$/;"	p
animateLabelText	library/demos/anilabel.tcl	/^proc animateLabelText {w text interval} {$/;"	p
antialiasedTextEnabled	macosx/tkMacOSXFont.c	/^static int antialiasedTextEnabled = -1;$/;"	v	file:
any	win/tkWinFont.c	/^    ANYTABLE any;$/;"	m	union:SUBTABLE	file:
appNameProperty	generic/tkInt.h	/^    Atom appNameProperty;	\/* X's name for property used to hold the$/;"	m	struct:TkDisplay
applicationAtom	generic/tkInt.h	/^    Atom applicationAtom;	\/* Atom for TK_APPLICATION. *\/$/;"	m	struct:TkDisplay
apply	generic/tkUndo.h	/^    TkUndoSubAtom *apply;	\/* Linked list of 'apply' actions to perform$/;"	m	struct:TkUndoAtom
arc_mode	xlib/X11/Xlib.h	/^	int arc_mode;		\/* ArcChord, ArcPieSlice *\/$/;"	m	struct:__anon268
areaProc	generic/tk.h	/^    Tk_ItemAreaProc *areaProc;	\/* Computes whether item is inside, outside,$/;"	m	struct:Tk_ItemType
argTable	generic/tkWindow.c	/^static const Tk_ArgvInfo argTable[] = {$/;"	v	file:
argvName	generic/tk.h	/^    CONST86 char *argvName;	\/* Switch used to specify option in argv. NULL$/;"	m	struct:Tk_ConfigSpec
array	generic/tk.h	/^	char array[sizeof(char *)];$/;"	m	union:Tk_Dash::__anon12
arrayPtr	generic/tkOption.c	/^	struct ElArray *arrayPtr;$/;"	m	union:Element::__anon185	typeref:struct:Element::__anon185::ElArray	file:
arraySize	generic/tkOption.c	/^    int arraySize;		\/* Number of elements actually allocated in$/;"	m	struct:ElArray	file:
arraySize	generic/tkTextBTree.c	/^    int arraySize;		\/* Number of entries allocated for tags and$/;"	m	struct:TagInfo	file:
arrow	generic/tkCanvLine.c	/^    Arrows arrow;		\/* Indicates whether or not to draw arrowheads:$/;"	m	struct:LineItem	file:
arrowColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*arrowColorObj;$/;"	m	struct:__anon58	file:
arrowGC	generic/tkCanvLine.c	/^    GC arrowGC;			\/* Graphics context for drawing arrowheads. *\/$/;"	m	struct:LineItem	file:
arrowLength	generic/tkScrollbar.h	/^    int arrowLength;		\/* Length of arrows along long dimension of$/;"	m	struct:TkScrollbar
arrowMove1	library/demos/arrow.tcl	/^proc arrowMove1 {c x y} {$/;"	p
arrowMove2	library/demos/arrow.tcl	/^proc arrowMove2 {c x y} {$/;"	p
arrowMove3	library/demos/arrow.tcl	/^proc arrowMove3 {c x y} {$/;"	p
arrowOption	generic/tkCanvLine.c	/^static const Tk_CustomOption arrowOption = {$/;"	v	file:
arrowSetup	library/demos/arrow.tcl	/^proc arrowSetup c {$/;"	p
arrowShapeA	generic/tkCanvLine.c	/^    float arrowShapeA;		\/* Distance from tip of arrowhead to center. *\/$/;"	m	struct:LineItem	file:
arrowShapeB	generic/tkCanvLine.c	/^    float arrowShapeB;		\/* Distance from tip of arrowhead to trailing$/;"	m	struct:LineItem	file:
arrowShapeC	generic/tkCanvLine.c	/^    float arrowShapeC;		\/* Distance of trailing points from outside$/;"	m	struct:LineItem	file:
arrowShapeOption	generic/tkCanvLine.c	/^static const Tk_CustomOption arrowShapeOption = {$/;"	v	file:
arrowSizeObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*arrowSizeObj;$/;"	m	struct:__anon58	file:
arrow_statemap	win/ttkWinTheme.c	/^static Ttk_StateTable arrow_statemap[] = {$/;"	v	file:
as_fn_append	macosx/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	macosx/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	macosx/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	macosx/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	macosx/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	macosx/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	macosx/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	macosx/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	macosx/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	macosx/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	macosx/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	macosx/configure	/^as_fn_unset ()$/;"	f
ascent	generic/tk.h	/^    int ascent;			\/* The amount in pixels that the tallest$/;"	m	struct:Tk_FontMetrics
ascent	generic/tkFont.h	/^    int	ascent;			\/* From baseline to top of font. *\/$/;"	m	struct:TkFontMetrics
ascent	xlib/X11/Xlib.h	/^    int		ascent;		\/* log. extent above baseline for spacing *\/$/;"	m	struct:__anon321
ascent	xlib/X11/Xlib.h	/^    short	ascent;		\/* baseline to top edge of raster *\/$/;"	m	struct:__anon319
aspect	generic/tkMessage.c	/^    int aspect;			\/* Desired aspect ratio for window$/;"	m	struct:__anon153	file:
async_handlers	xlib/X11/Xlib.h	/^	struct _XInternalAsync *async_handlers; \/* for internal async *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XInternalAsync
atIndex	macosx/tkMacOSXMenu.c	/^- (void) insertItem: (NSMenuItem *) newItem atIndex: (NSInteger) index$/;"	f
atTkIndex	macosx/tkMacOSXMenu.c	/^- (void) insertItem: (NSMenuItem *) newItem atTkIndex: (NSInteger) index$/;"	f
atom	xlib/X11/Xlib.h	/^	Atom atom;$/;"	m	struct:__anon309
atomInit	generic/tkInt.h	/^    int atomInit;		\/* 0 means stuff below hasn't been initialized$/;"	m	struct:TkDisplay
atomNameArray	generic/tkAtom.c	/^static const char *const atomNameArray[] = {$/;"	v	file:
atomTable	generic/tkInt.h	/^    Tcl_HashTable atomTable;	\/* Maps from Atom's back to names. *\/$/;"	m	struct:TkDisplay
atoms	xlib/X11/Xlib.h	/^	struct _XDisplayAtoms *atoms; \/* for XInternAtom *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XDisplayAtoms
attributedSubstringFromRange	macosx/tkMacOSXKeyEvent.c	/^- (NSAttributedString *)attributedSubstringFromRange: (NSRange)theRange$/;"	f
attributes	macosx/tkMacOSXWm.h	/^    UInt64 attributes, configAttributes;$/;"	m	struct:TkWmInfo
attributes	unix/tkUnixWm.c	/^    WmAttributes attributes;	\/* Current state of [wm attributes] *\/$/;"	m	struct:TkWmInfo	file:
attributes	xlib/X11/Xlib.h	/^    unsigned short attributes;	\/* per char flags (not predefined) *\/$/;"	m	struct:__anon319
atts	generic/tk.h	/^    XSetWindowAttributes atts;$/;"	m	struct:Tk_FakeWin
atts	generic/tkInt.h	/^    XSetWindowAttributes atts;	\/* Current attributes of window. *\/$/;"	m	struct:TkWindow
autoClosed	generic/tkCanvPoly.c	/^    int autoClosed;		\/* Zero means the given polygon was closed,$/;"	m	struct:PolygonItem	file:
autoSeparators	generic/tkText.h	/^    int autoSeparators;		\/* Non-zero means the separators will be$/;"	m	struct:TkSharedText
autoSeparators	generic/tkText.h	/^    int autoSeparators;		\/* Non-zero means the separators will be$/;"	m	struct:TkText
auto_repeat_mode	xlib/X11/Xlib.h	/^        int auto_repeat_mode;   \/* On, Off, Default *\/$/;"	m	struct:__anon282
auto_repeats	xlib/X11/Xlib.h	/^	char auto_repeats[32];$/;"	m	struct:__anon283
avgWidth	generic/tkEntry.h	/^    int avgWidth;		\/* Width of average character. *\/$/;"	m	struct:__anon183
az	xlib/xcolors.c	/^static const unsigned char az[] = {$/;"	v	file:
b	xlib/X11/Xlib.h	/^		char b[20];$/;"	m	union:__anon314::__anon315
bColorCount	win/tkWinWm.c	/^    BYTE bColorCount;		\/* Number of colors in image (0 if >=8bpp) *\/$/;"	m	struct:__anon235	file:
bCount	macosx/tkMacOSXButton.c	/^static int bCount;$/;"	v	file:
bCursor	generic/tkEntry.h	/^    Tk_Cursor bCursor;		\/* cursor for buttons, or None. *\/$/;"	m	struct:__anon184
bHeight	win/tkWinWm.c	/^    BYTE bHeight;		\/* Height of the image (times 2) *\/$/;"	m	struct:__anon235	file:
bReserved	win/tkWinWm.c	/^    BYTE bReserved;		\/* Reserved *\/$/;"	m	struct:__anon235	file:
bWidth	win/tkWinWm.c	/^    BYTE bWidth;		\/* Width of the image *\/$/;"	m	struct:__anon235	file:
background	generic/tkImgPhoto.c	/^    XColor *background;		\/* Value specified for -background option. *\/$/;"	m	struct:SubcommandOptions	file:
background	generic/tkPanedWindow.c	/^    Tk_3DBorder background;	\/* Background color. *\/$/;"	m	struct:PanedWindow	file:
background	macosx/tkMacOSXColor.c	/^    ThemeBackgroundKind background;$/;"	m	struct:SystemColorMapEntry	file:
background	xlib/X11/Xlib.h	/^	unsigned long background;\/* background pixel *\/$/;"	m	struct:__anon268
backgroundObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon15	file:
backgroundObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*backgroundObj;$/;"	m	struct:__anon54	file:
backgroundObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*backgroundObj;$/;"	m	struct:__anon58	file:
backgroundObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon55	file:
backgroundObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon59	file:
backgroundObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon91	file:
backgroundObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*backgroundObj;$/;"	m	struct:__anon33	file:
backgroundObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*backgroundObj;$/;"	m	struct:__anon39	file:
backgroundObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon40	file:
backgroundObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon41	file:
backgroundObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon47	file:
backgroundObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *backgroundObj;	\/* Entry widget background color *\/$/;"	m	struct:__anon25	file:
backgroundObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj 	*backgroundObj;	\/* " " *\/$/;"	m	struct:__anon62	file:
backgroundObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *backgroundObj;	\/* remainder from tag *\/$/;"	m	struct:__anon81	file:
backgroundObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *backgroundObj;$/;"	m	struct:__anon87	file:
backgroundObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj	*backgroundObj;$/;"	m	struct:__anon210	file:
backgroundObj	win/ttkWinTheme.c	/^    Tcl_Obj	*backgroundObj;$/;"	m	struct:__anon246	file:
background_pixel	xlib/X11/Xlib.h	/^    unsigned long background_pixel;	\/* background pixel *\/$/;"	m	struct:__anon273
background_pixmap	xlib/X11/Xlib.h	/^    Pixmap background_pixmap;	\/* background or None or ParentRelative *\/$/;"	m	struct:__anon273
backing_pixel	xlib/X11/Xlib.h	/^    unsigned long backing_pixel;\/* value to be used when restoring planes *\/$/;"	m	struct:__anon274
backing_pixel	xlib/X11/Xlib.h	/^    unsigned long backing_pixel;\/* value to use in restoring planes *\/$/;"	m	struct:__anon273
backing_planes	xlib/X11/Xlib.h	/^    unsigned long backing_planes;\/* planes to be preserved if possible *\/$/;"	m	struct:__anon274
backing_planes	xlib/X11/Xlib.h	/^    unsigned long backing_planes;\/* planes to be preseved if possible *\/$/;"	m	struct:__anon273
backing_store	xlib/X11/Xlib.h	/^	int backing_store;	\/* Never, WhenMapped, Always *\/$/;"	m	struct:__anon271
backing_store	xlib/X11/Xlib.h	/^    int backing_store;		\/* NotUseful, WhenMapped, Always *\/$/;"	m	struct:__anon273
backing_store	xlib/X11/Xlib.h	/^    int backing_store;		\/* NotUseful, WhenMapped, Always *\/$/;"	m	struct:__anon274
backwards	generic/tkText.c	/^    int backwards;		\/* Searching forwards or backwards. *\/$/;"	m	struct:SearchSpec	file:
barHeight	unix/tkUnixFont.c	/^    int barHeight;		\/* Height of underline or overstrike bar (used$/;"	m	struct:UnixFont	file:
base	generic/ttk/ttkButton.c	/^    BasePart	base;$/;"	m	struct:__anon14	file:
base	generic/ttk/ttkButton.c	/^    BasePart	base;$/;"	m	struct:__anon16	file:
base	generic/ttk/ttkButton.c	/^    BasePart	base;$/;"	m	struct:__anon18	file:
base	generic/ttk/ttkButton.c	/^    BasePart base;$/;"	m	struct:__anon20	file:
base	generic/ttk/ttkButton.c	/^    BasePart base;$/;"	m	struct:__anon22	file:
base	generic/ttk/ttkButton.c	/^    BasePart base;$/;"	m	struct:__anon24	file:
base64Bits	generic/tkImgPNG.c	/^    unsigned char base64Bits;	\/* Remaining bits from last base64 read. *\/$/;"	m	struct:__anon179	file:
base64Data	generic/tkImgPNG.c	/^    unsigned char *base64Data;	\/* base64 encoded string data. *\/$/;"	m	struct:__anon179	file:
base64State	generic/tkImgPNG.c	/^    unsigned char base64State;	\/* Current state of base64 decoder. *\/$/;"	m	struct:__anon179	file:
baseCharChunkPtr	generic/tkTextDisp.c	/^static TkTextDispChunk *baseCharChunkPtr = NULL;$/;"	v	file:
baseChars	generic/tkTextDisp.c	/^    Tcl_DString baseChars;	\/* Actual characters for the stretch of text$/;"	m	struct:BaseCharInfo	file:
baseChunkPtr	generic/tkTextDisp.c	/^    TkTextDispChunk *baseChunkPtr;$/;"	m	struct:CharInfo	file:
baseImage	generic/ttk/ttkImage.c	/^    Tk_Image 		baseImage;	\/* Base image to use *\/$/;"	m	struct:TtkImageSpec	file:
baseOffset	generic/tkTextDisp.c	/^    int baseOffset;		\/* Starting offset in base chunk$/;"	m	struct:CharInfo	file:
base_height	xlib/X11/Xutil.h	/^	int base_width, base_height;		\/* added by ICCCM version 1 *\/$/;"	m	struct:__anon257
base_pixel	xlib/X11/Xutil.h	/^	unsigned long base_pixel;$/;"	m	struct:__anon265
base_width	xlib/X11/Xutil.h	/^	int base_width, base_height;		\/* added by ICCCM version 1 *\/$/;"	m	struct:__anon257
baseline	generic/tkTextDisp.c	/^    int baseline;		\/* Offset of text baseline from y, in$/;"	m	struct:DLine	file:
bases	generic/tkOption.c	/^    int bases[NUM_STACKS];	\/* For each stack, index of first element on$/;"	m	struct:StackLevel	file:
basicMotion	library/demos/aniwave.tcl	/^proc basicMotion {} {$/;"	p
bbox	generic/tkCanvArc.c	/^    double bbox[4];		\/* Coordinates (x1, y1, x2, y2) of bounding$/;"	m	struct:ArcItem	file:
bbox	generic/tkRectOval.c	/^    double bbox[4];		\/* Coordinates of bounding box for rectangle$/;"	m	struct:RectOvalItem	file:
bboxProc	generic/tkText.h	/^    Tk_ChunkBboxProc *bboxProc;	\/* Procedure to find bounding box of character$/;"	m	struct:TkTextDispChunk
bdRelief	generic/tkEntry.h	/^    int bdRelief;		\/* 3-D effect: TK_RELIEF_RAISED, etc. *\/$/;"	m	struct:__anon184
before	generic/tkPanedWindow.c	/^    Tk_Window before;		\/* Placeholder for parsing options. *\/$/;"	m	struct:Slave	file:
bell_duration	xlib/X11/Xlib.h	/^	unsigned int bell_pitch, bell_duration;$/;"	m	struct:__anon283
bell_duration	xlib/X11/Xlib.h	/^        int bell_duration;$/;"	m	struct:__anon282
bell_percent	xlib/X11/Xlib.h	/^	int bell_percent;$/;"	m	struct:__anon283
bell_percent	xlib/X11/Xlib.h	/^        int bell_percent;$/;"	m	struct:__anon282
bell_pitch	xlib/X11/Xlib.h	/^	unsigned int bell_pitch, bell_duration;$/;"	m	struct:__anon283
bell_pitch	xlib/X11/Xlib.h	/^        int bell_pitch;$/;"	m	struct:__anon282
bg	generic/tkCursor.c	/^    Tk_Uid fg, bg;		\/* Colors for cursor. *\/$/;"	m	struct:__anon1	file:
bg	generic/tkImgBmap.c	/^    XColor *bg;			\/* Background color for displaying image. *\/$/;"	m	struct:BitmapInstance	file:
bg1	library/demos/floor.tcl	/^proc bg1 {w fill outline} {$/;"	p
bg2	library/demos/floor.tcl	/^proc bg2 {w fill outline} {$/;"	p
bg3	library/demos/floor.tcl	/^proc bg3 {w fill outline} {$/;"	p
bgBorder	generic/tkCanvas.h	/^    Tk_3DBorder bgBorder;	\/* Used for canvas background. *\/$/;"	m	struct:TkCanvas
bgBorder	generic/tkScale.h	/^    Tk_3DBorder bgBorder;	\/* Used for drawing slider and other$/;"	m	struct:TkScale
bgBorder	generic/tkScrollbar.h	/^    Tk_3DBorder bgBorder;	\/* Used for drawing background (all flat$/;"	m	struct:TkScrollbar
bgBorderPtr	generic/tkSquare.c	/^    Tcl_Obj *bgBorderPtr;$/;"	m	struct:__anon142	file:
bgColor	generic/tkCanvBmap.c	/^    XColor *bgColor;		\/* Background color to use for bitmap. *\/$/;"	m	struct:BitmapItem	file:
bgColorPtr	generic/tk3d.h	/^    XColor *bgColorPtr;		\/* Background color (intensity between$/;"	m	struct:TkBorder
bgGC	generic/tk3d.h	/^    GC bgGC;			\/* Used (if necessary) to draw areas in the$/;"	m	struct:TkBorder
bgGC	generic/tkTextDisp.c	/^    GC bgGC;			\/* Graphics context for background. None means$/;"	m	struct:TextStyle	file:
bgStipple	generic/tkText.h	/^    Pixmap bgStipple;		\/* Stipple bitmap for background. None means$/;"	m	struct:TkTextTag
bgStipple	generic/tkTextDisp.c	/^    Pixmap bgStipple;		\/* Stipple bitmap for background. None means$/;"	m	struct:StyleValues	file:
bgUid	generic/tkImgBmap.c	/^    Tk_Uid bgUid;		\/* Value of -background option (malloc'ed). *\/$/;"	m	struct:BitmapMaster	file:
bgerror	library/bgerror.tcl	/^    proc bgerror err {}$/;"	p
bigIncrement	generic/tkScale.h	/^    double bigIncrement;	\/* Amount to use for large increments to scale$/;"	m	struct:TkScale
bigreq_size	xlib/X11/Xlib.h	/^	unsigned long bigreq_size; \/* max size of big requests *\/$/;"	m	struct:_XDisplay
binNextPtr	generic/tkGrid.c	/^    struct Gridder *binNextPtr;	\/* Link to next span>1 slave in this bin. *\/$/;"	m	struct:Gridder	typeref:struct:Gridder::Gridder	file:
binNextPtr	generic/tkGrid.c	/^    struct Gridder *binNextPtr;	\/* The next slave window in this bin. Each bin$/;"	m	struct:GridLayout	typeref:struct:GridLayout::Gridder	file:
bindInfo	generic/tkInt.h	/^    TkBindInfo bindInfo;	\/* Information used by tkBind.c on a per$/;"	m	struct:TkMainInfo
bindInfoStale	generic/tkInt.h	/^    int bindInfoStale;		\/* Non-zero means the variables in this part$/;"	m	struct:TkDisplay
bindTagExprs	generic/tkCanvas.h	/^    TagSearchExpr *bindTagExprs;\/* Linked list of tag expressions used in$/;"	m	struct:TkCanvas
bindingDepth	generic/tkBind.c	/^    int bindingDepth;		\/* Number of active instances of Tk_BindEvent$/;"	m	struct:__anon171	file:
bindingTable	generic/tkCanvas.h	/^    Tk_BindingTable bindingTable;$/;"	m	struct:TkCanvas
bindingTable	generic/tkInt.h	/^    Tk_BindingTable bindingTable;$/;"	m	struct:TkMainInfo
bindingTable	generic/tkText.h	/^    Tk_BindingTable bindingTable;$/;"	m	struct:TkSharedText
bindingTable	generic/ttk/ttkTreeview.c	/^    Tk_BindingTable bindingTable;$/;"	m	struct:__anon83	file:
bindir	unix/Makefile	/^bindir			= ${exec_prefix}\/bin$/;"	m
bitDepth	generic/tkImgPNG.c	/^    unsigned char bitDepth;	\/* Number of bits per pixel. *\/$/;"	m	struct:__anon179	file:
bitScale	generic/tkImgPNG.c	/^    int bitScale;		\/* Scale factor for RGB\/Gray depths < 8. *\/$/;"	m	struct:__anon179	file:
bit_gravity	xlib/X11/Xlib.h	/^    int bit_gravity;		\/* one of bit gravity values *\/$/;"	m	struct:__anon273
bit_gravity	xlib/X11/Xlib.h	/^    int bit_gravity;		\/* one of bit gravity values *\/$/;"	m	struct:__anon274
bitmap	generic/tkBitmap.c	/^    Pixmap bitmap;		\/* X identifier for bitmap. None means this$/;"	m	struct:TkBitmap	file:
bitmap	generic/tkButton.h	/^    Pixmap bitmap;		\/* Value of -bitmap option. If not None,$/;"	m	struct:__anon178
bitmap	generic/tkCanvBmap.c	/^    Pixmap bitmap;		\/* Bitmap to display in window. *\/$/;"	m	struct:BitmapItem	file:
bitmap	generic/tkImgBmap.c	/^    Pixmap bitmap;		\/* The bitmap to display. *\/$/;"	m	struct:BitmapInstance	file:
bitmap	generic/tkMenubutton.h	/^    Pixmap bitmap;		\/* Bitmap to display or None. If not None then$/;"	m	struct:__anon137
bitmap	win/tkWinInt.h	/^    TkWinBitmap bitmap;$/;"	m	union:__anon228
bitmap	xlib/X11/Xlib.h	/^	Pixmap  bitmap;$/;"	m	union:_XIMStatusDrawCallbackStruct::__anon335
bitmapAutoNumber	generic/tkInt.h	/^    int bitmapAutoNumber;	\/* Used to number bitmaps. *\/$/;"	m	struct:TkDisplay
bitmapDataTable	generic/tkInt.h	/^    Tcl_HashTable bitmapDataTable;$/;"	m	struct:TkDisplay
bitmapIdTable	generic/tkInt.h	/^    Tcl_HashTable bitmapIdTable;\/* Maps from bitmap id to the TkBitmap$/;"	m	struct:TkDisplay
bitmapInit	generic/tkInt.h	/^    int bitmapInit;		\/* 0 means tables above need initializing. *\/$/;"	m	struct:TkDisplay
bitmapNameTable	generic/tkInt.h	/^    Tcl_HashTable bitmapNameTable;$/;"	m	struct:TkDisplay
bitmapPtr	generic/tkMenu.h	/^    Tcl_Obj *bitmapPtr;		\/* Bitmap to display in menu entry, or None.$/;"	m	struct:TkMenuEntry
bitmapRow	library/demos/bitmap.tcl	/^proc bitmapRow {w args} {$/;"	p
bitmap_bit_order	xlib/X11/Xlib.h	/^	int bitmap_bit_order;	\/* LeastSignificant or MostSignificant *\/$/;"	m	struct:_XDisplay
bitmap_bit_order	xlib/X11/Xlib.h	/^    int bitmap_bit_order;	\/* LSBFirst, MSBFirst *\/$/;"	m	struct:_XImage
bitmap_pad	xlib/X11/Xlib.h	/^	int bitmap_pad;		\/* padding requirements on bitmaps *\/$/;"	m	struct:_XDisplay
bitmap_pad	xlib/X11/Xlib.h	/^    int bitmap_pad;		\/* 8, 16, 32 either XY or ZPixmap *\/$/;"	m	struct:_XImage
bitmap_unit	xlib/X11/Xlib.h	/^	int bitmap_unit;	\/* padding and data requirements *\/$/;"	m	struct:_XDisplay
bitmap_unit	xlib/X11/Xlib.h	/^    int bitmap_unit;		\/* quant. of scanline 8, 16, 32 *\/$/;"	m	struct:_XImage
bitsInWindow	generic/tkImgGIF.c	/^	int bitsInWindow;$/;"	m	struct:__anon127::__anon128	file:
bits_per_pixel	xlib/X11/Xlib.h	/^	int bits_per_pixel;	\/* bits\/pixel at this depth *\/$/;"	m	struct:__anon272
bits_per_pixel	xlib/X11/Xlib.h	/^    int bits_per_pixel;		\/* bits per pixel (ZPixmap) *\/$/;"	m	struct:_XImage
bits_per_pixel	xlib/X11/Xlib.h	/^    int bits_per_pixel;$/;"	m	struct:__anon267
bits_per_rgb	xlib/X11/Xlib.h	/^	int bits_per_rgb;	\/* log base 2 of distinct color values *\/$/;"	m	struct:__anon269
bits_per_rgb	xlib/X11/Xutil.h	/^  int bits_per_rgb;$/;"	m	struct:__anon264
bkmode	win/tkWinInt.h	/^    int bkmode;$/;"	m	struct:TkWinDCState
black_pixel	xlib/X11/Xlib.h	/^	unsigned long black_pixel;	\/* White and Black pixel values *\/$/;"	m	struct:__anon271
block	generic/tkImgPNG.c	/^    Tk_PhotoImageBlock block;$/;"	m	struct:__anon179	file:
blockLen	generic/tkImgPNG.c	/^    int blockLen;		\/* Number of bytes in Tk image pixels. *\/$/;"	m	struct:__anon179	file:
blue	generic/tkColor.c	/^    int red, green, blue;	\/* Values for desired color. *\/$/;"	m	struct:__anon157	file:
blue	generic/tkImgPNG.c	/^	unsigned char blue;$/;"	m	struct:__anon179::__anon180	file:
blue	xlib/X11/Xlib.h	/^	unsigned short red, green, blue;$/;"	m	struct:__anon277
blueOffset	generic/tkImgGIF.c	/^    int blueOffset;$/;"	m	struct:__anon129	file:
blueValues	generic/tkImgPhoto.h	/^    pixel blueValues[256];	\/* Ditto for blue intensity. *\/$/;"	m	struct:ColorTable
blue_mask	generic/tkCanvPs.c	/^    int red_mask, green_mask, blue_mask;	\/* Masks and shifts for each *\/$/;"	m	struct:TkColormapData	file:
blue_mask	xlib/X11/Xlib.h	/^	unsigned long red_mask, green_mask, blue_mask;	\/* mask values *\/$/;"	m	struct:__anon269
blue_mask	xlib/X11/Xlib.h	/^    unsigned long blue_mask;$/;"	m	struct:_XImage
blue_mask	xlib/X11/Xutil.h	/^  unsigned long blue_mask;$/;"	m	struct:__anon264
blue_max	xlib/X11/Xutil.h	/^	unsigned long blue_max;$/;"	m	struct:__anon265
blue_mult	xlib/X11/Xutil.h	/^	unsigned long blue_mult;$/;"	m	struct:__anon265
blue_shift	generic/tkCanvPs.c	/^    int red_shift, green_shift, blue_shift;	\/* color band *\/$/;"	m	struct:TkColormapData	file:
body	generic/tkText.h	/^    } body;$/;"	m	struct:TkTextSegment	typeref:union:TkTextSegment::__anon158
border	generic/tkFrame.c	/^    Tk_3DBorder border;		\/* Structure used to draw 3-D border and$/;"	m	struct:__anon145	file:
border	generic/tkListbox.c	/^    Tk_3DBorder border;		\/* Used for drawing background around text *\/$/;"	m	struct:__anon150	file:
border	generic/tkMessage.c	/^    Tk_3DBorder border;		\/* Structure used to draw 3-D border and$/;"	m	struct:__anon153	file:
border	generic/tkText.h	/^    Tk_3DBorder border;		\/* Structure used to draw 3-D border and$/;"	m	struct:TkText
border	generic/tkText.h	/^    Tk_3DBorder border;		\/* Used for drawing background. NULL means no$/;"	m	struct:TkTextTag
border	generic/tkTextDisp.c	/^    Tk_3DBorder border;		\/* Used for drawing background under text.$/;"	m	struct:StyleValues	file:
border	generic/ttk/ttkImage.c	/^    Ttk_Padding border;		\/* Fixed border region *\/$/;"	m	struct:__anon60	file:
border	macosx/tkMacOSXButton.c	/^    Tk_3DBorder border;$/;"	m	struct:__anon201	file:
border	macosx/tkMacOSXMenubutton.c	/^    Tk_3DBorder border;$/;"	m	struct:__anon204	file:
borderColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*borderColorObj;$/;"	m	struct:__anon53	file:
borderColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*borderColorObj;$/;"	m	struct:__anon54	file:
borderColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*borderColorObj;$/;"	m	struct:__anon57	file:
borderColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*borderColorObj;$/;"	m	struct:__anon58	file:
borderColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *borderColorObj;$/;"	m	struct:__anon59	file:
borderColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj	*borderColorObj;	\/* Extra border color *\/$/;"	m	struct:__anon88	file:
borderColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj	*borderColorObj;	\/* Extra border color *\/$/;"	m	struct:__anon89	file:
borderColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderColorObj;	\/* Additional border color *\/$/;"	m	struct:__anon97	file:
borderColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderColorObj;	\/* Extra color for borders *\/$/;"	m	struct:__anon92	file:
borderColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderColorObj;$/;"	m	struct:__anon91	file:
borderColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderColorObj;$/;"	m	struct:__anon96	file:
borderHeight	win/tkWinWm.c	/^    int borderWidth, borderHeight;$/;"	m	struct:TkWmInfo	file:
borderInit	generic/tkInt.h	/^    int borderInit;		\/* 0 means borderTable needs initializing. *\/$/;"	m	struct:TkDisplay
borderMode	generic/tkPlace.c	/^    BorderMode borderMode;	\/* How to treat borders of master window. *\/$/;"	m	struct:Slave	file:
borderModeStrings	generic/tkPlace.c	/^static const char *const borderModeStrings[] = {$/;"	v	file:
borderObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj	*borderObj;$/;"	m	struct:__anon104	file:
borderObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *borderObj; 	\/* background color *\/$/;"	m	struct:__anon106	file:
borderObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *borderObj;$/;"	m	struct:__anon105	file:
borderObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj	*borderObj;$/;"	m	struct:__anon88	file:
borderObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj	*borderObj;$/;"	m	struct:__anon89	file:
borderObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderObj;		\/* Border \/ background color *\/$/;"	m	struct:__anon97	file:
borderObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderObj;$/;"	m	struct:__anon92	file:
borderObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderObj;$/;"	m	struct:__anon96	file:
borderObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*borderObj;$/;"	m	struct:__anon34	file:
borderObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*borderObj;$/;"	m	struct:__anon35	file:
borderObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*borderObj;$/;"	m	struct:__anon38	file:
borderObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderObj; 	\/* background color *\/$/;"	m	struct:__anon46	file:
borderObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderObj;      \/* the background color *\/$/;"	m	struct:__anon45	file:
borderObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderObj;$/;"	m	struct:__anon42	file:
borderObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderObj;$/;"	m	struct:__anon44	file:
borderObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *borderObj;$/;"	m	struct:__anon113	file:
borderPtr	generic/tkMenu.h	/^    Tcl_Obj *borderPtr;		\/* Structure used to draw 3-D border and$/;"	m	struct:TkMenu
borderPtr	generic/tkMenu.h	/^    Tcl_Obj *borderPtr;		\/* Structure used to draw background for$/;"	m	struct:TkMenuEntry
borderTable	generic/tkInt.h	/^    Tcl_HashTable borderTable;	\/* Maps from color name to TkBorder$/;"	m	struct:TkDisplay
borderTable	generic/ttk/ttkCache.c	/^    Tcl_HashTable borderTable;	\/* Entries: Tcl_Obj* holding BorderObjs *\/$/;"	m	struct:Ttk_ResourceCache_	file:
borderWidth	generic/tkButton.h	/^    int borderWidth;		\/* Integer value corresponding to$/;"	m	struct:__anon178
borderWidth	generic/tkCanvas.h	/^    int borderWidth;		\/* Width of 3-D border around window. *\/$/;"	m	struct:TkCanvas
borderWidth	generic/tkEntry.h	/^    int borderWidth;		\/* Width of 3-D border around window. *\/$/;"	m	struct:__anon183
borderWidth	generic/tkFrame.c	/^    int borderWidth;		\/* Width of 3-D border (if any). *\/$/;"	m	struct:__anon145	file:
borderWidth	generic/tkListbox.c	/^    int borderWidth;		\/* Width of 3-D border around window. *\/$/;"	m	struct:__anon149	file:
borderWidth	generic/tkMenubutton.h	/^    int borderWidth;		\/* Width of border. *\/$/;"	m	struct:__anon137
borderWidth	generic/tkMessage.c	/^    int borderWidth;		\/* Width of border. *\/$/;"	m	struct:__anon153	file:
borderWidth	generic/tkPanedWindow.c	/^    int borderWidth;		\/* Value of -borderwidth option. *\/$/;"	m	struct:PanedWindow	file:
borderWidth	generic/tkScale.h	/^    int borderWidth;		\/* Width of 3-D border around window. *\/$/;"	m	struct:TkScale
borderWidth	generic/tkScrollbar.h	/^    int borderWidth;		\/* Width of 3-D borders. *\/$/;"	m	struct:TkScrollbar
borderWidth	generic/tkText.h	/^    int borderWidth;		\/* Width of 3-D border for background. *\/$/;"	m	struct:TkTextTag
borderWidth	generic/tkText.h	/^    int borderWidth;		\/* Width of 3-D border to draw around entire$/;"	m	struct:TkText
borderWidth	generic/tkTextDisp.c	/^    int borderWidth;		\/* Width of 3-D border for background. *\/$/;"	m	struct:StyleValues	file:
borderWidth	generic/ttk/ttkFrame.c	/^    int 		borderWidth;	\/* border width *\/$/;"	m	struct:__anon122	file:
borderWidth	win/tkWinWm.c	/^    int borderWidth, borderHeight;$/;"	m	struct:TkWmInfo	file:
borderWidthObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon15	file:
borderWidthObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*borderWidthObj;	\/* See <<NOTE-BORDERWIDTH>> *\/$/;"	m	struct:__anon53	file:
borderWidthObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj	*borderWidthObj;$/;"	m	struct:__anon104	file:
borderWidthObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon105	file:
borderWidthObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj	*borderWidthObj;$/;"	m	struct:__anon88	file:
borderWidthObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon95	file:
borderWidthObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon97	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*borderWidthObj;$/;"	m	struct:__anon34	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*borderWidthObj;$/;"	m	struct:__anon35	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj; 	\/* thickness of the border *\/$/;"	m	struct:__anon46	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj; \/* the size of the border *\/$/;"	m	struct:__anon45	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon40	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon41	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon42	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon43	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon44	file:
borderWidthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon47	file:
borderWidthObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj	*borderWidthObj;$/;"	m	struct:__anon118	file:
borderWidthObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon111	file:
borderWidthObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *borderWidthObj;$/;"	m	struct:__anon113	file:
borderWidthPtr	generic/tkButton.h	/^    Tcl_Obj *borderWidthPtr;	\/* Value of -borderWidth option: specifies$/;"	m	struct:__anon178
borderWidthPtr	generic/tkMenu.h	/^    Tcl_Obj *borderWidthPtr;	\/* Width of border around whole menu. *\/$/;"	m	struct:TkMenu
borderWidthPtr	generic/tkSquare.c	/^    Tcl_Obj *borderWidthPtr;	\/* Width of 3-D border around whole widget. *\/$/;"	m	struct:__anon142	file:
borderWidthPtr	generic/tkText.h	/^    Tcl_Obj *borderWidthPtr;	\/* Width of 3-D border for background. *\/$/;"	m	struct:TkTextTag
border_pixel	xlib/X11/Xlib.h	/^    unsigned long border_pixel;	\/* border pixel value *\/$/;"	m	struct:__anon273
border_pixmap	xlib/X11/Xlib.h	/^    Pixmap border_pixmap;	\/* border of the window *\/$/;"	m	struct:__anon273
border_width	xlib/X11/Xlib.h	/^	int border_width;	\/* border width *\/$/;"	m	struct:__anon297
border_width	xlib/X11/Xlib.h	/^	int border_width;$/;"	m	struct:__anon303
border_width	xlib/X11/Xlib.h	/^	int border_width;$/;"	m	struct:__anon306
border_width	xlib/X11/Xlib.h	/^    int border_width;		\/* border width of window *\/$/;"	m	struct:__anon274
border_width	xlib/X11/Xlib.h	/^    int border_width;$/;"	m	struct:__anon276
bottom	generic/ttk/ttkTheme.h	/^    short bottom;$/;"	m	struct:__anon72
bottomArrowHeight	macosx/tkMacOSXScrlbr.c	/^    int minHeight, topArrowHeight, bottomArrowHeight;$/;"	m	struct:ScrollbarMetrics	file:
box	library/demos/goldberg.tcl	/^proc box {x y r} {$/;"	p
boxHeight	win/tkWinButton.c	/^    DWORD boxHeight;		\/* Height of each sub-image. *\/$/;"	m	struct:ThreadSpecificData	file:
boxWidth	win/tkWinButton.c	/^    DWORD boxWidth;		\/* Width of each sub-image. *\/$/;"	m	struct:ThreadSpecificData	file:
boxesBits	win/tkWinButton.c	/^    LPSTR boxesBits;		\/* Pointer to bitmap data. *\/$/;"	m	struct:ThreadSpecificData	file:
boxesPalette	win/tkWinButton.c	/^    DWORD *boxesPalette;	\/* Pointer to color palette. *\/$/;"	m	struct:ThreadSpecificData	file:
boxesPtr	win/tkWinButton.c	/^    BITMAPINFOHEADER *boxesPtr;	\/* Information about the bitmap. *\/$/;"	m	struct:ThreadSpecificData	file:
breakIndex	generic/tkText.h	/^    int breakIndex;		\/* Index within chunk of last acceptable$/;"	m	struct:TkTextDispChunk
brush	macosx/tkMacOSXColor.c	/^    ThemeBrush brush;$/;"	m	struct:SystemColorMapEntry	file:
btnIds	win/tkWinDialog.c	/^static const struct {int type; int btnIds[3];} allowedTypes[] = {$/;"	m	struct:__anon230	file:
btnkind	macosx/tkMacOSXButton.c	/^    ThemeButtonKind btnkind;$/;"	m	struct:__anon202	file:
btnkind	macosx/tkMacOSXMenubutton.c	/^    ThemeButtonKind btnkind;$/;"	m	struct:MacMenuButton	file:
buRelief	generic/tkEntry.h	/^    int buRelief;		\/* 3-D effect: TK_RELIEF_RAISED, etc. *\/$/;"	m	struct:__anon184
buf	generic/tkSelect.h	/^    Tcl_DString buf;		\/* Buffer to hold translation data. *\/$/;"	m	struct:TkSelRetrievalInfo
buffer	generic/tkSelect.c	/^    char buffer[TCL_UTF_MAX];	\/* A buffer to hold part of a UTF character$/;"	m	struct:__anon177	file:
buffer	generic/tkSelect.h	/^    char *buffer;		\/* Null terminated data buffer. *\/$/;"	m	struct:TkClipboardBuffer
buffer	unix/tkUnixSelect.c	/^    char buffer[TCL_UTF_MAX];	\/* A buffer to hold part of a UTF character$/;"	m	struct:ConvertInfo	file:
buffer	win/nmakehlp.c	/^    char buffer[STATICBUFFERSIZE];$/;"	m	struct:__anon256	file:
buffer	xlib/X11/Xlib.h	/^	char *buffer;		\/* Output buffer starting address. *\/$/;"	m	struct:_XDisplay
bufmax	xlib/X11/Xlib.h	/^	char *bufmax;		\/* Output buffer maximum+1 address. *\/$/;"	m	struct:_XDisplay
bufptr	xlib/X11/Xlib.h	/^	char *bufptr;		\/* Output buffer index pointer. *\/$/;"	m	struct:_XDisplay
builtInIconSize	macosx/tkMacOSXBitmap.c	50;"	d	file:
builtInIcons	macosx/tkMacOSXBitmap.c	/^static BuiltInIcon builtInIcons[] = {$/;"	v	file:
busyMgrInfo	generic/tkBusy.c	/^static Tk_GeomMgr busyMgrInfo = {$/;"	v	file:
busyOptionSpecs	generic/tkBusy.c	/^static const Tk_OptionSpec busyOptionSpecs[] = {$/;"	v	file:
busyTable	generic/tkInt.h	/^    Tcl_HashTable busyTable;	\/* Information used by [tk busy] command. *\/$/;"	m	struct:TkMainInfo
butPress	library/demos/items.tcl	/^proc butPress {w color} {$/;"	p
button	generic/tkBind.c	/^    int button;			\/* Button that was pressed (xbutton.button). *\/$/;"	m	union:__anon166	file:
button	generic/ttk/ttkButton.c	/^    ButtonPart	button;$/;"	m	struct:__anon18	file:
button	xlib/X11/Xlib.h	/^	unsigned int button;	\/* detail *\/$/;"	m	struct:__anon288
buttonBorder	generic/tkEntry.h	/^    Tk_3DBorder buttonBorder;	\/* Used for drawing border around buttons. *\/$/;"	m	struct:__anon184
buttonFlagMap	win/tkWinDialog.c	/^static const int buttonFlagMap[] = {$/;"	v	file:
buttonMap	win/tkWinDialog.c	/^static const TkStateMap buttonMap[] = {$/;"	v	file:
buttonMasks	generic/tkPointer.c	/^static const unsigned int buttonMasks[] = {$/;"	v	file:
buttonOptionSpecs	generic/tkButton.c	/^static const Tk_OptionSpec buttonOptionSpecs[] = {$/;"	v	file:
buttonStates	generic/tkGrab.c	/^static const unsigned int buttonStates[] = {$/;"	v	file:
buttonWinPtr	generic/tkInt.h	/^    struct TkWindow *buttonWinPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWindow
button_images	unix/tkUnixButton.c	/^static const char *const button_images[] = {$/;"	v	file:
byte	win/tkWinFont.c	/^    BYTETABLE byte;$/;"	m	union:SUBTABLE	file:
byte1	xlib/X11/Xlib.h	/^    unsigned char byte1;$/;"	m	struct:__anon323
byte2	xlib/X11/Xlib.h	/^    unsigned char byte2;$/;"	m	struct:__anon323
byteCount	generic/tkTextDisp.c	/^    int byteCount;		\/* Number of bytes accounted for by this$/;"	m	struct:DLine	file:
byteIndex	generic/tkText.h	/^    int byteIndex;		\/* Index within line of desired character (0$/;"	m	struct:TkTextIndex
byteOffset	generic/tkSelect.c	/^    int byteOffset;		\/* The expected byte offset of the next$/;"	m	struct:__anon177	file:
byte_order	xlib/X11/Xlib.h	/^	int byte_order;		\/* screen byte order, LSBFirst, MSBFirst *\/$/;"	m	struct:_XDisplay
byte_order	xlib/X11/Xlib.h	/^    int byte_order;		\/* data byte order, LSBFirst, MSBFirst *\/$/;"	m	struct:_XImage
bytes	generic/tkImgGIF.c	/^	int bytes;$/;"	m	struct:__anon127::__anon128	file:
bytesPerPixel	generic/tkImgPNG.c	/^    unsigned char bytesPerPixel;\/* Bytes per pixel in scan line. *\/$/;"	m	struct:__anon179	file:
bytes_per_line	xlib/X11/Xlib.h	/^    int bytes_per_line;		\/* accelarator to next line *\/$/;"	m	struct:_XImage
c	generic/tkImgGIF.c	/^	unsigned char *c;$/;"	m	struct:__anon127::__anon128	file:
c	generic/tkImgGIF.c	/^    int c;			\/* bits left over from previous character *\/$/;"	m	struct:mFile	file:
c	tests/arc.tcl	/^proc c {option value} {.t.c itemconf 2 $option $value}$/;"	p
c_class	xlib/X11/Xlib.h	/^	int c_class;		\/* C++ class of screen (monochrome, etc.) *\/$/;"	m	struct:__anon269
c_class	xlib/X11/Xlib.h	/^    int c_class;		\/* C++ InputOutput, InputOnly*\/$/;"	m	struct:__anon274
c_class	xlib/X11/Xutil.h	/^  int c_class;					\/* C++ *\/$/;"	m	struct:__anon264
c_new	xlib/X11/Xlib.h	/^	Bool c_new;		\/* C++ *\/$/;"	m	struct:__anon313
cache	generic/ttk/ttkImage.c	/^    Ttk_ResourceCache cache;	\/* Resource cache for images *\/$/;"	m	struct:__anon60	file:
cache	generic/ttk/ttkTheme.c	/^    Ttk_ResourceCache	cache;		\/* Back-pointer to resource cache *\/$/;"	m	struct:Ttk_Style_	file:
cache	generic/ttk/ttkTheme.c	/^    Ttk_ResourceCache cache;		\/* Back-pointer to resource cache *\/$/;"	m	struct:Ttk_Theme_	file:
cache	generic/ttk/ttkTheme.c	/^    Ttk_ResourceCache cache;		\/* Resource cache *\/$/;"	m	struct:__anon115	file:
cacheHashPtr	generic/tkFont.h	/^    Tcl_HashEntry *cacheHashPtr;\/* Entry in font cache for this structure,$/;"	m	struct:TkFont
cachedBackground	macosx/tkMacOSXInt.h	/^    unsigned long cachedBackground;$/;"	m	struct:__anon197
cachedBackgroundColor	macosx/tkMacOSXInt.h	/^    CGColorRef cachedBackgroundColor;$/;"	m	struct:__anon197
cachedForeground	macosx/tkMacOSXInt.h	/^    unsigned long cachedForeground;$/;"	m	struct:__anon197
cachedForegroundColor	macosx/tkMacOSXInt.h	/^    CGColorRef cachedForegroundColor;$/;"	m	struct:__anon197
cachedWindow	generic/tkOption.c	/^    TkWindow *cachedWindow;	\/* Lowest-level window currently loaded in$/;"	m	struct:ThreadSpecificData	file:
callback	generic/ttk/ttkTrace.c	/^    Ttk_TraceProc	callback;	\/* Callback procedure *\/$/;"	m	struct:TtkTraceHandle_	file:
callback	xlib/X11/Xlib.h	/^    XIMProc callback;$/;"	m	struct:__anon330
canvas	generic/tkCanvImg.c	/^    Tk_Canvas canvas;		\/* Canvas containing the image. *\/$/;"	m	struct:ImageItem	file:
canvas	generic/tkCanvLine.c	/^    Tk_Canvas canvas;		\/* Canvas containing item. Needed for parsing$/;"	m	struct:LineItem	file:
canvas	generic/tkCanvWind.c	/^    Tk_Canvas canvas;		\/* Canvas containing this item. *\/$/;"	m	struct:WindowItem	file:
canvasClass	generic/tkCanvas.c	/^static const Tk_ClassProcs canvasClass = {$/;"	v	file:
canvasGeomType	generic/tkCanvWind.c	/^static const Tk_GeomMgr canvasGeomType = {$/;"	v	file:
canvasPtr	generic/tkCanvas.c	/^    TkCanvas *canvasPtr;	\/* Canvas widget being searched. *\/$/;"	m	struct:TagSearch	file:
canvas_state	generic/tkCanvas.h	/^    Tk_State canvas_state;	\/* State of canvas. *\/$/;"	m	struct:TkCanvas
capStyle	generic/tkCanvLine.c	/^    int capStyle;		\/* Cap style for line. *\/$/;"	m	struct:LineItem	file:
cap_style	xlib/X11/Xlib.h	/^	int cap_style;	  	\/* CapNotLast, CapButt,$/;"	m	struct:__anon268
captured	win/tkWinPointer.c	/^static int captured = 0;		\/* 1 if mouse is currently captured. *\/$/;"	v	file:
card32	xlib/X11/Xlib.h	/^    unsigned long card32;$/;"	m	struct:__anon320
caret	generic/tkInt.h	/^    TkCaret caret;		\/* Information about the caret for this$/;"	m	struct:TkDisplay
caret	xlib/X11/Xlib.h	/^    int caret;		\/* Cursor offset within pre-edit string *\/$/;"	m	struct:_XIMPreeditDrawCallbackStruct
caret_height	macosx/tkMacOSXKeyEvent.c	/^static int caret_x = 0, caret_y = 0, caret_height = 0;$/;"	v	file:
caret_x	macosx/tkMacOSXKeyEvent.c	/^static int caret_x = 0, caret_y = 0, caret_height = 0;$/;"	v	file:
caret_y	macosx/tkMacOSXKeyEvent.c	/^static int caret_x = 0, caret_y = 0, caret_height = 0;$/;"	v	file:
cellLayout	generic/ttk/ttkTreeview.c	/^    Ttk_Layout cellLayout;$/;"	m	struct:__anon83	file:
center1	generic/tkCanvArc.c	/^    double center1[2];		\/* Coordinates of center of arc outline at$/;"	m	struct:ArcItem	file:
center2	generic/tkCanvArc.c	/^    double center2[2];		\/* Coordinates of center of arc outline at$/;"	m	struct:ArcItem	file:
cgAntiAliasLimit	macosx/tkMacOSXDraw.c	/^static int cgAntiAliasLimit = 0;$/;"	v	file:
ch	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const UniChar ch;$/;"	m	struct:__anon200	file:
ch	win/tkWinFont.c	/^    int ch;$/;"	m	struct:CanUse	file:
chan	generic/tkCanvPs.c	/^    Tcl_Channel chan;		\/* Open channel corresponding to fileName. *\/$/;"	m	struct:TkPostscriptInfo	file:
chan	generic/tkImgBmap.c	/^    Tcl_Channel chan;		\/* File containing bitmap data, or NULL if no$/;"	m	struct:ParseInfo	file:
changeAttributes	macosx/tkMacOSXDialog.c	/^- (void) changeAttributes: (id) sender$/;"	f
changeCount	macosx/tkMacOSXClipboard.c	/^static NSInteger changeCount = -1;$/;"	v	file:
changeFont	library/demos/toolbar.tcl	/^proc changeFont {txt combo} {$/;"	p
changeProc	generic/tkImage.c	/^    Tk_ImageChangedProc *changeProc;$/;"	m	struct:Image	file:
changes	generic/tk.h	/^    XWindowChanges changes;$/;"	m	struct:Tk_FakeWin
changes	generic/tkInt.h	/^    XWindowChanges changes;	\/* Geometry and other info about window. *\/$/;"	m	struct:TkWindow
channel	generic/tkImgPNG.c	/^    Tcl_Channel channel;	\/* Channel for from-file reads. *\/$/;"	m	struct:__anon179	file:
channelName	generic/tkCanvPs.c	/^    char *channelName;		\/* If -channel is specified, the name of the$/;"	m	struct:TkPostscriptInfo	file:
char64	generic/tkImgGIF.c	/^char64($/;"	f	file:
charHeight	generic/tkText.h	/^    int charHeight;		\/* Height of average character in default$/;"	m	struct:TkText
charOffset	generic/tkSelect.c	/^    int charOffset;		\/* The offset of the next char to retrieve. *\/$/;"	m	struct:__anon177	file:
charValueLen	generic/tkInt.h	/^    int charValueLen;		\/* Length of string in charValuePtr when that$/;"	m	struct:__anon133
charValuePtr	generic/tkInt.h	/^    char *charValuePtr;		\/* A pointer to a string that holds the key's$/;"	m	struct:__anon133
charWidth	generic/tkText.h	/^    int charWidth;		\/* Width of average character in default$/;"	m	struct:TkText
characterIndexForPoint	macosx/tkMacOSXKeyEvent.c	/^- (NSUInteger)characterIndexForPoint: (NSPoint)thePoint$/;"	f
chars	generic/tkText.h	/^	char chars[2];		\/* Characters that make up character info.$/;"	m	union:TkTextSegment::__anon158
chars	generic/tkTextDisp.c	/^    char chars[1];		\/* UTF characters to display. Actual size will$/;"	m	struct:CharInfo	file:
chars	generic/tkTextDisp.c	/^    const char *chars;		\/* UTF characters to display. Actually points$/;"	m	struct:CharInfo	file:
chars	xlib/X11/Xlib.h	/^    XChar2b *chars;		\/* two byte characters *\/$/;"	m	struct:__anon324
chars	xlib/X11/Xlib.h	/^    char           *chars;$/;"	m	struct:__anon327
chars	xlib/X11/Xlib.h	/^    char *chars;		\/* pointer to string *\/$/;"	m	struct:__anon322
chars	xlib/X11/Xlib.h	/^    wchar_t        *chars;$/;"	m	struct:__anon328
chars_matched	xlib/X11/Xutil.h	/^    int chars_matched;		\/* match state *\/$/;"	m	struct:_XComposeStatus
charset	generic/tkFont.h	/^    Tk_Uid charset;		\/* The actual charset string. *\/$/;"	m	struct:TkXLFDAttributes
charset	unix/tkUnixRFont.c	/^    FcCharSet *charset;$/;"	m	struct:__anon220	file:
checkProc	generic/tkText.h	/^    Tk_SegCheckProc *checkProc;	\/* Called during consistency checks to check$/;"	m	struct:Tk_SegType
checkScheduled	generic/tkGeometry.c	/^    int checkScheduled;		\/* Non-zero means that there is already a call$/;"	m	struct:MaintainMaster	file:
checkbox_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable checkbox_statemap[] =$/;"	v	file:
checkbutton	generic/ttk/ttkButton.c	/^    CheckbuttonPart checkbutton;$/;"	m	struct:__anon20	file:
checkbuttonOptionSpecs	generic/tkButton.c	/^static const Tk_OptionSpec checkbuttonOptionSpecs[] = {$/;"	v	file:
checkbutton_pixels	generic/ttk/ttkDefaultTheme.c	/^static const char *const checkbutton_pixels[] = {$/;"	v	file:
checkbutton_spec	generic/ttk/ttkDefaultTheme.c	/^static IndicatorSpec checkbutton_spec = {$/;"	v	file:
checkbutton_statemap	win/ttkWinTheme.c	/^static Ttk_StateTable checkbutton_statemap[] = { \/* see also SF#1865898 *\/$/;"	v	file:
checkbutton_states	generic/ttk/ttkDefaultTheme.c	/^static Ttk_StateTable checkbutton_states[] = {$/;"	v	file:
chg_first	xlib/X11/Xlib.h	/^    int chg_first;	\/* Starting change position *\/$/;"	m	struct:_XIMPreeditDrawCallbackStruct
chg_length	xlib/X11/Xlib.h	/^    int chg_length;	\/* Length of the change in character count *\/$/;"	m	struct:_XIMPreeditDrawCallbackStruct
child	generic/tkOption.c	/^    } child;$/;"	m	struct:Element	typeref:union:Element::__anon185	file:
child	generic/ttk/ttkLayout.c	/^    Ttk_LayoutNode	*next, *child;$/;"	m	struct:Ttk_LayoutNode_	file:
child	generic/ttk/ttkLayout.c	/^    struct Ttk_TemplateNode_ *next, *child;$/;"	m	struct:Ttk_TemplateNode_	typeref:struct:Ttk_TemplateNode_::	file:
childClass	win/tkWinX.c	/^static WNDCLASS childClass;		\/* Window class for child windows. *\/$/;"	v	file:
childClassInitialized	win/tkWinX.c	/^static int childClassInitialized;	\/* Registered child class? *\/$/;"	v	file:
childList	generic/tkInt.h	/^    struct TkWindow *childList;	\/* First in list of child windows, or NULL if$/;"	m	struct:TkWindow	typeref:struct:TkWindow::TkWindow
childMenuRefPtr	generic/tkMenu.h	/^    struct TkMenuReferences *childMenuRefPtr;$/;"	m	struct:TkMenuEntry	typeref:struct:TkMenuEntry::TkMenuReferences
children	generic/tkTextBTree.c	/^    } children;$/;"	m	struct:Node	typeref:union:Node::__anon176	file:
children	generic/ttk/ttkTreeview.c	/^    TreeItem	*children;	\/* Linked list of child items *\/$/;"	m	struct:TreeItemRec	file:
chooseOptionStrings	macosx/tkMacOSXDialog.c	/^static const char *const chooseOptionStrings[] = {$/;"	v	file:
chooseOptions	macosx/tkMacOSXDialog.c	/^enum chooseOptions {$/;"	g	file:
chunkCount	generic/tkText.h	/^    int chunkCount;		\/* Number of display chunks that refer to this$/;"	m	struct:TkTextEmbImage
chunkCount	generic/tkText.h	/^    int chunkCount;		\/* Number of display chunks that refer to this$/;"	m	struct:TkTextEmbWindowClient
chunkPtr	generic/tkTextDisp.c	/^    TkTextDispChunk *chunkPtr;	\/* Pointer to first chunk in list of all of$/;"	m	struct:DLine	file:
chunks	generic/tkFont.c	/^    LayoutChunk chunks[1];	\/* Array of chunks. The actual size will be$/;"	m	struct:TextLayout	file:
ci	generic/tkTextDisp.c	/^    CharInfo ci;$/;"	m	struct:BaseCharInfo	file:
circPlace	generic/tkBind.c	/^static const TkStateMap circPlace[] = {$/;"	v	file:
class	generic/tkVisual.c	/^    int class;			\/* X symbol for class. *\/$/;"	m	struct:VisualDictionary	file:
classId	win/ttkWinTheme.c	/^    int classId;		\/* class id for DrawFrameControl *\/$/;"	m	struct:__anon244	file:
className	generic/tkFrame.c	/^    char *className;		\/* Class name for widget (from configuration$/;"	m	struct:__anon145	file:
className	generic/ttk/ttkWidget.h	/^    const char 		*className;	\/* Widget class name *\/$/;"	m	struct:WidgetSpec_
className	win/ttkWinXPTheme.c	/^    LPCWSTR	className;	\/* Windows window class name *\/$/;"	m	struct:__anon240	file:
classNames	generic/tkButton.c	/^static const char *const classNames[] = {"Label", "Button", "Checkbutton", "Radiobutton"};$/;"	v	file:
classNames	generic/tkFrame.c	/^static const char *const classNames[] = {"Frame", "Toplevel", "Labelframe"};$/;"	v	file:
classObj	generic/ttk/ttkWidget.h	/^    Tcl_Obj *classObj;		\/* Class name (readonly option) *\/$/;"	m	struct:__anon48
classProcsPtr	generic/tkInt.h	/^    const Tk_ClassProcs *classProcsPtr;$/;"	m	struct:TkWindow
classUid	generic/tk.h	/^    Tk_Uid classUid;$/;"	m	struct:Tk_FakeWin
classUid	generic/tkInt.h	/^    Tk_Uid classUid;		\/* Class of the window. NULL means window$/;"	m	struct:TkWindow
classicTheme.tcl	library/ttk/ttk.tcl	/^	classic 	classicTheme.tcl$/;"	c
clauses	generic/tkFileFilter.h	/^    FileFilterClause *clauses;	\/* Head of the clauses list *\/$/;"	m	struct:FileFilter
clausesTail	generic/tkFileFilter.h	/^    FileFilterClause *clausesTail;$/;"	m	struct:FileFilter
clean	macosx/GNUmakefile	/^clean			:= ${styles:%=clean-%}$/;"	m
cleanup	tests/constraints.tcl	/^	    proc cleanup {} {$/;"	p
cleanupList	generic/ttk/ttkTheme.c	/^    Cleanup *cleanupList;		\/* Cleanup records *\/$/;"	m	struct:__anon115	file:
cleanupProc	generic/tkText.h	/^    Tk_SegCleanupProc *cleanupProc;$/;"	m	struct:Tk_SegType
cleanupProc	generic/ttk/ttkTheme.c	/^    Ttk_CleanupProc *cleanupProc;$/;"	m	struct:CleanupStruct	file:
cleanupProc	generic/ttk/ttkWidget.h	/^    void	(*cleanupProc)(void *recordPtr);$/;"	m	struct:WidgetSpec_
clearCode	generic/tkImgGIF.c	/^    int clearCode;$/;"	m	struct:__anon130	file:
clearData	generic/tkSelect.h	/^    ClientData clearData;	\/* Info to pass to clearProc. *\/$/;"	m	struct:TkSelectionInfo
clearFlag	generic/tkImgGIF.c	/^    int clearFlag;$/;"	m	struct:__anon130	file:
clearProc	generic/tkSelect.h	/^    Tk_LostSelProc *clearProc;	\/* Procedure to call when owner loses$/;"	m	struct:TkSelectionInfo
clientArea	generic/ttk/ttkNotebook.c	/^    Ttk_Box clientArea;		\/* Where to pack slave widgets *\/$/;"	m	struct:__anon66	file:
clientCmaps	xlib/X11/Xlib.h	/^	   XPointer clientCmaps;  \/* pointer to linked list of XcmsCmapRec *\/$/;"	m	struct:_XDisplay::__anon286
clientData	generic/tk.h	/^    ClientData clientData;	\/* Arbitrary one-word value passed to the$/;"	m	struct:Tk_ObjCustomOption
clientData	generic/tk.h	/^    ClientData clientData;	\/* Arbitrary one-word value used by option$/;"	m	struct:Tk_CustomOption
clientData	generic/tk.h	/^    const void *clientData;	\/* An alternate place to put option-specific$/;"	m	struct:Tk_OptionSpec
clientData	generic/tkBind.c	/^    ClientData clientData;	\/* Used when type of Detail is unknown, and to$/;"	m	union:__anon166	file:
clientData	generic/tkEvent.c	/^    ClientData clientData;	\/* Client data to pass to function. *\/$/;"	m	struct:GenericHandler	file:
clientData	generic/tkEvent.c	/^    ClientData clientData;	\/* One word of information to pass to proc. *\/$/;"	m	struct:ExitHandler	file:
clientData	generic/tkInt.h	/^    ClientData clientData;	\/* Arbitrary value to pass to errorProc. *\/$/;"	m	struct:TkErrorHandler
clientData	generic/tkInt.h	/^    ClientData clientData;	\/* Argument to pass to proc. *\/$/;"	m	struct:TkEventHandler
clientData	generic/tkSelect.h	/^    ClientData clientData;	\/* Argument for proc. *\/$/;"	m	struct:TkSelRetrievalInfo
clientData	generic/tkSelect.h	/^    ClientData clientData;	\/* Argument to pass to proc. *\/$/;"	m	struct:TkSelHandler
clientData	generic/tkStyle.c	/^    ClientData clientData;	\/* Data provided during registration. *\/$/;"	m	struct:Style	file:
clientData	generic/tkText.c	/^    ClientData clientData;	\/* Information about structure being searched,$/;"	m	struct:SearchSpec	file:
clientData	generic/tkText.h	/^    ClientData clientData;	\/* Additional information for use of$/;"	m	struct:TkTextDispChunk
clientData	generic/tkUndo.h	/^    ClientData clientData;	\/* Data for 'funcPtr'. *\/$/;"	m	struct:TkUndoSubAtom
clientData	generic/ttk/ttkTheme.c	/^    void		*clientData;$/;"	m	struct:__anon114	file:
clientData	generic/ttk/ttkTheme.c	/^    void *clientData;		\/* Client data passed in at registration time *\/$/;"	m	struct:Ttk_ElementClass_	file:
clientData	generic/ttk/ttkTheme.c	/^    void *clientData;$/;"	m	struct:CleanupStruct	file:
clientData	generic/ttk/ttkTrace.c	/^    void		*clientData;	\/* Data to pass to callback *\/$/;"	m	struct:TtkTraceHandle_	file:
clientMachine	macosx/tkMacOSXWm.h	/^    char *clientMachine;	\/* String to store in WM_CLIENT_MACHINE$/;"	m	struct:TkWmInfo
clientMachine	unix/tkUnixWm.c	/^    char *clientMachine;	\/* String to store in WM_CLIENT_MACHINE$/;"	m	struct:TkWmInfo	file:
clientMachine	win/tkWinWm.c	/^    char *clientMachine;	\/* String to store in WM_CLIENT_MACHINE$/;"	m	struct:TkWmInfo	file:
client_data	xlib/X11/Xlib.h	/^    XPointer client_data;$/;"	m	struct:__anon330
clients	generic/tkText.h	/^    TkTextEmbWindowClient *clients;$/;"	m	struct:TkTextEmbWindow
clients	generic/tkTextBTree.c	/^    int clients;		\/* Number of clients of this B-tree. *\/$/;"	m	struct:BTree	file:
clipRegion	unix/tkUnixRFont.c	/^    Region clipRegion;		\/* The clipping region, or None. *\/$/;"	m	struct:ThreadSpecificData	file:
clipRgn	macosx/tkMacOSXPrivate.h	/^    HIShapeRef clipRgn;$/;"	m	struct:TkMacOSXDrawingContext
clipTargetPtr	generic/tkInt.h	/^    struct TkClipboardTarget *clipTargetPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkClipboardTarget
clipWindow	generic/tkInt.h	/^    Tk_Window clipWindow;	\/* Window used for clipboard ownership and to$/;"	m	struct:TkDisplay
clip_mask	xlib/X11/Xlib.h	/^	Pixmap clip_mask;	\/* bitmap clipping; other calls for rects *\/$/;"	m	struct:__anon268
clip_x_origin	xlib/X11/Xlib.h	/^	int clip_x_origin;	\/* origin for clipping *\/$/;"	m	struct:__anon268
clip_y_origin	xlib/X11/Xlib.h	/^	int clip_y_origin;$/;"	m	struct:__anon268
clipboardActive	generic/tkInt.h	/^    int clipboardActive;	\/* 1 means we currently own the clipboard$/;"	m	struct:TkDisplay
clipboardAppPtr	generic/tkInt.h	/^    struct TkMainInfo *clipboardAppPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkMainInfo
clipboardAtom	generic/tkInt.h	/^    Atom clipboardAtom;		\/* Atom for CLIPBOARD. *\/$/;"	m	struct:TkDisplay
clipboardOwner	macosx/tkMacOSXClipboard.c	/^static Tk_Window clipboardOwner = NULL;$/;"	v	file:
closeEnough	generic/tkCanvas.h	/^    double closeEnough;		\/* The mouse is assumed to be inside an item$/;"	m	struct:TkCanvas
cmList	generic/tkEvent.c	/^    GenericHandler *cmList;	\/* First handler in the list, or NULL. *\/$/;"	m	struct:ThreadSpecificData	file:
cmap	xlib/X11/Xlib.h	/^	Colormap cmap;		\/* default color map *\/$/;"	m	struct:__anon271
cmapCount	macosx/tkMacOSXWm.h	/^    int cmapCount;		\/* Number of windows in array. *\/$/;"	m	struct:TkWmInfo
cmapCount	win/tkWinWm.c	/^    int cmapCount;		\/* Number of windows in array. *\/$/;"	m	struct:TkWmInfo	file:
cmapList	macosx/tkMacOSXWm.h	/^    TkWindow **cmapList;	\/* Array of window with private colormaps. *\/$/;"	m	struct:TkWmInfo
cmapList	win/tkWinWm.c	/^    TkWindow **cmapList;	\/* Array of window with private colormaps. *\/$/;"	m	struct:TkWmInfo	file:
cmapPtr	generic/tkInt.h	/^    TkColormap *cmapPtr;	\/* First in list of all non-default colormaps$/;"	m	struct:TkDisplay
cmdArgc	unix/tkUnixWm.c	/^    int cmdArgc;		\/* Number of elements in cmdArgv below. *\/$/;"	m	struct:TkWmInfo	file:
cmdArgc	win/tkWinWm.c	/^    int cmdArgc;		\/* Number of elements in cmdArgv below. *\/$/;"	m	struct:TkWmInfo	file:
cmdArgv	unix/tkUnixWm.c	/^    const char **cmdArgv;	\/* Array of strings to store in the WM_COMMAND$/;"	m	struct:TkWmInfo	file:
cmdArgv	win/tkWinWm.c	/^    const char **cmdArgv;	\/* Array of strings to store in the WM_COMMAND$/;"	m	struct:TkWmInfo	file:
cmdLength	generic/tkSelect.c	/^    int cmdLength;		\/* # of non-NULL bytes in command. *\/$/;"	m	struct:__anon177	file:
cmdObj	generic/tkSelect.c	/^    Tcl_Obj *cmdObj;		\/* Reference to command to invoke. *\/$/;"	m	struct:LostCommand	file:
cmdObj	macosx/tkMacOSXDialog.c	/^    Tcl_Obj *cmdObj;$/;"	m	struct:FontchooserData	file:
cmdObj	macosx/tkMacOSXDialog.c	/^    Tcl_Obj *cmdObj;$/;"	m	struct:__anon191	file:
cmdObj	macosx/tkMacOSXDialog.c	/^    Tcl_Obj *cmdObj;$/;"	m	struct:__anon192	file:
cmdObj	win/tkWinDialog.c	/^    Tcl_Obj *cmdObj;$/;"	m	struct:HookData	file:
cmdPtr	win/tkWinSend.c	/^    Tcl_Obj *cmdPtr;$/;"	m	struct:SendEvent	file:
cms	xlib/X11/Xlib.h	/^	} cms;$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::__anon286
code	unix/tkUnixSend.c	/^    int code;			\/* Tcl return code for command will be stored$/;"	m	struct:PendingCommand	file:
codeTable	generic/tkImgGIF.c	/^    unsigned int codeTable[HSIZE];$/;"	m	struct:__anon130	file:
color	generic/tk.h	/^    XColor *color;		\/* Outline color. *\/$/;"	m	struct:Tk_Outline
color	generic/tkCanvPs.c	/^    int color;			\/* Whether window is color or black\/white *\/$/;"	m	struct:TkColormapData	file:
color	generic/tkCanvText.c	/^    XColor *color;		\/* Color for text. *\/$/;"	m	struct:TextItem	file:
color	generic/tkColor.h	/^    XColor color;		\/* Information about this color. *\/$/;"	m	struct:TkColor
color	unix/tkUnixRFont.c	/^    XftColor color;$/;"	m	struct:__anon221	file:
colorInit	generic/tkInt.h	/^    int colorInit;		\/* 0 means color module needs initializing. *\/$/;"	m	struct:TkDisplay
colorLevel	generic/tkCanvPs.c	/^    int colorLevel;		\/* Numeric value corresponding to colorMode: 0$/;"	m	struct:TkPostscriptInfo	file:
colorMode	generic/tkCanvPs.c	/^    char *colorMode;		\/* Mode for handling colors: "monochrome",$/;"	m	struct:TkPostscriptInfo	file:
colorName	macosx/tkMacOSXWm.c	/^NSColor *colorName = NULL;$/;"	v
colorNameTable	generic/tkInt.h	/^    Tcl_HashTable colorNameTable;$/;"	m	struct:TkDisplay
colorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon56	file:
colorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *colorObj;		\/* Arrow color *\/$/;"	m	struct:__anon92	file:
colorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon91	file:
colorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon93	file:
colorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon95	file:
colorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon98	file:
colorObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon40	file:
colorObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon42	file:
colorObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon43	file:
colorObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *colorObj;$/;"	m	struct:__anon86	file:
colorOptionStrings	macosx/tkMacOSXDialog.c	/^static const char *const colorOptionStrings[] = {$/;"	v	file:
colorOptions	macosx/tkMacOSXDialog.c	/^enum colorOptions {$/;"	g	file:
colorPtr	unix/tkUnixColor.c	/^    XColor *colorPtr;		\/* Pointer to malloc'ed array of all colors$/;"	m	struct:TkStressedCmap	file:
colorQuant	generic/tkImgPhoto.h	/^    unsigned char colorQuant[3][256];$/;"	m	struct:ColorTable
colorTable	generic/ttk/ttkCache.c	/^    Tcl_HashTable colorTable;	\/* Entries: Tcl_Obj* holding ColorObjs *\/$/;"	m	struct:Ttk_ResourceCache_	file:
colorTablePtr	generic/tkImgPhoto.h	/^    ColorTable *colorTablePtr;	\/* Pointer to information about colors$/;"	m	struct:PhotoInstance
colorType	generic/tkImgPNG.c	/^    unsigned char colorType;	\/* Grayscale, TrueColor, etc. *\/$/;"	m	struct:__anon179	file:
colorValueTable	generic/tkInt.h	/^    Tcl_HashTable colorValueTable;$/;"	m	struct:TkDisplay
colorVar	generic/tkCanvPs.c	/^    char *colorVar;		\/* If non-NULL, give name of global variable$/;"	m	struct:TkPostscriptInfo	file:
colorcmp	xlib/xcolors.c	/^colorcmp($/;"	f	file:
colormap	generic/tk3d.h	/^    Colormap colormap;		\/* Colormap out of which pixels are$/;"	m	struct:TkBorder
colormap	generic/tkColor.c	/^    Colormap colormap;		\/* Colormap from which color will be$/;"	m	struct:__anon157	file:
colormap	generic/tkColor.h	/^    Colormap colormap;		\/* Colormap from which this entry was$/;"	m	struct:TkColor
colormap	generic/tkFrame.c	/^    Colormap colormap;		\/* If not None, identifies a colormap$/;"	m	struct:__anon145	file:
colormap	generic/tkImgPhoto.h	/^    Colormap colormap;		\/* Colormap that the windows are using. *\/$/;"	m	struct:ColorTableId
colormap	generic/tkImgPhoto.h	/^    Colormap colormap;		\/* The image may only be used in windows with$/;"	m	struct:PhotoInstance
colormap	generic/tkVisual.c	/^    Colormap colormap;		\/* X's identifier for the colormap. *\/$/;"	m	struct:TkColormap	file:
colormap	generic/tkWindow.c	/^static char *colormap = NULL;$/;"	v	file:
colormap	unix/tkUnixColor.c	/^    Colormap colormap;		\/* X's token for the colormap. *\/$/;"	m	struct:TkStressedCmap	file:
colormap	win/tkWinInt.h	/^    Colormap colormap;$/;"	m	struct:__anon226
colormap	xlib/X11/Xlib.h	/^	Colormap colormap;	\/* COLORMAP or None *\/$/;"	m	struct:__anon313
colormap	xlib/X11/Xlib.h	/^    Colormap colormap;		\/* color map to be associated with window *\/$/;"	m	struct:__anon273
colormap	xlib/X11/Xlib.h	/^    Colormap colormap;		\/* color map to be associated with window *\/$/;"	m	struct:__anon274
colormap	xlib/X11/Xutil.h	/^	Colormap colormap;$/;"	m	struct:__anon265
colormapName	generic/tkFrame.c	/^    char *colormapName;		\/* Textual description of colormap for window,$/;"	m	struct:__anon145	file:
colormap_size	xlib/X11/Xutil.h	/^  int colormap_size;$/;"	m	struct:__anon264
colorref	win/tkWinWm.c	/^    COLORREF colorref;		\/* COLORREF for transparent handling *\/$/;"	m	struct:TkWmInfo	file:
colorrefresh	library/demos/button.tcl	/^proc colorrefresh {w col} {$/;"	p
colors	generic/tkCanvPs.c	/^    XColor *colors;		\/* Pixel value -> RGB mappings *\/$/;"	m	struct:TkColormapData	file:
colors	tests/cmap.tcl	/^proc colors {w redInc greenInc blueInc} {$/;"	p
column	generic/tkGrid.c	/^    int column, row;		\/* Location in the grid (starting from$/;"	m	struct:Gridder	file:
column0	generic/ttk/ttkTreeview.c	/^    TreeColumn column0;		\/* Column options for display column #0 *\/$/;"	m	struct:__anon83	file:
columnBreak	generic/tkMenu.h	/^    int columnBreak;		\/* If this is 0, this item appears below the$/;"	m	struct:TkMenuEntry
columnEnd	generic/tkGrid.c	/^    int columnEnd;		\/* The last column occupied by any slave. *\/$/;"	m	struct:__anon135	file:
columnMax	generic/tkGrid.c	/^    int columnMax;		\/* The number of columns with constraints. *\/$/;"	m	struct:__anon135	file:
columnNames	generic/ttk/ttkTreeview.c	/^    Tcl_HashTable columnNames;	\/* Map: column name -> column table entry *\/$/;"	m	struct:__anon83	file:
columnOptionTable	generic/ttk/ttkTreeview.c	/^    Tk_OptionTable columnOptionTable;$/;"	m	struct:__anon83	file:
columnPtr	generic/tkGrid.c	/^    SlotInfo *columnPtr;	\/* Pointer to array of column constraints. *\/$/;"	m	struct:__anon135	file:
columnSpace	generic/tkGrid.c	/^    int columnSpace;		\/* The number of slots currently allocated for$/;"	m	struct:__anon135	file:
columns	generic/ttk/ttkTreeview.c	/^    TreeColumn *columns;	\/* Array of column options for data columns *\/$/;"	m	struct:__anon83	file:
columnsObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *columnsObj;	\/* List of symbolic column names *\/$/;"	m	struct:__anon83	file:
combobox	generic/ttk/ttkEntry.c	/^    ComboboxPart combobox;$/;"	m	struct:__anon29	file:
combobox_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable combobox_statemap[] = {$/;"	v	file:
combotext_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable combotext_statemap[] =$/;"	v	file:
commProperty	generic/tkInt.h	/^    Atom commProperty;		\/* X's name for comm property. *\/$/;"	m	struct:TkDisplay
commTkwin	generic/tkInt.h	/^    Tk_Window commTkwin;	\/* Window used for communication between$/;"	m	struct:TkDisplay
commWindow	unix/tkUnixSend.c	/^    Window commWindow;		\/* Target's communication window. *\/$/;"	m	struct:PendingCommand	file:
command	generic/tkButton.c	/^enum command {$/;"	g	file:
command	generic/tkEntry.h	/^    char *command;		\/* Command to invoke for spin buttons. NULL$/;"	m	struct:__anon184
command	generic/tkListbox.c	/^enum command {$/;"	g	file:
command	generic/tkMain.c	/^    Tcl_DString command;	\/* Used to assemble lines of terminal input$/;"	m	struct:InteractiveState	file:
command	generic/tkMenubutton.c	/^enum command {$/;"	g	file:
command	generic/tkScale.c	/^enum command {$/;"	g	file:
command	generic/tkScale.h	/^    char *command;		\/* Command prefix to use when invoking Tcl$/;"	m	struct:TkScale
command	generic/tkScrollbar.h	/^    char *command;		\/* Command prefix to use when invoking$/;"	m	struct:TkScrollbar
command	generic/tkSelect.c	/^    char command[1];		\/* Command to invoke. Actual space is$/;"	m	struct:__anon177	file:
command	generic/tkUndo.h	/^    Tcl_Command command;	\/* Tcl token used to get the current Tcl$/;"	m	struct:TkUndoSubAtom
command	generic/ttk/ttkTheme.h	/^    Tcl_ObjCmdProc *command; 		\/* subcommand implementation, OR: *\/$/;"	m	struct:TtkEnsemble
command	macosx/tkMacOSXWm.h	/^    char command[4];		\/* Tcl command to invoke when a client message$/;"	m	struct:ProtocolHandler
command	unix/tkUnixWm.c	/^    char command[1];		\/* Tcl command to invoke when a client message$/;"	m	struct:ProtocolHandler	file:
command	win/tkWinWm.c	/^    char command[1];		\/* Tcl command to invoke when a client message$/;"	m	struct:ProtocolHandler	file:
commandNames	generic/tkButton.c	/^static const char *const commandNames[][8] = {$/;"	v	file:
commandNames	generic/tkListbox.c	/^static const char *const commandNames[] = {$/;"	v	file:
commandNames	generic/tkMenubutton.c	/^static const char *const commandNames[] = {$/;"	v	file:
commandNames	generic/tkScale.c	/^static const char *const commandNames[] = {$/;"	v	file:
commandObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *commandObj;$/;"	m	struct:__anon17	file:
commandObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *commandObj;$/;"	m	struct:__anon19	file:
commandObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *commandObj;$/;"	m	struct:__anon21	file:
commandObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*commandObj;$/;"	m	struct:__anon30	file:
commandObj	generic/ttk/ttkScale.c	/^    Tcl_Obj *commandObj;$/;"	m	struct:__anon107	file:
commandObj	generic/ttk/ttkScrollbar.c	/^    Tcl_Obj	*commandObj;$/;"	m	struct:__anon51	file:
commandObj	macosx/tkMacOSXWm.h	/^    Tcl_Obj *commandObj;	\/* The command (guaranteed to be a list) for$/;"	m	struct:TkWmInfo
commandPtr	generic/tkButton.h	/^    Tcl_Obj *commandPtr;	\/* Value of -command option: specifies script$/;"	m	struct:__anon178
commandPtr	generic/tkMenu.h	/^    Tcl_Obj *commandPtr;	\/* Command to invoke when entry is invoked.$/;"	m	struct:TkMenuEntry
commandSize	generic/tkScrollbar.h	/^    int commandSize;		\/* Number of non-NULL bytes in command. *\/$/;"	m	struct:TkScrollbar
commandTable	win/tkWinMenu.c	/^    Tcl_HashTable commandTable;	\/* A map of command ids to menu entries *\/$/;"	m	struct:ThreadSpecificData	file:
commands	generic/tkWindow.c	/^static const TkCmd commands[] = {$/;"	v	file:
commands	generic/ttk/ttkWidget.h	/^    const Ttk_Ensemble	*commands;	\/* Widget instance subcommands *\/$/;"	m	struct:WidgetSpec_
commonOptSpec	generic/tkFrame.c	/^static const Tk_OptionSpec commonOptSpec[] = {$/;"	v	file:
compose_ptr	xlib/X11/Xutil.h	/^    XPointer compose_ptr;	\/* state table pointer *\/$/;"	m	struct:_XComposeStatus
compositingRule	generic/tkImgPhoto.c	/^    int compositingRule;	\/* Value specified for -compositingrule$/;"	m	struct:SubcommandOptions	file:
compound	generic/tkButton.h	/^    int compound;		\/* Value of -compound option; specifies$/;"	m	struct:__anon178
compound	generic/tkButton.h	/^enum compound {$/;"	g
compound	generic/tkMenu.h	/^    int compound;		\/* Value of -compound option; specifies$/;"	m	struct:TkMenuEntry
compound	generic/tkMenu.h	/^enum compound {$/;"	g
compound	generic/tkMenubutton.h	/^    int compound;		\/* Value of -compound option; specifies$/;"	m	struct:__anon137
compound	generic/ttk/ttkLabel.c	/^    Ttk_Compound	compound;$/;"	m	struct:__anon63	file:
compoundObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *compoundObj;$/;"	m	struct:__anon13	file:
compoundObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj		*compoundObj;$/;"	m	struct:__anon63	file:
compoundObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj *compoundObj;$/;"	m	struct:__anon65	file:
compoundStrings	generic/tkButton.c	/^static const char *const compoundStrings[] = {$/;"	v	file:
compoundStrings	generic/tkMenu.c	/^static const char *const compoundStrings[] = {$/;"	v	file:
compoundStrings	generic/tkMenubutton.c	/^static const char *const compoundStrings[] = {$/;"	v	file:
compoundTextAtom	generic/tkInt.h	/^    Atom compoundTextAtom;	\/* Atom for COMPOUND_TEXT. *\/$/;"	m	struct:TkDisplay
compression	generic/tkImgPNG.c	/^    unsigned char compression;	\/* Compression Mode (always zlib). *\/$/;"	m	struct:__anon179	file:
computeButtonDrawInfo	macosx/ttkMacOSXTheme.c	/^static inline HIThemeButtonDrawInfo computeButtonDrawInfo($/;"	f	file:
config	tests/butGeom.tcl	/^proc config {option value} {$/;"	p
config	tests/butGeom2.tcl	/^proc config {option value} {$/;"	p
config-but	tests/butGeom2.tcl	/^proc config-but {option value} {$/;"	p
configAttributes	macosx/tkMacOSXWm.h	/^    UInt64 attributes, configAttributes;$/;"	m	struct:TkWmInfo
configHeight	macosx/tkMacOSXWm.h	/^    int configWidth, configHeight;$/;"	m	struct:TkWmInfo
configHeight	unix/tkUnixWm.c	/^    int configWidth, configHeight;$/;"	m	struct:TkWmInfo	file:
configHeight	win/tkWinWm.c	/^    int configWidth, configHeight;$/;"	m	struct:TkWmInfo	file:
configProc	generic/tk.h	/^    Tk_ItemConfigureProc *configProc;$/;"	m	struct:Tk_ItemType
configSpecs	generic/tk.h	/^    CONST86 Tk_ConfigSpec *configSpecs; \/* Pointer to array of configuration specs for$/;"	m	struct:Tk_ItemType
configSpecs	generic/tkCanvArc.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvBmap.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvImg.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvLine.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvPoly.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvPs.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvText.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvWind.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkCanvas.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkImgBmap.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkImgPhoto.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkRectOval.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configSpecs	generic/tkScrollbar.c	/^static const Tk_ConfigSpec configSpecs[] = {$/;"	v	file:
configWidth	macosx/tkMacOSXWm.h	/^    int configWidth, configHeight;$/;"	m	struct:TkWmInfo
configWidth	unix/tkUnixWm.c	/^    int configWidth, configHeight;$/;"	m	struct:TkWmInfo	file:
configWidth	win/tkWinWm.c	/^    int configWidth, configHeight;$/;"	m	struct:TkWmInfo	file:
configX	macosx/tkMacOSXWm.h	/^    int configX, configY;	\/* x,y position of toplevel when window is$/;"	m	struct:TkWmInfo
configX	win/tkWinWm.c	/^    int configX, configY;	\/* x,y position of toplevel when window is$/;"	m	struct:TkWmInfo	file:
configY	macosx/tkMacOSXWm.h	/^    int configX, configY;	\/* x,y position of toplevel when window is$/;"	m	struct:TkWmInfo
configY	win/tkWinWm.c	/^    int configX, configY;	\/* x,y position of toplevel when window is$/;"	m	struct:TkWmInfo	file:
configureProc	generic/ttk/ttkWidget.h	/^    int 	(*configureProc)(Tcl_Interp *, void *recordPtr, int flags);$/;"	m	struct:WidgetSpec_
configureRequestDetail	generic/tkBind.c	/^static const TkStateMap configureRequestDetail[] = {$/;"	v	file:
confine	generic/tkCanvas.h	/^    int confine;		\/* Non-zero means constrain view to keep as$/;"	m	struct:TkCanvas
confirmOverwrite	win/tkWinDialog.c	/^    int confirmOverwrite;       \/* Confirm before overwriting *\/$/;"	m	struct:OFNOpts	file:
conn_checker	xlib/X11/Xlib.h	/^	int conn_checker;         \/* ugly thing used by _XEventsQueued *\/$/;"	m	struct:_XDisplay
consoleChannelType	generic/tkConsole.c	/^static const Tcl_ChannelType consoleChannelType = {$/;"	v	file:
consoleInterp	generic/tkConsole.c	/^    Tcl_Interp *consoleInterp;	\/* Interpreter displaying the console. *\/$/;"	m	struct:ConsoleInfo	file:
consoleRequired	win/winMain.c	/^static BOOL consoleRequired = TRUE;$/;"	v	file:
containerExistProc	macosx/tkMacOSXInt.h	/^    Tk_MacOSXEmbedMakeContainerExistProc *containerExistProc;$/;"	m	struct:__anon196
context	macosx/tkMacOSXInt.h	/^    CGContextRef context;$/;"	m	struct:TkWindowPrivate
context	macosx/tkMacOSXPrivate.h	/^    CGContextRef context;$/;"	m	struct:TkMacOSXDrawingContext
context_db	xlib/X11/Xlib.h	/^	struct _XContextDB *context_db; \/* context database *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XContextDB
control	win/tkWinTest.c	/^    HWND control;$/;"	m	struct:TestFindControlState	file:
controlFamily	unix/tkUnixFont.c	/^    FontFamily controlFamily;	\/* FontFamily used to handle control character$/;"	m	struct:ThreadSpecificData	file:
controlSize	macosx/tkMacOSXScrlbr.c	/^    NSControlSize controlSize;$/;"	m	struct:ScrollbarMetrics	file:
controlSubFont	unix/tkUnixFont.c	/^    SubFont controlSubFont;	\/* Font to use to display control-character$/;"	m	struct:UnixFont	file:
convertPointFromScreen	macosx/tkMacOSXWm.c	/^- (NSPoint) convertPointFromScreen: (NSPoint)point$/;"	f
convert_ns_to_X_keysym	macosx/tkMacOSXKeyEvent.c	/^static unsigned convert_ns_to_X_keysym[] =$/;"	v	file:
converts	unix/tkUnixSelect.c	/^    ConvertInfo *converts;	\/* One entry for each pair in multAtoms. This$/;"	m	struct:IncrInfo	file:
cookie	win/tkWinSend.c	/^    DWORD cookie;		\/* ROT cookie returned on registration *\/$/;"	m	struct:__anon223	file:
coordProc	generic/tk.h	/^    Tk_ItemCoordProc *coordProc;\/* Procedure to call to get and set the item's$/;"	m	struct:Tk_ItemType
coordProc	generic/tk.h	/^    int (*coordProc) (Tk_Canvas canvas, double *pointPtr, int numPoints,$/;"	m	struct:Tk_SmoothMethod
coordPtr	generic/tkCanvLine.c	/^    double *coordPtr;		\/* Pointer to malloc-ed array containing x-$/;"	m	struct:LineItem	file:
coordPtr	generic/tkCanvPoly.c	/^    double *coordPtr;		\/* Pointer to malloc-ed array containing x-$/;"	m	struct:PolygonItem	file:
copyGC	generic/tkButton.h	/^    GC copyGC;			\/* Used for copying information from an$/;"	m	struct:__anon178
copyGC	generic/tkScale.h	/^    GC copyGC;			\/* Used for copying from pixmap onto screen *\/$/;"	m	struct:TkScale
copyGC	generic/tkTextDisp.c	/^    GC copyGC;			\/* Graphics context for copying from off-$/;"	m	struct:TextDInfo	file:
copyGC	macosx/tkMacOSXScrlbr.c	/^    GC copyGC;			\/* Used for copying from pixmap onto screen. *\/$/;"	m	struct:MacScrollbar	file:
copyGC	unix/tkUnixScrlbr.c	/^    GC copyGC;			\/* Used for copying from pixmap onto screen. *\/$/;"	m	struct:UnixScrollbar	file:
core	generic/ttk/ttkButton.c	/^    WidgetCore	core;$/;"	m	struct:__anon14	file:
core	generic/ttk/ttkButton.c	/^    WidgetCore	core;$/;"	m	struct:__anon16	file:
core	generic/ttk/ttkButton.c	/^    WidgetCore	core;$/;"	m	struct:__anon18	file:
core	generic/ttk/ttkButton.c	/^    WidgetCore core;$/;"	m	struct:__anon20	file:
core	generic/ttk/ttkButton.c	/^    WidgetCore core;$/;"	m	struct:__anon22	file:
core	generic/ttk/ttkButton.c	/^    WidgetCore core;$/;"	m	struct:__anon24	file:
core	generic/ttk/ttkEntry.c	/^    WidgetCore	core;$/;"	m	struct:__anon27	file:
core	generic/ttk/ttkEntry.c	/^    WidgetCore core;$/;"	m	struct:__anon29	file:
core	generic/ttk/ttkEntry.c	/^    WidgetCore core;$/;"	m	struct:__anon31	file:
core	generic/ttk/ttkFrame.c	/^    WidgetCore	core;$/;"	m	struct:__anon119	file:
core	generic/ttk/ttkFrame.c	/^    WidgetCore  	core;$/;"	m	struct:__anon121	file:
core	generic/ttk/ttkNotebook.c	/^    WidgetCore core;$/;"	m	struct:__anon67	file:
core	generic/ttk/ttkPanedwindow.c	/^    WidgetCore	core;$/;"	m	struct:__anon124	file:
core	generic/ttk/ttkProgress.c	/^    WidgetCore 		core;$/;"	m	struct:__anon102	file:
core	generic/ttk/ttkScale.c	/^    WidgetCore core;$/;"	m	struct:__anon108	file:
core	generic/ttk/ttkScrollbar.c	/^    WidgetCore core;$/;"	m	struct:__anon52	file:
core	generic/ttk/ttkSeparator.c	/^    WidgetCore core;$/;"	m	struct:__anon117	file:
core	generic/ttk/ttkSquare.c	/^    WidgetCore core;$/;"	m	struct:__anon112	file:
core	generic/ttk/ttkTreeview.c	/^    WidgetCore core;$/;"	m	struct:__anon84	file:
corePtr	generic/ttk/ttkScroll.c	/^    WidgetCore	*corePtr;$/;"	m	struct:ScrollHandleRec	file:
corePtr	generic/ttk/ttkTrack.c	/^    WidgetCore		*corePtr;	\/* widget to track *\/$/;"	m	struct:__anon50	file:
cosine	generic/tkCanvText.c	/^    double cosine;		\/* Cosine of angle field. *\/$/;"	m	struct:TextItem	file:
count	xlib/X11/Xlib.h	/^	int count;		\/* defines range of change w. first_keycode*\/$/;"	m	struct:__anon316
count	xlib/X11/Xlib.h	/^	int count;		\/* if non-zero, at least this many more *\/$/;"	m	struct:__anon293
count	xlib/X11/Xlib.h	/^	int count;		\/* if non-zero, at least this many more *\/$/;"	m	struct:__anon294
countPtr	generic/tkText.c	/^    Tcl_Obj *countPtr;		\/* Keeps track of currently found lengths. *\/$/;"	m	struct:SearchSpec	file:
count_styles	xlib/X11/Xlib.h	/^    unsigned short count_styles;$/;"	m	struct:__anon329
counts	generic/tkTextBTree.c	/^    int *counts;		\/* Toggle count (so far) for each entry in$/;"	m	struct:TagInfo	file:
courierAliases	generic/tkFont.c	/^static const char *const courierAliases[] = {$/;"	v	file:
create	generic/tkText.h	/^    char *create;		\/* Script to create window on-demand. NULL$/;"	m	struct:TkTextEmbWindow
createPlot	library/demos/twind.tcl	/^proc createPlot {t} {$/;"	p
createProc	generic/tk.h	/^    Tk_ClassCreateProc *createProc;$/;"	m	struct:Tk_ClassProcs
createProc	generic/tk.h	/^    Tk_ImageCreateProc *createProc;$/;"	m	struct:Tk_ImageType
createProc	generic/tk.h	/^    Tk_ItemCreateProc *createProc;$/;"	m	struct:Tk_ItemType
createWindow	win/tkWinWm.c	/^    TkWindow *createWindow;	\/* Window that is being constructed. This$/;"	m	struct:ThreadSpecificData	file:
create_image	xlib/X11/Xlib.h	/^	struct _XImage *(*create_image)();$/;"	m	struct:_XImage::funcs	typeref:struct:_XImage::funcs::create_image
created	generic/tkStyle.c	/^    int created;		\/* Boolean, whether the element was created$/;"	m	struct:Element	file:
crefObj	win/tkWinWm.c	/^    Tcl_Obj *crefObj;		\/* COLORREF object for transparent handling *\/$/;"	m	struct:TkWmInfo	file:
csize	generic/tkImgGIF.c	/^    int csize;$/;"	m	struct:__anon129	file:
curDispPtr	generic/tkBind.c	/^    TkDisplay *curDispPtr;	\/* Display for last binding command invoked in$/;"	m	struct:__anon171	file:
curElement	generic/tkEntry.h	/^    int curElement;		\/* currently mouseover control *\/$/;"	m	struct:__anon184
curEvent	generic/tkBind.c	/^    int curEvent;		\/* Index in eventRing of most recent event.$/;"	m	struct:Tk_BindingTable_	file:
curIndex	generic/tkText.h	/^    TkTextIndex curIndex;	\/* Position of last tag transition returned by$/;"	m	struct:TkTextSearch
curLevel	generic/tkOption.c	/^    int curLevel;		\/* Highest level currently in use. Note:$/;"	m	struct:ThreadSpecificData	file:
curScreenIndex	generic/tkBind.c	/^    int curScreenIndex;		\/* Index of screen for last binding command *\/$/;"	m	struct:__anon171	file:
curTagArrayPtr	generic/tkText.h	/^    TkTextTag **curTagArrayPtr;	\/* Pointer to array of tags for current mark,$/;"	m	struct:TkText
curXPixelOffset	generic/tkTextDisp.c	/^    int curXPixelOffset;	\/* Actual x scroll position, measured as the$/;"	m	struct:TextDInfo	file:
currentAccumulated	generic/tkImgGIF.c	/^    unsigned long currentAccumulated;$/;"	m	struct:__anon130	file:
currentBits	generic/tkImgGIF.c	/^    int currentBits;$/;"	m	struct:__anon130	file:
currentIndex	generic/ttk/ttkEntry.c	/^    int 	currentIndex;$/;"	m	struct:__anon28	file:
currentIndex	generic/ttk/ttkNotebook.c	/^    int currentIndex;		\/* index of currently selected tab *\/$/;"	m	struct:__anon66	file:
currentItemPtr	generic/tkCanvas.h	/^    Tk_Item *currentItemPtr;	\/* The item currently containing the mouse$/;"	m	struct:TkCanvas
currentLine	generic/tkImgPNG.c	/^    int currentLine;		\/* Current line being unfiltered. *\/$/;"	m	struct:__anon179	file:
currentMarkPtr	generic/tkText.h	/^    TkTextSegment *currentMarkPtr;$/;"	m	struct:TkText
currentMetricUpdateLine	generic/tkTextDisp.c	/^    int currentMetricUpdateLine;\/* Stores a counter which is used to iterate$/;"	m	struct:TextDInfo	file:
currentPtr	generic/tkCanvas.c	/^    Tk_Item *currentPtr;	\/* Pointer to last item returned. *\/$/;"	m	struct:TagSearch	file:
currentTheme	generic/ttk/ttkTheme.c	/^    Theme *currentTheme;		\/* Currently-selected theme *\/$/;"	m	struct:__anon115	file:
currentUid	generic/tkCanvas.c	/^    Tk_Uid currentUid;$/;"	m	struct:__anon154	file:
cursor	generic/tkBusy.h	/^    Tk_Cursor cursor;		\/* Cursor for the busy window. *\/$/;"	m	struct:Busy
cursor	generic/tkButton.h	/^    Tk_Cursor cursor;		\/* Value of -cursor option: if not None,$/;"	m	struct:__anon178
cursor	generic/tkCanvas.h	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:TkCanvas
cursor	generic/tkEntry.h	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:__anon183
cursor	generic/tkFrame.c	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:__anon145	file:
cursor	generic/tkInt.h	/^    Tk_Cursor cursor;		\/* System specific identifier for cursor. *\/$/;"	m	struct:TkCursor
cursor	generic/tkListbox.c	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:__anon149	file:
cursor	generic/tkMenubutton.h	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:__anon137
cursor	generic/tkMessage.c	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:__anon153	file:
cursor	generic/tkPanedWindow.c	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:PanedWindow	file:
cursor	generic/tkScale.h	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:TkScale
cursor	generic/tkScrollbar.h	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:TkScrollbar
cursor	generic/tkText.h	/^    Tk_Cursor cursor;		\/* Current cursor for window, or None. *\/$/;"	m	struct:TkText
cursor	xlib/X11/Xlib.h	/^    Cursor cursor;		\/* cursor to be displayed (or None) *\/$/;"	m	struct:__anon273
cursorDataTable	generic/tkInt.h	/^    Tcl_HashTable cursorDataTable;$/;"	m	struct:TkDisplay
cursorFont	generic/tkInt.h	/^    Font cursorFont;		\/* Font to use for standard cursors. None$/;"	m	struct:TkDisplay
cursorIdTable	generic/tkInt.h	/^    Tcl_HashTable cursorIdTable;$/;"	m	struct:TkDisplay
cursorInit	generic/tkInt.h	/^    int cursorInit;		\/* 0 means cursor module need initializing. *\/$/;"	m	struct:TkDisplay
cursorNameTable	generic/tkInt.h	/^    Tcl_HashTable cursorNameTable;$/;"	m	struct:TkDisplay
cursorNames	macosx/tkMacOSXCursor.c	/^static const struct CursorName cursorNames[] = {$/;"	v	typeref:struct:CursorName	file:
cursorNames	unix/tkUnixCursor.c	/^} cursorNames[] = {$/;"	v	typeref:struct:CursorName	file:
cursorNames	win/tkWinCursor.c	/^} cursorNames[] = {$/;"	v	typeref:struct:CursorName	file:
cursorObj	generic/ttk/ttkWidget.h	/^    Tcl_Obj *cursorObj;		\/* Storage for -cursor option *\/$/;"	m	struct:__anon48
cursorOffGC	generic/tkCanvText.c	/^    GC cursorOffGC;		\/* If not None, this gives a graphics context$/;"	m	struct:TextItem	file:
cursorOn	generic/tk.h	/^    int cursorOn;		\/* Non-zero means that an insertion cursor$/;"	m	struct:Tk_CanvasTextInfo
cursorPtr	generic/tkMenu.h	/^    Tcl_Obj *cursorPtr;		\/* Current cursor for window, or None. *\/$/;"	m	struct:TkMenu
cursorString	generic/tkInt.h	/^    char cursorString[20];	\/* Used to store a cursor id string. *\/$/;"	m	struct:TkDisplay
cursorWinPtr	generic/tkPointer.c	/^    TkWindow *cursorWinPtr;	\/* Window that is currently controlling the$/;"	m	struct:ThreadSpecificData	file:
cursor_font	xlib/X11/Xlib.h	/^	Font cursor_font;	   \/* for XCreateFontCursor *\/$/;"	m	struct:_XDisplay
custom	generic/tkConfig.c	/^	const struct Tk_ObjCustomOption *custom;$/;"	m	union:TkOption::__anon182	typeref:struct:TkOption::__anon182::Tk_ObjCustomOption	file:
customPtr	generic/tk.h	/^    CONST86 Tk_CustomOption *customPtr;$/;"	m	struct:Tk_ConfigSpec
cxId	win/ttkWinTheme.c	/^    int cxId;			\/* system metric ids for width\/height... *\/$/;"	m	struct:__anon244	file:
cyId	win/ttkWinTheme.c	/^    int cyId;			\/* ... or size if FIXEDSIZE bit set *\/$/;"	m	struct:__anon244	file:
dCharsProc	generic/tk.h	/^    Tk_ItemDCharsProc *dCharsProc;$/;"	m	struct:Tk_ItemType
dInfoPtr	generic/tkText.h	/^    struct TextDInfo *dInfoPtr;	\/* Information maintained by tkTextDisp.c. *\/$/;"	m	struct:TkText	typeref:struct:TkText::TextDInfo
dLinePtr	generic/tkTextDisp.c	/^    DLine *dLinePtr;		\/* First in list of all display lines for this$/;"	m	struct:TextDInfo	file:
dLinesInvalidated	generic/tkTextDisp.c	/^    int dLinesInvalidated;	\/* This value is set to 1 whenever something$/;"	m	struct:TextDInfo	file:
dark2ColorPtr	win/tkWin3d.c	/^    XColor *dark2ColorPtr;	\/* System3dDarkShadow *\/$/;"	m	struct:__anon252	file:
darkColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*darkColorObj;$/;"	m	struct:__anon53	file:
darkColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*darkColorObj;$/;"	m	struct:__anon54	file:
darkColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*darkColorObj;$/;"	m	struct:__anon58	file:
darkColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *darkColorObj;$/;"	m	struct:__anon59	file:
darkColorPtr	generic/tk3d.h	/^    XColor *darkColorPtr;	\/* Color for darker areas (must free when$/;"	m	struct:TkBorder
darkGC	generic/tk3d.h	/^    GC darkGC;			\/* Used to draw darker parts of the border.$/;"	m	struct:TkBorder
dash	generic/tk.h	/^    Tk_Dash dash;		\/* Dash pattern. *\/$/;"	m	struct:Tk_Outline
dashOption	generic/tkCanvArc.c	/^static const Tk_CustomOption dashOption = {$/;"	v	file:
dashOption	generic/tkCanvLine.c	/^static const Tk_CustomOption dashOption = {$/;"	v	file:
dashOption	generic/tkCanvPoly.c	/^static const Tk_CustomOption dashOption = {$/;"	v	file:
dashOption	generic/tkRectOval.c	/^static const Tk_CustomOption dashOption = {$/;"	v	file:
dash_offset	xlib/X11/Xlib.h	/^	int dash_offset;	\/* patterned\/dashed line information *\/$/;"	m	struct:__anon268
dashes	xlib/X11/Xlib.h	/^	char dashes;$/;"	m	struct:__anon268
data	generic/tkImgBmap.c	/^    char *data;			\/* Data comprising bitmap (suitable for input$/;"	m	struct:BitmapMaster	file:
data	generic/tkImgGIF.c	/^    unsigned char *data;	\/* mmencoded source string *\/$/;"	m	struct:mFile	file:
data	generic/ttk/ttkTreeview.c	/^    Tcl_Obj 	*data;$/;"	m	struct:__anon82	file:
data	unix/tkUnixCursor.c	/^    const char *data;$/;"	m	struct:TkCursorName	file:
data	xlib/X11/Xlib.h	/^		} data;$/;"	m	struct:__anon314	typeref:union:__anon314::__anon315
data	xlib/X11/Xlib.h	/^    char *data;			\/* pointer to image data *\/$/;"	m	struct:_XImage
data	xlib/X11/Xlib.h	/^    } data;$/;"	m	struct:_XIMStatusDrawCallbackStruct	typeref:union:_XIMStatusDrawCallbackStruct::__anon335
dataKey	generic/tkBitmap.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkButton.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkCanvas.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkColor.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkConfig.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkEvent.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkGet.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkImage.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkImgPhoto.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkMacWinMenu.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkMenu.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkObj.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkOption.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkPointer.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkSelect.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkStyle.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	generic/tkWindow.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	macosx/tkMacOSXNotify.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	unix/tkUnixEmbed.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	unix/tkUnixEvent.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	unix/tkUnixFont.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	unix/tkUnixRFont.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	unix/tkUnixSelect.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	unix/tkUnixSend.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinButton.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinDialog.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinDraw.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinEmbed.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinFont.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinMenu.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinSend.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinWindow.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinWm.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataKey	win/tkWinX.c	/^static Tcl_ThreadDataKey dataKey;$/;"	v	file:
dataString	generic/tkImgBmap.c	/^    char *dataString;		\/* Value of -data option (malloc'ed). *\/$/;"	m	struct:BitmapMaster	file:
dataString	generic/tkImgPhoto.h	/^    Tcl_Obj *dataString;	\/* Object to use as contents of image. *\/$/;"	m	struct:PhotoMaster
datarootdir	unix/Makefile	/^datarootdir		= @datarootdir@$/;"	m
db	xlib/X11/Xlib.h	/^	struct _XrmHashBucketRec *db;$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XrmHashBucketRec
dbClass	generic/tk.h	/^    Tk_Uid dbClass;		\/* Class for option in database. *\/$/;"	m	struct:Tk_ConfigSpec
dbClass	generic/tk.h	/^    const char *dbClass;	\/* Class for option in database. *\/$/;"	m	struct:Tk_OptionSpec
dbClassUID	generic/tkConfig.c	/^    Tk_Uid dbClassUID;		\/* The Uid form of the option database class$/;"	m	struct:TkOption	file:
dbName	generic/tk.h	/^    Tk_Uid dbName;		\/* Name for option in option database. *\/$/;"	m	struct:Tk_ConfigSpec
dbName	generic/tk.h	/^    const char *dbName;		\/* Name for option in option database. *\/$/;"	m	struct:Tk_OptionSpec
dbNameUID	generic/tkConfig.c	/^    Tk_Uid dbNameUID;	 	\/* The Uid form of the option database$/;"	m	struct:TkOption	file:
dcState	win/ttkWinXPTheme.c	/^    TkWinDCState dcState;$/;"	m	struct:__anon241	file:
debugFlag	win/tkWinDialog.c	/^    int debugFlag;		\/* Flags whether we should output debugging$/;"	m	struct:ThreadSpecificData	file:
debugInterp	win/tkWinDialog.c	/^    Tcl_Interp *debugInterp;	\/* Interpreter to used for debugging. *\/$/;"	m	struct:ThreadSpecificData	file:
defAtts	generic/tkWindow.c	/^static const XSetWindowAttributes defAtts= {$/;"	v	file:
defChanges	generic/tkWindow.c	/^static const XWindowChanges defChanges = {$/;"	v	file:
defMaxHeight	win/tkWinWm.c	/^    int defMinWidth, defMinHeight, defMaxWidth, defMaxHeight;$/;"	m	struct:TkWmInfo	file:
defMaxWidth	win/tkWinWm.c	/^    int defMinWidth, defMinHeight, defMaxWidth, defMaxHeight;$/;"	m	struct:TkWmInfo	file:
defMinHeight	win/tkWinWm.c	/^    int defMinWidth, defMinHeight, defMaxWidth, defMaxHeight;$/;"	m	struct:TkWmInfo	file:
defMinWidth	win/tkWinWm.c	/^    int defMinWidth, defMinHeight, defMaxWidth, defMaxHeight;$/;"	m	struct:TkWmInfo	file:
defValue	generic/tk.h	/^    Tk_Uid defValue;		\/* Default value for option if not specified$/;"	m	struct:Tk_ConfigSpec
defValue	generic/tk.h	/^    const char *defValue;	\/* Default value for option if not specified$/;"	m	struct:Tk_OptionSpec
defaultAttrs	macosx/tkMacOSXWm.c	/^    const UInt64 validAttrs, defaultAttrs, forceOnAttrs, forceOffAttrs;$/;"	m	struct:__anon205	file:
defaultBg	macosx/tkMacOSXMenu.c	/^static unsigned long defaultBg = 0, defaultFg = 0;$/;"	v	file:
defaultBorderWidth	win/tkWinMenu.c	/^static int defaultBorderWidth;	\/* The windows default border width. *\/$/;"	v	file:
defaultCCCs	xlib/X11/Xlib.h	/^	   XPointer defaultCCCs;  \/* pointer to an array of default XcmsCCC *\/$/;"	m	struct:_XDisplay::__anon286
defaultEnginePtr	generic/tkStyle.c	/^    StyleEngine *defaultEnginePtr;$/;"	m	struct:ThreadSpecificData	file:
defaultFg	macosx/tkMacOSXMenu.c	/^static unsigned long defaultBg = 0, defaultFg = 0;$/;"	v	file:
defaultFont	macosx/tkMacOSXFont.c	178;"	d	file:
defaultFont	macosx/tkMacOSXFont.c	214;"	d	file:
defaultHandler	generic/tkError.c	/^static TkXErrorHandler	defaultHandler = NULL;$/;"	v	file:
defaultMatch	generic/tkOption.c	/^    Element defaultMatch;	\/* Special "no match" Element to use as$/;"	m	struct:ThreadSpecificData	file:
defaultOrientation	macosx/tkMacOSXFont.c	19;"	d	file:
defaultOrientation	macosx/tkMacOSXFont.c	22;"	d	file:
defaultPalette	generic/tkImgPhoto.h	/^    Tk_Uid defaultPalette;	\/* Default palette to use if a palette is not$/;"	m	struct:PhotoInstance
defaultPtr	generic/tkConfig.c	/^    Tcl_Obj *defaultPtr;	\/* Default value for this option. *\/$/;"	m	struct:TkOption	file:
defaultPulseHandler	macosx/tkMacOSXButton.c	/^    Tcl_TimerToken defaultPulseHandler;$/;"	m	struct:__anon202	file:
defaultState	generic/tkButton.h	/^    enum defaultState defaultState;$/;"	m	struct:__anon178	typeref:enum:__anon178::defaultState
defaultState	generic/tkButton.h	/^enum defaultState {$/;"	g
defaultStateObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *defaultStateObj;$/;"	m	struct:__anon17	file:
defaultStateObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj	*defaultStateObj;$/;"	m	struct:__anon104	file:
defaultStateObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj	*defaultStateObj;	\/* for buttons *\/$/;"	m	struct:__anon88	file:
defaultStateObj	win/ttkWinTheme.c	/^    Tcl_Obj	*defaultStateObj;$/;"	m	struct:__anon247	file:
defaultStrings	generic/tkButton.c	/^static const char *const defaultStrings[] = {$/;"	v	file:
defaultTable	generic/tkArgv.c	/^static const Tk_ArgvInfo defaultTable[] = {$/;"	v	file:
defaultTheme	generic/ttk/ttkTheme.c	/^    Theme *defaultTheme;		\/* Default theme; global fallback*\/$/;"	m	struct:__anon115	file:
defaultValue	generic/ttk/ttkTheme.h	/^    const char *defaultValue;		\/* Default value to used if resource missing *\/$/;"	m	struct:Ttk_ElementOptionSpec
defaultValues	generic/ttk/ttkTheme.c	/^    Tcl_Obj **defaultValues;	\/* Array of option default values *\/$/;"	m	struct:Ttk_ElementClass_	file:
default_char	xlib/X11/Xlib.h	/^    unsigned	default_char;	\/* char to print for undefined character *\/$/;"	m	struct:__anon321
default_gc	xlib/X11/Xlib.h	/^	GC default_gc;		\/* GC for the root root visual *\/$/;"	m	struct:__anon271
default_screen	xlib/X11/Xlib.h	/^	int default_screen;	\/* default screen for operations *\/$/;"	m	struct:_XDisplay
defaultsInitialized	generic/tkButton.c	/^    int defaultsInitialized;$/;"	m	struct:ThreadSpecificData	file:
defaultsTable	generic/ttk/ttkTheme.c	/^    Tcl_HashTable	defaultsTable;	\/* KEY: string; VALUE: resource *\/$/;"	m	struct:Ttk_Style_	file:
deftagCnts	generic/tkText.h	/^    int deftagCnts[LOTSA_TAGS];$/;"	m	struct:TkTextElideInfo
deftagPtrs	generic/tkText.h	/^    TkTextTag *deftagPtrs[LOTSA_TAGS];$/;"	m	struct:TkTextElideInfo
delayedMotionPtr	generic/tkInt.h	/^    struct TkWindowEvent *delayedMotionPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWindowEvent
deleteCount	generic/tkInt.h	/^    int deleteCount;		\/* Counts # of handlers deleted since last$/;"	m	struct:TkDisplay
deleteFlag	generic/tkEvent.c	/^    int deleteFlag;		\/* Flag to set when this handler is$/;"	m	struct:GenericHandler	file:
deletePending	generic/tkFont.c	/^    int deletePending;		\/* Non-zero if font should be deleted when$/;"	m	struct:NamedFont	file:
deleteProc	generic/tk.h	/^    Tk_ImageDeleteProc *deleteProc;$/;"	m	struct:Tk_ImageType
deleteProc	generic/tk.h	/^    Tk_ItemDeleteProc *deleteProc;$/;"	m	struct:Tk_ItemType
deleteProc	generic/tkText.h	/^    Tk_SegDeleteProc *deleteProc;$/;"	m	struct:Tk_SegType
deleteWindows	tests/constraints.tcl	/^	proc deleteWindows {} {$/;"	p
deleted	generic/tkBind.c	/^    int deleted;		\/* 1 the application has been deleted but the$/;"	m	struct:TkBindInfo_	file:
deleted	generic/tkImage.c	/^    int deleted;		\/* Flag set when image is being deleted. *\/$/;"	m	struct:ImageMaster	file:
deletionEpoch	generic/tkInt.h	/^    long deletionEpoch;		\/* Incremented by window deletions. *\/$/;"	m	struct:TkMainInfo
delta	macosx/tkMacOSXMouseEvent.c	/^    long delta;$/;"	m	struct:__anon194	file:
delta	xlib/X11/Xlib.h	/^    int             delta;$/;"	m	struct:__anon327
delta	xlib/X11/Xlib.h	/^    int             delta;$/;"	m	struct:__anon328
delta	xlib/X11/Xlib.h	/^    int delta;			\/* delta between strings *\/$/;"	m	struct:__anon322
delta	xlib/X11/Xlib.h	/^    int delta;			\/* delta between strings *\/$/;"	m	struct:__anon324
deploy_make_args	macosx/GNUmakefile	/^deploy_make_args	:= BUILD_STYLE=Deployment INSTALL_TARGET=install-strip$/;"	m
depth	generic/tk.h	/^    int depth;$/;"	m	struct:Tk_FakeWin
depth	generic/tk3d.h	/^    int depth;			\/* Number of bits per pixel of drawables where$/;"	m	struct:TkBorder
depth	generic/tkGC.c	/^    int depth;			\/* and depth for which GC is valid. *\/$/;"	m	struct:__anon141	file:
depth	generic/tkInt.h	/^    int depth;			\/* Number of bits\/pixel. *\/$/;"	m	struct:TkWindow
depth	generic/tkUndo.h	/^    int depth;$/;"	m	struct:TkUndoRedoStack
depth	win/tkWinInt.h	/^    int depth;$/;"	m	struct:__anon226
depth	xlib/X11/Xlib.h	/^	int depth;		\/* depth of this image format *\/$/;"	m	struct:__anon272
depth	xlib/X11/Xlib.h	/^	int depth;		\/* this depth (Z) of the depth *\/$/;"	m	struct:__anon270
depth	xlib/X11/Xlib.h	/^    int depth;			\/* depth of image *\/$/;"	m	struct:_XImage
depth	xlib/X11/Xlib.h	/^    int depth;          	\/* depth of window *\/$/;"	m	struct:__anon274
depth	xlib/X11/Xlib.h	/^    int depth;$/;"	m	struct:__anon267
depth	xlib/X11/Xutil.h	/^  int depth;$/;"	m	struct:__anon264
depths	xlib/X11/Xlib.h	/^	Depth *depths;		\/* list of allowable depths on the screen *\/$/;"	m	struct:__anon271
descent	generic/tk.h	/^    int descent;		\/* The largest amount in pixels that any$/;"	m	struct:Tk_FontMetrics
descent	generic/tkFont.h	/^    int	descent;		\/* From baseline to bottom of font. *\/$/;"	m	struct:TkFontMetrics
descent	xlib/X11/Xlib.h	/^    int		descent;	\/* log. descent below baseline for spacing *\/$/;"	m	struct:__anon321
descent	xlib/X11/Xlib.h	/^    short	descent;	\/* baseline to bottom edge of raster *\/$/;"	m	struct:__anon319
destination	generic/tkImgGIF.c	/^    ClientData destination;$/;"	m	struct:__anon130	file:
destroy_image	xlib/X11/Xlib.h	/^	int (*destroy_image)        (struct _XImage *);$/;"	m	struct:_XImage::funcs
destroy_image	xlib/X11/Xlib.h	/^	int (*destroy_image)();$/;"	m	struct:_XImage::funcs
detail	generic/tkBind.c	/^    Detail detail;		\/* Additional information that must match$/;"	m	struct:__anon169	file:
detail	generic/tkBind.c	/^    Detail detail;		\/* Additional information, such as keysym,$/;"	m	struct:__anon168	file:
detail	xlib/X11/Xlib.h	/^	int detail;		\/* Above, Below, TopIf, BottomIf, Opposite *\/$/;"	m	struct:__anon306
detail	xlib/X11/Xlib.h	/^	int detail;$/;"	m	struct:__anon290
detail	xlib/X11/Xlib.h	/^	int detail;$/;"	m	struct:__anon291
detailRing	generic/tkBind.c	/^    Detail detailRing[EVENT_BUFFER_SIZE];$/;"	m	struct:Tk_BindingTable_	file:
develop_make_args	macosx/GNUmakefile	/^develop_make_args	:= BUILD_STYLE=Development CONFIGURE_ARGS=--enable-symbols$/;"	m
dfgColorPtr	generic/tkEntry.h	/^    XColor *dfgColorPtr;	\/* Text color in disabled mode. *\/$/;"	m	struct:__anon183
dfgColorPtr	generic/tkListbox.c	/^    XColor *dfgColorPtr;	\/* Text color in disabled mode. *\/$/;"	m	struct:__anon149	file:
diameterObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *diameterObj;$/;"	m	struct:__anon98	file:
diameterObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *diameterObj;$/;"	m	struct:__anon40	file:
digitFormat	generic/tkEntry.h	/^    char digitFormat[10];	\/* Sprintf conversion specifier computed from$/;"	m	struct:__anon184
digits	generic/tkScale.h	/^    int digits;			\/* Number of significant digits to print in$/;"	m	struct:TkScale
dingbatsAliases	generic/tkFont.c	/^static const char *const dingbatsAliases[] = {$/;"	v	file:
direction	generic/tkMenubutton.h	/^    enum direction direction;	\/* Direction for where to pop the menu. Valid$/;"	m	struct:__anon137	typeref:enum:__anon137::direction
direction	generic/tkMenubutton.h	/^enum direction {$/;"	g
direction	xlib/X11/Xlib.h	/^    XIMCaretDirection direction; \/* Caret moves direction *\/$/;"	m	struct:_XIMPreeditCaretCallbackStruct
direction	xlib/X11/Xlib.h	/^    unsigned	direction;	\/* hint about direction the font is painted *\/$/;"	m	struct:__anon321
directionObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *directionObj;$/;"	m	struct:__anon23	file:
directionObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *directionObj;$/;"	m	struct:__anon93	file:
directionStrings	generic/tkMenubutton.c	/^static const char *const directionStrings[] = {$/;"	v	file:
directionStrings	generic/ttk/ttkButton.c	/^static const char *const directionStrings[] = {$/;"	v	file:
directionStrings	generic/ttk/ttkDefaultTheme.c	/^static const char *directionStrings[] = {	\/* See also: button.c *\/$/;"	v	file:
dirtyAtts	generic/tkInt.h	/^    unsigned long dirtyAtts;	\/* Bits indicate fields of "atts" that are$/;"	m	struct:TkWindow
dirtyChanges	generic/tkInt.h	/^    unsigned int dirtyChanges;	\/* Bits indicate fields of "changes" that are$/;"	m	struct:TkWindow
dirtyMode	generic/tkText.h	/^    TkTextDirtyMode dirtyMode;	\/* The nature of the dirtyness characterized$/;"	m	struct:TkSharedText
disabledBgColor	generic/tkCanvBmap.c	/^    XColor *disabledBgColor;	\/* Background color to use for bitmap. *\/$/;"	m	struct:BitmapItem	file:
disabledBitmap	generic/tkCanvBmap.c	/^    Pixmap disabledBitmap;	\/* Bitmap to display in window. *\/$/;"	m	struct:BitmapItem	file:
disabledBorder	generic/tkEntry.h	/^    Tk_3DBorder disabledBorder;	\/* Used for drawing border around whole window$/;"	m	struct:__anon183
disabledColor	generic/tk.h	/^    XColor *disabledColor;	\/* Outline color if state is disabled. *\/$/;"	m	struct:Tk_Outline
disabledColor	generic/tkCanvText.c	/^    XColor *disabledColor;	\/* Color for text. *\/$/;"	m	struct:TextItem	file:
disabledDash	generic/tk.h	/^    Tk_Dash disabledDash;	\/* Dash pattern if state is disabled. *\/$/;"	m	struct:Tk_Outline
disabledFg	generic/tkButton.h	/^    XColor *disabledFg;		\/* Value of -disabledforeground option:$/;"	m	struct:__anon178
disabledFg	generic/tkMenubutton.h	/^    XColor *disabledFg;		\/* Foreground color when disabled. NULL means$/;"	m	struct:__anon137
disabledFgColor	generic/tkCanvBmap.c	/^    XColor *disabledFgColor;	\/* Foreground color to use for bitmap. *\/$/;"	m	struct:BitmapItem	file:
disabledFgPtr	generic/tkMenu.h	/^    Tcl_Obj *disabledFgPtr;	\/* Foreground color when disabled. NULL means$/;"	m	struct:TkMenu
disabledFillColor	generic/tkCanvArc.c	/^    XColor *disabledFillColor;	\/* Color for filling arc (used for drawing$/;"	m	struct:ArcItem	file:
disabledFillColor	generic/tkCanvPoly.c	/^    XColor *disabledFillColor;	\/* Foreground color for polygon if state is$/;"	m	struct:PolygonItem	file:
disabledFillColor	generic/tkRectOval.c	/^    XColor *disabledFillColor;	\/* Color for filling rectangle\/oval if state$/;"	m	struct:RectOvalItem	file:
disabledFillStipple	generic/tkCanvArc.c	/^    Pixmap disabledFillStipple;	\/* Stipple bitmap for filling item if state is$/;"	m	struct:ArcItem	file:
disabledFillStipple	generic/tkCanvPoly.c	/^    Pixmap disabledFillStipple;	\/* Stipple bitmap for filling polygon if state$/;"	m	struct:PolygonItem	file:
disabledFillStipple	generic/tkRectOval.c	/^    Pixmap disabledFillStipple;	\/* Stipple bitmap for filling item if state is$/;"	m	struct:RectOvalItem	file:
disabledGC	generic/tkButton.h	/^    GC disabledGC;		\/* Used to produce disabled effect for text$/;"	m	struct:__anon178
disabledGC	generic/tkMenu.h	/^    GC disabledGC;		\/* Used to produce disabled effect for entry.$/;"	m	struct:TkMenuEntry
disabledGC	generic/tkMenu.h	/^    GC disabledGC;		\/* Used to produce disabled effect. If$/;"	m	struct:TkMenu
disabledGC	generic/tkMenubutton.h	/^    GC disabledGC;		\/* Used to produce disabled effect for$/;"	m	struct:__anon137
disabledImage	generic/tkCanvImg.c	/^    Tk_Image disabledImage;	\/* Image to display in window, or NULL if no$/;"	m	struct:ImageItem	file:
disabledImageGC	generic/tkMenu.h	/^    GC disabledImageGC;		\/* Used for drawing disabled images. They have$/;"	m	struct:TkMenu
disabledImageString	generic/tkCanvImg.c	/^    char *disabledImageString;	\/* String describing -disabledimage option.$/;"	m	struct:ImageItem	file:
disabledStipple	generic/tk.h	/^    Pixmap disabledStipple;	\/* Outline Stipple pattern if state is$/;"	m	struct:Tk_Outline
disabledStipple	generic/tkCanvText.c	/^    Pixmap disabledStipple;	\/* Stipple bitmap for text, or None. *\/$/;"	m	struct:TextItem	file:
disabledWidth	generic/tk.h	/^    double disabledWidth;	\/* Width of outline. *\/$/;"	m	struct:Tk_Outline
dispPtr	generic/tkFocus.c	/^    TkDisplay *dispPtr;		\/* Display that this information pertains$/;"	m	struct:TkDisplayFocusInfo	file:
dispPtr	generic/tkGrab.c	/^    TkDisplay *dispPtr;		\/* Display whose grab window is to change. *\/$/;"	m	struct:NewGrabWinEvent	file:
dispPtr	generic/tkInt.h	/^    TkDisplay *dispPtr;		\/* Display to which handler applies. *\/$/;"	m	struct:TkErrorHandler
dispPtr	generic/tkInt.h	/^    TkDisplay *dispPtr;		\/* Tk's information about display for$/;"	m	struct:TkWindow
dispPtr	macosx/tkMacOSXSend.c	/^    TkDisplay *dispPtr;		\/* Display from which the registry was$/;"	m	struct:NameRegistry	file:
dispPtr	unix/tkUnixSend.c	/^    TkDisplay *dispPtr;		\/* Display being used for communication. *\/$/;"	m	struct:PendingCommand	file:
dispPtr	unix/tkUnixSend.c	/^    TkDisplay *dispPtr;		\/* Display for the application. Needed because$/;"	m	struct:RegisteredInterp	file:
dispPtr	unix/tkUnixSend.c	/^    TkDisplay *dispPtr;		\/* Display from which the registry was$/;"	m	struct:NameRegistry	file:
display	generic/tk.h	/^    Display *display;		\/* Display the event was read from. *\/$/;"	m	struct:__anon10
display	generic/tk.h	/^    Display *display;		\/* Display the event was read from. *\/$/;"	m	struct:__anon9
display	generic/tk.h	/^    Display *display;$/;"	m	struct:Tk_FakeWin
display	generic/tkBitmap.c	/^    Display *display;		\/* Display for which bitmap is valid. *\/$/;"	m	struct:TkBitmap	file:
display	generic/tkBusy.h	/^    Display *display;		\/* Display of busy window *\/$/;"	m	struct:Busy
display	generic/tkButton.h	/^    Display *display;		\/* Display containing widget. Needed to free$/;"	m	struct:__anon178
display	generic/tkCanvas.h	/^    Display *display;		\/* Display containing widget; needed, among$/;"	m	struct:TkCanvas
display	generic/tkColor.c	/^    Display *display;		\/* Display for colormap. *\/$/;"	m	struct:__anon157	file:
display	generic/tkCursor.c	/^    Display *display;		\/* Display on which cursor will be used. *\/$/;"	m	struct:__anon1	file:
display	generic/tkEntry.h	/^    Display *display;		\/* Display containing widget. Used, among$/;"	m	struct:__anon183
display	generic/tkFrame.c	/^    Display *display;		\/* Display containing widget. Used, among$/;"	m	struct:__anon145	file:
display	generic/tkGC.c	/^    Display *display;		\/* Display for which GC is valid. *\/$/;"	m	struct:__anon141	file:
display	generic/tkGC.c	/^    Display *display;		\/* Display to which gc belongs. *\/$/;"	m	struct:__anon140	file:
display	generic/tkGrab.c	/^    Display *display;		\/* Display from which to discard events. *\/$/;"	m	struct:__anon143	file:
display	generic/tkImage.c	/^    Display *display;		\/* Display for tkwin. Needed because when the$/;"	m	struct:Image	file:
display	generic/tkImgPhoto.h	/^    Display *display;		\/* Display for windows using this instance. *\/$/;"	m	struct:PhotoInstance
display	generic/tkImgPhoto.h	/^    Display *display;		\/* Qualifies the colormap resource ID. *\/$/;"	m	struct:ColorTableId
display	generic/tkInt.h	/^    Display *display;		\/* Display containing cursor. Needed for$/;"	m	struct:TkCursor
display	generic/tkInt.h	/^    Display *display;		\/* Display containing window. *\/$/;"	m	struct:TkWindow
display	generic/tkInt.h	/^    Display *display;		\/* Xlib's info about display. *\/$/;"	m	struct:TkDisplay
display	generic/tkListbox.c	/^    Display *display;		\/* Display containing widget. Used, among$/;"	m	struct:__anon149	file:
display	generic/tkMenu.h	/^    Display *display;		\/* Display containing widget. Needed, among$/;"	m	struct:TkMenu
display	generic/tkMenubutton.h	/^    Display *display;		\/* Display containing widget. Needed, among$/;"	m	struct:__anon137
display	generic/tkMessage.c	/^    Display *display;		\/* Display containing widget. Used, among$/;"	m	struct:__anon153	file:
display	generic/tkPanedWindow.c	/^    Display *display;		\/* X's token for the window's display. *\/$/;"	m	struct:PanedWindow	file:
display	generic/tkScale.h	/^    Display *display;		\/* Display containing widget. Used, among$/;"	m	struct:TkScale
display	generic/tkScrollbar.h	/^    Display *display;		\/* Display containing widget. Used, among$/;"	m	struct:TkScrollbar
display	generic/tkSquare.c	/^    Display *display;		\/* X's token for the window's display. *\/$/;"	m	struct:__anon142	file:
display	generic/tkText.h	/^    Display *display;		\/* Display for widget. Needed, among other$/;"	m	struct:TkText
display	generic/tkWindow.c	/^static char *display = NULL;$/;"	v	file:
display	unix/tkUnixCursor.c	/^    Display *display;		\/* Display for which cursor is valid. *\/$/;"	m	struct:__anon219	file:
display	unix/tkUnixDraw.c	/^    Display *display;		\/* Display to filter. *\/$/;"	m	struct:ScrollInfo	file:
display	unix/tkUnixFont.c	/^    Display *display;		\/* Display that owns font. *\/$/;"	m	struct:UnixFont	file:
display	unix/tkUnixRFont.c	/^    Display *display;$/;"	m	struct:__anon221	file:
display	unix/tkUnixWm.c	/^    Display *display;		\/* Window belongs to this display. *\/$/;"	m	struct:WaitRestrictInfo	file:
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon287
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon288
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon289
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon290
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon291
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon292
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon293
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon294
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon295
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon296
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon297
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon298
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon299
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon300
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon301
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon302
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon303
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon304
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon305
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon306
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon307
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon308
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon309
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon310
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon311
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon312
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon313
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon314
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon316
display	xlib/X11/Xlib.h	/^	Display *display;	\/* Display the event was read from *\/$/;"	m	struct:__anon317
display	xlib/X11/Xlib.h	/^	Display *display;\/* Display the event was read from *\/$/;"	m	struct:__anon318
display	xlib/X11/Xlib.h	/^	struct _XDisplay *display;\/* back pointer to display structure *\/$/;"	m	struct:__anon271	typeref:struct:__anon271::_XDisplay
display	xlib/X11/Xlib.h	/^typedef union { Display *display;$/;"	m	union:__anon325
displayColumns	generic/ttk/ttkTreeview.c	/^    TreeColumn **displayColumns; \/* List of columns for display (incl tree) *\/$/;"	m	struct:__anon83	file:
displayColumnsObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *displayColumnsObj;	\/* List of columns to display *\/$/;"	m	struct:__anon83	file:
displayFocusPtr	generic/tkInt.h	/^    struct TkDisplayFocusInfo *displayFocusPtr;$/;"	m	struct:TkMainInfo	typeref:struct:TkMainInfo::TkDisplayFocusInfo
displayList	generic/tkWindow.c	/^    TkDisplay *displayList;	\/* List of all displays currently in use by$/;"	m	struct:ThreadSpecificData	file:
displayProc	generic/tk.h	/^    Tk_ImageDisplayProc *displayProc;$/;"	m	struct:Tk_ImageType
displayProc	generic/tk.h	/^    Tk_ItemDisplayProc *displayProc;$/;"	m	struct:Tk_ItemType
displayProc	generic/tkText.h	/^    Tk_ChunkDisplayProc *displayProc;$/;"	m	struct:TkTextDispChunk
displayProc	generic/ttk/ttkWidget.h	/^    void	(*displayProc)(void *recordPtr, Drawable d);$/;"	m	struct:WidgetSpec_
displayString	generic/tkEntry.h	/^    const char *displayString;	\/* String to use when displaying. This may be$/;"	m	struct:__anon183
displayString	generic/ttk/ttkEntry.c	/^    char *displayString;	\/* String to use when displaying *\/$/;"	m	struct:__anon26	file:
displayWidth	generic/tkFont.c	/^    int displayWidth;		\/* Width in pixels of the displayable$/;"	m	struct:LayoutChunk	file:
display_name	xlib/X11/Xlib.h	/^	char *display_name;	\/* "host:display" string used on this connect*\/$/;"	m	struct:_XDisplay
displayed	generic/tkText.h	/^    int displayed;		\/* Non-zero means that the window has been$/;"	m	struct:TkTextEmbWindowClient
distclean	macosx/GNUmakefile	/^distclean		:= ${styles:%=distclean-%}$/;"	m
ditherX	generic/tkImgPhoto.h	/^    int ditherX, ditherY;	\/* Location of first incorrectly dithered$/;"	m	struct:PhotoMaster
ditherY	generic/tkImgPhoto.h	/^    int ditherX, ditherY;	\/* Location of first incorrectly dithered$/;"	m	struct:PhotoMaster
dlopen	unix/configure	/^dlopen ();$/;"	f
do	tests/constraints.tcl	/^	    proc do {cmd {block 0}} {$/;"	p
doBars	library/demos/ttkprogress.tcl	/^proc doBars {op args} {$/;"	p
doCommandBySelector	macosx/tkMacOSXKeyEvent.c	/^- (void)doCommandBySelector: (SEL)aSelector$/;"	f
do_not_propagate_mask	xlib/X11/Xlib.h	/^    long do_not_propagate_mask;	\/* set of events that should not propagate *\/$/;"	m	struct:__anon273
do_not_propagate_mask	xlib/X11/Xlib.h	/^    long do_not_propagate_mask; \/* set of events that should not propagate *\/$/;"	m	struct:__anon274
done	generic/tkImgGIF.c	/^	int done;$/;"	m	struct:__anon127::__anon128	file:
done	unix/tkUnixDraw.c	/^    int done;			\/* Flag is 0 until filtering is done. *\/$/;"	m	struct:ScrollInfo	file:
doubleBufferPtr	generic/tkSquare.c	/^    Tcl_Obj *doubleBufferPtr;	\/* Non-zero means double-buffer redisplay with$/;"	m	struct:__anon142	file:
doubleBw	generic/tkGrid.c	/^    int doubleBw;		\/* Twice the window's last known border width.$/;"	m	struct:Gridder	file:
doubleBw	generic/tkPack.c	/^    int doubleBw;		\/* Twice the window's last known border width.$/;"	m	struct:Packer	file:
doubleTypePtr	generic/tkObj.c	/^    const Tcl_ObjType *doubleTypePtr;$/;"	m	struct:ThreadSpecificData	file:
downarrow_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable downarrow_statemap[] =$/;"	v	file:
draw	generic/tk.h	/^    Tk_DrawElementProc *draw;	\/* Draw the element in the given bounding$/;"	m	struct:Tk_ElementSpec
draw	generic/ttk/ttkTheme.h	/^    Ttk_ElementDrawProc *draw;  	\/* Draw the element *\/$/;"	m	struct:Ttk_ElementSpec
drawOrigin	generic/tkCanvText.c	/^    double drawOrigin[2];	\/* Where we start drawing from. *\/$/;"	m	struct:TextItem	file:
drawParams	macosx/tkMacOSXButton.c	/^    DrawParams drawParams;$/;"	m	struct:__anon202	file:
drawParams	macosx/tkMacOSXMenubutton.c	/^    DrawParams drawParams;$/;"	m	struct:MacMenuButton	file:
drawRgn	macosx/tkMacOSXInt.h	/^    HIShapeRef drawRgn;		\/* Clipped drawing region *\/$/;"	m	struct:TkWindowPrivate
drawType	macosx/tkMacOSXButton.c	/^    int drawType;$/;"	m	struct:__anon201	file:
drawable	win/ttkWinXPTheme.c	/^    Drawable	drawable;$/;"	m	struct:__anon241	file:
drawable	xlib/X11/Xlib.h	/^	Drawable drawable;$/;"	m	struct:__anon294
drawable	xlib/X11/Xlib.h	/^	Drawable drawable;$/;"	m	struct:__anon295
drawableXOrigin	generic/tkCanvas.h	/^    int drawableXOrigin, drawableYOrigin;$/;"	m	struct:TkCanvas
drawableYOrigin	generic/tkCanvas.h	/^    int drawableXOrigin, drawableYOrigin;$/;"	m	struct:TkCanvas
drawinfo	macosx/tkMacOSXButton.c	/^    HIThemeButtonDrawInfo drawinfo;$/;"	m	struct:__anon202	file:
drawinfo	macosx/tkMacOSXMenubutton.c	/^    HIThemeButtonDrawInfo drawinfo;$/;"	m	struct:MacMenuButton	file:
drawingParameters	generic/tkMenu.h	/^enum drawingParameters {$/;"	g
dst	generic/tk.h	/^    char *dst;			\/* Address of value to be modified; usage$/;"	m	struct:__anon5
dummy	generic/tkMain.c	/^    void (*dummy[16]) (void); \/* dummy entries 0-15, not used *\/$/;"	m	struct:__anon138	file:
dummy1	generic/tk.h	/^    char *dummy1;		\/* dispPtr *\/$/;"	m	struct:Tk_FakeWin
dummy10	generic/tk.h	/^    ClientData *dummy10;	\/* tagPtr *\/$/;"	m	struct:Tk_FakeWin
dummy11	generic/tk.h	/^    int dummy11;		\/* numTags *\/$/;"	m	struct:Tk_FakeWin
dummy12	generic/tk.h	/^    int dummy12;		\/* optionLevel *\/$/;"	m	struct:Tk_FakeWin
dummy13	generic/tk.h	/^    char *dummy13;		\/* selHandlerList *\/$/;"	m	struct:Tk_FakeWin
dummy14	generic/tk.h	/^    char *dummy14;		\/* geomMgrPtr *\/$/;"	m	struct:Tk_FakeWin
dummy15	generic/tk.h	/^    ClientData dummy15;		\/* geomData *\/$/;"	m	struct:Tk_FakeWin
dummy16	generic/tk.h	/^    char *dummy16;		\/* wmInfoPtr *\/$/;"	m	struct:Tk_FakeWin
dummy17	generic/tk.h	/^    char *dummy17;		\/* classProcPtr *\/$/;"	m	struct:Tk_FakeWin
dummy18	generic/tk.h	/^    ClientData dummy18;		\/* instanceData *\/$/;"	m	struct:Tk_FakeWin
dummy19	generic/tk.h	/^    char *dummy19;		\/* privatePtr *\/$/;"	m	struct:Tk_FakeWin
dummy2	generic/tk.h	/^    char *dummy2;		\/* childList *\/$/;"	m	struct:Tk_FakeWin
dummy20	generic/tk.h	/^    char *dummy20;		\/* geometryMaster *\/$/;"	m	struct:Tk_FakeWin
dummy3	generic/tk.h	/^    char *dummy3;		\/* lastChildPtr *\/$/;"	m	struct:Tk_FakeWin
dummy4	generic/tk.h	/^    char *dummy4;		\/* nextPtr *\/$/;"	m	struct:Tk_FakeWin
dummy5	generic/tk.h	/^    char *dummy5;		\/* mainPtr *\/$/;"	m	struct:Tk_FakeWin
dummy6	generic/tk.h	/^    unsigned int dummy6;	\/* dirtyChanges *\/$/;"	m	struct:Tk_FakeWin
dummy7	generic/tk.h	/^    unsigned long dummy7;	\/* dirtyAtts *\/$/;"	m	struct:Tk_FakeWin
dummy8	generic/tk.h	/^    char *dummy8;		\/* handlerList *\/$/;"	m	struct:Tk_FakeWin
dummy9	generic/tk.h	/^    XIC dummy9;			\/* inputContext *\/$/;"	m	struct:Tk_FakeWin
dwBytesInRes	win/tkWinWm.c	/^    DWORD dwBytesInRes;		\/* How many bytes in this resource? *\/$/;"	m	struct:__anon235	file:
dwImageOffset	win/tkWinWm.c	/^    DWORD dwImageOffset;	\/* Where in the file is this image *\/$/;"	m	struct:__anon235	file:
dwNumBytes	win/tkWinWm.c	/^    DWORD dwNumBytes;		\/* How many bytes? *\/$/;"	m	struct:__anon233	file:
dx	unix/tkUnixDraw.c	/^    int dx, dy;			\/* Amount by which window was shifted. *\/$/;"	m	struct:ScrollInfo	file:
dy	unix/tkUnixDraw.c	/^    int dx, dy;			\/* Amount by which window was shifted. *\/$/;"	m	struct:ScrollInfo	file:
dynFileBuffer	win/tkWinDialog.c	/^    TCHAR *dynFileBuffer;	\/* Dynamic filename buffer *\/$/;"	m	struct:OFNData	file:
dynFileBufferSize	win/tkWinDialog.c	/^    int dynFileBufferSize;	\/* Dynamic filename buffer size, stored to$/;"	m	struct:OFNData	file:
eIndex	generic/tkEntry.h	/^    int eIndex;			\/* Holds the current index into elements *\/$/;"	m	struct:__anon184
ebp	win/tkWin32Dll.c	/^    void *ebp;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	file:
eclass	generic/ttk/ttkLayout.c	/^    Ttk_ElementClass 	*eclass;	\/* Class record *\/$/;"	m	struct:Ttk_LayoutNode_	file:
edittext_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable edittext_statemap[] =$/;"	v	file:
ei	generic/tkText.h	/^	TkTextEmbImage ei;	\/* Information about embedded image. *\/$/;"	m	union:TkTextSegment::__anon158
elem	xlib/xcolors.c	/^typedef char elem[32];$/;"	t	file:
elementBorderWidth	generic/tkScrollbar.h	/^    int elementBorderWidth;	\/* Width of border to draw around elements$/;"	m	struct:TkScrollbar
elementName	generic/ttk/ttkTheme.h	/^    const char *	elementName;$/;"	m	struct:__anon76
elementName	win/ttkWinXPTheme.c	/^    const char	*elementName;	\/* Tk theme engine element name *\/$/;"	m	struct:__anon240	file:
elementPtr	generic/tkStyle.c	/^    struct StyledElement *elementPtr;$/;"	m	struct:StyledWidgetSpec	typeref:struct:StyledWidgetSpec::StyledElement	file:
elementRecord	generic/ttk/ttkTheme.c	/^    void *elementRecord;	\/* Scratch buffer for element record storage *\/$/;"	m	struct:Ttk_ElementClass_	file:
elementSize	generic/ttk/ttkTheme.h	/^    size_t elementSize;			\/* Size of element record *\/$/;"	m	struct:Ttk_ElementSpec
elementSpec	win/ttkWinXPTheme.c	/^    Ttk_ElementSpec *elementSpec;$/;"	m	struct:__anon240	file:
elementTable	generic/tkStyle.c	/^    Tcl_HashTable elementTable;	\/* Map a name to an element Id. Keys are$/;"	m	struct:ThreadSpecificData	file:
elementTable	generic/ttk/ttkTheme.c	/^    Tcl_HashTable elementTable;	     	\/* Map element names to class records *\/$/;"	m	struct:Ttk_Theme_	file:
elements	generic/tkStyle.c	/^    Element *elements;		\/* Array of Elements. *\/$/;"	m	struct:ThreadSpecificData	file:
elements	generic/tkStyle.c	/^    StyledElement *elements;	\/* Table of widget element descriptors. Each$/;"	m	struct:StyleEngine	file:
elide	generic/tkText.h	/^    int elide;			\/* Is the state currently elided. *\/$/;"	m	struct:TkTextElideInfo
elide	generic/tkText.h	/^    int elide;			\/* Non-zero means that data under this tag$/;"	m	struct:TkTextTag
elide	generic/tkTextDisp.c	/^    int elide;			\/* Zero means draw text, otherwise not. *\/$/;"	m	struct:StyleValues	file:
elidePriority	generic/tkText.h	/^    int elidePriority;		\/* Tag priority controlling elide state. *\/$/;"	m	struct:TkTextElideInfo
elideString	generic/tkText.h	/^    char *elideString;		\/* -elide option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
els	generic/tkOption.c	/^    Element els[1];		\/* Array of structures describing children of$/;"	m	struct:ElArray	file:
embDefBg	library/demos/twind.tcl	/^proc embDefBg t {$/;"	p
embPlotDown	library/demos/twind.tcl	/^proc embPlotDown {w x y} {$/;"	p
embPlotMove	library/demos/twind.tcl	/^proc embPlotMove {w x y} {$/;"	p
embedded	macosx/GNUmakefile	/^embedded		:= ${styles:%=embedded-%}$/;"	m
embedded	macosx/tkMacOSXEmbed.c	/^    Window embedded;		\/* The MacDrawable for the embedded window.$/;"	m	struct:Container	file:
embeddedHWnd	win/tkWinEmbed.c	/^    HWND embeddedHWnd;		\/* Windows HWND to the embedded window. *\/$/;"	m	struct:Container	file:
embeddedMenuHWND	win/tkWinMenu.c	/^    HWND embeddedMenuHWND;	\/* A window to service embedded menu$/;"	m	struct:ThreadSpecificData	file:
embeddedMenuHWnd	win/tkWinEmbed.c	/^    HWND embeddedMenuHWnd;	\/* Tk's embedded menu window handler. *\/$/;"	m	struct:Container	file:
embeddedPtr	macosx/tkMacOSXEmbed.c	/^    TkWindow *embeddedPtr;	\/* Tk's information about the embedded window,$/;"	m	struct:Container	file:
embeddedPtr	unix/tkUnixEmbed.c	/^    TkWindow *embeddedPtr;	\/* Tk's information about the embedded window,$/;"	m	struct:Container	file:
embeddedPtr	win/tkWinEmbed.c	/^    TkWindow *embeddedPtr;	\/* Tk's information about the embedded window,$/;"	m	struct:Container	file:
embedded_make_args	macosx/GNUmakefile	/^embedded_make_args	:= EMBEDDED_BUILD=1$/;"	m
embossed	generic/ttk/ttkLabel.c	/^    int			embossed;$/;"	m	struct:__anon61	file:
embossedObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj     *embossedObj;$/;"	m	struct:__anon61	file:
empty	macosx/GNUmakefile	/^empty			:=$/;"	m
enabledData	generic/ttk/ttkTheme.c	/^    void *enabledData;              	\/* ClientData for enabledProc *\/$/;"	m	struct:Ttk_Theme_	file:
enabledProc	generic/ttk/ttkTheme.c	/^    Ttk_ThemeEnabledProc *enabledProc;	\/* Function called by SetTheme *\/$/;"	m	struct:Ttk_Theme_	file:
encFlags	generic/tkSelect.h	/^    int encFlags;		\/* Encoding translation state flags. *\/$/;"	m	struct:TkSelRetrievalInfo
encState	generic/tkSelect.h	/^    Tcl_EncodingState encState;	\/* Holds intermediate state during translations$/;"	m	struct:TkSelRetrievalInfo
encoding	unix/tkUnixFont.c	/^    Tcl_Encoding encoding;	\/* Encoding key for this FontFamily. *\/$/;"	m	struct:FontFamily	file:
encoding	win/tkWinFont.c	/^    Tcl_Encoding encoding;	\/* Encoding for this font family. *\/$/;"	m	struct:FontFamily	file:
encoding	win/tkWinFont.c	/^    USHORT encoding;		\/* How characters in font are encoded. 1 means$/;"	m	struct:ENCODINGTABLE	file:
encoding	xlib/X11/Xutil.h	/^    Atom encoding;			\/* prop type *\/$/;"	m	struct:__anon260
encodingAliases	unix/tkUnixFont.c	/^static EncodingAlias encodingAliases[] = {$/;"	v	file:
encodingList	unix/tkUnixFont.c	/^static const char *const encodingList[] = {$/;"	v	file:
encoding_is_wchar	xlib/X11/Xlib.h	/^    Bool encoding_is_wchar;$/;"	m	struct:_XIMText
end	generic/tkText.h	/^    TkTextLine *end;		\/* Last B-tree line to show, or NULL for up to$/;"	m	struct:TkText
end	win/buildall.vc.bat	/^:end$/;"	l
end	win/mkd.bat	/^:end$/;"	l
end	win/rmd.bat	/^:end$/;"	l
endCount	win/tkWinFont.c	/^    USHORT *endCount;		\/* indicating which characters this font can$/;"	m	struct:FontFamily	file:
endPtr	generic/ttk/ttkTreeview.c	/^    TreeItem *endPtr;		\/* See EndPosition() *\/$/;"	m	struct:__anon83	file:
endparenUid	generic/tkCanvas.c	/^    Tk_Uid endparenUid;$/;"	m	struct:__anon154	file:
enginePtr	generic/tkStyle.c	/^    StyleEngine *enginePtr;	\/* Style engine of which the style is an$/;"	m	struct:Style	file:
engineTable	generic/tkStyle.c	/^    Tcl_HashTable engineTable;	\/* Map a name to a style engine. Keys are$/;"	m	struct:ThreadSpecificData	file:
ensemble	generic/ttk/ttkTheme.h	/^    const struct TtkEnsemble *ensemble;	\/* subcommand ensemble *\/$/;"	m	struct:TtkEnsemble	typeref:struct:TtkEnsemble::TtkEnsemble
entries	generic/tkMenu.h	/^    TkMenuEntry **entries;	\/* Array of pointers to all the entries in the$/;"	m	struct:TkMenu
entry	generic/tkEntry.h	/^    Entry entry;		\/* A pointer to the generic entry structure.$/;"	m	struct:__anon184
entry	generic/ttk/ttkEntry.c	/^    EntryPart	entry;$/;"	m	struct:__anon27	file:
entry	generic/ttk/ttkEntry.c	/^    EntryPart entry;$/;"	m	struct:__anon29	file:
entry	generic/ttk/ttkEntry.c	/^    EntryPart entry;$/;"	m	struct:__anon31	file:
entryClass	generic/tkEntry.c	/^static const Tk_ClassProcs entryClass = {$/;"	v	file:
entryCmd	generic/tkEntry.c	/^enum entryCmd {$/;"	g	file:
entryCmdNames	generic/tkEntry.c	/^static const char *const entryCmdNames[] = {$/;"	v	file:
entryCount	win/tkWinFont.c	/^    USHORT entryCount;		\/* Number of character codes in subrange. *\/$/;"	m	struct:TRIMMEDTABLE	file:
entryCount	win/tkWinFont.c	/^    USHORT entryCount;		\/* Number valid low bytes for subHeader. *\/$/;"	m	struct:SUBHEADER	file:
entryFlags	generic/tkMenu.h	/^    int entryFlags;		\/* Various flags. See below for$/;"	m	struct:TkMenuEntry
entryOptSpec	generic/tkEntry.c	/^static const Tk_OptionSpec entryOptSpec[] = {$/;"	v	file:
entryOptionTables	generic/tkMenu.c	/^    Tk_OptionTable entryOptionTables[6];$/;"	m	struct:ThreadSpecificData	file:
entryPtr	generic/ttk/ttkTreeview.c	/^    Tcl_HashEntry *entryPtr;	\/* Back-pointer to hash table entry *\/$/;"	m	struct:TreeItemRec	file:
entrySelector	win/tkWinFont.c	/^    USHORT entrySelector;	\/* log2(searchRange\/2). *\/$/;"	m	struct:SEGMENTTABLE	file:
eofCode	generic/tkImgGIF.c	/^    int eofCode;$/;"	m	struct:__anon130	file:
epoch	generic/tkObj.c	/^    long epoch;			\/* Value of mainPtr->deletionEpoch at last$/;"	m	struct:WindowRep	file:
epoch	generic/ttk/ttkDecls.h	/^    int epoch;$/;"	m	struct:TtkStubs
error	generic/tkImgPhoto.h	/^    schar *error;		\/* Error image, used in dithering. *\/$/;"	m	struct:PhotoInstance
error	generic/tkInt.h	/^    int error;			\/* Consider only errors with this error_code$/;"	m	struct:TkErrorHandler
error	win/buildall.vc.bat	/^:error$/;"	l
errorCode	unix/tkUnixSend.c	/^    char *errorCode;		\/* Information for "errorCode" variable, or$/;"	m	struct:PendingCommand	file:
errorInfo	unix/tkUnixSend.c	/^    char *errorInfo;		\/* Information for "errorInfo" variable, or$/;"	m	struct:PendingCommand	file:
errorProc	generic/tkInt.h	/^    Tk_ErrorProc *errorProc;	\/* Function to invoke when a matching error$/;"	m	struct:TkErrorHandler
errorPtr	generic/tkInt.h	/^    struct TkErrorHandler *errorPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkErrorHandler
errorStructPtr	generic/tkMenu.h	/^    Tk_SavedOptions *errorStructPtr;$/;"	m	struct:TkMenu
error_code	xlib/X11/Xlib.h	/^	unsigned char error_code;	\/* error code of failed request *\/$/;"	m	struct:__anon317
error_vec	xlib/X11/Xlib.h	/^	Bool (**error_vec)();      \/* vector for wire to error *\/$/;"	m	struct:_XDisplay
esp	win/tkWin32Dll.c	/^    void *esp;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	file:
ev	win/tkWinWm.c	/^    Tcl_Event ev;$/;"	m	struct:ActivateEvent	file:
event	generic/tk.h	/^    Window event;		\/* Window on which event was requested. *\/$/;"	m	struct:__anon9
event	generic/tkEvent.c	/^    XEvent event;		\/* The X event. *\/$/;"	m	struct:TkWindowEvent	file:
event	xlib/X11/Xlib.h	/^	Window event;$/;"	m	struct:__anon298
event	xlib/X11/Xlib.h	/^	Window event;$/;"	m	struct:__anon299
event	xlib/X11/Xlib.h	/^	Window event;$/;"	m	struct:__anon300
event	xlib/X11/Xlib.h	/^	Window event;$/;"	m	struct:__anon302
event	xlib/X11/Xlib.h	/^	Window event;$/;"	m	struct:__anon303
event	xlib/X11/Xlib.h	/^	Window event;$/;"	m	struct:__anon304
event	xlib/X11/Xlib.h	/^	Window event;$/;"	m	struct:__anon307
eventArray	generic/tkBind.c	/^static const EventInfo eventArray[] = {$/;"	v	file:
eventMask	generic/tkBind.c	/^    int eventMask;		\/* Mask bits (for XSelectInput) for this event$/;"	m	struct:__anon174	file:
eventPtr	generic/tkEvent.c	/^    XEvent *eventPtr;		\/* Event currently being handled. *\/$/;"	m	struct:InProgress	file:
eventPtr	unix/tkUnixWm.c	/^    XEvent *eventPtr;		\/* Where to store the event when it's found. *\/$/;"	m	struct:WaitRestrictInfo	file:
eventRing	generic/tkBind.c	/^    XEvent eventRing[EVENT_BUFFER_SIZE];$/;"	m	struct:Tk_BindingTable_	file:
eventTable	generic/tkBind.c	/^static Tcl_HashTable eventTable;$/;"	v	file:
eventType	generic/tkBind.c	/^    int eventType;		\/* Type of X event, e.g. ButtonPress. *\/$/;"	m	struct:__anon169	file:
event_mask	xlib/X11/Xlib.h	/^    long event_mask;		\/* set of events that should be saved *\/$/;"	m	struct:__anon273
event_vec	xlib/X11/Xlib.h	/^	Bool (*event_vec[128])();  \/* vector for wire to event *\/$/;"	m	struct:_XDisplay
eventualGrabWinPtr	generic/tkInt.h	/^    struct TkWindow *eventualGrabWinPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWindow
every	library/demos/ttkpane.tcl	/^proc every {delay script} {$/;"	p
ew	generic/tkText.h	/^	TkTextEmbWindow ew;	\/* Information about embedded window. *\/$/;"	m	union:TkTextSegment::__anon158
exStyle	win/tkWinWm.c	/^    DWORD style, exStyle;	\/* Style flags for the wrapper window. *\/$/;"	m	struct:TkWmInfo	file:
exStyleConfig	win/tkWinWm.c	/^    LONG exStyleConfig;		\/* Extra user requested extended style bits *\/$/;"	m	struct:TkWmInfo	file:
exact	generic/tkText.c	/^    int exact;			\/* Whether search is exact or regexp. *\/$/;"	m	struct:SearchSpec	file:
exec_prefix	unix/Makefile	/^exec_prefix		= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/host\/usr\/arm-buildroot-linux-gnueabihf\/sysroot\/usr\/lib$/;"	m
exportSelection	generic/tkEntry.h	/^    int exportSelection;	\/* Non-zero means tie internal entry selection$/;"	m	struct:__anon183
exportSelection	generic/tkListbox.c	/^    int exportSelection;	\/* Non-zero means tie internal listbox to X$/;"	m	struct:__anon149	file:
exportSelection	generic/tkText.h	/^    int exportSelection;	\/* Non-zero means tie "sel" tag to X$/;"	m	struct:TkText
exportSelection	generic/ttk/ttkEntry.c	/^    int exportSelection;	\/* Tie internal selection to X selection? *\/$/;"	m	struct:__anon26	file:
expr	generic/tkCanvas.c	/^    TagSearchExpr *expr;	\/* Compiled tag expression. *\/$/;"	m	struct:TagSearch	file:
extObj	win/tkWinDialog.c	/^    Tcl_Obj *extObj;            \/* Default extension *\/$/;"	m	struct:OFNOpts	file:
ext_data	xlib/X11/Xlib.h	/^	XExtData *ext_data;	\/* hook for extension to hang data *\/$/;"	m	struct:_XDisplay
ext_data	xlib/X11/Xlib.h	/^	XExtData *ext_data;	\/* hook for extension to hang data *\/$/;"	m	struct:__anon269
ext_data	xlib/X11/Xlib.h	/^	XExtData *ext_data;	\/* hook for extension to hang data *\/$/;"	m	struct:__anon271
ext_data	xlib/X11/Xlib.h	/^	XExtData *ext_data;	\/* hook for extension to hang data *\/$/;"	m	struct:__anon272
ext_data	xlib/X11/Xlib.h	/^    XExtData	*ext_data;	\/* hook for extension to hang data *\/$/;"	m	struct:__anon321
ext_number	xlib/X11/Xlib.h	/^	int ext_number;		\/* extension number on this display *\/$/;"	m	struct:_XDisplay
ext_procs	xlib/X11/Xlib.h	/^	struct _XExten *ext_procs; \/* extensions initialized on this display *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XExten
extension	xlib/X11/Xlib.h	/^	int extension;		\/* extension number *\/$/;"	m	struct:__anon266
extensionPtr	generic/tkMenu.h	/^    Tk_OptionSpec *extensionPtr;\/* Needed by the configuration package for$/;"	m	struct:TkMenu
extent	generic/tkCanvArc.c	/^    double extent;		\/* Extent of arc (angular distance from start$/;"	m	struct:ArcItem	file:
extra	generic/tkConfig.c	/^    } extra;$/;"	m	struct:TkOption	typeref:union:TkOption::__anon182	file:
f	macosx/configure	/^f();$/;"	f
f	unix/configure	/^f();$/;"	f
f	xlib/X11/Xlib.h	/^	} f;$/;"	m	struct:_XImage	typeref:struct:_XImage::funcs
fa	generic/tkFont.c	/^    TkFontAttributes fa;	\/* Desired attributes for named font. *\/$/;"	m	struct:NamedFont	file:
fa	generic/tkFont.h	/^    TkFontAttributes fa;	\/* Actual font attributes obtained when the$/;"	m	struct:TkFont
fa	unix/tkUnixFont.c	/^    TkFontAttributes fa;$/;"	m	struct:FontAttributes	file:
faceName	unix/tkUnixFont.c	/^    Tk_Uid faceName;		\/* Face name key for this FontFamily. *\/$/;"	m	struct:FontFamily	file:
faceName	win/tkWinFont.c	/^    Tk_Uid faceName;		\/* Face name key for this FontFamily. *\/$/;"	m	struct:FontFamily	file:
faces	unix/tkUnixRFont.c	/^    UnixFtFace *faces;$/;"	m	struct:__anon221	file:
factory	generic/ttk/ttkTheme.c	/^    Ttk_ElementFactory	factory;$/;"	m	struct:__anon114	file:
factoryTable	generic/ttk/ttkTheme.c	/^    Tcl_HashTable factoryTable; 	\/* KEY: name; VALUE: FactoryRec ptr *\/$/;"	m	struct:__anon115	file:
family	generic/tkFont.h	/^    Tk_Uid family;		\/* Font family, or NULL to represent plaform-$/;"	m	struct:TkFontAttributes
family	xlib/X11/Xlib.h	/^	int family;		\/* for example FamilyInternet *\/$/;"	m	struct:__anon275
familyPtr	unix/tkUnixFont.c	/^    FontFamily *familyPtr;	\/* The FontFamily for this SubFont. *\/$/;"	m	struct:SubFont	file:
familyPtr	win/tkWinFont.c	/^    FontFamily *familyPtr;	\/* The FontFamily for this SubFont. *\/$/;"	m	struct:SubFont	file:
fd	xlib/X11/Xlib.h	/^	int fd;			\/* Network socket. *\/$/;"	m	struct:_XDisplay
fd_mask	macosx/tkMacOSXPort.h	/^	typedef long fd_mask;$/;"	t
fd_mask	unix/tkUnixPort.h	/^	typedef long fd_mask;$/;"	t
feedback	xlib/X11/Xlib.h	/^    XIMFeedback *feedback;$/;"	m	struct:_XIMText
fg	generic/tkCursor.c	/^    Tk_Uid fg, bg;		\/* Colors for cursor. *\/$/;"	m	struct:__anon1	file:
fg	generic/tkImgBmap.c	/^    XColor *fg;			\/* Foreground color for displaying image. *\/$/;"	m	struct:BitmapInstance	file:
fg	generic/tkOldTest.c	/^    XColor *fg;                 \/* Foreground color for drawing in image. *\/$/;"	m	struct:TImageInstance	file:
fg	generic/tkTest.c	/^    XColor *fg;			\/* Foreground color for drawing in image. *\/$/;"	m	struct:TImageInstance	file:
fg1	library/demos/floor.tcl	/^proc fg1 {w color} {$/;"	p
fg2	library/demos/floor.tcl	/^proc fg2 {w color} {$/;"	p
fg3	library/demos/floor.tcl	/^proc fg3 {w color} {$/;"	p
fgBorderPtr	generic/tkSquare.c	/^    Tcl_Obj *fgBorderPtr;$/;"	m	struct:__anon142	file:
fgColor	generic/tkCanvBmap.c	/^    XColor *fgColor;		\/* Foreground color to use for bitmap. *\/$/;"	m	struct:BitmapItem	file:
fgColor	generic/tkListbox.c	/^    XColor *fgColor;		\/* Text color in normal mode. *\/$/;"	m	struct:__anon150	file:
fgColor	generic/tkText.h	/^    XColor *fgColor;		\/* Default foreground color for text. *\/$/;"	m	struct:TkText
fgColor	generic/tkText.h	/^    XColor *fgColor;		\/* Foreground color for text. NULL means no$/;"	m	struct:TkTextTag
fgColor	generic/tkTextDisp.c	/^    XColor *fgColor;		\/* Foreground color for text. *\/$/;"	m	struct:StyleValues	file:
fgColorPtr	generic/tkEntry.h	/^    XColor *fgColorPtr;		\/* Text color in normal mode. *\/$/;"	m	struct:__anon183
fgColorPtr	generic/tkListbox.c	/^    XColor *fgColorPtr;		\/* Text color in normal mode. *\/$/;"	m	struct:__anon149	file:
fgColorPtr	generic/tkMessage.c	/^    XColor *fgColorPtr;		\/* Foreground color in normal mode. *\/$/;"	m	struct:__anon153	file:
fgGC	generic/tkTextDisp.c	/^    GC fgGC;			\/* Graphics context for foreground. *\/$/;"	m	struct:TextStyle	file:
fgPtr	generic/tkMenu.h	/^    Tcl_Obj *fgPtr;		\/* Foreground color for entries. *\/$/;"	m	struct:TkMenu
fgPtr	generic/tkMenu.h	/^    Tcl_Obj *fgPtr;		\/* Foreground color to use for entry. NULL$/;"	m	struct:TkMenuEntry
fgStipple	generic/tkText.h	/^    Pixmap fgStipple;		\/* Stipple bitmap for text and other$/;"	m	struct:TkTextTag
fgStipple	generic/tkTextDisp.c	/^    Pixmap fgStipple;		\/* Stipple bitmap for text and other$/;"	m	struct:StyleValues	file:
fgUid	generic/tkImgBmap.c	/^    Tk_Uid fgUid;		\/* Value of -foreground option (malloc'ed). *\/$/;"	m	struct:BitmapMaster	file:
fid	generic/tkFont.h	/^    Font fid;			\/* For backwards compatibility with XGCValues$/;"	m	struct:TkFont
fid	xlib/X11/Xlib.h	/^    Font        fid;            \/* Font id for this font *\/$/;"	m	struct:__anon321
fieldShadowColors	generic/ttk/ttkDefaultTheme.c	/^static int fieldShadowColors[4] = { DARK, BRDR, LITE, FLAT };$/;"	v	file:
file	win/tkWinDialog.c	/^    TCHAR file[TK_MULTI_MAX_PATH]; \/* File name$/;"	m	struct:OFNOpts	file:
fileDialog	library/demos/filebox.tcl	/^proc fileDialog {w ent operation} {$/;"	p
fileMatchProc	generic/tk.h	/^    Tk_ImageFileMatchProc *fileMatchProc;$/;"	m	struct:Tk_PhotoImageFormat
fileName	generic/tkCanvPs.c	/^    char *fileName;		\/* Name of file in which to write Postscript;$/;"	m	struct:TkPostscriptInfo	file:
fileReadProc	generic/tk.h	/^    Tk_ImageFileReadProc *fileReadProc;$/;"	m	struct:Tk_PhotoImageFormat
fileString	generic/tkImgBmap.c	/^    char *fileString;		\/* Value of -file option (malloc'ed). *\/$/;"	m	struct:BitmapMaster	file:
fileString	generic/tkImgPhoto.h	/^    char *fileString;		\/* Name of file to read into image. *\/$/;"	m	struct:PhotoMaster
fileWriteProc	generic/tk.h	/^    Tk_ImageFileWriteProc *fileWriteProc;$/;"	m	struct:Tk_PhotoImageFormat
fillColor	generic/tkCanvArc.c	/^    XColor *fillColor;		\/* Color for filling arc (used for drawing$/;"	m	struct:ArcItem	file:
fillColor	generic/tkCanvPoly.c	/^    XColor *fillColor;		\/* Foreground color for polygon. *\/$/;"	m	struct:PolygonItem	file:
fillColor	generic/tkRectOval.c	/^    XColor *fillColor;		\/* Color for filling rectangle\/oval. *\/$/;"	m	struct:RectOvalItem	file:
fillColorObj	win/ttkWinTheme.c	/^    Tcl_Obj *fillColorObj;$/;"	m	struct:__anon248	file:
fillGC	generic/tkCanvArc.c	/^    GC fillGC;			\/* Graphics context for filling item. *\/$/;"	m	struct:ArcItem	file:
fillGC	generic/tkCanvPoly.c	/^    GC fillGC;			\/* Graphics context for filling polygon. *\/$/;"	m	struct:PolygonItem	file:
fillGC	generic/tkRectOval.c	/^    GC fillGC;			\/* Graphics context for filling item. *\/$/;"	m	struct:RectOvalItem	file:
fillStipple	generic/tkCanvArc.c	/^    Pixmap fillStipple;		\/* Stipple bitmap for filling item. *\/$/;"	m	struct:ArcItem	file:
fillStipple	generic/tkCanvPoly.c	/^    Pixmap fillStipple;		\/* Stipple bitmap for filling polygon. *\/$/;"	m	struct:PolygonItem	file:
fillStipple	generic/tkRectOval.c	/^    Pixmap fillStipple;		\/* Stipple bitmap for filling item. *\/$/;"	m	struct:RectOvalItem	file:
fill_rule	xlib/X11/Xlib.h	/^	int fill_rule;	  	\/* EvenOddRule, WindingRule *\/$/;"	m	struct:__anon268
fill_style	xlib/X11/Xlib.h	/^	int fill_style;	 	\/* FillSolid, FillTiled,$/;"	m	struct:__anon268
filter	generic/tkImgPNG.c	/^    unsigned char filter;	\/* Filter mode (0 - 3). *\/$/;"	m	struct:__anon179	file:
filterObj	win/tkWinDialog.c	/^    Tcl_Obj *filterObj;         \/* File type filter list *\/$/;"	m	struct:OFNOpts	file:
filters	generic/tkFileFilter.h	/^    FileFilter *filters;	\/* Head of the filter list *\/$/;"	m	struct:FileFilterList
filtersTail	generic/tkFileFilter.h	/^    FileFilter *filtersTail;	\/* Tail of the filter list *\/$/;"	m	struct:FileFilterList
finishedCompose	macosx/tkMacOSXKeyEvent.c	/^static BOOL finishedCompose = NO;$/;"	v	file:
first	generic/ttk/ttkScrollbar.c	/^    double	first;			\/* top fraction *\/$/;"	m	struct:__anon51	file:
first	generic/ttk/ttkWidget.h	/^    int 	first;		\/* First visible item *\/$/;"	m	struct:__anon49
firstArrowPtr	generic/tkCanvLine.c	/^    double *firstArrowPtr;	\/* Points to array of PTS_IN_ARROW points$/;"	m	struct:LineItem	file:
firstBufferPtr	generic/tkSelect.h	/^    TkClipboardBuffer *firstBufferPtr;$/;"	m	struct:TkClipboardTarget
firstCode	win/tkWinFont.c	/^    USHORT firstCode;		\/* First character code of subrange. *\/$/;"	m	struct:TRIMMEDTABLE	file:
firstCode	win/tkWinFont.c	/^    USHORT firstCode;		\/* First valid low byte for subHeader. *\/$/;"	m	struct:SUBHEADER	file:
firstContainerPtr	macosx/tkMacOSXEmbed.c	/^static Container *firstContainerPtr = NULL;$/;"	v	file:
firstContainerPtr	unix/tkUnixEmbed.c	/^    Container *firstContainerPtr;$/;"	m	struct:ThreadSpecificData	file:
firstContainerPtr	win/tkWinEmbed.c	/^    Container *firstContainerPtr;$/;"	m	struct:ThreadSpecificData	file:
firstExitPtr	generic/tkEvent.c	/^    ExitHandler *firstExitPtr;	\/* First in list of all exit handlers for this$/;"	m	struct:ThreadSpecificData	file:
firstExitPtr	generic/tkEvent.c	/^static ExitHandler *firstExitPtr = NULL;$/;"	v	file:
firstFraction	generic/tkScrollbar.h	/^    double firstFraction;	\/* Position of first visible thing in window,$/;"	m	struct:TkScrollbar
firstGrabEventPtr	generic/tkInt.h	/^    TkGrabEvent *firstGrabEventPtr;$/;"	m	struct:TkDisplay
firstItemPtr	generic/tkCanvas.h	/^    Tk_Item *firstItemPtr;	\/* First in list of all items in canvas, or$/;"	m	struct:TkCanvas
firstObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *firstObj;$/;"	m	struct:__anon96	file:
firstRectForCharacterRange	macosx/tkMacOSXKeyEvent.c	/^- (NSRect)firstRectForCharacterRange: (NSRange)theRange$/;"	f
firstRequest	generic/tkInt.h	/^    unsigned long firstRequest;	\/* Only errors with serial numbers >= to this$/;"	m	struct:TkErrorHandler
firstUnit	generic/tkScrollbar.h	/^    int firstUnit;		\/* Number of last unit visible in$/;"	m	struct:TkScrollbar
firstWindow	win/tkWinWm.c	/^    int firstWindow;		\/* Flag, cleared when the first window is$/;"	m	struct:ThreadSpecificData	file:
firstWmPtr	generic/tkInt.h	/^    struct TkWmInfo *firstWmPtr;\/* Points to first top-level window. *\/$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWmInfo
first_error	xlib/X11/Xlib.h	/^	int first_error;	\/* first error number for the extension *\/$/;"	m	struct:__anon266
first_event	xlib/X11/Xlib.h	/^	int first_event;	\/* first event number for the extension *\/$/;"	m	struct:__anon266
first_keycode	xlib/X11/Xlib.h	/^	int first_keycode;	\/* first keycode *\/$/;"	m	struct:__anon316
fixed	generic/tkFont.h	/^    int fixed;			\/* Non-zero if this is a fixed-width font,$/;"	m	struct:TkFontMetrics
fixedPitch	macosx/tkMacOSXFont.c	26;"	d	file:
fixedPitch	macosx/tkMacOSXFont.c	28;"	d	file:
fixfocus	tests/constraints.tcl	/^	proc fixfocus {} {$/;"	p
flag	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const int flag;$/;"	m	struct:__anon198	file:
flagArray	generic/tkBind.c	/^static const int flagArray[TK_LASTEVENT] = {$/;"	v	file:
flagPtr	win/tkWinWm.c	/^    const int *flagPtr;$/;"	m	struct:ActivateEvent	file:
flags	generic/tk.h	/^    int flags;			\/* Any combination of the values defined$/;"	m	struct:Tk_OptionSpec
flags	generic/tk.h	/^    int flags;			\/* Flags; see below for possible values *\/$/;"	m	struct:Tk_TSOffset
flags	generic/tk.h	/^    unsigned int flags;$/;"	m	struct:Tk_FakeWin
flags	generic/tkBind.c	/^    int flags;			\/* Miscellaneous flag values; see below for$/;"	m	struct:PatSeq	file:
flags	generic/tkBind.c	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:__anon173	file:
flags	generic/tkButton.h	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:__anon178
flags	generic/tkCanvas.h	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:TkCanvas
flags	generic/tkConfig.c	/^    int flags;			\/* Miscellaneous flag values; see below for$/;"	m	struct:TkOption	file:
flags	generic/tkEntry.h	/^    int flags;			\/* Miscellaneous flags; see below for$/;"	m	struct:__anon183
flags	generic/tkFrame.c	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:__anon145	file:
flags	generic/tkGrid.c	/^    int flags;			\/* Miscellaneous flags; see below for$/;"	m	struct:Gridder	file:
flags	generic/tkImgPhoto.h	/^    int	flags;			\/* See below. *\/$/;"	m	struct:ColorTable
flags	generic/tkImgPhoto.h	/^    int	flags;			\/* Sundry flags, defined below. *\/$/;"	m	struct:PhotoMaster
flags	generic/tkInt.h	/^    unsigned int flags;		\/* Various flag values: these are all defined$/;"	m	struct:TkDisplay
flags	generic/tkInt.h	/^    unsigned int flags;		\/* Various flag values: these are all defined$/;"	m	struct:TkWindow
flags	generic/tkListbox.c	/^    int flags;			\/* Various flag bits: see below for$/;"	m	struct:__anon149	file:
flags	generic/tkMenubutton.h	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:__anon137
flags	generic/tkMessage.c	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:__anon153	file:
flags	generic/tkOption.c	/^    int flags;			\/* OR-ed combination of bits. See below for$/;"	m	struct:Element	file:
flags	generic/tkPack.c	/^    int flags;			\/* Miscellaneous flags; see below for$/;"	m	struct:Packer	file:
flags	generic/tkPanedWindow.c	/^    int flags;			\/* Flags for widget; see below. *\/$/;"	m	struct:PanedWindow	file:
flags	generic/tkPlace.c	/^    int flags;			\/* See below for bit definitions. *\/$/;"	m	struct:Master	file:
flags	generic/tkPlace.c	/^    int flags;			\/* Various flags; see below for bit$/;"	m	struct:Slave	file:
flags	generic/tkScale.h	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:TkScale
flags	generic/tkScrollbar.h	/^    int flags;			\/* Various flags; see below for$/;"	m	struct:TkScrollbar
flags	generic/tkText.h	/^    int flags;			\/* Miscellaneous flags; see below for$/;"	m	struct:TkText
flags	generic/tkTextDisp.c	/^    int flags;			\/* Various flag bits: see below for values. *\/$/;"	m	struct:DLine	file:
flags	generic/tkTextDisp.c	/^    int flags;			\/* Various flag values: see below for$/;"	m	struct:TextDInfo	file:
flags	generic/tkWindow.c	/^    int flags;$/;"	m	struct:TkHalfdeadWindow	file:
flags	generic/tkWindow.c	/^    int flags;$/;"	m	struct:__anon144	file:
flags	generic/ttk/ttkLayout.c	/^    unsigned		flags;		\/* Packing and sticky flags *\/$/;"	m	struct:Ttk_LayoutNode_	file:
flags	generic/ttk/ttkLayout.c	/^    unsigned flags;$/;"	m	struct:Ttk_TemplateNode_	file:
flags	generic/ttk/ttkManager.c	/^    unsigned		flags;$/;"	m	struct:TtkManager_	file:
flags	generic/ttk/ttkManager.c	/^    unsigned		flags;$/;"	m	struct:__anon69	file:
flags	generic/ttk/ttkScroll.c	/^    unsigned 	flags;$/;"	m	struct:ScrollHandleRec	file:
flags	generic/ttk/ttkWidget.h	/^    unsigned int flags;		\/* internal flags, see above *\/$/;"	m	struct:__anon48
flags	macosx/tkMacOSXButton.c	/^    int flags;			\/* Initialisation status *\/$/;"	m	struct:__anon202	file:
flags	macosx/tkMacOSXInt.h	/^    int flags;			\/* Various state see defines below. *\/$/;"	m	struct:TkWindowPrivate
flags	macosx/tkMacOSXMenubutton.c	/^    int flags;$/;"	m	struct:MacMenuButton	file:
flags	macosx/tkMacOSXScale.c	/^    int flags;			\/* Flags. *\/$/;"	m	struct:MacScale	file:
flags	macosx/tkMacOSXWm.c	/^    int flags; NSUInteger styleMask;$/;"	m	struct:__anon205	file:
flags	macosx/tkMacOSXWm.h	/^    int flags;			\/* Miscellaneous flags, defined below. *\/$/;"	m	struct:TkWmInfo
flags	unix/tkUnixSelect.c	/^    int *flags;			\/* One state flag per pair in multAtoms:$/;"	m	struct:IncrInfo	file:
flags	unix/tkUnixWm.c	/^    int flags;			\/* Miscellaneous flags, defined below. *\/$/;"	m	struct:TkWmInfo	file:
flags	win/tkWinWm.c	/^    int flags;			\/* Miscellaneous flags, defined below. *\/$/;"	m	struct:TkWmInfo	file:
flags	win/ttkWinXPTheme.c	/^    int  	flags;$/;"	m	struct:__anon240	file:
flags	xlib/X11/Xlib.h	/^	char flags;  \/* do_red, do_green, do_blue *\/$/;"	m	struct:__anon277
flags	xlib/X11/Xlib.h	/^	unsigned long flags;	\/* internal connection flags *\/$/;"	m	struct:_XDisplay
flags	xlib/X11/Xutil.h	/^	long flags;	\/* marks which fields in this structure are defined *\/$/;"	m	struct:__anon259
flags	xlib/X11/Xutil.h	/^    	long flags;	\/* marks which fields in this structure are defined *\/$/;"	m	struct:__anon257
floorDisplay	library/demos/floor.tcl	/^proc floorDisplay {w active} {$/;"	p
fm	generic/tkFont.h	/^    TkFontMetrics fm;		\/* Font metrics determined when font was$/;"	m	struct:TkFont
focus	generic/ttk/ttkTreeview.c	/^    TreeItem *focus;		\/* Current focus item *\/$/;"	m	struct:__anon83	file:
focus	xlib/X11/Xlib.h	/^	Bool focus;		\/* boolean focus *\/$/;"	m	struct:__anon290
focusAndFlash	library/demos/entry3.tcl	/^proc focusAndFlash {W fg bg {count 9}} {$/;"	p
focusColorObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*focusColorObj;$/;"	m	struct:__anon37	file:
focusDebug	generic/tkInt.h	/^    int focusDebug;		\/* 1 means collect focus debugging$/;"	m	struct:TkDisplay
focusItemPtr	generic/tk.h	/^    Tk_Item *focusItemPtr;	\/* Item that currently has the input focus, or$/;"	m	struct:Tk_CanvasTextInfo
focusLocked	macosx/tkMacOSXPrivate.h	/^    int focusLocked;$/;"	m	struct:TkMacOSXDrawingContext
focusOnMapPtr	generic/tkFocus.c	/^    struct TkWindow *focusOnMapPtr;$/;"	m	struct:TkDisplayFocusInfo	typeref:struct:TkDisplayFocusInfo::TkWindow	file:
focusPtr	generic/tkInt.h	/^    struct TkWindow *focusPtr;	\/* Points to the window on this display that$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWindow
focusSerial	generic/tkFocus.c	/^    unsigned long focusSerial;	\/* Serial number of last request this$/;"	m	struct:TkDisplayFocusInfo	file:
focusThicknessObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*focusThicknessObj;$/;"	m	struct:__anon37	file:
focusWinPtr	generic/tkFocus.c	/^    TkWindow *focusWinPtr;	\/* The next time the focus comes to this$/;"	m	struct:TkToplevelFocusInfo	file:
focusWinPtr	generic/tkFocus.c	/^    struct TkWindow *focusWinPtr;$/;"	m	struct:TkDisplayFocusInfo	typeref:struct:TkDisplayFocusInfo::TkWindow	file:
font	macosx/tkMacOSXFont.c	/^    TkFont font;		\/* Stuff used by generic font package. Must$/;"	m	struct:__anon203	file:
font	unix/tkUnixFont.c	/^    TkFont font;		\/* Stuff used by generic font package. Must be$/;"	m	struct:UnixFont	file:
font	unix/tkUnixRFont.c	/^    TkFont font;	    	\/* Stuff used by generic font package. Must be$/;"	m	struct:__anon221	file:
font	win/tkWinFont.c	/^    TkFont font;		\/* Stuff used by generic font package. Must be$/;"	m	struct:WinFont	file:
font	xlib/X11/Xlib.h	/^		XFontStruct *font; } XEDataObject;$/;"	m	union:__anon325
font	xlib/X11/Xlib.h	/^        Font font;	        \/* default text font for text operations *\/$/;"	m	struct:__anon268
font	xlib/X11/Xlib.h	/^    Font font;			\/* font to print it in, None don't change *\/$/;"	m	struct:__anon322
font	xlib/X11/Xlib.h	/^    Font font;			\/* font to print it in, None don't change *\/$/;"	m	struct:__anon324
fontAliases	generic/tkFont.c	/^static const char *const *const fontAliases[] = {$/;"	v	file:
fontCache	generic/tkFont.c	/^    Tcl_HashTable fontCache;	\/* Map a string to an existing Tk_Font. Keys$/;"	m	struct:TkFontInfo	file:
fontFallbacks	generic/tkFont.c	/^static const char *const *const fontFallbacks[] = {$/;"	v	file:
fontFamilyList	unix/tkUnixFont.c	/^    FontFamily *fontFamilyList; \/* The list of font families that are$/;"	m	struct:ThreadSpecificData	file:
fontFamilyList	win/tkWinFont.c	/^    FontFamily *fontFamilyList; \/* The list of font families that are$/;"	m	struct:ThreadSpecificData	file:
fontHeight	generic/tkScale.h	/^    int fontHeight;		\/* Height of scale font. *\/$/;"	m	struct:TkScale
fontInfoPtr	generic/tkInt.h	/^    struct TkFontInfo *fontInfoPtr;$/;"	m	struct:TkMainInfo	typeref:struct:TkMainInfo::TkFontInfo
fontMap	unix/tkUnixFont.c	/^    char **fontMap;		\/* Pointer to font map from the FontFamily,$/;"	m	struct:SubFont	file:
fontMap	unix/tkUnixFont.c	/^    char *fontMap[FONTMAP_PAGES];$/;"	m	struct:FontFamily	file:
fontMap	win/tkWinFont.c	/^    char **fontMap;		\/* Pointer to font map from the FontFamily,$/;"	m	struct:SubFont	file:
fontMap	win/tkWinFont.c	/^    char *fontMap[FONTMAP_PAGES];$/;"	m	struct:FontFamily	file:
fontObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *fontObj;$/;"	m	struct:__anon15	file:
fontObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*fontObj;$/;"	m	struct:__anon32	file:
fontObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *fontObj;		\/* Text font to use *\/$/;"	m	struct:__anon26	file:
fontObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*fontObj;$/;"	m	struct:__anon61	file:
fontObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *fontObj;$/;"	m	struct:__anon81	file:
fontObj	win/tkWinDialog.c	/^    Tcl_Obj *fontObj;$/;"	m	struct:HookData	file:
fontObj	win/ttkWinXPTheme.c	/^    Tcl_Obj *fontObj;$/;"	m	struct:__anon242	file:
fontOpt	generic/tkFont.c	/^static const char *const fontOpt[] = {$/;"	v	file:
fontPanelFont	macosx/tkMacOSXDialog.c	/^static NSFont *fontPanelFont = nil;$/;"	v	file:
fontPanelFontAttributes	macosx/tkMacOSXDialog.c	/^static NSMutableDictionary *fontPanelFontAttributes = nil;$/;"	v	file:
fontPtr	generic/tkMenu.h	/^    Tcl_Obj *fontPtr;		\/* Text font for menu entries. *\/$/;"	m	struct:TkMenu
fontPtr	generic/tkMenu.h	/^    Tcl_Obj *fontPtr;		\/* Text font for menu entries. NULL means use$/;"	m	struct:TkMenuEntry
fontPtr	win/tkWinFont.c	/^    WinFont *fontPtr;$/;"	m	struct:CanUse	file:
fontStructPtr	unix/tkUnixFont.c	/^    XFontStruct *fontStructPtr;	\/* The specific screen font that will be used$/;"	m	struct:SubFont	file:
fontTable	generic/tkCanvPs.c	/^    Tcl_HashTable fontTable;	\/* Hash table containing names of all font$/;"	m	struct:TkPostscriptInfo	file:
fontTable	generic/ttk/ttkCache.c	/^    Tcl_HashTable fontTable;	\/* Entries: Tcl_Obj* holding FontObjs *\/$/;"	m	struct:Ttk_ResourceCache_	file:
fontVar	generic/tkCanvPs.c	/^    char *fontVar;		\/* If non-NULL, gives name of global variable$/;"	m	struct:TkPostscriptInfo	file:
font_set	xlib/X11/Xlib.h	/^    XFontSet        font_set;$/;"	m	struct:__anon327
font_set	xlib/X11/Xlib.h	/^    XFontSet        font_set;$/;"	m	struct:__anon328
fontchooserFocus	library/demos/text.tcl	/^proc fontchooserFocus {w} {$/;"	p
fontchooserFontSel	library/demos/text.tcl	/^proc fontchooserFontSel {w font args} {$/;"	p
fontchooserInterp	macosx/tkMacOSXDialog.c	/^static Tcl_Interp *fontchooserInterp = NULL;$/;"	v	file:
fontchooserOptionStrings	macosx/tkMacOSXDialog.c	/^static const char *const fontchooserOptionStrings[] = {$/;"	v	file:
fontchooserToggle	library/demos/text.tcl	/^proc fontchooserToggle {} {$/;"	p
fontchooserVisibility	library/demos/text.tcl	/^proc fontchooserVisibility {w} {$/;"	p
fontset	unix/tkUnixRFont.c	/^    FcFontSet *fontset;$/;"	m	struct:__anon221	file:
forceFocus	generic/tkFocus.c	/^    int forceFocus;		\/* Associated with focusOnMapPtr: non-zero$/;"	m	struct:TkDisplayFocusInfo	file:
forceOffAttrs	macosx/tkMacOSXWm.c	/^    const UInt64 validAttrs, defaultAttrs, forceOnAttrs, forceOffAttrs;$/;"	m	struct:__anon205	file:
forceOnAttrs	macosx/tkMacOSXWm.c	/^    const UInt64 validAttrs, defaultAttrs, forceOnAttrs, forceOffAttrs;$/;"	m	struct:__anon205	file:
forceXPStyle	win/tkWinDialog.c	/^    int forceXPStyle;          \/* XXX - Force XP style even on newer systems *\/$/;"	m	struct:OFNOpts	file:
foreachHashEntry	generic/ttk/ttkTreeview.c	/^static void foreachHashEntry(Tcl_HashTable *ht, HashEntryIterator func)$/;"	f	file:
foreground	xlib/X11/Xlib.h	/^	unsigned long foreground;\/* foreground pixel *\/$/;"	m	struct:__anon268
foregroundObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *foregroundObj;$/;"	m	struct:__anon15	file:
foregroundObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *foregroundObj;$/;"	m	struct:__anon55	file:
foregroundObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *foregroundObj;$/;"	m	struct:__anon91	file:
foregroundObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *foregroundObj;	\/* Foreground color for normal text *\/$/;"	m	struct:__anon25	file:
foregroundObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*foregroundObj;$/;"	m	struct:__anon61	file:
foregroundObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *foregroundObj;$/;"	m	struct:__anon111	file:
foregroundObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *foregroundObj;$/;"	m	struct:__anon113	file:
foregroundObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *foregroundObj;$/;"	m	struct:__anon81	file:
foregroundWmPtr	generic/tkInt.h	/^    struct TkWmInfo *foregroundWmPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWmInfo
format	generic/tkImgPhoto.c	/^    Tcl_Obj *format;		\/* Value specified for -format option. *\/$/;"	m	struct:SubcommandOptions	file:
format	generic/tkImgPhoto.h	/^    Tcl_Obj *format;		\/* User-specified format of data in image file$/;"	m	struct:PhotoMaster
format	generic/tkScale.h	/^    char format[10];		\/* Sprintf conversion specifier computed from$/;"	m	struct:TkScale
format	generic/tkSelect.h	/^    Atom format;		\/* Format in which selection info will be$/;"	m	struct:TkSelHandler
format	generic/tkSelect.h	/^    Atom format;		\/* Representation used for data. *\/$/;"	m	struct:TkClipboardTarget
format	win/tkWinFont.c	/^    USHORT format;		\/* Format number is set to 0. *\/$/;"	m	struct:BYTETABLE	file:
format	win/tkWinFont.c	/^    USHORT format;		\/* Format number is set to 2. *\/$/;"	m	struct:HIBYTETABLE	file:
format	win/tkWinFont.c	/^    USHORT format;		\/* Format number is set to 4. *\/$/;"	m	struct:SEGMENTTABLE	file:
format	win/tkWinFont.c	/^    USHORT format;		\/* Format number is set to 6. *\/$/;"	m	struct:TRIMMEDTABLE	file:
format	win/tkWinFont.c	/^    USHORT format;		\/* Format number. *\/$/;"	m	struct:ANYTABLE	file:
format	xlib/X11/Xlib.h	/^	int format;$/;"	m	struct:__anon314
format	xlib/X11/Xlib.h	/^    int format;			\/* XYBitmap, XYPixmap, ZPixmap *\/$/;"	m	struct:_XImage
format	xlib/X11/Xutil.h	/^    int format;				\/* prop data format: 8, 16, or 32 *\/$/;"	m	struct:__anon260
formatBuf	generic/tkEntry.h	/^    char *formatBuf;		\/* string into which to format value.$/;"	m	struct:__anon184
formatList	generic/tkImgPhoto.c	/^    Tk_PhotoImageFormat *formatList;$/;"	m	struct:ThreadSpecificData	file:
formatObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*formatObj;$/;"	m	struct:__anon30	file:
foundEvent	unix/tkUnixWm.c	/^    int foundEvent;		\/* Non-zero means that an event of the desired$/;"	m	struct:WaitRestrictInfo	file:
foundMatchProc	generic/tkText.c	/^    SearchMatchProc *foundMatchProc;$/;"	m	struct:SearchSpec	file:
foundry	generic/tkFont.h	/^    Tk_Uid foundry;		\/* The foundry of the font. *\/$/;"	m	struct:TkXLFDAttributes
foundry	unix/tkUnixFont.c	/^    Tk_Uid foundry;		\/* Foundry key for this FontFamily. *\/$/;"	m	struct:FontFamily	file:
frame	generic/tkFrame.c	/^    Frame frame;		\/* A pointer to the generic frame structure.$/;"	m	struct:__anon146	file:
frame	generic/ttk/ttkFrame.c	/^    FramePart	frame;$/;"	m	struct:__anon119	file:
frame	generic/ttk/ttkFrame.c	/^    FramePart   	frame;$/;"	m	struct:__anon121	file:
frameClass	generic/tkFrame.c	/^static const Tk_ClassProcs frameClass = {$/;"	v	file:
frameGeomType	generic/tkFrame.c	/^static const Tk_GeomMgr frameGeomType = {$/;"	v	file:
frameOptSpec	generic/tkFrame.c	/^static const Tk_OptionSpec frameOptSpec[] = {$/;"	v	file:
freeEntry	generic/tkImgGIF.c	/^    int freeEntry;		\/* First unused entry. *\/$/;"	m	struct:__anon130	file:
freeProc	generic/tk.h	/^    Tk_CustomOptionFreeProc *freeProc;$/;"	m	struct:Tk_ObjCustomOption
freeProc	generic/tk.h	/^    Tk_ImageFreeProc *freeProc;	\/* Procedure to call whenever Tk_FreeImage is$/;"	m	struct:Tk_ImageType
free_funcs	xlib/X11/Xlib.h	/^	struct _XFreeFuncs *free_funcs; \/* internal free functions *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XFreeFuncs
free_private	xlib/X11/Xlib.h	/^	int (*free_private)();	\/* called to free private storage *\/$/;"	m	struct:_XExtData
fromData	generic/tkImgGIF.c	/^    const char *fromData;$/;"	m	struct:__anon127	file:
fromObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*fromObj;$/;"	m	struct:__anon30	file:
fromObj	generic/ttk/ttkScale.c	/^    Tcl_Obj *fromObj;         \/* minimum value *\/$/;"	m	struct:__anon107	file:
fromObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *fromObj;		\/* minimum value *\/$/;"	m	struct:__anon212	file:
fromValue	generic/tkEntry.h	/^    double fromValue;		\/* Value corresponding to left\/top of dial *\/$/;"	m	struct:__anon184
fromValue	generic/tkScale.h	/^    double fromValue;		\/* Value corresponding to left or top of$/;"	m	struct:TkScale
fromX	generic/tkImgPhoto.c	/^    int fromX, fromY;		\/* Values specified for -from option. *\/$/;"	m	struct:SubcommandOptions	file:
fromX2	generic/tkImgPhoto.c	/^    int fromX2, fromY2;		\/* Second coordinate pair for -from option. *\/$/;"	m	struct:SubcommandOptions	file:
fromY	generic/tkImgPhoto.c	/^    int fromX, fromY;		\/* Values specified for -from option. *\/$/;"	m	struct:SubcommandOptions	file:
fromY2	generic/tkImgPhoto.c	/^    int fromX2, fromY2;		\/* Second coordinate pair for -from option. *\/$/;"	m	struct:SubcommandOptions	file:
from_configure	xlib/X11/Xlib.h	/^	Bool from_configure;$/;"	m	struct:__anon299
ft0Font	unix/tkUnixRFont.c	/^    XftFont *ft0Font;$/;"	m	struct:__anon220	file:
ftDraw	unix/tkUnixRFont.c	/^    XftDraw *ftDraw;$/;"	m	struct:__anon221	file:
ftFont	unix/tkUnixRFont.c	/^    XftFont *ftFont;$/;"	m	struct:__anon220	file:
fullLines	generic/tkListbox.c	/^    int fullLines;		\/* Number of lines that are completely$/;"	m	struct:__anon149	file:
fullscreen	unix/tkUnixWm.c	/^    int fullscreen;		\/* Flag: true=>fullscreen *\/$/;"	m	struct:__anon214	file:
funcPtr	generic/tkUndo.h	/^    TkUndoProc *funcPtr;	\/* Function pointer for callback to perform$/;"	m	struct:TkUndoSubAtom
funcs	xlib/X11/Xlib.h	/^    struct funcs {		\/* image manipulation routines *\/$/;"	s	struct:_XImage
function	library/mkpsenc.tcl	/^	proc function {name body} {$/;"	p
function	xlib/X11/Xlib.h	/^	int function;		\/* logical operation *\/$/;"	m	struct:__anon268
gCurrentCursor	macosx/tkMacOSXCursor.c	/^static TkMacOSXCursor * gCurrentCursor = NULL;$/;"	v	file:
gMacDisplay	macosx/tkMacOSXXStubs.c	/^static TkDisplay *gMacDisplay = NULL;$/;"	v	file:
gNoTkMenus	macosx/tkMacOSXMenu.c	/^static int gNoTkMenus = 0;	\/* This is used by Tk_MacOSXTurnOffMenus as$/;"	v	file:
gResizeOverride	macosx/tkMacOSXCursor.c	/^static int gResizeOverride = false;$/;"	v	file:
gTkOwnsCursor	macosx/tkMacOSXCursor.c	/^static int gTkOwnsCursor = true;\/* A boolean indicating whether Tk owns the$/;"	v	file:
gamma	generic/tkImgPhoto.h	/^    double gamma;		\/* Display gamma value to correct for. *\/$/;"	m	struct:PhotoMaster
gamma	generic/tkImgPhoto.h	/^    double gamma;		\/* Gamma exponent value for images. *\/$/;"	m	struct:ColorTableId
gamma	generic/tkImgPhoto.h	/^    double gamma;		\/* Gamma value for these instances. *\/$/;"	m	struct:PhotoInstance
gc	generic/tk.h	/^    GC gc;			\/* Graphics context. *\/$/;"	m	struct:Tk_Outline
gc	generic/tkCanvBmap.c	/^    GC gc;			\/* Graphics context to use for drawing bitmap$/;"	m	struct:BitmapItem	file:
gc	generic/tkCanvText.c	/^    GC gc;			\/* Graphics context for drawing text. *\/$/;"	m	struct:TextItem	file:
gc	generic/tkColor.h	/^    GC gc;			\/* Simple gc with this color as foreground$/;"	m	struct:TkColor
gc	generic/tkGC.c	/^    GC gc;			\/* Graphics context. *\/$/;"	m	struct:__anon140	file:
gc	generic/tkImgBmap.c	/^    GC gc;			\/* Graphics context for displaying bitmap.$/;"	m	struct:BitmapInstance	file:
gc	generic/tkImgPhoto.h	/^    GC gc;			\/* Graphics context for writing images to the$/;"	m	struct:PhotoInstance
gc	generic/tkOldTest.c	/^    GC gc;                      \/* Graphics context for drawing in image. *\/$/;"	m	struct:TImageInstance	file:
gc	generic/tkPanedWindow.c	/^    GC gc;			\/* Graphics context for copying from$/;"	m	struct:PanedWindow	file:
gc	generic/tkSquare.c	/^    GC gc;			\/* Graphics context for copying from$/;"	m	struct:__anon142	file:
gc	generic/tkTest.c	/^    GC gc;			\/* Graphics context for drawing in image. *\/$/;"	m	struct:TImageInstance	file:
gc	macosx/tkMacOSXButton.c	/^    GC gc;$/;"	m	struct:__anon201	file:
gc	macosx/tkMacOSXMenubutton.c	/^    GC gc;$/;"	m	struct:__anon204	file:
gc	xlib/X11/Xlib.h	/^		GC gc;$/;"	m	union:__anon325
gcCacheSize	xlib/xgc.c	19;"	d	file:
gcCacheSize	xlib/xgc.c	29;"	d	file:
gcIdTable	generic/tkInt.h	/^    Tcl_HashTable gcIdTable;    \/* Maps from a GC to a TkGC. *\/$/;"	m	struct:TkDisplay
gcInit	generic/tkInt.h	/^    int gcInit;			\/* 0 means the tables below need$/;"	m	struct:TkDisplay
gcValueTable	generic/tkInt.h	/^    Tcl_HashTable gcValueTable; \/* Maps from a GC's values to a TkGC structure$/;"	m	struct:TkDisplay
genStubs::addGuard	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::addGuard {status text} {$/;"	p
genStubs::addPlatformGuard	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::addPlatformGuard {plat iftxt {eltxt {}}} {$/;"	p
genStubs::declare	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::declare {args} {$/;"	p
genStubs::emitDeclarations	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::emitDeclarations {name textVar} {$/;"	p
genStubs::emitHeader	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::emitHeader {name} {$/;"	p
genStubs::emitInit	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::emitInit {name textVar} {$/;"	p
genStubs::emitInits	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::emitInits {} {$/;"	p
genStubs::emitMacros	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::emitMacros {name textVar} {$/;"	p
genStubs::emitSlots	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::emitSlots {name textVar} {$/;"	p
genStubs::epoch	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::epoch {value} {$/;"	p
genStubs::export	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::export {args} {$/;"	p
genStubs::forAllStubs	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::forAllStubs {name slotProc guardProc textVar$/;"	p
genStubs::hooks	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::hooks {names} {$/;"	p
genStubs::ifdeffed	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::ifdeffed {macro text} {$/;"	p
genStubs::init	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::init {} {$/;"	p
genStubs::interface	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::interface {name} {$/;"	p
genStubs::library	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::library {name} {$/;"	p
genStubs::makeDecl	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::makeDecl {name decl index} {$/;"	p
genStubs::makeInit	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::makeInit {name decl index} {$/;"	p
genStubs::makeMacro	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::makeMacro {name decl index} {$/;"	p
genStubs::makeSlot	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::makeSlot {name decl index} {$/;"	p
genStubs::noGuard	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::noGuard  {status text} { return $text }$/;"	p
genStubs::parseArg	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::parseArg {arg} {$/;"	p
genStubs::parseDecl	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::parseDecl {decl} {$/;"	p
genStubs::rewriteFile	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::rewriteFile {file text} {$/;"	p
genStubs::scspec	generic/ttk/ttkGenStubs.tcl	/^proc genStubs::scspec {value} {$/;"	p
generateExposeEvents	macosx/tkMacOSXWindowEvent.c	/^- (void) generateExposeEvents: (HIShapeRef) shape$/;"	f
genericId	generic/tkStyle.c	/^    int genericId;		\/* Id of generic element. *\/$/;"	m	struct:Element	file:
genericList	generic/tkEvent.c	/^    GenericHandler *genericList;\/* First handler in the list, or NULL. *\/$/;"	m	struct:ThreadSpecificData	file:
geomData	generic/tkInt.h	/^    ClientData geomData;	\/* Argument for geometry manager functions. *\/$/;"	m	struct:TkWindow
geomInit	generic/tkInt.h	/^    int geomInit;$/;"	m	struct:TkDisplay
geomMgrPtr	generic/tkInt.h	/^    const Tk_GeomMgr *geomMgrPtr;$/;"	m	struct:TkWindow
geometry	generic/tkWindow.c	/^static char *geometry = NULL;$/;"	v	file:
geometryMaster	generic/tkInt.h	/^    char *geometryMaster;$/;"	m	struct:TkWindow
getBorderWidth	generic/tk.h	/^    Tk_GetElementBorderWidthProc *getBorderWidth;$/;"	m	struct:Tk_ElementSpec
getBox	generic/tk.h	/^    Tk_GetElementBoxProc *getBox;$/;"	m	struct:Tk_ElementSpec
getClipProc	macosx/tkMacOSXInt.h	/^    Tk_MacOSXEmbedGetClipProc *getClipProc;$/;"	m	struct:__anon196
getFileURL	macosx/tkMacOSXDialog.c	/^static NSURL *getFileURL(NSString *directory, NSString *filename) {$/;"	f	file:
getLayoutProc	generic/ttk/ttkWidget.h	/^    Ttk_Layout	(*getLayoutProc)(Tcl_Interp *,Ttk_Theme, void *recordPtr);$/;"	m	struct:WidgetSpec_
getOffsetProc	macosx/tkMacOSXInt.h	/^    Tk_MacOSXEmbedGetOffsetInParentProc *getOffsetProc;$/;"	m	struct:__anon196
getPortProc	macosx/tkMacOSXInt.h	/^    Tk_MacOSXEmbedGetGrafPortProc *getPortProc;$/;"	m	struct:__anon196
getProc	generic/tk.h	/^    Tk_CustomOptionGetProc *getProc;$/;"	m	struct:Tk_ObjCustomOption
getProc	generic/tk.h	/^    Tk_ImageGetProc *getProc;	\/* Procedure to call the first time$/;"	m	struct:Tk_ImageType
getSize	generic/tk.h	/^    Tk_GetElementSizeProc *getSize;$/;"	m	struct:Tk_ElementSpec
getTextExtentPoint32Proc	win/tkWinFont.c	/^    BOOL (WINAPI *getTextExtentPoint32Proc)(HDC, TCHAR *, int, LPSIZE);$/;"	m	struct:FontFamily	file:
get_pixel	xlib/X11/Xlib.h	/^	unsigned long (*get_pixel)  (struct _XImage *, int, int);$/;"	m	struct:_XImage::funcs
get_pixel	xlib/X11/Xlib.h	/^	unsigned long (*get_pixel)();$/;"	m	struct:_XImage::funcs
global	macosx/tkMacOSXMouseEvent.c	/^    Point global;$/;"	m	struct:__anon194	file:
globalFontClass	generic/tkFont.c	/^static const char *const globalFontClass[] = {$/;"	v	file:
global_auto_repeat	xlib/X11/Xlib.h	/^	int global_auto_repeat;$/;"	m	struct:__anon283
glyphIdArray	win/tkWinFont.c	/^    BYTE glyphIdArray[256];	\/* Array that maps up to 256 single-byte char$/;"	m	struct:BYTETABLE	file:
gotFocus	generic/tk.h	/^    int gotFocus;		\/* Non-zero means that the canvas widget has$/;"	m	struct:Tk_CanvasTextInfo
gotPartial	generic/tkMain.c	/^    int gotPartial;$/;"	m	struct:InteractiveState	file:
gotResponse	unix/tkUnixSend.c	/^    int gotResponse;		\/* 1 means a response has been received, 0$/;"	m	struct:PendingCommand	file:
gothicAliases	generic/tkFont.c	/^static const char *const gothicAliases[] = {$/;"	v	file:
grabFlags	generic/tkInt.h	/^    int grabFlags;		\/* Miscellaneous flag values. See definitions$/;"	m	struct:TkDisplay
grabWinPtr	generic/tkInt.h	/^    struct TkWindow *grabWinPtr;\/* Window in which the pointer is currently$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWindow
grabWinPtr	generic/tkPointer.c	/^    TkWindow *grabWinPtr;	\/* Window that defines the top of the grab$/;"	m	struct:ThreadSpecificData	file:
grabWinPtr	macosx/tkMacOSXKeyEvent.c	/^static Tk_Window grabWinPtr = NULL;$/;"	v	file:
grabWindow	generic/tkGrab.c	/^    Window grabWindow;		\/* New grab window for display. This is$/;"	m	struct:NewGrabWinEvent	file:
graphics_exposures	xlib/X11/Xlib.h	/^	Bool graphics_exposures;\/* boolean, should exposures be generated *\/$/;"	m	struct:__anon268
gravity	macosx/tkMacOSXWm.h	/^    int gravity;		\/* Desired window gravity. *\/$/;"	m	struct:TkWmInfo
gravity	unix/tkUnixWm.c	/^    int gravity;		\/* Desired window gravity. *\/$/;"	m	struct:TkWmInfo	file:
gravity	win/tkWinWm.c	/^    int gravity;		\/* Desired window gravity. *\/$/;"	m	struct:TkWmInfo	file:
gray	generic/tkButton.h	/^    Pixmap gray;		\/* Pixmap for displaying disabled text if$/;"	m	struct:__anon178
gray	generic/tkListbox.c	/^    Pixmap gray;		\/* Pixmap for displaying disabled text. *\/$/;"	m	struct:__anon149	file:
gray	generic/tkMenu.h	/^    Pixmap gray;		\/* Bitmap for drawing disabled entries in a$/;"	m	struct:TkMenu
gray	generic/tkMenubutton.h	/^    Pixmap gray;		\/* Pixmap for displaying disabled text\/icon if$/;"	m	struct:__anon137
green	generic/tkColor.c	/^    int red, green, blue;	\/* Values for desired color. *\/$/;"	m	struct:__anon157	file:
green	generic/tkImgPNG.c	/^	unsigned char green;$/;"	m	struct:__anon179::__anon180	file:
green	xlib/X11/Xlib.h	/^	unsigned short red, green, blue;$/;"	m	struct:__anon277
greenOffset	generic/tkImgGIF.c	/^    int greenOffset;$/;"	m	struct:__anon129	file:
greenValues	generic/tkImgPhoto.h	/^    pixel greenValues[256];	\/* Ditto for green intensity. *\/$/;"	m	struct:ColorTable
green_mask	generic/tkCanvPs.c	/^    int red_mask, green_mask, blue_mask;	\/* Masks and shifts for each *\/$/;"	m	struct:TkColormapData	file:
green_mask	xlib/X11/Xlib.h	/^	unsigned long red_mask, green_mask, blue_mask;	\/* mask values *\/$/;"	m	struct:__anon269
green_mask	xlib/X11/Xlib.h	/^    unsigned long green_mask;$/;"	m	struct:_XImage
green_mask	xlib/X11/Xutil.h	/^  unsigned long green_mask;$/;"	m	struct:__anon264
green_max	xlib/X11/Xutil.h	/^	unsigned long green_max;$/;"	m	struct:__anon265
green_mult	xlib/X11/Xutil.h	/^	unsigned long green_mult;$/;"	m	struct:__anon265
green_shift	generic/tkCanvPs.c	/^    int red_shift, green_shift, blue_shift;	\/* color band *\/$/;"	m	struct:TkColormapData	file:
gridHashTable	generic/tkInt.h	/^    Tcl_HashTable gridHashTable;\/* Maps from Tk_Window tokens to corresponding$/;"	m	struct:TkDisplay
gridInit	generic/tkInt.h	/^    int gridInit;		\/* 0 means table below needs initializing. *\/$/;"	m	struct:TkDisplay
gridMgrType	generic/tkGrid.c	/^static const Tk_GeomMgr gridMgrType = {$/;"	v	file:
gridWin	macosx/tkMacOSXWm.h	/^    Tk_Window gridWin;		\/* Identifies the window that controls gridding$/;"	m	struct:TkWmInfo
gridWin	unix/tkUnixWm.c	/^    Tk_Window gridWin;		\/* Identifies the window that controls$/;"	m	struct:TkWmInfo	file:
gridWin	win/tkWinWm.c	/^    Tk_Window gridWin;		\/* Identifies the window that controls$/;"	m	struct:TkWmInfo	file:
gripCountObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*gripCountObj;$/;"	m	struct:__anon57	file:
gripCountObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*gripCountObj;$/;"	m	struct:__anon58	file:
grooveWidthObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *grooveWidthObj;$/;"	m	struct:__anon95	file:
group	generic/tkGrid.c	/^    Tk_Uid group;$/;"	m	struct:UniformGroup	file:
groupbox_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable groupbox_statemap[] =$/;"	v	file:
hArrowWidth	win/tkWinScrlbr.c	/^static int hArrowWidth, hThumb; \/* Horizontal control metrics. *\/$/;"	v	file:
hBigIcon	win/tkWinDialog.c	/^    HICON hBigIcon;		\/* the message box *\/$/;"	m	struct:ThreadSpecificData	file:
hDC	win/ttkWinXPTheme.c	/^    HDC		hDC;$/;"	m	struct:__anon241	file:
hFont0	win/tkWinFont.c	/^    HFONT hFont0;		\/* The specific screen font that will be used$/;"	m	struct:SubFont	file:
hFontAngled	win/tkWinFont.c	/^    HFONT hFontAngled;$/;"	m	struct:SubFont	file:
hIcon	win/tkWinWm.c	/^    HICON hIcon;		\/* DAS ICON *\/$/;"	m	struct:__anon233	file:
hMenu	win/tkWinWm.c	/^    HMENU hMenu;		\/* the hMenu associated with this menu *\/$/;"	m	struct:TkWmInfo	file:
hMsgBoxHook	win/tkWinDialog.c	/^    HHOOK hMsgBoxHook;		\/* Hook proc for tk_messageBox and the *\/$/;"	m	struct:ThreadSpecificData	file:
hPtr	generic/tkBind.c	/^    Tcl_HashEntry *hPtr;	\/* Pointer to hash table entry for the initial$/;"	m	struct:PatSeq	file:
hPtr	generic/tkImage.c	/^    Tcl_HashEntry *hPtr;	\/* Hash entry in mainPtr->imageTable for this$/;"	m	struct:ImageMaster	file:
hPtr	generic/tkText.h	/^    Tcl_HashEntry *hPtr;	\/* Pointer to hash table entry for mark (in$/;"	m	struct:TkTextMark
hPtr	generic/tkTextDisp.c	/^    Tcl_HashEntry *hPtr;	\/* Pointer to entry in styleTable. Used to$/;"	m	struct:TextStyle	file:
hSize	generic/tkImgGIF.c	/^    long hSize;			\/* For dynamic table sizing. *\/$/;"	m	struct:__anon130	file:
hSmallIcon	win/tkWinDialog.c	/^    HICON hSmallIcon;		\/* icons used by a parent to be used in *\/$/;"	m	struct:ThreadSpecificData	file:
hTheme	win/ttkWinXPTheme.c	/^    HTHEME	hTheme;$/;"	m	struct:__anon241	file:
hThumb	win/tkWinScrlbr.c	/^static int hArrowWidth, hThumb; \/* Horizontal control metrics. *\/$/;"	v	file:
halfdeadWindowList	generic/tkWindow.c	/^    TkHalfdeadWindow *halfdeadWindowList;$/;"	m	struct:ThreadSpecificData	file:
handle	win/tkWinInt.h	/^    HBITMAP handle;$/;"	m	struct:__anon226
handle	win/tkWinInt.h	/^    HWND handle;$/;"	m	struct:__anon225
handlePad	generic/tkPanedWindow.c	/^    int handlePad;		\/* Distance from border to draw handle. *\/$/;"	m	struct:PanedWindow	file:
handlePadObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *handlePadObj;	\/* handle's distance from edge *\/$/;"	m	struct:__anon106	file:
handleSize	generic/tkPanedWindow.c	/^    int handleSize;		\/* Size of one side of a sash handle (handles$/;"	m	struct:PanedWindow	file:
handleSizeObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *handleSizeObj;	\/* handle width and height *\/$/;"	m	struct:__anon106	file:
handleSizePtr	generic/tkPanedWindow.c	/^    Tcl_Obj *handleSizePtr;	\/* Tcl_Obj rep for handle size. *\/$/;"	m	struct:PanedWindow	file:
handler	win/tkWin32Dll.c	/^    EXCEPTION_DISPOSITION (*handler)($/;"	m	struct:TCLEXCEPTION_REGISTRATION	file:
handlerList	generic/tkInt.h	/^    TkEventHandler *handlerList;\/* First in list of event handlers declared$/;"	m	struct:TkWindow
handlersActive	generic/tkEvent.c	/^    int handlersActive;		\/* The following variable has a non-zero value$/;"	m	struct:ThreadSpecificData	file:
handlex	generic/tkPanedWindow.c	/^    int handlex, handley;	\/* Coordinates of the sash handle. *\/$/;"	m	struct:Slave	file:
handley	generic/tkPanedWindow.c	/^    int handlex, handley;	\/* Coordinates of the sash handle. *\/$/;"	m	struct:Slave	file:
hasImageOrBitmap	macosx/tkMacOSXButton.c	/^    int hasImageOrBitmap;$/;"	m	struct:__anon201	file:
hasImageOrBitmap	macosx/tkMacOSXMenubutton.c	/^    int hasImageOrBitmap;$/;"	m	struct:__anon204	file:
hashEntryPtr	generic/tkConfig.c	/^    Tcl_HashEntry *hashEntryPtr;\/* Hash table entry that refers to this table;$/;"	m	struct:OptionTable	file:
hashEntryPtr	generic/tkMenu.h	/^    Tcl_HashEntry *hashEntryPtr;\/* This is needed because the pathname of the$/;"	m	struct:TkMenuReferences
hashPtr	generic/tk3d.h	/^    Tcl_HashEntry *hashPtr;	\/* Entry in borderTable (needed in order to$/;"	m	struct:TkBorder
hashPtr	generic/tkBusy.h	/^    Tcl_HashEntry *hashPtr;	\/* Used the delete the busy window entry out$/;"	m	struct:Busy
hashPtr	generic/tkColor.h	/^    Tcl_HashEntry *hashPtr;	\/* Pointer to hash table entry for this$/;"	m	struct:TkColor
hashPtr	generic/tkInt.h	/^    Tcl_HashEntry *hashPtr;	\/* Entry in otherTable for this structure$/;"	m	struct:TkCursor
hashTable	generic/tkConfig.c	/^    Tcl_HashTable hashTable;$/;"	m	struct:ThreadSpecificData	file:
hashTable	generic/tkImgGIF.c	/^    int hashTable[HSIZE];$/;"	m	struct:__anon130	file:
hdc	win/tkWinFont.c	/^    HDC hdc;$/;"	m	struct:CanUse	file:
hdc	win/tkWinInt.h	/^    HDC hdc;$/;"	m	struct:__anon227
head	xlib/X11/Xlib.h	/^	struct _XSQEvent *head, *tail;	\/* Input event queue. *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XSQEvent
header	generic/tkCanvArc.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:ArcItem	file:
header	generic/tkCanvBmap.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:BitmapItem	file:
header	generic/tkCanvImg.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:ImageItem	file:
header	generic/tkCanvLine.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:LineItem	file:
header	generic/tkCanvPoly.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:PolygonItem	file:
header	generic/tkCanvText.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:TextItem	file:
header	generic/tkCanvWind.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:WindowItem	file:
header	generic/tkEvent.c	/^    Tcl_Event header;		\/* Standard information for all events. *\/$/;"	m	struct:TkWindowEvent	file:
header	generic/tkGrab.c	/^    Tcl_Event header;		\/* Standard information for all Tcl events. *\/$/;"	m	struct:NewGrabWinEvent	file:
header	generic/tkRectOval.c	/^    Tk_Item header;		\/* Generic stuff that's the same for all$/;"	m	struct:RectOvalItem	file:
header	macosx/tkMacOSXHLEvents.c	/^    Tcl_Event header;		\/* Information that is standard for all$/;"	m	struct:KillEvent	file:
header	win/tkWinSend.c	/^    Tcl_Event header;$/;"	m	struct:SendEvent	file:
header_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable header_statemap[] =$/;"	v	file:
headingAnchorObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj 	*headingAnchorObj;	\/* -anchor for heading label *\/$/;"	m	struct:__anon82	file:
headingArea	generic/ttk/ttkTreeview.c	/^    Ttk_Box headingArea;	\/* Display area for column headings *\/$/;"	m	struct:__anon83	file:
headingCommandObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*headingCommandObj;	\/* Command to execute *\/$/;"	m	struct:__anon82	file:
headingHeight	generic/ttk/ttkTreeview.c	/^    int headingHeight;		\/* Space for headings *\/$/;"	m	struct:__anon83	file:
headingImageObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*headingImageObj;	\/* Heading image *\/$/;"	m	struct:__anon82	file:
headingLayout	generic/ttk/ttkTreeview.c	/^    Ttk_Layout headingLayout;$/;"	m	struct:__anon83	file:
headingObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj 	*headingObj;		\/* Heading label *\/$/;"	m	struct:__anon82	file:
headingOptionTable	generic/ttk/ttkTreeview.c	/^    Tk_OptionTable headingOptionTable;$/;"	m	struct:__anon83	file:
headingState	generic/ttk/ttkTreeview.c	/^    Ttk_State	headingState;		\/* ... *\/$/;"	m	struct:__anon82	file:
headingStateObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj 	*headingStateObj;	\/* @@@ testing ... *\/$/;"	m	struct:__anon82	file:
height	generic/tk.h	/^    int height;			\/* Height of block, in pixels. *\/$/;"	m	struct:Tk_PhotoImageBlock
height	generic/tkBitmap.c	/^    int width, height;		\/* Dimensions of bitmap. *\/$/;"	m	struct:TkBitmap	file:
height	generic/tkBitmap.c	/^    int width, height;		\/* Dimensions of bitmap. *\/$/;"	m	struct:__anon2	file:
height	generic/tkBusy.h	/^    int width, height;		\/* Size of the reference window. Retained to$/;"	m	struct:Busy
height	generic/tkButton.h	/^    int height;			\/* Integer value corresponding to heightPtr. *\/$/;"	m	struct:__anon178
height	generic/tkCanvPs.c	/^    int x, y, width, height;	\/* Area to print, in canvas pixel$/;"	m	struct:TkPostscriptInfo	file:
height	generic/tkCanvWind.c	/^    int height;			\/* Width to use for window (<= 0 means use$/;"	m	struct:WindowItem	file:
height	generic/tkCanvas.h	/^    int width, height;		\/* Dimensions to request for canvas window,$/;"	m	struct:TkCanvas
height	generic/tkCursor.c	/^    int width, height;		\/* Dimensions of cursor (and data and$/;"	m	struct:__anon1	file:
height	generic/tkFrame.c	/^    int height;			\/* Height to request for window. <= 0 means$/;"	m	struct:__anon145	file:
height	generic/tkGeometry.c	/^    int width, height;		\/* Desired dimensions of slave. *\/$/;"	m	struct:MaintainSlave	file:
height	generic/tkImage.c	/^    int width, height;		\/* Last known dimensions for image. *\/$/;"	m	struct:ImageMaster	file:
height	generic/tkImgBmap.c	/^    int width, height;		\/* Dimensions of image. *\/$/;"	m	struct:BitmapMaster	file:
height	generic/tkImgPhoto.h	/^    int	width, height;		\/* Dimensions of image. *\/$/;"	m	struct:PhotoMaster
height	generic/tkImgPhoto.h	/^    int width, height;		\/* Dimensions of the pixmap. *\/$/;"	m	struct:PhotoInstance
height	generic/tkInt.h	/^    int height;			\/* Specified height of the window. *\/$/;"	m	struct:TkCaret
height	generic/tkInt.h	/^    int width, height;		\/* Dimensions of bitmap. *\/$/;"	m	struct:__anon132
height	generic/tkListbox.c	/^    int height;			\/* Desired height of window, in lines. *\/$/;"	m	struct:__anon149	file:
height	generic/tkMenu.h	/^    int height;			\/* Number of pixels occupied by entry in$/;"	m	struct:TkMenuEntry
height	generic/tkMenubutton.h	/^    int width, height;		\/* If > 0, these specify dimensions to request$/;"	m	struct:__anon137
height	generic/tkOldTest.c	/^    int width, height;          \/* Dimensions of image. *\/$/;"	m	struct:TImageMaster	file:
height	generic/tkPanedWindow.c	/^    int height;			\/* Slave height. *\/$/;"	m	struct:Slave	file:
height	generic/tkPanedWindow.c	/^    int width, height;		\/* Width and height of the widget. *\/$/;"	m	struct:PanedWindow	file:
height	generic/tkPlace.c	/^    int width, height;		\/* Absolute dimensions for tkwin. *\/$/;"	m	struct:Slave	file:
height	generic/tkTest.c	/^    int width, height;		\/* Dimensions of image. *\/$/;"	m	struct:TImageMaster	file:
height	generic/tkText.h	/^    int width, height;		\/* Desired dimensions for window, measured in$/;"	m	struct:TkText
height	generic/tkTextDisp.c	/^    int height;			\/* Height of line, in pixels. *\/$/;"	m	struct:DLine	file:
height	generic/ttk/ttkDefaultTheme.c	/^    int height;		\/* Height of each image *\/$/;"	m	struct:__anon90	file:
height	generic/ttk/ttkLabel.c	/^    int		height;$/;"	m	struct:__anon62	file:
height	generic/ttk/ttkLabel.c	/^    int 		height;$/;"	m	struct:__anon61	file:
height	generic/ttk/ttkNotebook.c	/^    int 	width, height;		\/* Requested size of tab *\/$/;"	m	struct:__anon65	file:
height	generic/ttk/ttkPanedwindow.c	/^    int 	height;$/;"	m	struct:__anon123	file:
height	generic/ttk/ttkTheme.h	/^    int height;$/;"	m	struct:__anon73
height	macosx/tkMacOSXBitmap.c	/^    int kind, width, height;$/;"	m	struct:__anon188	file:
height	macosx/tkMacOSXWm.h	/^    int width, height;		\/* Desired dimensions of window, specified in$/;"	m	struct:TkWmInfo
height	unix/tkUnixWm.c	/^    int width, height;		\/* Desired dimensions of window, specified in$/;"	m	struct:TkWmInfo	file:
height	win/tkWinWm.c	/^    int width, height;		\/* Desired dimensions of window, specified in$/;"	m	struct:TkWmInfo	file:
height	xlib/X11/Xlib.h	/^	int width, height;	\/* size of window *\/$/;"	m	struct:__anon297
height	xlib/X11/Xlib.h	/^	int width, height;	\/* width and height of screen *\/$/;"	m	struct:__anon271
height	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon293
height	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon294
height	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon303
height	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon305
height	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon306
height	xlib/X11/Xlib.h	/^    int width, height;		\/* size of image *\/$/;"	m	struct:_XImage
height	xlib/X11/Xlib.h	/^    int width, height;		\/* width and height of window *\/$/;"	m	struct:__anon274
height	xlib/X11/Xlib.h	/^    int width, height;$/;"	m	struct:__anon276
height	xlib/X11/Xlib.h	/^    unsigned short width, height;$/;"	m	struct:__anon280
height	xlib/X11/Xlib.h	/^    unsigned short width, height;$/;"	m	struct:__anon281
height	xlib/X11/Xutil.h	/^	int width, height;	\/* should set so old wm's don't mess up *\/$/;"	m	struct:__anon257
heightInc	macosx/tkMacOSXWm.h	/^    int widthInc, heightInc;	\/* Increments for size changes (# pixels per$/;"	m	struct:TkWmInfo
heightInc	unix/tkUnixWm.c	/^    int widthInc, heightInc;	\/* Increments for size changes (# pixels per$/;"	m	struct:TkWmInfo	file:
heightInc	win/tkWinWm.c	/^    int widthInc, heightInc;	\/* Increments for size changes (# pixels per$/;"	m	struct:TkWmInfo	file:
heightMetric	macosx/ttkMacOSXTheme.c	/^    ThemeMetric heightMetric;$/;"	m	struct:__anon209	file:
heightObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *heightObj;$/;"	m	struct:__anon41	file:
heightObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*heightObj;$/;"	m	struct:__anon28	file:
heightObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj 	*heightObj;$/;"	m	struct:__anon118	file:
heightObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj *heightObj;		\/* Default height *\/$/;"	m	struct:__anon66	file:
heightObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *heightObj;$/;"	m	struct:__anon111	file:
heightObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *heightObj;$/;"	m	struct:__anon113	file:
heightObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *heightObj;		\/* height (rows) *\/$/;"	m	struct:__anon83	file:
heightPtr	generic/tkButton.h	/^    Tcl_Obj *heightPtr;		\/* Value of -height option. *\/$/;"	m	struct:__anon178
heightPtr	generic/tkPanedWindow.c	/^    Tcl_Obj *heightPtr;		\/* Tcl_Obj rep for height. *\/$/;"	m	struct:PanedWindow	file:
heightPtr	generic/tkPanedWindow.c	/^    Tcl_Obj *widthPtr, *heightPtr;$/;"	m	struct:Slave	file:
heightPtr	generic/tkPlace.c	/^    Tcl_Obj *heightPtr;		\/* Tcl_Obj rep of height, to keep pixel$/;"	m	struct:Slave	file:
heightString	generic/tkMenubutton.h	/^    char *heightString;		\/* Value of -height option. Malloc'ed. *\/$/;"	m	struct:__anon137
height_inc	xlib/X11/Xutil.h	/^	int width_inc, height_inc;$/;"	m	struct:__anon262
height_inc	xlib/X11/Xutil.h	/^    	int width_inc, height_inc;$/;"	m	struct:__anon257
help	generic/tk.h	/^    CONST86 char *help;		\/* Documentation message describing this$/;"	m	struct:__anon5
help	win/buildall.vc.bat	/^:help$/;"	l
helveticaAliases	generic/tkFont.c	/^static const char *const helveticaAliases[] = {$/;"	v	file:
hiByte	win/tkWinFont.c	/^    HIBYTETABLE hiByte;$/;"	m	union:SUBTABLE	file:
hide	generic/tkPanedWindow.c	/^    int hide;			\/* Controls visibility of pane *\/$/;"	m	struct:Slave	file:
hideMargin	generic/tkMenu.h	/^    int hideMargin;		\/* If this is 0, then the item has enough$/;"	m	struct:TkMenuEntry
highlightBgColorPtr	generic/tkCanvas.h	/^    XColor *highlightBgColorPtr;$/;"	m	struct:TkCanvas
highlightBgColorPtr	generic/tkEntry.h	/^    XColor *highlightBgColorPtr;\/* Color for drawing traversal highlight area$/;"	m	struct:__anon183
highlightBgColorPtr	generic/tkFrame.c	/^    XColor *highlightBgColorPtr;$/;"	m	struct:__anon145	file:
highlightBgColorPtr	generic/tkListbox.c	/^    XColor *highlightBgColorPtr;$/;"	m	struct:__anon149	file:
highlightBgColorPtr	generic/tkMenubutton.h	/^    XColor *highlightBgColorPtr;\/* Color for drawing traversal highlight area$/;"	m	struct:__anon137
highlightBgColorPtr	generic/tkMessage.c	/^    XColor *highlightBgColorPtr;$/;"	m	struct:__anon153	file:
highlightBgColorPtr	generic/tkScrollbar.h	/^    XColor *highlightBgColorPtr;$/;"	m	struct:TkScrollbar
highlightBgColorPtr	generic/tkText.h	/^    XColor *highlightBgColorPtr;$/;"	m	struct:TkText
highlightBorder	generic/tkButton.h	/^    Tk_3DBorder highlightBorder;\/* Value of -highlightbackground option:$/;"	m	struct:__anon178
highlightBorder	generic/tkScale.h	/^    Tk_3DBorder highlightBorder;\/* Value of -highlightbackground option:$/;"	m	struct:TkScale
highlightColorObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj	*highlightColorObj;$/;"	m	struct:__anon103	file:
highlightColorObj	win/ttkWinTheme.c	/^    Tcl_Obj	*highlightColorObj;$/;"	m	struct:__anon247	file:
highlightColorPtr	generic/tkButton.h	/^    XColor *highlightColorPtr;	\/* Value of -highlightcolor option: specifies$/;"	m	struct:__anon178
highlightColorPtr	generic/tkCanvas.h	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:TkCanvas
highlightColorPtr	generic/tkEntry.h	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:__anon183
highlightColorPtr	generic/tkFrame.c	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:__anon145	file:
highlightColorPtr	generic/tkListbox.c	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:__anon149	file:
highlightColorPtr	generic/tkMenubutton.h	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:__anon137
highlightColorPtr	generic/tkMessage.c	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:__anon153	file:
highlightColorPtr	generic/tkScale.h	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:TkScale
highlightColorPtr	generic/tkScrollbar.h	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:TkScrollbar
highlightColorPtr	generic/tkText.h	/^    XColor *highlightColorPtr;	\/* Color for drawing traversal highlight. *\/$/;"	m	struct:TkText
highlightGC	generic/tkEntry.h	/^    GC highlightGC;		\/* For drawing traversal highlight. *\/$/;"	m	struct:__anon183
highlightThicknessObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj	*highlightThicknessObj;$/;"	m	struct:__anon103	file:
highlightWidth	generic/tkButton.h	/^    int highlightWidth;		\/* Integer value corresponding to$/;"	m	struct:__anon178
highlightWidth	generic/tkCanvas.h	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:TkCanvas
highlightWidth	generic/tkEntry.h	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:__anon183
highlightWidth	generic/tkFrame.c	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:__anon145	file:
highlightWidth	generic/tkListbox.c	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:__anon149	file:
highlightWidth	generic/tkMenubutton.h	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:__anon137
highlightWidth	generic/tkMessage.c	/^    int highlightWidth;		\/* Width in pixels of highlight to draw$/;"	m	struct:__anon153	file:
highlightWidth	generic/tkScale.h	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:TkScale
highlightWidth	generic/tkScrollbar.h	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:TkScrollbar
highlightWidth	generic/tkText.h	/^    int highlightWidth;		\/* Width in pixels of highlight to draw around$/;"	m	struct:TkText
highlightWidthPtr	generic/tkButton.h	/^    Tcl_Obj *highlightWidthPtr;	\/* Value of -highlightthickness option:$/;"	m	struct:__anon178
hints	macosx/tkMacOSXWm.h	/^    XWMHints hints;		\/* Various pieces of information for window$/;"	m	struct:TkWmInfo
hints	unix/tkUnixWm.c	/^    XWMHints hints;		\/* Various pieces of information for window$/;"	m	struct:TkWmInfo	file:
hints	win/tkWinWm.c	/^    XWMHints hints;		\/* Various pieces of information for window$/;"	m	struct:TkWmInfo	file:
hlibrary	win/ttkWinXPTheme.c	/^    HINSTANCE hlibrary;$/;"	m	struct:__anon239	file:
hooks	generic/tkDecls.h	/^    const TkStubHooks *hooks;$/;"	m	struct:TkStubs
hooks	generic/tkIntDecls.h	/^    void *hooks;$/;"	m	struct:TkIntStubs
hooks	generic/tkIntPlatDecls.h	/^    void *hooks;$/;"	m	struct:TkIntPlatStubs
hooks	generic/tkIntXlibDecls.h	/^    void *hooks;$/;"	m	struct:TkIntXlibStubs
hooks	generic/tkMain.c	/^    void *hooks;$/;"	m	struct:__anon138	file:
hooks	generic/tkPlatDecls.h	/^    void *hooks;$/;"	m	struct:TkPlatStubs
hooks	generic/ttk/ttkDecls.h	/^    void *hooks;$/;"	m	struct:TtkStubs
horizLabelY	generic/tkScale.h	/^    int horizLabelY;		\/* Y-coord at which to draw label. *\/$/;"	m	struct:TkScale
horizTickY	generic/tkScale.h	/^    int horizTickY;		\/* Y-coord at which to draw tick text. *\/$/;"	m	struct:TkScale
horizTroughY	generic/tkScale.h	/^    int horizTroughY;		\/* Y-coord of top of slider trough. *\/$/;"	m	struct:TkScale
horizValueY	generic/tkScale.h	/^    int horizValueY;		\/* Y-coord at which to draw value text. *\/$/;"	m	struct:TkScale
hotPrevPtr	generic/tkCanvas.h	/^    Tk_Item *hotPrevPtr;	\/* Pointer to predecessor to hotPtr (NULL$/;"	m	struct:TkCanvas
hotPtr	generic/tkCanvas.h	/^    Tk_Item *hotPtr;		\/* Pointer to "hot" item (one that's been$/;"	m	struct:TkCanvas
hotspot	macosx/tkMacOSXCursor.c	/^    NSPoint hotspot;$/;"	m	struct:CursorName	file:
howmany	macosx/tkMacOSXPort.h	88;"	d
howmany	unix/tkUnixPort.h	97;"	d
hwnd	win/tkWinButton.c	/^    HWND hwnd;			\/* Current window handle. *\/$/;"	m	struct:WinButton	file:
hwnd	win/tkWinDialog.c	/^    HWND hwnd;$/;"	m	struct:HookData	file:
hwnd	win/tkWinFont.c	/^    HWND hwnd;			\/* Toplevel window of application that owns$/;"	m	struct:WinFont	file:
hwnd	win/tkWinScrlbr.c	/^    HWND hwnd;			\/* Current window handle. *\/$/;"	m	struct:WinScrollbar	file:
hwnd	win/tkWinWm.c	/^    HWND hwnd;$/;"	m	struct:ActivateEvent	file:
hwnd	win/ttkWinXPTheme.c	/^    HWND	hwnd;$/;"	m	struct:__anon241	file:
hypot	win/tkWinPort.h	48;"	d
iPadX	generic/tkGrid.c	/^    int iPadX, iPadY;		\/* Total extra pixels to allocate inside the$/;"	m	struct:Gridder	file:
iPadX	generic/tkPack.c	/^    int iPadX, iPadY;		\/* Total extra pixels to allocate inside the$/;"	m	struct:Packer	file:
iPadY	generic/tkGrid.c	/^    int iPadX, iPadY;		\/* Total extra pixels to allocate inside the$/;"	m	struct:Gridder	file:
iPadY	generic/tkPack.c	/^    int iPadX, iPadY;		\/* Total extra pixels to allocate inside the$/;"	m	struct:Packer	file:
icon	macosx/tkMacOSXWm.h	/^    Tk_Window icon;		\/* Window to use as icon for this window, or$/;"	m	struct:TkWmInfo
icon	unix/tkUnixWm.c	/^    Tk_Window icon;		\/* Window to use as icon for this window, or$/;"	m	struct:TkWmInfo	file:
icon	win/tkWinWm.c	/^    Tk_Window icon;		\/* Window to use as icon for this window, or$/;"	m	struct:TkWmInfo	file:
iconBitmapOptionStrings	macosx/tkMacOSXBitmap.c	/^static const char *const iconBitmapOptionStrings[] = {$/;"	v	file:
iconBitmapOptions	macosx/tkMacOSXBitmap.c	/^enum iconBitmapOptions {$/;"	g	file:
iconBitmapTable	macosx/tkMacOSXBitmap.c	/^static Tcl_HashTable iconBitmapTable = {};$/;"	v	file:
iconBlock	win/tkWinWm.c	/^    BlockOfIconImagesPtr iconBlock;$/;"	m	struct:WinIconInstance	file:
iconDataPtr	generic/tkInt.h	/^    unsigned char *iconDataPtr;	\/* Default iconphoto image data, if set. *\/$/;"	m	struct:TkDisplay
iconDataPtr	unix/tkUnixWm.c	/^    unsigned char *iconDataPtr;	\/* iconphoto image data, if set *\/$/;"	m	struct:TkWmInfo	file:
iconDataSize	generic/tkInt.h	/^    int iconDataSize;		\/* Size of default iconphoto image data. *\/$/;"	m	struct:TkDisplay
iconDataSize	unix/tkUnixWm.c	/^    int iconDataSize;		\/* size of iconphoto image data *\/$/;"	m	struct:TkWmInfo	file:
iconFor	macosx/tkMacOSXWm.h	/^    Tk_Window iconFor;		\/* Window for which this window is icon, or$/;"	m	struct:TkWmInfo
iconFor	unix/tkUnixWm.c	/^    Tk_Window iconFor;		\/* Window for which this window is icon, or$/;"	m	struct:TkWmInfo	file:
iconFor	win/tkWinWm.c	/^    Tk_Window iconFor;		\/* Window for which this window is icon, or$/;"	m	struct:TkWmInfo	file:
iconMap	win/tkWinDialog.c	/^static const TkStateMap iconMap[] = {$/;"	v	file:
iconName	macosx/tkMacOSXWm.h	/^    char *iconName;		\/* Name to display in icon. *\/$/;"	m	struct:TkWmInfo
iconName	unix/tkUnixWm.c	/^    char *iconName;		\/* Name to display in icon. Malloced. *\/$/;"	m	struct:TkWmInfo	file:
iconName	win/tkWinWm.c	/^    char *iconName;		\/* Name to display in icon. Malloced. *\/$/;"	m	struct:TkWmInfo	file:
iconPtr	win/tkWinWm.c	/^    WinIconPtr iconPtr;		\/* IconPtr being used as default for all$/;"	m	struct:ThreadSpecificData	file:
iconPtr	win/tkWinWm.c	/^    WinIconPtr iconPtr;		\/* Pointer to titlebar icon structure for this$/;"	m	struct:TkWmInfo	file:
iconType	macosx/tkMacOSXBitmap.c	/^    OSType iconType;		\/* OSType of icon. *\/$/;"	m	struct:__anon187	file:
icon_mask	xlib/X11/Xutil.h	/^	Pixmap icon_mask;	\/* icon mask bitmap *\/$/;"	m	struct:__anon259
icon_pixmap	xlib/X11/Xutil.h	/^	Pixmap icon_pixmap;	\/* pixmap to be used as icon *\/$/;"	m	struct:__anon259
icon_window	xlib/X11/Xutil.h	/^	Window icon_window; 	\/* window to be used as icon *\/$/;"	m	struct:__anon259
icon_x	xlib/X11/Xutil.h	/^	int icon_x, icon_y; 	\/* initial position of icon *\/$/;"	m	struct:__anon259
icon_y	xlib/X11/Xutil.h	/^	int icon_x, icon_y; 	\/* initial position of icon *\/$/;"	m	struct:__anon259
icursorProc	generic/tk.h	/^    Tk_ItemCursorProc *icursorProc;$/;"	m	struct:Tk_ItemType
id	generic/tk.h	/^    int id;			\/* Unique identifier for this item (also$/;"	m	struct:Tk_Item
id	generic/tkCanvas.c	/^    int id;			\/* Item id for searches by id *\/$/;"	m	struct:TagSearch	file:
id	generic/tkImgPhoto.h	/^    ColorTableId id;		\/* Information used in selecting this color$/;"	m	struct:ColorTable
id	generic/tkStyle.c	/^    int id;			\/* Id of element. *\/$/;"	m	struct:Element	file:
id	macosx/tkMacOSXButton.c	/^    int id;$/;"	m	struct:__anon202	file:
id	macosx/tkMacOSXFont.c	/^    const ThemeFontID id;$/;"	m	struct:SystemFontMapEntry	file:
id	win/tkWinCursor.c	/^    LPCTSTR id;$/;"	m	struct:CursorName	file:
id	win/tkWinTest.c	/^    int  id;$/;"	m	struct:TestFindControlState	file:
id1	macosx/tkMacOSXCursor.c	/^    id id1, id2;$/;"	m	struct:CursorName	file:
id2	macosx/tkMacOSXCursor.c	/^    id id1, id2;$/;"	m	struct:CursorName	file:
idCount	win/tkWinWm.c	/^    WORD idCount;		\/* How many images? *\/$/;"	m	struct:__anon236	file:
idDelta	win/tkWinFont.c	/^    SHORT idDelta;		\/* Constant adder to get base glyph index. *\/$/;"	m	struct:SUBHEADER	file:
idEntries	win/tkWinWm.c	/^    ICONDIRENTRY idEntries[1];	\/* The entries for each image *\/$/;"	m	struct:__anon236	file:
idHashPtr	generic/tkBitmap.c	/^    Tcl_HashEntry *idHashPtr;	\/* Entry in idTable for this structure (needed$/;"	m	struct:TkBitmap	file:
idHashPtr	generic/tkInt.h	/^    Tcl_HashEntry *idHashPtr;	\/* Entry in idTable for this structure (needed$/;"	m	struct:TkCursor
idObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*idObj;		\/* Column identifier, from -columns option *\/$/;"	m	struct:__anon82	file:
idRangeOffset	win/tkWinFont.c	/^    USHORT idRangeOffset;	\/* Byte offset from here to appropriate$/;"	m	struct:SUBHEADER	file:
idReserved	win/tkWinWm.c	/^    WORD idReserved;		\/* Reserved *\/$/;"	m	struct:__anon236	file:
idTable	generic/tkCanvas.h	/^    Tcl_HashTable idTable;	\/* Table of integer indices. *\/$/;"	m	struct:TkCanvas
idType	win/tkWinWm.c	/^    WORD idType;		\/* Resource type (1 for icons) *\/$/;"	m	struct:__anon236	file:
idleTime	generic/tkSelect.h	/^    int idleTime;		\/* Number of seconds that have gone by without$/;"	m	struct:TkSelRetrievalInfo
idleTime	unix/tkUnixSelect.c	/^    int idleTime;		\/* Number of seconds since we heard anything$/;"	m	struct:IncrInfo	file:
ifunptr	generic/tkImgGIF.c	/^typedef int (* ifunptr) (GifWriterState *statePtr);$/;"	t	file:
im_filters	xlib/X11/Xlib.h	/^	struct _XIMFilter *im_filters;$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XIMFilter
image	generic/tkButton.h	/^    Tk_Image image;		\/* Derived from imagePtr by calling$/;"	m	struct:__anon178
image	generic/tkCanvImg.c	/^    Tk_Image image;		\/* Image to display in window, or NULL if no$/;"	m	struct:ImageItem	file:
image	generic/tkMenu.h	/^    Tk_Image image;		\/* Image to display in menu entry, or NULL if$/;"	m	struct:TkMenuEntry
image	generic/tkMenubutton.h	/^    Tk_Image image;		\/* Image to display in window, or NULL if$/;"	m	struct:__anon137
image	generic/tkText.h	/^    Tk_Image image;		\/* Image for this segment. NULL means that the$/;"	m	struct:TkTextEmbImage
image	generic/ttk/ttkLabel.c	/^    ImageElement	image;$/;"	m	struct:__anon63	file:
imageCleanup	tests/constraints.tcl	/^        proc imageCleanup {} {$/;"	p
imageCmd	generic/tkImgBmap.c	/^    Tcl_Command imageCmd;	\/* Token for image command (used to delete it$/;"	m	struct:BitmapMaster	file:
imageCmd	generic/tkImgPhoto.h	/^    Tcl_Command imageCmd;	\/* Token for image command (used to delete it$/;"	m	struct:PhotoMaster
imageFinish	tests/constraints.tcl	/^        proc imageFinish {} {$/;"	p
imageId	generic/tkInt.h	/^    int imageId;		\/* Value used to number image ids. *\/$/;"	m	struct:TkDisplay
imageInit	tests/constraints.tcl	/^        proc imageInit {} {$/;"	p
imageMap	generic/ttk/ttkImage.c	/^    Ttk_StateMap imageMap;	\/* State-based lookup table for images *\/$/;"	m	struct:__anon60	file:
imageName	generic/tkOldTest.c	/^    char *imageName;            \/* Name of image (malloc-ed). *\/$/;"	m	struct:TImageMaster	file:
imageName	generic/tkTest.c	/^    char *imageName;		\/* Name of image (malloc-ed). *\/$/;"	m	struct:TImageMaster	file:
imageName	generic/tkText.h	/^    char *imageName;		\/* Name used by text widget to identify this$/;"	m	struct:TkTextEmbImage
imageNames	tests/constraints.tcl	/^        proc imageNames {} {$/;"	p
imageObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *imageObj;$/;"	m	struct:__anon13	file:
imageObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*imageObj;$/;"	m	struct:__anon62	file:
imageObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj *imageObj;$/;"	m	struct:__anon65	file:
imageObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*imageObj;$/;"	m	struct:TreeItemRec	file:
imageObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *imageObj;		\/* taken from item *\/$/;"	m	struct:__anon81	file:
imagePtr	generic/tkButton.h	/^    Tcl_Obj *imagePtr;		\/* Value of -image option: specifies image to$/;"	m	struct:__anon178
imagePtr	generic/tkImgPhoto.h	/^    XImage *imagePtr;		\/* Image structure for converted pixels. *\/$/;"	m	struct:PhotoInstance
imagePtr	generic/tkMenu.h	/^    Tcl_Obj *imagePtr;		\/* Name of image to display, or NULL. If not$/;"	m	struct:TkMenuEntry
imageSpec	generic/ttk/ttkButton.c	/^    Ttk_ImageSpec	*imageSpec;$/;"	m	struct:__anon13	file:
imageSpec	generic/ttk/ttkImage.c	/^    Ttk_ImageSpec *imageSpec;	\/* Image(s) to use *\/$/;"	m	struct:__anon60	file:
imageSpec	generic/ttk/ttkLabel.c	/^    Ttk_ImageSpec *imageSpec;$/;"	m	struct:__anon62	file:
imageString	generic/tkCanvImg.c	/^    char *imageString;		\/* String describing -image option$/;"	m	struct:ImageItem	file:
imageString	generic/tkMenubutton.h	/^    char *imageString;		\/* Name of image to display (malloc'ed), or$/;"	m	struct:__anon137
imageString	generic/tkText.h	/^    char *imageString;		\/* Name of the image for this segment. *\/$/;"	m	struct:TkTextEmbImage
imageTable	generic/tkInt.h	/^    Tcl_HashTable imageTable;	\/* Maps from image names to Tk_ImageMaster$/;"	m	struct:TkMainInfo
imageTable	generic/tkText.h	/^    Tcl_HashTable imageTable;	\/* Hash table that maps from image names to$/;"	m	struct:TkSharedText
imageTable	generic/ttk/ttkCache.c	/^    Tcl_HashTable imageTable;	\/* Entries: Tk_Images *\/$/;"	m	struct:Ttk_ResourceCache_	file:
imageType	generic/tkOldTest.c	/^static Tk_ImageType imageType = {$/;"	v	file:
imageType	generic/tkTest.c	/^static Tk_ImageType imageType = {$/;"	v	file:
imageTypeList	generic/tkImage.c	/^    Tk_ImageType *imageTypeList;\/* First in a list of all known image$/;"	m	struct:ThreadSpecificData	file:
images	generic/ttk/ttkImage.c	/^    Tk_Image		*images;	\/* ... per-state images to use *\/$/;"	m	struct:TtkImageSpec	file:
imagespec	generic/ttk/ttkTreeview.c	/^    Ttk_ImageSpec *imagespec;$/;"	m	struct:TreeItemRec	file:
imgPhotoColorHash	generic/tkImgPhInstance.c	/^static Tcl_HashTable imgPhotoColorHash;$/;"	v	file:
imgPhotoColorHashInitialized	generic/tkImgPhInstance.c	/^static int imgPhotoColorHashInitialized;$/;"	v	file:
implicitWinPtr	generic/tkInt.h	/^    struct TkWindow *implicitWinPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWindow
in	generic/tkGrid.c	/^    Tcl_Obj *in;                \/* Store master name when removed. *\/$/;"	m	struct:Gridder	file:
inCount	generic/tkImgGIF.c	/^    unsigned int inCount;	\/* Length of input *\/$/;"	m	struct:__anon130	file:
inDecr	macosx/tkMacOSXScale.c	33;"	d	file:
inExit	generic/tkEvent.c	/^    int inExit;			\/* True when this thread is exiting. This is$/;"	m	struct:ThreadSpecificData	file:
inInc	macosx/tkMacOSXScale.c	32;"	d	file:
inNodeCounts	generic/tkText.h	/^    int inNodeCounts;		\/* 1 means this toggle has been accounted for$/;"	m	struct:TkTextToggle
inPostMenu	macosx/tkMacOSXMenu.c	/^static int inPostMenu = 0;$/;"	v	file:
inPostMenu	win/tkWinMenu.c	/^    int inPostMenu;		\/* We cannot be re-entrant like X Windows. *\/$/;"	m	struct:ThreadSpecificData	file:
inSlider	macosx/tkMacOSXScale.c	31;"	d	file:
inTkwin	generic/tkPlace.c	/^    Tk_Window inTkwin;		\/* Token for the -in window. *\/$/;"	m	struct:Slave	file:
inactiveSelBorder	generic/tkText.h	/^    Tk_3DBorder inactiveSelBorder;$/;"	m	struct:TkText
includedir	unix/Makefile	/^includedir		= ${prefix}\/include$/;"	m
incrAtom	generic/tkInt.h	/^    Atom incrAtom;		\/* Atom for INCR. *\/$/;"	m	struct:TkDisplay
increment	generic/tkEntry.h	/^    double increment;		\/* If > 0, all values are rounded to an even$/;"	m	struct:__anon184
incrementObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*incrementObj;$/;"	m	struct:__anon30	file:
indent	generic/ttk/ttkTreeview.c	/^    int indent;			\/* #pixels horizontal offset for child items *\/$/;"	m	struct:__anon83	file:
index	generic/tkCanvas.h	/^    int index;			\/* Current position in expression$/;"	m	struct:TagSearchExpr_s
index	generic/tkMenu.h	/^    int index;			\/* Need to know which index we are. This is$/;"	m	struct:TkMenuEntry
index	generic/tkTextDisp.c	/^    TkTextIndex index;		\/* Identifies first character in text that is$/;"	m	struct:DLine	file:
index	generic/ttk/ttkTheme.h	/^    int index;			\/* Value to return if this entry matches *\/$/;"	m	struct:__anon71
index	win/tkWinColor.c	/^    int index;			\/* Index for GetSysColor(), -1 if color is not$/;"	m	struct:WinColor	file:
index	win/tkWinColor.c	/^    int index;$/;"	m	struct:__anon255	file:
index	win/ttkWinMonitor.c	/^    int index;$/;"	m	struct:__anon222	file:
indexNames	generic/tkListbox.c	/^static const char *const indexNames[] = {$/;"	v	file:
indexProc	generic/tk.h	/^    Tk_ItemIndexProc *indexProc;\/* Procedure to determine index of indicated$/;"	m	struct:Tk_ItemType
indicatorDiameter	generic/tkButton.h	/^    int indicatorDiameter;	\/* Diameter of indicator, in pixels. *\/$/;"	m	struct:__anon178
indicatorDimensions	win/tkWinMenu.c	/^static int indicatorDimensions[2];$/;"	v	file:
indicatorFgPtr	generic/tkMenu.h	/^    Tcl_Obj *indicatorFgPtr;	\/* Color for indicators in radio and check$/;"	m	struct:TkMenu
indicatorFgPtr	generic/tkMenu.h	/^    Tcl_Obj *indicatorFgPtr;	\/* Color for indicators in radio and check$/;"	m	struct:TkMenuEntry
indicatorGC	generic/tkMenu.h	/^    GC indicatorGC;		\/* For drawing indicators. *\/$/;"	m	struct:TkMenu
indicatorGC	generic/tkMenu.h	/^    GC indicatorGC;		\/* For drawing indicators. None means use GC$/;"	m	struct:TkMenuEntry
indicatorHeight	generic/tkMenubutton.h	/^    int indicatorHeight;	\/* Height of indicator in pixels. This same$/;"	m	struct:__anon137
indicatorOn	generic/tkButton.h	/^    int indicatorOn;		\/* Value of -indicatoron option: 1 means draw$/;"	m	struct:__anon178
indicatorOn	generic/tkMenu.h	/^    int indicatorOn;		\/* True means draw indicator, false means$/;"	m	struct:TkMenuEntry
indicatorOn	generic/tkMenubutton.h	/^    int indicatorOn;		\/* Non-zero means display indicator; 0 means$/;"	m	struct:__anon137
indicatorSpace	generic/tkButton.h	/^    int indicatorSpace;		\/* Horizontal space (in pixels) allocated for$/;"	m	struct:__anon178
indicatorSpace	generic/tkMenu.h	/^    int indicatorSpace;		\/* The width of the indicator space for this$/;"	m	struct:TkMenuEntry
indicatorWidth	generic/tkMenubutton.h	/^    int indicatorWidth;		\/* Width of indicator in pixels, including$/;"	m	struct:__anon137
indices	generic/tkListbox.c	/^enum indices {$/;"	g	file:
inet_ntoa	unix/configure	/^inet_ntoa ();$/;"	f
info	generic/tkConsole.c	/^    ConsoleInfo *info;$/;"	m	struct:ChannelData	file:
info	macosx/tkMacOSXButton.c	/^    TkButton info;		\/* Generic button info *\/$/;"	m	struct:__anon202	file:
info	macosx/tkMacOSXCursor.c	/^    TkCursor info;		\/* Generic cursor info used by tkCursor.c *\/$/;"	m	struct:__anon208	file:
info	macosx/tkMacOSXMenubutton.c	/^    TkMenuButton info;		\/* Generic button info. *\/$/;"	m	struct:MacMenuButton	file:
info	macosx/tkMacOSXScale.c	/^    TkScale info;		\/* Generic scale info. *\/$/;"	m	struct:MacScale	file:
info	macosx/tkMacOSXScrlbr.c	/^HIThemeTrackDrawInfo info = {$/;"	v
info	unix/tkUnix3d.c	/^    TkBorder info;$/;"	m	struct:__anon218	file:
info	unix/tkUnixButton.c	/^    TkButton info;		\/* Generic button info. *\/$/;"	m	struct:UnixButton	file:
info	unix/tkUnixCursor.c	/^    TkCursor info;		\/* Generic cursor info used by tkCursor.c *\/$/;"	m	struct:__anon219	file:
info	unix/tkUnixScrlbr.c	/^    TkScrollbar info;		\/* Generic scrollbar info. *\/$/;"	m	struct:UnixScrollbar	file:
info	win/tkWin3d.c	/^    TkBorder info;$/;"	m	struct:__anon252	file:
info	win/tkWinButton.c	/^    TkButton info;		\/* Generic button info. *\/$/;"	m	struct:WinButton	file:
info	win/tkWinColor.c	/^    TkColor info;		\/* Generic color information. *\/$/;"	m	struct:WinColor	file:
info	win/tkWinCursor.c	/^    TkCursor info;		\/* Generic cursor info used by tkCursor.c *\/$/;"	m	struct:__anon243	file:
info	win/tkWinScrlbr.c	/^    TkScrollbar info;		\/* Generic scrollbar info. *\/$/;"	m	struct:WinScrollbar	file:
info	win/ttkWinXPTheme.c	/^    ElementInfo	*info;$/;"	m	struct:__anon241	file:
information	macosx/tkMacOSXScrlbr.c	/^    TkScrollbar information;	 \/* Generic scrollbar info. *\/$/;"	m	struct:MacScrollbar	file:
initDir	win/tkWinDialog.c	/^   TCHAR initDir[MAX_PATH];	\/* Initial folder to use *\/$/;"	m	struct:__anon231	file:
initialBits	generic/tkImgGIF.c	/^    int initialBits;$/;"	m	struct:__anon130	file:
initialTypeObj	win/tkWinDialog.c	/^    Tcl_Obj *initialTypeObj;    \/* Initial value of above, or NULL *\/$/;"	m	struct:OFNOpts	file:
initial_state	xlib/X11/Xutil.h	/^	int initial_state;	\/* see below *\/$/;"	m	struct:__anon259
initializeProc	generic/ttk/ttkWidget.h	/^    void  	(*initializeProc)(Tcl_Interp *, void *recordPtr);$/;"	m	struct:WidgetSpec_
initialized	generic/tkBind.c	/^static int initialized = 0;$/;"	v	file:
initialized	generic/tkBitmap.c	/^    int initialized;		\/* 0 means table below needs initializing. *\/$/;"	m	struct:ThreadSpecificData	file:
initialized	generic/tkConfig.c	/^    int initialized;		\/* 0 means table below needs initializing. *\/$/;"	m	struct:ThreadSpecificData	file:
initialized	generic/tkGet.c	/^    int initialized;$/;"	m	struct:ThreadSpecificData	file:
initialized	generic/tkImage.c	/^    int initialized;		\/* Set to 1 if we've initialized the$/;"	m	struct:ThreadSpecificData	file:
initialized	generic/tkImgPhoto.c	/^    int initialized;		\/* Set to 1 if we've initialized the$/;"	m	struct:ThreadSpecificData	file:
initialized	generic/tkOption.c	/^    int initialized;		\/* 0 means the ThreadSpecific Data structure$/;"	m	struct:ThreadSpecificData	file:
initialized	generic/tkWindow.c	/^    int initialized;		\/* 0 means the structures above need$/;"	m	struct:ThreadSpecificData	file:
initialized	macosx/tkMacOSXKeyboard.c	/^static int initialized = 0;$/;"	v	file:
initialized	macosx/tkMacOSXNotify.c	/^    int initialized;$/;"	m	struct:ThreadSpecificData	file:
initialized	macosx/tkMacOSXSend.c	/^static int initialized = 0; \/* A flag to denote if we have initialized$/;"	v	file:
initialized	unix/tkUnixEvent.c	/^    int initialized;$/;"	m	struct:ThreadSpecificData	file:
initialized	win/tkWinScrlbr.c	/^static int initialized = 0;$/;"	v	file:
initialized	win/tkWinSend.c	/^    int initialized;$/;"	m	struct:__anon224	file:
initialized	win/tkWinWindow.c	/^    int initialized;		\/* 0 means table below needs initializing. *\/$/;"	m	struct:ThreadSpecificData	file:
initialized	win/tkWinWm.c	/^    int initialized;		\/* Flag indicating whether thread-specific$/;"	m	struct:ThreadSpecificData	file:
initialized	win/tkWinWm.c	/^static int initialized;		\/* Flag indicating whether module has been$/;"	v	file:
input	generic/tkMain.c	/^    Tcl_Channel input;		\/* The standard input channel from which lines$/;"	m	struct:InteractiveState	file:
input	xlib/X11/Xutil.h	/^	Bool input;	\/* does this application rely on the window manager to$/;"	m	struct:__anon259
inputContext	generic/tkInt.h	/^    XIC inputContext;		\/* XIM input context. *\/$/;"	m	struct:TkWindow
inputMethod	generic/tkInt.h	/^    XIM inputMethod;		\/* Input method for this display. *\/$/;"	m	struct:TkDisplay
inputStyle	generic/tkInt.h	/^    XIMStyle inputStyle;	\/* Input style selected for this display. *\/$/;"	m	struct:TkDisplay
inputXfs	generic/tkInt.h	/^    XFontSet inputXfs;		\/* XFontSet cached for over-the-spot XIM. *\/$/;"	m	struct:TkDisplay
insertBlinkHandler	generic/tkCanvas.h	/^    Tcl_TimerToken insertBlinkHandler;$/;"	m	struct:TkCanvas
insertBlinkHandler	generic/tkEntry.h	/^    Tcl_TimerToken insertBlinkHandler;$/;"	m	struct:__anon183
insertBlinkHandler	generic/tkText.h	/^    Tcl_TimerToken insertBlinkHandler;$/;"	m	struct:TkText
insertBorder	generic/tk.h	/^    Tk_3DBorder insertBorder;	\/* Used to draw vertical bar for insertion$/;"	m	struct:Tk_CanvasTextInfo
insertBorder	generic/tkEntry.h	/^    Tk_3DBorder insertBorder;	\/* Used to draw vertical bar for insertion$/;"	m	struct:__anon183
insertBorder	generic/tkText.h	/^    Tk_3DBorder insertBorder;	\/* Used to draw vertical bar for insertion$/;"	m	struct:TkText
insertBorderWidth	generic/tk.h	/^    int insertBorderWidth;	\/* Width of 3-D border around insert cursor.$/;"	m	struct:Tk_CanvasTextInfo
insertBorderWidth	generic/tkEntry.h	/^    int insertBorderWidth;	\/* Width of 3-D border around insert cursor. *\/$/;"	m	struct:__anon183
insertBorderWidth	generic/tkText.h	/^    int insertBorderWidth;	\/* Width of 3-D border around insert cursor *\/$/;"	m	struct:TkText
insertColorObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *insertColorObj;	\/* Color of insertion cursor *\/$/;"	m	struct:__anon25	file:
insertCursorType	generic/tkText.h	/^    int insertCursorType;	\/* 0 = standard insertion cursor, 1 = block$/;"	m	struct:TkText
insertMarkPtr	generic/tkText.h	/^    TkTextSegment *insertMarkPtr;$/;"	m	struct:TkText
insertOffTime	generic/tkCanvas.h	/^    int insertOffTime;		\/* Number of milliseconds cursor should spend$/;"	m	struct:TkCanvas
insertOffTime	generic/tkEntry.h	/^    int insertOffTime;		\/* Number of milliseconds cursor should spend$/;"	m	struct:__anon183
insertOffTime	generic/tkText.h	/^    int insertOffTime;		\/* Number of milliseconds cursor should spend$/;"	m	struct:TkText
insertOnTime	generic/tkCanvas.h	/^    int insertOnTime;		\/* Number of milliseconds cursor should spend$/;"	m	struct:TkCanvas
insertOnTime	generic/tkEntry.h	/^    int insertOnTime;		\/* Number of milliseconds cursor should spend$/;"	m	struct:__anon183
insertOnTime	generic/tkText.h	/^    int insertOnTime;		\/* Number of milliseconds cursor should spend$/;"	m	struct:TkText
insertPos	generic/tkCanvText.c	/^    int insertPos;		\/* Character index of character just before$/;"	m	struct:TextItem	file:
insertPos	generic/tkEntry.h	/^    int insertPos;		\/* Character index before which next typed$/;"	m	struct:__anon183
insertPos	generic/ttk/ttkEntry.c	/^    int insertPos;		\/* Insert index *\/$/;"	m	struct:__anon26	file:
insertProc	generic/tk.h	/^    Tk_ItemInsertProc *insertProc;$/;"	m	struct:Tk_ItemType
insertText	macosx/tkMacOSXKeyEvent.c	/^- (void)insertText: (id)aString$/;"	f
insertUnfocussed	generic/tkText.h	/^    TkTextInsertUnfocussed insertUnfocussed;$/;"	m	struct:TkText
insertUnfocussedStrings	generic/tkText.c	/^static const char *const insertUnfocussedStrings[] = {$/;"	v	file:
insertWidth	generic/tk.h	/^    int insertWidth;		\/* Total width of insertion cursor. Read-only$/;"	m	struct:Tk_CanvasTextInfo
insertWidth	generic/tkEntry.h	/^    int insertWidth;		\/* Total width of insert cursor. *\/$/;"	m	struct:__anon183
insertWidth	generic/tkText.h	/^    int insertWidth;		\/* Total width of insert cursor. *\/$/;"	m	struct:TkText
insertWidthObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *insertWidthObj;	\/* Insert cursor width *\/$/;"	m	struct:__anon25	file:
inset	generic/tkButton.h	/^    int inset;			\/* Total width of all borders, including$/;"	m	struct:__anon178
inset	generic/tkCanvas.h	/^    int inset;			\/* Total width of all borders, including$/;"	m	struct:TkCanvas
inset	generic/tkEntry.h	/^    int inset;			\/* Number of pixels on the left and right$/;"	m	struct:__anon183
inset	generic/tkListbox.c	/^    int inset;			\/* Total width of all borders, including$/;"	m	struct:__anon149	file:
inset	generic/tkMenubutton.h	/^    int inset;			\/* Total width of all borders, including$/;"	m	struct:__anon137
inset	generic/tkScale.h	/^    int inset;			\/* Total width of all borders, including$/;"	m	struct:TkScale
inset	generic/tkScrollbar.h	/^    int inset;			\/* Total width of all borders, including$/;"	m	struct:TkScrollbar
install	macosx/GNUmakefile	/^install			:= ${styles:%=install-%}$/;"	m
install-embedded	macosx/GNUmakefile	/^install-embedded	:= ${embedded:%=install-%}$/;"	m
install_make_args	macosx/GNUmakefile	/^install_make_args	:= INSTALL_BUILD=1$/;"	m
instanceData	generic/tkImage.c	/^    ClientData instanceData;	\/* One word argument to pass to image manager$/;"	m	struct:Image	file:
instanceData	generic/tkInt.h	/^    ClientData instanceData;$/;"	m	struct:TkWindow
instancePtr	generic/tkImage.c	/^    Image *instancePtr;		\/* Pointer to first in list of instances$/;"	m	struct:ImageMaster	file:
instancePtr	generic/tkImgBmap.c	/^    struct BitmapInstance *instancePtr;$/;"	m	struct:BitmapMaster	typeref:struct:BitmapMaster::BitmapInstance	file:
instancePtr	generic/tkImgPhoto.h	/^    PhotoInstance *instancePtr;	\/* First in the list of instances associated$/;"	m	struct:PhotoMaster
intTypePtr	generic/tkObj.c	/^    const Tcl_ObjType *intTypePtr;$/;"	m	struct:ThreadSpecificData	file:
interlace	generic/tkImgPNG.c	/^    unsigned char interlace;	\/* Type of interlacing (if any). *\/$/;"	m	struct:__anon179	file:
internalBorderBottom	generic/tk.h	/^    int internalBorderBottom;$/;"	m	struct:Tk_FakeWin
internalBorderBottom	generic/tkInt.h	/^    int internalBorderBottom;$/;"	m	struct:TkWindow
internalBorderLeft	generic/tk.h	/^    int internalBorderLeft;$/;"	m	struct:Tk_FakeWin
internalBorderLeft	generic/tkInt.h	/^    int internalBorderLeft;	\/* Width of internal border of window (0 means$/;"	m	struct:TkWindow
internalBorderRight	generic/tk.h	/^    int internalBorderRight;$/;"	m	struct:Tk_FakeWin
internalBorderRight	generic/tkInt.h	/^    int internalBorderRight;$/;"	m	struct:TkWindow
internalBorderTop	generic/tk.h	/^    int internalBorderTop;$/;"	m	struct:Tk_FakeWin
internalBorderTop	generic/tkInt.h	/^    int internalBorderTop;$/;"	m	struct:TkWindow
internalForm	generic/tk.h	/^    double internalForm;	\/* The old value of the option, in some$/;"	m	struct:Tk_SavedOption
internalOffset	generic/tk.h	/^    int internalOffset;		\/* Where in record to store the internal$/;"	m	struct:Tk_OptionSpec
interp	generic/tkBind.c	/^    Tcl_Interp *interp;		\/* Interpreter in which commands are$/;"	m	struct:Tk_BindingTable_	file:
interp	generic/tkBusy.h	/^    Tcl_Interp *interp;		\/* Interpreter where "busy" command was$/;"	m	struct:Busy
interp	generic/tkButton.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with button. *\/$/;"	m	struct:__anon178
interp	generic/tkCanvas.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with canvas. *\/$/;"	m	struct:TkCanvas
interp	generic/tkConsole.c	/^    Tcl_Interp *interp;		\/* Interpreter controlled by console. *\/$/;"	m	struct:ConsoleInfo	file:
interp	generic/tkEntry.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with entry. *\/$/;"	m	struct:__anon183
interp	generic/tkFrame.c	/^    Tcl_Interp *interp;		\/* Interpreter associated with widget. Used to$/;"	m	struct:__anon145	file:
interp	generic/tkImgBmap.c	/^    Tcl_Interp *interp;		\/* Interpreter for application that is using$/;"	m	struct:BitmapMaster	file:
interp	generic/tkImgPhoto.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with the application$/;"	m	struct:PhotoMaster
interp	generic/tkInt.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with application. *\/$/;"	m	struct:TkMainInfo
interp	generic/tkListbox.c	/^    Tcl_Interp *interp;		\/* Interpreter associated with listbox. *\/$/;"	m	struct:__anon149	file:
interp	generic/tkMain.c	/^    Tcl_Interp *interp;		\/* Interpreter that evaluates interactive$/;"	m	struct:InteractiveState	file:
interp	generic/tkMenu.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with menu. *\/$/;"	m	struct:TkMenu
interp	generic/tkMenubutton.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with menubutton. *\/$/;"	m	struct:__anon137
interp	generic/tkMessage.c	/^    Tcl_Interp *interp;		\/* Interpreter associated with message. *\/$/;"	m	struct:__anon153	file:
interp	generic/tkOldTest.c	/^    Tcl_Interp *interp;         \/* Interpreter for application. *\/$/;"	m	struct:TImageMaster	file:
interp	generic/tkPanedWindow.c	/^    Tcl_Interp *interp;		\/* Interpreter associated with widget. *\/$/;"	m	struct:PanedWindow	file:
interp	generic/tkScale.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with scale. *\/$/;"	m	struct:TkScale
interp	generic/tkScrollbar.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with scrollbar. *\/$/;"	m	struct:TkScrollbar
interp	generic/tkSelect.c	/^    Tcl_Interp *interp;		\/* Interpreter in which to invoke command. *\/$/;"	m	struct:LostCommand	file:
interp	generic/tkSelect.c	/^    Tcl_Interp *interp;		\/* Interpreter in which to invoke command. *\/$/;"	m	struct:__anon177	file:
interp	generic/tkSelect.h	/^    Tcl_Interp *interp;		\/* Interpreter for error reporting. *\/$/;"	m	struct:TkSelRetrievalInfo
interp	generic/tkSquare.c	/^    Tcl_Interp *interp;		\/* Interpreter associated with widget. *\/$/;"	m	struct:__anon142	file:
interp	generic/tkTest.c	/^    Tcl_Interp *interp;		\/* Interpreter for application. *\/$/;"	m	struct:TImageMaster	file:
interp	generic/tkTest.c	/^    Tcl_Interp *interp;		\/* The interp that this command lives in. *\/$/;"	m	struct:TrivialCommandHeader	file:
interp	generic/tkTest.c	/^    Tcl_Interp *interp;		\/* Token for interpreter. *\/$/;"	m	struct:NewApp	file:
interp	generic/tkText.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with widget. Used to$/;"	m	struct:TkText
interp	generic/tkUndo.h	/^    Tcl_Interp *interp;		\/* The interpreter in which to execute the$/;"	m	struct:TkUndoRedoStack
interp	generic/ttk/ttkCache.c	/^    Tcl_Interp	  *interp;	\/* Interpreter for error reporting *\/$/;"	m	struct:Ttk_ResourceCache_	file:
interp	generic/ttk/ttkTheme.c	/^    Tcl_Interp *interp;			\/* Owner interp *\/$/;"	m	struct:__anon115	file:
interp	generic/ttk/ttkTrace.c	/^    Tcl_Interp		*interp;	\/* Containing interpreter *\/$/;"	m	struct:TtkTraceHandle_	file:
interp	generic/ttk/ttkWidget.h	/^    Tcl_Interp *interp;		\/* Interpreter associated with widget. *\/$/;"	m	struct:__anon48
interp	macosx/tkMacOSXDialog.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon191	file:
interp	macosx/tkMacOSXDialog.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon192	file:
interp	macosx/tkMacOSXHLEvents.c	/^    Tcl_Interp *interp;		\/* Interp that was passed to the Quit$/;"	m	struct:KillEvent	file:
interp	macosx/tkMacOSXSend.c	/^    Tcl_Interp *interp;		\/* Interpreter associated with name. *\/$/;"	m	struct:RegisteredInterp	file:
interp	macosx/tkMacOSXWm.h	/^    Tcl_Interp *interp;		\/* Interpreter in which to invoke command. *\/$/;"	m	struct:ProtocolHandler
interp	unix/tkUnixSend.c	/^    Tcl_Interp *interp;		\/* Interpreter associated with name. NULL$/;"	m	struct:RegisteredInterp	file:
interp	unix/tkUnixSend.c	/^    Tcl_Interp *interp;		\/* Interpreter from which the send was$/;"	m	struct:PendingCommand	file:
interp	unix/tkUnixWm.c	/^    Tcl_Interp *interp;		\/* Interpreter in which to invoke command. *\/$/;"	m	struct:ProtocolHandler	file:
interp	win/tkWinDialog.c	/^    Tcl_Interp *interp;		\/* Interp, used only if debug is turned on,$/;"	m	struct:OFNData	file:
interp	win/tkWinDialog.c	/^    Tcl_Interp *interp;$/;"	m	struct:HookData	file:
interp	win/tkWinDialog.c	/^   Tcl_Interp *interp;$/;"	m	struct:__anon231	file:
interp	win/tkWinSend.c	/^    Tcl_Interp *interp;$/;"	m	struct:SendEvent	file:
interp	win/tkWinSend.c	/^    Tcl_Interp *interp;$/;"	m	struct:__anon223	file:
interp	win/tkWinSendCom.h	/^    Tcl_Interp *interp;$/;"	m	struct:__anon254
interp	win/tkWinWm.c	/^    Tcl_Interp *interp;		\/* Interpreter in which to invoke command. *\/$/;"	m	struct:ProtocolHandler	file:
interpListPtr	macosx/tkMacOSXSend.c	/^static RegisteredInterp *interpListPtr = NULL;$/;"	v	file:
interpListPtr	unix/tkUnixSend.c	/^    RegisteredInterp *interpListPtr;$/;"	m	struct:ThreadSpecificData	file:
invalidCmd	generic/tkEntry.h	/^    char *invalidCmd;		\/* Command called when a validation returns 0$/;"	m	struct:__anon183
invalidCmd	generic/ttk/ttkEntry.c	/^    char *invalidCmd;		\/* Invalid callback script template *\/$/;"	m	struct:__anon26	file:
isContainer	generic/tkFrame.c	/^    int isContainer;		\/* 1 means this window is a container, 0 means$/;"	m	struct:__anon145	file:
isDigit	generic/tkStubLib.c	/^isDigit(const int c)$/;"	f	file:
isDirty	generic/tkText.h	/^    int isDirty;		\/* Flag indicating the 'dirtyness' of the$/;"	m	struct:TkSharedText
isFunctionKey	macosx/tkMacOSXKeyEvent.c	/^static unsigned isFunctionKey(unsigned code)$/;"	f	file:
isSpecial	macosx/tkMacOSXMenu.c	/^- (BOOL) isSpecial: (NSUInteger) special$/;"	f
isSymbolFont	win/tkWinFont.c	/^    int isSymbolFont;		\/* Non-zero if this is a symbol font. *\/$/;"	m	struct:FontFamily	file:
isTwoByteFont	unix/tkUnixFont.c	/^    int isTwoByteFont;		\/* 1 if this is a double-byte font, 0$/;"	m	struct:FontFamily	file:
isWideFont	win/tkWinFont.c	/^    int isWideFont;		\/* 1 if this is a double-byte font, 0$/;"	m	struct:FontFamily	file:
is_hint	xlib/X11/Xlib.h	/^	char is_hint;		\/* detail *\/$/;"	m	struct:__anon289
isatty	generic/tkMain.c	108;"	d	file:
itemAttrOptionSpecs	generic/tkListbox.c	/^static const Tk_OptionSpec itemAttrOptionSpecs[] = {$/;"	v	file:
itemAttrOptionTable	generic/tkListbox.c	/^    Tk_OptionTable itemAttrOptionTable;$/;"	m	struct:__anon148	file:
itemAttrOptionTable	generic/tkListbox.c	/^    Tk_OptionTable itemAttrOptionTable;$/;"	m	struct:__anon149	file:
itemAttrTable	generic/tkListbox.c	/^    Tcl_HashTable *itemAttrTable;$/;"	m	struct:__anon149	file:
itemDrag	library/demos/items.tcl	/^proc itemDrag {c x y} {$/;"	p
itemEnter	library/demos/items.tcl	/^proc itemEnter {c} {$/;"	p
itemLayout	generic/ttk/ttkTreeview.c	/^    Ttk_Layout itemLayout;$/;"	m	struct:__anon83	file:
itemLeave	library/demos/items.tcl	/^proc itemLeave {c} {$/;"	p
itemMark	library/demos/items.tcl	/^proc itemMark {c x y} {$/;"	p
itemOptionTable	generic/ttk/ttkTreeview.c	/^    Tk_OptionTable itemOptionTable;$/;"	m	struct:__anon83	file:
itemSize	generic/tk.h	/^    int itemSize;		\/* Total amount of space needed for item's$/;"	m	struct:Tk_ItemType
itemStartDrag	library/demos/items.tcl	/^proc itemStartDrag {c x y} {$/;"	p
itemStroke	library/demos/items.tcl	/^proc itemStroke {c x y} {$/;"	p
items	generic/tk.h	/^    Tk_SavedOption items[TK_NUM_SAVED_OPTIONS];$/;"	m	struct:Tk_SavedOptions
items	generic/ttk/ttkTreeview.c	/^    Tcl_HashTable items;	\/* Map: item name -> item *\/$/;"	m	struct:__anon83	file:
itemsUnderArea	library/demos/items.tcl	/^proc itemsUnderArea {c} {$/;"	p
joinStyle	generic/tkCanvLine.c	/^    int joinStyle;		\/* Join style for line. *\/$/;"	m	struct:LineItem	file:
joinStyle	generic/tkCanvPoly.c	/^    int joinStyle;		\/* Join style for outline *\/$/;"	m	struct:PolygonItem	file:
join_style	xlib/X11/Xlib.h	/^	int join_style;	 	\/* JoinMiter, JoinRound, JoinBevel *\/$/;"	m	struct:__anon268
jump	generic/tkScrollbar.h	/^    int jump;			\/* Value of -jump option. *\/$/;"	m	struct:TkScrollbar
justify	generic/tkButton.h	/^    Tk_Justify justify;		\/* Value of -justify option: specifies how to$/;"	m	struct:__anon178
justify	generic/tkCanvText.c	/^    Tk_Justify justify;		\/* Justification mode for text. *\/$/;"	m	struct:TextItem	file:
justify	generic/tkEntry.h	/^    Tk_Justify justify;		\/* Justification to use for text within$/;"	m	struct:__anon183
justify	generic/tkListbox.c	/^    Tk_Justify justify;         \/* Justification. *\/$/;"	m	struct:__anon149	file:
justify	generic/tkMenubutton.h	/^    Tk_Justify justify;		\/* Justification to use for multi-line$/;"	m	struct:__anon137
justify	generic/tkMessage.c	/^    Tk_Justify justify;		\/* Justification for text. *\/$/;"	m	struct:__anon153	file:
justify	generic/tkText.h	/^    Tk_Justify justify;		\/* How to justify text: TK_JUSTIFY_LEFT,$/;"	m	struct:TkTextTag
justify	generic/tkTextDisp.c	/^    int justify;		\/* Justification style for text. *\/$/;"	m	struct:StyleValues	file:
justify	generic/ttk/ttkEntry.c	/^    Tk_Justify justify;		\/* Text justification *\/$/;"	m	struct:__anon26	file:
justifyObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *justifyObj;$/;"	m	struct:__anon15	file:
justifyObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*justifyObj;$/;"	m	struct:__anon61	file:
justifyString	generic/tkText.h	/^    char *justifyString;	\/* -justify option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
justifyStrings	generic/tkGet.c	/^static const char *const justifyStrings[] = {$/;"	v	file:
kComponentSignatureString	macosx/tkMacOSXPrivate.h	88;"	d
kComponentSignatureString	macosx/tkMacOSXPrivate.h	90;"	d
key	generic/tk.h	/^    CONST86 char *key;		\/* The key string that flags the option in the$/;"	m	struct:__anon5
key	win/nmakehlp.c	/^    char * key;$/;"	m	struct:list_item_t	file:
key	xlib/X11/Xlib.h	/^        int key;$/;"	m	struct:__anon282
keyArray	generic/tkBind.c	/^static const KeySymInfo keyArray[] = {$/;"	v	file:
keyArray	macosx/tkMacOSXKeyboard.c	/^static KeyInfo keyArray[] = {$/;"	v	file:
keyEquivModifiersMatch	macosx/tkMacOSXMenu.c	283;"	d	file:
keyEvent	generic/tkInt.h	/^    XKeyEvent keyEvent;		\/* The real event from X11. *\/$/;"	m	struct:__anon133
keyInputCharset	win/tkWinX.c	/^static int keyInputCharset = -1;	\/* The Win32 CHARSET for the keyboard$/;"	v	file:
keyInputEncoding	win/tkWinX.c	/^static Tcl_Encoding keyInputEncoding = NULL;$/;"	v	file:
keySym	generic/tkBind.c	/^    KeySym keySym;		\/* KeySym that corresponds to xkey.keycode. *\/$/;"	m	union:__anon166	file:
keySymTable	generic/tkBind.c	/^static Tcl_HashTable keySymTable; \/* keyArray hashed by keysym value. *\/$/;"	v	file:
key_bindings	xlib/X11/Xlib.h	/^	struct _XKeytrans *key_bindings; \/* for XLookupString *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XKeytrans
key_click_percent	xlib/X11/Xlib.h	/^        int key_click_percent;$/;"	m	struct:__anon282
key_click_percent	xlib/X11/Xlib.h	/^        int key_click_percent;$/;"	m	struct:__anon283
key_vector	xlib/X11/Xlib.h	/^	char key_vector[32];$/;"	m	struct:__anon292
keyboardChanged	macosx/tkMacOSXInit.c	/^static void keyboardChanged(CFNotificationCenterRef center, void *observer, CFStringRef name, const void *object, CFDictionaryRef userInfo) {$/;"	f	file:
keyboardChanged	macosx/tkMacOSXKeyboard.c	/^static int keyboardChanged = 1;$/;"	v	file:
keyboardGrabNSWindow	macosx/tkMacOSXKeyEvent.c	/^static NSWindow *keyboardGrabNSWindow = nil;$/;"	v	file:
keyboardGrabWinPtr	macosx/tkMacOSXKeyEvent.c	/^static Tk_Window keyboardGrabWinPtr = NULL;$/;"	v	file:
keyboardWinPtr	win/tkWinPointer.c	/^static TkWindow *keyboardWinPtr = NULL; \/* Current keyboard grab window. *\/$/;"	v	file:
keycode	macosx/tkMacOSXKeyboard.c	/^    int keycode;		\/* Macintosh keycode. *\/$/;"	m	struct:__anon193	file:
keycode	xlib/X11/Xlib.h	/^	unsigned int keycode;	\/* detail *\/$/;"	m	struct:__anon287
keycodeTable	macosx/tkMacOSXKeyboard.c	/^static Tcl_HashTable keycodeTable;	\/* keyArray hashed by keycode value. *\/$/;"	v	file:
keymap	win/tkWinKey.c	/^static const KeySym keymap[] = {$/;"	v	file:
keysym	generic/tkInt.h	/^    KeySym keysym;		\/* Key symbol computed after input methods$/;"	m	struct:__anon133
keysym	macosx/tkMacOSXKeyboard.c	/^    KeySym keysym;		\/* X windows keysym. *\/$/;"	m	struct:__anon193	file:
keysyms	xlib/X11/Xlib.h	/^	KeySym *keysyms;	\/* This server's keysyms *\/$/;"	m	struct:_XDisplay
keysyms_per_keycode	xlib/X11/Xlib.h	/^	int keysyms_per_keycode;\/* number of rows *\/$/;"	m	struct:_XDisplay
killClone	library/demos/textpeer.tcl	/^proc killClone {w count} {$/;"	p
killid	xlib/X11/Xutil.h	/^	XID killid;			\/* added by ICCCM version 1 *\/$/;"	m	struct:__anon265
kind	macosx/tkMacOSXBitmap.c	/^    int kind, width, height;$/;"	m	struct:__anon188	file:
kind	macosx/tkMacOSXCursor.c	/^    const int kind;$/;"	m	struct:CursorName	file:
kind	macosx/ttkMacOSXTheme.c	/^    ThemeButtonKind kind;$/;"	m	struct:__anon209	file:
kind	macosx/ttkMacOSXTheme.c	/^    ThemeTrackKind	kind;$/;"	m	struct:__anon211	file:
l	xlib/X11/Xlib.h	/^		long l[5];$/;"	m	union:__anon314::__anon315
lMargin1	generic/tkText.h	/^    int lMargin1;		\/* Left margin for first display line of each$/;"	m	struct:TkTextTag
lMargin1	generic/tkTextDisp.c	/^    int lMargin1;		\/* Left margin, in pixels, for first display$/;"	m	struct:StyleValues	file:
lMargin1String	generic/tkText.h	/^    char *lMargin1String;	\/* -lmargin1 option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
lMargin2	generic/tkText.h	/^    int lMargin2;		\/* Left margin for second and later display$/;"	m	struct:TkTextTag
lMargin2	generic/tkTextDisp.c	/^    int lMargin2;		\/* Left margin, in pixels, for second and$/;"	m	struct:StyleValues	file:
lMargin2String	generic/tkText.h	/^    char *lMargin2String;	\/* -lmargin2 option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
label	generic/tkScale.h	/^    char *label;		\/* Label to display above or to right of$/;"	m	struct:TkScale
label	generic/ttk/ttkButton.c	/^    LabelPart	label;$/;"	m	struct:__anon16	file:
label	generic/ttk/ttkFrame.c	/^    LabelframePart	label;$/;"	m	struct:__anon121	file:
labelAnchor	generic/tkFrame.c	/^    int labelAnchor;		\/* Value of -labelanchor option: specifies$/;"	m	struct:__anon146	file:
labelAnchor	generic/ttk/ttkFrame.c	/^    Ttk_PositionSpec	labelAnchor;	\/* corner\/side to place label *\/$/;"	m	struct:__anon122	file:
labelAnchorObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj 	*labelAnchorObj;$/;"	m	struct:__anon120	file:
labelAnchorStrings	generic/tkFrame.c	/^static const char *const labelAnchorStrings[] = {$/;"	v	file:
labelBox	generic/tkFrame.c	/^    XRectangle labelBox;	\/* The label's actual size and position. *\/$/;"	m	struct:__anon146	file:
labelLayout	generic/ttk/ttkFrame.c	/^    Ttk_Layout	labelLayout;	\/* Sublayout for label *\/$/;"	m	struct:__anon120	file:
labelLength	generic/tkMenu.h	/^    int labelLength;		\/* Number of non-NULL characters in label. *\/$/;"	m	struct:TkMenuEntry
labelLength	generic/tkScale.h	/^    int labelLength;		\/* Number of non-NULL chars. in label. *\/$/;"	m	struct:TkScale
labelMargins	generic/ttk/ttkFrame.c	/^    Ttk_Padding		labelMargins;	\/* extra space around label *\/$/;"	m	struct:__anon122	file:
labelOptionSpecs	generic/tkButton.c	/^static const Tk_OptionSpec labelOptionSpecs[] = {$/;"	v	file:
labelOutside	generic/ttk/ttkFrame.c	/^    int 		labelOutside;	\/* true=>place label outside border *\/$/;"	m	struct:__anon122	file:
labelParcel	generic/ttk/ttkFrame.c	/^    Ttk_Box	labelParcel;	\/* Set in layoutProc *\/$/;"	m	struct:__anon120	file:
labelPtr	generic/tkMenu.h	/^    Tcl_Obj *labelPtr;		\/* Main text label displayed in entry (NULL if$/;"	m	struct:TkMenuEntry
labelReqHeight	generic/tkFrame.c	/^    int labelReqHeight;		\/* The label's requested height. *\/$/;"	m	struct:__anon146	file:
labelReqWidth	generic/tkFrame.c	/^    int labelReqWidth;		\/* The label's requested width. *\/$/;"	m	struct:__anon146	file:
labelTextX	generic/tkFrame.c	/^    int labelTextX, labelTextY;	\/* Position of the text to be drawn. *\/$/;"	m	struct:__anon146	file:
labelTextY	generic/tkFrame.c	/^    int labelTextX, labelTextY;	\/* Position of the text to be drawn. *\/$/;"	m	struct:__anon146	file:
labelWidget	generic/ttk/ttkFrame.c	/^    Tk_Window	labelWidget;$/;"	m	struct:__anon120	file:
labelWidth	generic/tkMenu.h	/^    int labelWidth;		\/* Number of pixels to allow for displaying$/;"	m	struct:TkMenuEntry
labelWin	generic/tkFrame.c	/^    Tk_Window labelWin;		\/* Value of -labelwidget option: Window to use$/;"	m	struct:__anon146	file:
labelanchor	generic/tkFrame.c	/^enum labelanchor {$/;"	g	file:
labelframeOptSpec	generic/tkFrame.c	/^static const Tk_OptionSpec labelframeOptSpec[] = {$/;"	v	file:
lassign	generic/ttk/ttkGenStubs.tcl	/^    proc lassign {valueList args} {$/;"	p
last	generic/ttk/ttkScrollbar.c	/^    double	last;			\/* bottom fraction *\/$/;"	m	struct:__anon51	file:
last	generic/ttk/ttkWidget.h	/^    int 	last;		\/* Last visible item *\/$/;"	m	struct:__anon49
lastArrowPtr	generic/tkCanvLine.c	/^    double *lastArrowPtr;	\/* Points to polygon for arrowhead at last$/;"	m	struct:LineItem	file:
lastBufferPtr	generic/tkSelect.h	/^    TkClipboardBuffer *lastBufferPtr;$/;"	m	struct:TkClipboardTarget
lastChildPtr	generic/tkInt.h	/^    struct TkWindow *lastChildPtr;$/;"	m	struct:TkWindow	typeref:struct:TkWindow::TkWindow
lastCmPtr	generic/tkEvent.c	/^    GenericHandler *lastCmPtr;	\/* Last handler in list. *\/$/;"	m	struct:ThreadSpecificData	file:
lastCommandID	win/tkWinMenu.c	/^    WORD lastCommandID;		\/* The last command ID we allocated. *\/$/;"	m	struct:ThreadSpecificData	file:
lastEditMode	generic/tkText.h	/^    TkTextEditMode lastEditMode;\/* Keeps track of what the last edit mode$/;"	m	struct:TkSharedText
lastEventTime	generic/tkInt.h	/^    Time lastEventTime;		\/* Time of last event received for this$/;"	m	struct:TkDisplay
lastFraction	generic/tkScrollbar.h	/^    double lastFraction;	\/* Position of last visible thing in window,$/;"	m	struct:TkScrollbar
lastGenericPtr	generic/tkEvent.c	/^    GenericHandler *lastGenericPtr;$/;"	m	struct:ThreadSpecificData	file:
lastGrabEventPtr	generic/tkInt.h	/^    TkGrabEvent *lastGrabEventPtr;$/;"	m	struct:TkDisplay
lastItemPtr	generic/tkCanvas.h	/^    Tk_Item *lastItemPtr;	\/* Last in list of all items in canvas, or$/;"	m	struct:TkCanvas
lastLineObj	generic/tkImgPNG.c	/^    Tcl_Obj *lastLineObj;	\/* Last line of pixels, for unfiltering. *\/$/;"	m	struct:__anon179	file:
lastMetricUpdateLine	generic/tkTextDisp.c	/^    int lastMetricUpdateLine;	\/* When the current update line reaches this$/;"	m	struct:TextDInfo	file:
lastObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *lastObj;$/;"	m	struct:__anon96	file:
lastPos	generic/tkPointer.c	/^    XPoint lastPos;		\/* Last reported mouse position. *\/$/;"	m	struct:ThreadSpecificData	file:
lastPtr	generic/tkCanvas.c	/^    Tk_Item *lastPtr;		\/* The item right before the currentPtr is$/;"	m	struct:TagSearch	file:
lastPtr	generic/tkText.h	/^    TkTextSegment *lastPtr;	\/* Stop search before just before considering$/;"	m	struct:TkTextSearch
lastRequest	generic/tkInt.h	/^    unsigned long lastRequest;	\/* Only errors with serial numbers <= to this$/;"	m	struct:TkErrorHandler
lastState	generic/tkPointer.c	/^    int lastState;		\/* Last known state flags. *\/$/;"	m	struct:ThreadSpecificData	file:
lastTab	generic/tkText.h	/^    double lastTab;		\/* The accurate fractional pixel position of$/;"	m	struct:TkTextTabArray
lastUnit	generic/tkScrollbar.h	/^    int lastUnit;		\/* Index of last unit visible in window.$/;"	m	struct:TkScrollbar
lastVertical	win/tkWinScrlbr.c	/^    int lastVertical;		\/* 1 if was vertical at last refresh. *\/$/;"	m	struct:WinScrollbar	file:
lastWinPtr	generic/tkPointer.c	/^    TkWindow *lastWinPtr;	\/* Last reported mouse window. *\/$/;"	m	struct:ThreadSpecificData	file:
last_req	xlib/X11/Xlib.h	/^	char *last_req;		\/* beginning of last request, or dummy *\/$/;"	m	struct:_XDisplay
lastdrawinfo	macosx/tkMacOSXButton.c	/^    HIThemeButtonDrawInfo lastdrawinfo;$/;"	m	struct:__anon202	file:
lastdrawinfo	macosx/tkMacOSXMenubutton.c	/^    HIThemeButtonDrawInfo lastdrawinfo;$/;"	m	struct:MacMenuButton	file:
latin1Table	macosx/tkMacOSXKeyboard.c	/^static int latin1Table[LATIN1_MAX+1];	\/* Reverse mapping table for$/;"	v	file:
layout	generic/ttk/ttkWidget.h	/^    Ttk_Layout layout;  	\/* Widget layout *\/$/;"	m	struct:__anon48
layoutHeight	generic/ttk/ttkEntry.c	/^    int layoutHeight;		\/* textLayout height *\/$/;"	m	struct:__anon26	file:
layoutProc	generic/tkText.h	/^    Tk_SegLayoutProc *layoutProc;$/;"	m	struct:Tk_SegType
layoutProc	generic/ttk/ttkWidget.h	/^    void	(*layoutProc)(void *recordPtr);$/;"	m	struct:WidgetSpec_
layoutTemplate	generic/ttk/ttkTheme.c	/^    Ttk_LayoutTemplate	layoutTemplate;	\/* Layout template for style, or NULL *\/$/;"	m	struct:Ttk_Style_	file:
layoutWidth	generic/ttk/ttkEntry.c	/^    int layoutWidth;		\/* textLayout width *\/$/;"	m	struct:__anon26	file:
layoutX	generic/tkEntry.h	/^    int layoutX, layoutY;	\/* Origin for layout. *\/$/;"	m	struct:__anon183
layoutX	generic/ttk/ttkEntry.c	/^    int layoutX, layoutY;	\/* Origin for text layout. *\/$/;"	m	struct:__anon26	file:
layoutY	generic/tkEntry.h	/^    int layoutX, layoutY;	\/* Origin for layout. *\/$/;"	m	struct:__anon183
layoutY	generic/ttk/ttkEntry.c	/^    int layoutX, layoutY;	\/* Origin for text layout. *\/$/;"	m	struct:__anon26	file:
lbearing	xlib/X11/Xlib.h	/^    short	lbearing;	\/* origin to left edge of raster *\/$/;"	m	struct:__anon319
leaderName	macosx/tkMacOSXWm.h	/^    char *leaderName;		\/* Path name of leader of window group$/;"	m	struct:TkWmInfo
leaderName	unix/tkUnixWm.c	/^    char *leaderName;		\/* Path name of leader of window group$/;"	m	struct:TkWmInfo	file:
leaderName	win/tkWinWm.c	/^    char *leaderName;		\/* Path name of leader of window group$/;"	m	struct:TkWmInfo	file:
led	xlib/X11/Xlib.h	/^        int led;$/;"	m	struct:__anon282
led_mask	xlib/X11/Xlib.h	/^	unsigned long led_mask;$/;"	m	struct:__anon283
led_mode	xlib/X11/Xlib.h	/^        int led_mode;$/;"	m	struct:__anon282
left	generic/ttk/ttkTheme.h	/^    short left;$/;"	m	struct:__anon72
leftBearing	generic/tkMenubutton.h	/^    int leftBearing;		\/* Distance from text origin to leftmost drawn$/;"	m	struct:__anon137
leftGravity	generic/tkText.h	/^    int leftGravity;		\/* If a segment has zero size (e.g. a mark or$/;"	m	struct:Tk_SegType
leftIndex	generic/tkEntry.h	/^    int leftIndex;		\/* Character index of left-most character$/;"	m	struct:__anon183
leftX	generic/tkEntry.h	/^    int leftX;			\/* X position at which character at leftIndex$/;"	m	struct:__anon183
leftarrow_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable leftarrow_statemap[] =$/;"	v	file:
len	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const NSUInteger mask;$/;"	m	struct:__anon199	file:
len	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const UniChar ch;$/;"	m	struct:__anon200	file:
len	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const int flag;$/;"	m	struct:__anon198	file:
length	generic/tkCanvas.h	/^    int length;			\/* Length of expression. *\/$/;"	m	struct:TagSearchExpr_s
length	generic/tkImgGIF.c	/^    int length;			\/* Total amount of bytes in data *\/$/;"	m	struct:mFile	file:
length	generic/tkScale.h	/^    int length;			\/* Desired long dimension of scale, in$/;"	m	struct:TkScale
length	generic/tkSelect.h	/^    long length;		\/* Length of string in buffer. *\/$/;"	m	struct:TkClipboardBuffer
length	generic/tkTextDisp.c	/^    int length;			\/* Total length of line, in pixels. *\/$/;"	m	struct:DLine	file:
length	win/tkWinFont.c	/^    USHORT length;		\/* The actual length in bytes of this$/;"	m	struct:ANYTABLE	file:
length	win/tkWinFont.c	/^    USHORT length;		\/* The actual length in bytes of this$/;"	m	struct:BYTETABLE	file:
length	win/tkWinFont.c	/^    USHORT length;		\/* The actual length in bytes of this$/;"	m	struct:HIBYTETABLE	file:
length	win/tkWinFont.c	/^    USHORT length;		\/* The actual length in bytes of this$/;"	m	struct:SEGMENTTABLE	file:
length	win/tkWinFont.c	/^    USHORT length;		\/* The actual length in bytes of this$/;"	m	struct:TRIMMEDTABLE	file:
length	xlib/X11/Xlib.h	/^	int length;		\/* length of address, in bytes *\/$/;"	m	struct:__anon275
length	xlib/X11/Xlib.h	/^    unsigned short length;$/;"	m	struct:_XIMText
lengthObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *lengthObj;		\/* Long axis dimension *\/$/;"	m	struct:__anon97	file:
lengthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *lengthObj;		\/* default width\/height of the bar *\/$/;"	m	struct:__anon46	file:
lengthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *lengthObj;      \/* slider length *\/$/;"	m	struct:__anon45	file:
lengthObj	generic/ttk/ttkProgress.c	/^    Tcl_Obj 	*lengthObj;$/;"	m	struct:__anon101	file:
lengthObj	generic/ttk/ttkScale.c	/^    Tcl_Obj *lengthObj;       \/* length of the long axis of the scale *\/$/;"	m	struct:__anon107	file:
level	generic/tkTextBTree.c	/^    int level;			\/* Level of this node in the B-tree. 0 refers$/;"	m	struct:Node	file:
levels	generic/tkOption.c	/^    StackLevel *levels;		\/* Array describing current stack. *\/$/;"	m	struct:ThreadSpecificData	file:
lfEnableButtons	library/demos/labelframe.tcl	/^proc lfEnableButtons {w} {$/;"	p
libdir	unix/Makefile	/^libdir			= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/host\/usr\/arm-buildroot-linux-gnueabihf\/sysroot\/usr\/lib\/lib$/;"	m
light2ColorPtr	win/tkWin3d.c	/^    XColor *light2ColorPtr;	\/* System3dLight *\/$/;"	m	struct:__anon252	file:
lightColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*lightColorObj;$/;"	m	struct:__anon53	file:
lightColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*lightColorObj;$/;"	m	struct:__anon54	file:
lightColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*lightColorObj;$/;"	m	struct:__anon57	file:
lightColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*lightColorObj;$/;"	m	struct:__anon58	file:
lightColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *lightColorObj;$/;"	m	struct:__anon59	file:
lightColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *lightColorObj;$/;"	m	struct:__anon91	file:
lightColorPtr	generic/tk3d.h	/^    XColor *lightColorPtr;	\/* Color used for lighter areas of border$/;"	m	struct:TkBorder
lightGC	generic/tk3d.h	/^    GC lightGC;			\/* Used to draw lighter parts of the border.$/;"	m	struct:TkBorder
line	generic/tkMain.c	/^    Tcl_DString line;		\/* Used to read the next line from the$/;"	m	struct:InteractiveState	file:
lineChangeProc	generic/tkText.h	/^    Tk_SegLineChangeProc *lineChangeProc;$/;"	m	struct:Tk_SegType
lineHeight	generic/tkListbox.c	/^    int lineHeight;		\/* Number of pixels allocated for each line in$/;"	m	struct:__anon149	file:
lineHeightsRecalculated	generic/tkTextDisp.c	/^static int lineHeightsRecalculated;$/;"	v	file:
lineIndexProc	generic/tkText.c	/^    SearchLineIndexProc *lineIndexProc;$/;"	m	struct:SearchSpec	file:
lineMetricUpdateEpoch	generic/tkTextDisp.c	/^    int lineMetricUpdateEpoch;	\/* Stores a number which is incremented each$/;"	m	struct:TextDInfo	file:
lineOption	generic/tkText.c	/^static const Tk_ObjCustomOption lineOption = {$/;"	v	file:
linePtr	generic/tkText.h	/^    TkTextLine *linePtr;	\/* Line structure that contains the$/;"	m	struct:TkTextMark
linePtr	generic/tkText.h	/^    TkTextLine *linePtr;	\/* Line structure that contains this image. *\/$/;"	m	struct:TkTextEmbImage
linePtr	generic/tkText.h	/^    TkTextLine *linePtr;	\/* Line structure that contains this$/;"	m	struct:TkTextEmbWindow
linePtr	generic/tkText.h	/^    TkTextLine *linePtr;	\/* Pointer to line containing position of$/;"	m	struct:TkTextIndex
linePtr	generic/tkTextBTree.c	/^	TkTextLine *linePtr;	\/* Used if level == 0. *\/$/;"	m	union:Node::__anon176	file:
lineSize	generic/tkImgPNG.c	/^    int lineSize;		\/* Number of bytes in a PNG line. *\/$/;"	m	struct:__anon179	file:
lineUpdateTimer	generic/tkTextDisp.c	/^    Tcl_TimerToken lineUpdateTimer;$/;"	m	struct:TextDInfo	file:
line_style	xlib/X11/Xlib.h	/^	int line_style;	 	\/* LineSolid, LineOnOffDash, LineDoubleDash *\/$/;"	m	struct:__anon268
line_width	xlib/X11/Xlib.h	/^	int line_width;		\/* line width *\/$/;"	m	struct:__anon268
lineendingCharacterSet	macosx/tkMacOSXFont.c	/^static NSCharacterSet *lineendingCharacterSet = nil;$/;"	v	file:
linesLeft	generic/tkText.h	/^    int linesLeft;		\/* Lines left to search (including curIndex$/;"	m	struct:TkTextSearch
linesRedrawn	generic/tkTextDisp.c	/^static int linesRedrawn;	\/* Number of calls to DisplayDLine. *\/$/;"	v	file:
linespace	generic/tk.h	/^    int linespace;		\/* The sum of the ascent and descent. How far$/;"	m	struct:Tk_FontMetrics
link	win/tkWin32Dll.c	/^    struct TCLEXCEPTION_REGISTRATION *link;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	typeref:struct:TCLEXCEPTION_REGISTRATION::TCLEXCEPTION_REGISTRATION	file:
listObj	generic/tkEntry.h	/^    Tcl_Obj *listObj;		\/* Pointer to the list object being used *\/$/;"	m	struct:__anon184
listObj	generic/tkListbox.c	/^    Tcl_Obj *listObj;		\/* Pointer to the list object being used *\/$/;"	m	struct:__anon149	file:
listVarName	generic/tkListbox.c	/^    char *listVarName;		\/* List variable name *\/$/;"	m	struct:__anon149	file:
list_free	win/nmakehlp.c	/^list_free(list_item_t **listPtrPtr)$/;"	f	file:
list_insert	win/nmakehlp.c	/^list_insert(list_item_t **listPtrPtr, const char *key, const char *value)$/;"	f	file:
list_item_t	win/nmakehlp.c	/^typedef struct list_item_t {$/;"	s	file:
list_item_t	win/nmakehlp.c	/^} list_item_t;$/;"	t	typeref:struct:list_item_t	file:
listboxClass	generic/tkListbox.c	/^static const Tk_ClassProcs listboxClass = {$/;"	v	file:
listboxOptionTable	generic/tkListbox.c	/^    Tk_OptionTable listboxOptionTable;$/;"	m	struct:__anon148	file:
literal	library/mkpsenc.tcl	/^	proc literal {string} {$/;"	p
liveRefCount	generic/tkImgPhoto.h	/^    int liveRefCount;		\/* Number of instances which are actually in$/;"	m	struct:ColorTable
loadDir	library/demos/image2.tcl	/^proc loadDir w {$/;"	p
loadImage	library/demos/image2.tcl	/^proc loadImage {w x y} {$/;"	p
loadTkCommand	tests/constraints.tcl	/^	proc loadTkCommand {} {$/;"	p
local	macosx/tkMacOSXMouseEvent.c	/^    Point local;$/;"	m	struct:__anon194	file:
localData	unix/tkUnixSend.c	/^} localData = {0, 0};$/;"	v	typeref:struct:__anon217	file:
location	generic/tkText.h	/^    int location;		\/* Offset in pixels of this tab stop from the$/;"	m	struct:TkTextTab
lock	xlib/X11/Xlib.h	/^	struct _XLockInfo *lock;   \/* multi-thread state, display lock *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XLockInfo
lockUsage	generic/tkInt.h	/^    enum {LU_IGNORE, LU_CAPS, LU_SHIFT} lockUsage;$/;"	m	struct:TkDisplay	typeref:enum:TkDisplay::__anon131
lock_fns	xlib/X11/Xlib.h	/^	struct _XLockPtrs *lock_fns; \/* pointers to threads functions *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XLockPtrs
lock_meaning	xlib/X11/Xlib.h	/^	KeySym lock_meaning;	   \/* for XLookupString *\/$/;"	m	struct:_XDisplay
locked	macosx/tkMacOSXSend.c	/^    int locked;			\/* Non-zero means that the display was locked$/;"	m	struct:NameRegistry	file:
locked	unix/tkUnixSend.c	/^    int locked;			\/* Non-zero means that the display was locked$/;"	m	struct:NameRegistry	file:
logicalLinesMerged	generic/tkTextDisp.c	/^    int logicalLinesMerged;	\/* Number of extra logical lines merged into$/;"	m	struct:DLine	file:
lostSlaveProc	generic/tk.h	/^    Tk_GeomLostSlaveProc *lostSlaveProc;$/;"	m	struct:Tk_GeomMgr
lowerColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *lowerColorObj;$/;"	m	struct:__anon55	file:
lpAND	win/tkWinWm.c	/^    LPBYTE lpAND;		\/* Ptr to AND image bits *\/$/;"	m	struct:__anon233	file:
lpBits	win/tkWinWm.c	/^    LPBYTE lpBits;		\/* Ptr to DIB bits *\/$/;"	m	struct:__anon233	file:
lpVtbl	win/tkWinDialog.c	/^    CONST_VTBL struct IFileDialogVtbl *lpVtbl;$/;"	m	struct:IFileDialog	typeref:struct:IFileDialog::IFileDialogVtbl	file:
lpVtbl	win/tkWinDialog.c	/^    CONST_VTBL struct IFileOpenDialogVtbl *lpVtbl;$/;"	m	struct:IFileOpenDialog	typeref:struct:IFileOpenDialog::IFileOpenDialogVtbl	file:
lpVtbl	win/tkWinDialog.c	/^    CONST_VTBL struct IFileSaveDialogVtbl *lpVtbl;$/;"	m	struct:IFileSaveDialog	typeref:struct:IFileSaveDialog::IFileSaveDialogVtbl	file:
lpVtbl	win/tkWinDialog.c	/^    CONST_VTBL struct IShellItemArrayVtbl *lpVtbl;$/;"	m	struct:IShellItemArray	typeref:struct:IShellItemArray::IShellItemArrayVtbl	file:
lpVtbl	win/tkWinDialog.c	/^    CONST_VTBL struct IShellItemVtbl *lpVtbl;$/;"	m	struct:IShellItem	typeref:struct:IShellItem::IShellItemVtbl	file:
lpVtbl	win/tkWinSendCom.h	/^    IDispatchVtbl *lpVtbl;$/;"	m	struct:__anon254
lpVtbl2	win/tkWinSendCom.h	/^    ISupportErrorInfoVtbl *lpVtbl2;$/;"	m	struct:__anon254
lpXOR	win/tkWinWm.c	/^    LPBYTE lpXOR;		\/* Ptr to XOR image bits *\/$/;"	m	struct:__anon233	file:
lpbi	win/tkWinWm.c	/^    LPBITMAPINFO lpbi;		\/* Ptr to header *\/$/;"	m	struct:__anon233	file:
mFile	generic/tkImgGIF.c	/^typedef struct mFile {$/;"	s	file:
mInit	generic/tkImgGIF.c	/^mInit($/;"	f	file:
macClass	macosx/tkMacOSXWm.h	/^    WindowClass macClass;$/;"	m	struct:TkWmInfo
macClassAttrs	macosx/tkMacOSXWm.c	/^} macClassAttrs[] = {$/;"	v	typeref:struct:__anon205	file:
macCursor	macosx/tkMacOSXCursor.c	/^    NSCursor *macCursor;	\/* Macintosh cursor *\/$/;"	m	struct:__anon208	file:
macScreenName	macosx/tkMacOSXXStubs.c	/^static const char *macScreenName = ":0";$/;"	v	file:
macTypes	generic/tkFileFilter.h	/^    MacFileType *macTypes;	\/* Head of mac file type list *\/$/;"	m	struct:FileFilterClause
macTypesTail	generic/tkFileFilter.h	/^    MacFileType *macTypesTail;	\/* Tail of mac file type list *\/$/;"	m	struct:FileFilterClause
magic	generic/tkColor.h	/^    unsigned int magic;		\/* Used for quick integrity check on this$/;"	m	struct:TkColor
magic	generic/tkDecls.h	/^    int magic;$/;"	m	struct:TkStubs
magic	generic/tkIntDecls.h	/^    int magic;$/;"	m	struct:TkIntStubs
magic	generic/tkIntPlatDecls.h	/^    int magic;$/;"	m	struct:TkIntPlatStubs
magic	generic/tkIntXlibDecls.h	/^    int magic;$/;"	m	struct:TkIntXlibStubs
magic	generic/tkMain.c	/^    int magic;$/;"	m	struct:__anon138	file:
magic	generic/tkPlatDecls.h	/^    int magic;$/;"	m	struct:TkPlatStubs
magic	generic/ttk/ttkDecls.h	/^    int magic;$/;"	m	struct:TtkStubs
main	unix/tkAppInit.c	/^main($/;"	f
main	win/nmakehlp.c	/^main($/;"	f
main	win/winMain.c	/^main($/;"	f
mainPtr	generic/tkFont.c	/^    TkMainInfo *mainPtr;	\/* Application that owns this structure. *\/$/;"	m	struct:TkFontInfo	file:
mainPtr	generic/tkInt.h	/^    TkMainInfo *mainPtr;	\/* Information shared by all windows$/;"	m	struct:TkWindow
mainPtr	generic/tkObj.c	/^    TkMainInfo *mainPtr;	\/* MainWindow associated with tkwin. *\/$/;"	m	struct:WindowRep	file:
mainWindowList	generic/tkWindow.c	/^    TkMainInfo *mainWindowList;$/;"	m	struct:ThreadSpecificData	file:
maintainHashTable	generic/tkInt.h	/^    Tcl_HashTable maintainHashTable;$/;"	m	struct:TkDisplay
major_code	xlib/X11/Xlib.h	/^	int major_code;		\/* core is CopyArea or CopyPlane *\/$/;"	m	struct:__anon294
major_code	xlib/X11/Xlib.h	/^	int major_code;		\/* core is CopyArea or CopyPlane *\/$/;"	m	struct:__anon295
major_opcode	xlib/X11/Xlib.h	/^	int major_opcode;	\/* major op-code assigned by server *\/$/;"	m	struct:__anon266
makeClone	library/demos/textpeer.tcl	/^proc makeClone {w parent} {$/;"	p
manager	generic/ttk/ttkManager.c	/^    Ttk_Manager 	*manager;$/;"	m	struct:__anon69	file:
managerData	generic/ttk/ttkManager.c	/^    void 		*managerData;$/;"	m	struct:TtkManager_	file:
managerSpec	generic/ttk/ttkManager.c	/^    Ttk_ManagerSpec	*managerSpec;$/;"	m	struct:TtkManager_	file:
mandir	unix/Makefile	/^mandir			= ${prefix}\/man$/;"	m
map	generic/tkButton.c	/^static const enum command map[][8] = {$/;"	v	typeref:enum:command	file:
map	generic/ttk/ttkDefaultTheme.c	/^    Ttk_StateTable *map;\/* used to look up image index by state *\/$/;"	m	struct:__anon90	file:
mapCount	generic/ttk/ttkImage.c	/^    int 		mapCount;	\/* #state-specific overrides *\/$/;"	m	struct:TtkImageSpec	file:
map_entries	xlib/X11/Xlib.h	/^	int map_entries;	\/* color map entries *\/$/;"	m	struct:__anon269
map_installed	xlib/X11/Xlib.h	/^    Bool map_installed;		\/* boolean, is color map currently installed*\/$/;"	m	struct:__anon274
map_state	xlib/X11/Xlib.h	/^    int map_state;		\/* IsUnmapped, IsUnviewable, IsViewable *\/$/;"	m	struct:__anon274
mapa	generic/tkImgGIF.c	/^    unsigned char mapa[MAXCOLORMAPSIZE][3];$/;"	m	struct:__anon129	file:
marginObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *marginObj;$/;"	m	struct:__anon55	file:
marginObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *marginObj;$/;"	m	struct:__anon91	file:
marginObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *marginObj;$/;"	m	struct:__anon98	file:
marginObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *marginObj;$/;"	m	struct:__anon40	file:
marginObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *marginObj;$/;"	m	struct:__anon41	file:
margins	win/ttkWinTheme.c	/^    Ttk_Padding margins;	\/* additional placement padding *\/$/;"	m	struct:__anon244	file:
marginsObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *marginsObj;$/;"	m	struct:__anon86	file:
mark	generic/tkText.h	/^	TkTextMark mark;	\/* Information about mark. *\/$/;"	m	union:TkTextSegment::__anon158
markTable	generic/tkText.h	/^    Tcl_HashTable markTable;	\/* Hash table that maps from mark names to$/;"	m	struct:TkSharedText
markarea	tests/arc.tcl	/^proc markarea {x y} {$/;"	p
markx	generic/tkPanedWindow.c	/^    int markx, marky;		\/* Coordinates of the last mark set for the$/;"	m	struct:Slave	file:
marky	generic/tkPanedWindow.c	/^    int markx, marky;		\/* Coordinates of the last mark set for the$/;"	m	struct:Slave	file:
mask	generic/tkBind.c	/^    int mask;			\/* Button\/modifier mask value, such as$/;"	m	struct:__anon173	file:
mask	generic/tkCursor.c	/^    const char *mask;		\/* Mask bits. *\/$/;"	m	struct:__anon1	file:
mask	generic/tkImgBmap.c	/^    Pixmap mask;		\/* Mask: only display bitmap pixels where$/;"	m	struct:BitmapInstance	file:
mask	generic/tkInt.h	/^    unsigned long mask;		\/* Events for which to invoke proc. *\/$/;"	m	struct:TkEventHandler
mask	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const NSUInteger mask;$/;"	m	struct:__anon199	file:
mask	unix/tkUnixCursor.c	/^    char *mask;$/;"	m	struct:TkCursorName	file:
maskData	generic/tkImgBmap.c	/^    char *maskData;		\/* Data for bitmap's mask (suitable for input$/;"	m	struct:BitmapMaster	file:
maskDataString	generic/tkImgBmap.c	/^    char *maskDataString;	\/* Value of -maskdata option (malloc'ed). *\/$/;"	m	struct:BitmapMaster	file:
maskFileString	generic/tkImgBmap.c	/^    char *maskFileString;	\/* Value of -maskfile option (malloc'ed). *\/$/;"	m	struct:BitmapMaster	file:
master	generic/tkGeometry.c	/^    Tk_Window master;		\/* The master that determines slave's$/;"	m	struct:MaintainSlave	file:
master	generic/tkOldTest.c	/^    Tk_ImageMaster master;      \/* Tk's token for image master. *\/$/;"	m	struct:TImageMaster	file:
master	generic/tkTest.c	/^    Tk_ImageMaster master;	\/* Tk's token for image master. *\/$/;"	m	struct:TImageMaster	file:
master	macosx/tkMacOSXWm.h	/^    Window master;		\/* Master window for TRANSIENT_FOR property, or$/;"	m	struct:TkWmInfo
masterData	generic/tkImage.c	/^    ClientData masterData;	\/* One-word argument to pass to image mgr when$/;"	m	struct:ImageMaster	file:
masterDataPtr	generic/tkGrid.c	/^    GridMaster *masterDataPtr;	\/* Additional data for geometry master. *\/$/;"	m	struct:Gridder	file:
masterMenuPtr	generic/tkMenu.h	/^    struct TkMenu *masterMenuPtr;$/;"	m	struct:TkMenu	typeref:struct:TkMenu::TkMenu
masterPtr	generic/tkGrid.c	/^    struct Gridder *masterPtr;	\/* Master window within which this window is$/;"	m	struct:Gridder	typeref:struct:Gridder::Gridder	file:
masterPtr	generic/tkImage.c	/^    struct ImageMaster *masterPtr;$/;"	m	struct:Image	typeref:struct:Image::ImageMaster	file:
masterPtr	generic/tkImgBmap.c	/^    BitmapMaster *masterPtr;	\/* Pointer to master for image. *\/$/;"	m	struct:BitmapInstance	file:
masterPtr	generic/tkImgPhoto.h	/^    PhotoMaster *masterPtr;	\/* Pointer to master for image. *\/$/;"	m	struct:PhotoInstance
masterPtr	generic/tkOldTest.c	/^    TImageMaster *masterPtr;    \/* Pointer to master for image. *\/$/;"	m	struct:TImageInstance	file:
masterPtr	generic/tkPack.c	/^    struct Packer *masterPtr;	\/* Master window within which this window is$/;"	m	struct:Packer	typeref:struct:Packer::Packer	file:
masterPtr	generic/tkPanedWindow.c	/^    struct PanedWindow *masterPtr;$/;"	m	struct:Slave	typeref:struct:Slave::PanedWindow	file:
masterPtr	generic/tkPlace.c	/^    struct Master *masterPtr;	\/* Pointer to information for window relative$/;"	m	struct:Slave	typeref:struct:Slave::Master	file:
masterPtr	generic/tkTest.c	/^    TImageMaster *masterPtr;	\/* Pointer to master for image. *\/$/;"	m	struct:TImageInstance	file:
masterPtr	unix/tkUnixWm.c	/^    TkWindow *masterPtr;	\/* Master window for TRANSIENT_FOR property,$/;"	m	struct:TkWmInfo	file:
masterPtr	win/tkWinWm.c	/^    TkWindow *masterPtr;	\/* Master window for TRANSIENT_FOR property,$/;"	m	struct:TkWmInfo	file:
masterTable	generic/tkInt.h	/^    Tcl_HashTable masterTable;	\/* Maps from Tk_Window toke to the Master$/;"	m	struct:TkDisplay
masterWindow	generic/ttk/ttkManager.c	/^    Tk_Window   	masterWindow;$/;"	m	struct:TtkManager_	file:
masterWindowName	macosx/tkMacOSXWm.h	/^    char *masterWindowName;	\/* Path name of window specified as master in$/;"	m	struct:TkWmInfo
match	generic/tkCanvas.h	/^    int match;			\/* This expression matches event's item's$/;"	m	struct:TagSearchExpr_s
maxAspect	macosx/tkMacOSXWm.h	/^    } minAspect, maxAspect;	\/* Min\/max aspect ratios for window. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::__anon189
maxAspect	unix/tkUnixWm.c	/^    } minAspect, maxAspect;	\/* Min\/max aspect ratios for window. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::__anon216	file:
maxAspect	win/tkWinWm.c	/^    } minAspect, maxAspect;	\/* Min\/max aspect ratios for window. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::__anon237	file:
maxCode	generic/tkImgGIF.c	/^    long maxCode;		\/* Maximum code, given numBits. *\/$/;"	m	struct:__anon130	file:
maxHeight	macosx/tkMacOSXWm.h	/^    int maxWidth, maxHeight;	\/* Maximum dimensions of window, in grid units,$/;"	m	struct:TkWmInfo
maxHeight	unix/tkUnixWm.c	/^    int maxWidth, maxHeight;	\/* Maximum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
maxHeight	win/tkWinWm.c	/^    int maxWidth, maxHeight;	\/* Maximum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
maxLength	generic/tkTextDisp.c	/^    int maxLength;		\/* Length in pixels of longest line that's$/;"	m	struct:TextDInfo	file:
maxOffset	generic/tkGrid.c	/^    int maxOffset;		\/* The maximum offset, in pixels, from the$/;"	m	struct:GridLayout	file:
maxPhase	generic/ttk/ttkProgress.c	/^    int 	maxPhase;		\/* Max animation phase *\/$/;"	m	struct:__anon101	file:
maxUndo	generic/tkText.h	/^    int maxUndo;		\/* The maximum depth of the undo stack$/;"	m	struct:TkSharedText
maxUndo	generic/tkText.h	/^    int maxUndo;		\/* The maximum depth of the undo stack$/;"	m	struct:TkText
maxWidth	generic/tkFont.h	/^    int maxWidth;		\/* Width of widest character in font. *\/$/;"	m	struct:TkFontMetrics
maxWidth	generic/tkListbox.c	/^    int maxWidth;		\/* Width (in pixels) of widest string in$/;"	m	struct:__anon149	file:
maxWidth	macosx/tkMacOSXWm.h	/^    int maxWidth, maxHeight;	\/* Maximum dimensions of window, in grid units,$/;"	m	struct:TkWmInfo
maxWidth	unix/tkUnixWm.c	/^    int maxWidth, maxHeight;	\/* Maximum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
maxWidth	win/tkWinWm.c	/^    int maxWidth, maxHeight;	\/* Maximum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
maxX	generic/tkTextDisp.c	/^    int maxX;			\/* First x-coordinate to right of available$/;"	m	struct:TextDInfo	file:
maxY	generic/tkTextDisp.c	/^    int maxY;			\/* First y-coordinate below available space$/;"	m	struct:TextDInfo	file:
max_aspect	xlib/X11/Xutil.h	/^	} min_aspect, max_aspect;$/;"	m	struct:__anon257	typeref:struct:__anon257::__anon258
max_bounds	xlib/X11/Xlib.h	/^    XCharStruct	max_bounds;	\/* maximum bounds over all existing char*\/$/;"	m	struct:__anon321
max_byte1	xlib/X11/Xlib.h	/^    unsigned	max_byte1;	\/* last row that exists *\/$/;"	m	struct:__anon321
max_char_or_byte2	xlib/X11/Xlib.h	/^    unsigned	max_char_or_byte2;\/* last character *\/$/;"	m	struct:__anon321
max_height	xlib/X11/Xutil.h	/^	int max_width, max_height;$/;"	m	struct:__anon257
max_height	xlib/X11/Xutil.h	/^	int max_width, max_height;$/;"	m	struct:__anon262
max_ink_extent	xlib/X11/Xlib.h	/^    XRectangle      max_ink_extent;$/;"	m	struct:__anon326
max_keycode	xlib/X11/Xlib.h	/^	int max_keycode;	\/* maximum defined keycode *\/$/;"	m	struct:_XDisplay
max_keypermod	xlib/X11/Xlib.h	/^ 	int max_keypermod;	\/* The server's max # of keys per modifier *\/$/;"	m	struct:__anon285
max_logical_extent	xlib/X11/Xlib.h	/^    XRectangle      max_logical_extent;$/;"	m	struct:__anon326
max_maps	xlib/X11/Xlib.h	/^	int max_maps, min_maps;	\/* max and min color maps *\/$/;"	m	struct:__anon271
max_request_size	xlib/X11/Xlib.h	/^	unsigned max_request_size; \/* maximum number 32 bit words in request*\/$/;"	m	struct:_XDisplay
max_width	xlib/X11/Xutil.h	/^	int max_width, max_height;$/;"	m	struct:__anon257
max_width	xlib/X11/Xutil.h	/^	int max_width, max_height;$/;"	m	struct:__anon262
maxdepth	generic/tkUndo.h	/^    int maxdepth;$/;"	m	struct:TkUndoRedoStack
maximumObj	generic/ttk/ttkProgress.c	/^    Tcl_Obj 	*maximumObj;$/;"	m	struct:__anon101	file:
maximumObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *maximumObj;	\/* maximum value *\/$/;"	m	struct:__anon213	file:
mc	library/tk.tcl	/^            proc mc {src args} {$/;"	p
mcmax	library/tk.tcl	/^            proc mcmax {args} {$/;"	p
measureProc	generic/tkText.h	/^    Tk_ChunkMeasureProc *measureProc;$/;"	m	struct:TkTextDispChunk
menuBar	generic/tkBusy.h	/^    int menuBar;		\/* Menu bar flag. *\/$/;"	m	struct:Busy
menuClass	generic/tkMenu.c	/^static const Tk_ClassProcs menuClass = {$/;"	v	file:
menuEntryTypeStrings	generic/tkMenu.c	/^static const char *const menuEntryTypeStrings[] = {$/;"	v	file:
menuFlags	generic/tkMenu.h	/^    int menuFlags;		\/* Flags for use by X; see below for$/;"	m	struct:TkMenu
menuFontDString	win/tkWinMenu.c	/^static Tcl_DString menuFontDString;$/;"	v	file:
menuHWND	win/tkWinMenu.c	/^    HWND menuHWND;		\/* A window to service popup-menu messages$/;"	m	struct:ThreadSpecificData	file:
menuHeight	unix/tkUnixWm.c	/^    int menuHeight;		\/* Amount of vertical space needed for$/;"	m	struct:TkWmInfo	file:
menuIconTrailingEdgeMargin	macosx/tkMacOSXMenu.c	/^static SInt32 menuMarkColumnWidth = 0, menuIconTrailingEdgeMargin = 0;$/;"	v	file:
menuItemExtraHeight	macosx/tkMacOSXMenu.c	/^static SInt16 menuItemExtraHeight = 0, menuItemExtraWidth = 0;$/;"	v	file:
menuItemExtraWidth	macosx/tkMacOSXMenu.c	/^static SInt16 menuItemExtraHeight = 0, menuItemExtraWidth = 0;$/;"	v	file:
menuMarkColumnWidth	macosx/tkMacOSXMenu.c	/^static SInt32 menuMarkColumnWidth = 0, menuIconTrailingEdgeMargin = 0;$/;"	v	file:
menuName	generic/tkFrame.c	/^    char *menuName;		\/* Textual description of menu to use for$/;"	m	struct:__anon145	file:
menuName	generic/tkMenubutton.h	/^    char *menuName;		\/* Name of menu associated with widget.$/;"	m	struct:__anon137
menuObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *menuObj;$/;"	m	struct:__anon23	file:
menuOptionTable	generic/tkMenu.c	/^    Tk_OptionTable menuOptionTable;$/;"	m	struct:ThreadSpecificData	file:
menuOptions	generic/tkMenu.c	/^static const char *const menuOptions[] = {$/;"	v	file:
menuPtr	generic/tkMenu.h	/^    struct TkMenu *menuPtr;	\/* Menu with which this entry is$/;"	m	struct:TkMenuEntry	typeref:struct:TkMenuEntry::TkMenu
menuPtr	generic/tkMenu.h	/^    struct TkMenu *menuPtr;	\/* The menu data structure. This is NULL if$/;"	m	struct:TkMenuReferences	typeref:struct:TkMenuReferences::TkMenu
menuPtr	macosx/tkMacOSXWm.h	/^    TkMenu *menuPtr;$/;"	m	struct:TkWmInfo
menuRefPtr	generic/tkMenu.h	/^    struct TkMenuReferences *menuRefPtr;$/;"	m	struct:TkMenu	typeref:struct:TkMenu::TkMenuReferences
menuSeparatorHeight	macosx/tkMacOSXMenu.c	/^static SInt16 menuSeparatorHeight = 0;$/;"	v	file:
menuStateStrings	generic/tkMenu.c	/^static const char *const menuStateStrings[] = {"active", "normal", "disabled", NULL};$/;"	v	file:
menuTextLeadingEdgeMargin	macosx/tkMacOSXMenu.c	/^static SInt32 menuTextLeadingEdgeMargin = 0, menuTextTrailingEdgeMargin = 0;$/;"	v	file:
menuTextTrailingEdgeMargin	macosx/tkMacOSXMenu.c	/^static SInt32 menuTextLeadingEdgeMargin = 0, menuTextTrailingEdgeMargin = 0;$/;"	v	file:
menuType	generic/tkMenu.h	/^    int menuType;		\/* MASTER_MENU, TEAROFF_MENU, or MENUBAR. See$/;"	m	struct:TkMenu
menuTypePtr	generic/tkMenu.h	/^    Tcl_Obj *menuTypePtr;	\/* Used to control whether created tkwin is a$/;"	m	struct:TkMenu
menuTypeStrings	generic/tkMenu.c	/^static const char *const menuTypeStrings[] = {$/;"	v	file:
menubar	unix/tkUnixWm.c	/^    Tk_Window menubar;		\/* Pointer to information about the menubar,$/;"	m	struct:TkWmInfo	file:
menubarMgrType	unix/tkUnixWm.c	/^static const Tk_GeomMgr menubarMgrType = {$/;"	v	file:
menubutton	generic/ttk/ttkButton.c	/^    MenubuttonPart menubutton;$/;"	m	struct:__anon24	file:
menubuttonClass	generic/tkMenubutton.c	/^static const Tk_ClassProcs menubuttonClass = {$/;"	v	file:
menusInitialized	generic/tkMenu.c	/^    int menusInitialized;	\/* Flag indicates whether thread-specific$/;"	m	struct:ThreadSpecificData	file:
menusInitialized	generic/tkMenu.c	/^static int menusInitialized;$/;"	v	file:
messageClass	generic/tkMessage.c	/^static const Tk_ClassProcs messageClass = {$/;"	v	file:
message_type	xlib/X11/Xlib.h	/^	Atom message_type;$/;"	m	struct:__anon314
meta	macosx/GNUmakefile	/^meta			:= all install embedded install-embedded clean distclean test$/;"	m
metaModMask	generic/tkInt.h	/^    unsigned int metaModMask;	\/* Has one bit set to indicate the modifier$/;"	m	struct:TkDisplay
metricEpoch	generic/tkTextDisp.c	/^    int metricEpoch;		\/* ...and this for the epoch of the partial$/;"	m	struct:TextDInfo	file:
metricIndex	generic/tkTextDisp.c	/^    TkTextIndex metricIndex;	\/* If the current metric update line wraps$/;"	m	struct:TextDInfo	file:
metricPixelHeight	generic/tkTextDisp.c	/^    int metricPixelHeight;	\/* ...and this is for the height calculation$/;"	m	struct:TextDInfo	file:
metrics	macosx/tkMacOSXScrlbr.c	/^static ScrollbarMetrics metrics[2] = {$/;"	v	file:
mgr	generic/ttk/ttkFrame.c	/^    Ttk_Manager	*mgr;$/;"	m	struct:__anon120	file:
mgr	generic/ttk/ttkNotebook.c	/^    Ttk_Manager *mgr;		\/* Geometry manager *\/$/;"	m	struct:__anon66	file:
mgr	generic/ttk/ttkPanedwindow.c	/^    Ttk_Manager	*mgr;$/;"	m	struct:__anon123	file:
mheight	xlib/X11/Xlib.h	/^	int mwidth, mheight;	\/* width and height of  in millimeters *\/$/;"	m	struct:__anon271
minAscent	generic/tkText.h	/^    int minAscent;		\/* Minimum space above the baseline needed by$/;"	m	struct:TkTextDispChunk
minAspect	macosx/tkMacOSXWm.h	/^    } minAspect, maxAspect;	\/* Min\/max aspect ratios for window. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::__anon189
minAspect	unix/tkUnixWm.c	/^    } minAspect, maxAspect;	\/* Min\/max aspect ratios for window. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::__anon216	file:
minAspect	win/tkWinWm.c	/^    } minAspect, maxAspect;	\/* Min\/max aspect ratios for window. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::__anon237	file:
minDescent	generic/tkText.h	/^    int minDescent;		\/* Minimum space below the baseline needed by$/;"	m	struct:TkTextDispChunk
minHeight	generic/tkText.h	/^    int minHeight;		\/* Minimum total line height needed by this$/;"	m	struct:TkTextDispChunk
minHeight	generic/ttk/ttkImage.c	/^    int minHeight;		\/* Minimum width; overrides image width *\/$/;"	m	struct:__anon60	file:
minHeight	macosx/tkMacOSXScrlbr.c	/^    int minHeight, topArrowHeight, bottomArrowHeight;$/;"	m	struct:ScrollbarMetrics	file:
minHeight	macosx/tkMacOSXWm.h	/^    int minWidth, minHeight;	\/* Minimum dimensions of window, in grid units,$/;"	m	struct:TkWmInfo
minHeight	unix/tkUnixWm.c	/^    int minWidth, minHeight;	\/* Minimum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
minHeight	win/tkWinWm.c	/^    int minWidth, minHeight;	\/* Minimum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
minLength	generic/tkVisual.c	/^    int minLength;		\/* Minimum # characters that must be specified$/;"	m	struct:VisualDictionary	file:
minOffset	generic/tkGrid.c	/^    int minOffset;		\/* The minimum offset, in pixels, from the$/;"	m	struct:GridLayout	file:
minReqHeight	generic/tk.h	/^    int minReqHeight;$/;"	m	struct:Tk_FakeWin
minReqHeight	generic/tkInt.h	/^    int minReqHeight;		\/* Minimum requested height. *\/$/;"	m	struct:TkWindow
minReqWidth	generic/tk.h	/^    int minReqWidth;$/;"	m	struct:Tk_FakeWin
minReqWidth	generic/tkInt.h	/^    int minReqWidth;		\/* Minimum requested width. *\/$/;"	m	struct:TkWindow
minSize	generic/tkGrid.c	/^    int minSize;		\/* Minimum size needed for this slot, in$/;"	m	struct:GridLayout	file:
minSize	generic/tkGrid.c	/^    int minSize;		\/* The minimum size of this slot (in pixels).$/;"	m	struct:SlotInfo	file:
minSize	generic/tkGrid.c	/^    int minSize;$/;"	m	struct:UniformGroup	file:
minSize	generic/tkPanedWindow.c	/^    int minSize;		\/* Minimum size of this pane, on the relevant$/;"	m	struct:Slave	file:
minSize	generic/ttk/ttkScrollbar.c	/^    int 	minSize;		\/* minimum size of thumb *\/$/;"	m	struct:__anon51	file:
minTabWidth	generic/ttk/ttkNotebook.c	/^    int 		minTabWidth;	\/* Minimum tab width *\/$/;"	m	struct:__anon68	file:
minThumbHeight	macosx/tkMacOSXScrlbr.c	/^    SInt32 width, minThumbHeight;$/;"	m	struct:ScrollbarMetrics	file:
minWidth	generic/ttk/ttkImage.c	/^    int minWidth;		\/* Minimum width; overrides image width *\/$/;"	m	struct:__anon60	file:
minWidth	generic/ttk/ttkTreeview.c	/^    int 	minWidth;	\/* Minimum column width, in pixels *\/$/;"	m	struct:__anon82	file:
minWidth	macosx/tkMacOSXWm.h	/^    int minWidth, minHeight;	\/* Minimum dimensions of window, in grid units,$/;"	m	struct:TkWmInfo
minWidth	unix/tkUnixWm.c	/^    int minWidth, minHeight;	\/* Minimum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
minWidth	win/tkWinWm.c	/^    int minWidth, minHeight;	\/* Minimum dimensions of window, in pixels or$/;"	m	struct:TkWmInfo	file:
min_aspect	xlib/X11/Xutil.h	/^	} min_aspect, max_aspect;$/;"	m	struct:__anon257	typeref:struct:__anon257::__anon258
min_bounds	xlib/X11/Xlib.h	/^    XCharStruct	min_bounds;	\/* minimum bounds over all existing char*\/$/;"	m	struct:__anon321
min_byte1	xlib/X11/Xlib.h	/^    unsigned	min_byte1;	\/* first row that exists *\/$/;"	m	struct:__anon321
min_char_or_byte2	xlib/X11/Xlib.h	/^    unsigned	min_char_or_byte2;\/* first character *\/$/;"	m	struct:__anon321
min_height	xlib/X11/Xutil.h	/^	int min_width, min_height;$/;"	m	struct:__anon257
min_height	xlib/X11/Xutil.h	/^	int min_width, min_height;$/;"	m	struct:__anon262
min_keycode	xlib/X11/Xlib.h	/^	int min_keycode;	\/* minimum defined keycode *\/$/;"	m	struct:_XDisplay
min_maps	xlib/X11/Xlib.h	/^	int max_maps, min_maps;	\/* max and min color maps *\/$/;"	m	struct:__anon271
min_width	xlib/X11/Xutil.h	/^	int min_width, min_height;$/;"	m	struct:__anon257
min_width	xlib/X11/Xutil.h	/^	int min_width, min_height;$/;"	m	struct:__anon262
minchoAliases	generic/tkFont.c	/^static const char *const minchoAliases[] = {$/;"	v	file:
minorCode	generic/tkInt.h	/^    int minorCode;		\/* Consider only errors with this minor$/;"	m	struct:TkErrorHandler
minor_code	xlib/X11/Xlib.h	/^	int minor_code;		\/* not defined in the core *\/$/;"	m	struct:__anon294
minor_code	xlib/X11/Xlib.h	/^	int minor_code;		\/* not defined in the core *\/$/;"	m	struct:__anon295
minor_code	xlib/X11/Xlib.h	/^	unsigned char minor_code;	\/* Minor op-code of failed request *\/$/;"	m	struct:__anon317
mkObjs	tests/canvPsGrph.tcl	/^proc mkObjs c {$/;"	p
mkTextConfigBox	library/demos/ctext.tcl	/^proc mkTextConfigBox {w x y option value color} {$/;"	p
mkTextConfigPie	library/demos/ctext.tcl	/^proc mkTextConfigPie {w x y a option value color} {$/;"	p
mmObjType	generic/tkObj.c	/^static const Tcl_ObjType mmObjType = {$/;"	v	file:
modArray	generic/tkBind.c	/^static const ModInfo modArray[] = {$/;"	v	file:
modKeyCodes	generic/tkInt.h	/^    KeyCode *modKeyCodes;	\/* Pointer to an array giving keycodes for all$/;"	m	struct:TkDisplay
modTable	generic/tkBind.c	/^static Tcl_HashTable modTable;$/;"	v	file:
modalCancel	macosx/tkMacOSXDialog.c	19;"	d	file:
modalCancel	macosx/tkMacOSXDialog.c	22;"	d	file:
modalError	macosx/tkMacOSXDialog.c	25;"	d	file:
modalMenuPtr	win/tkWinMenu.c	/^    TkMenu *modalMenuPtr;	\/* The menu we are processing inside the modal$/;"	m	struct:ThreadSpecificData	file:
modalOK	macosx/tkMacOSXDialog.c	18;"	d	file:
modalOK	macosx/tkMacOSXDialog.c	21;"	d	file:
modalOther	macosx/tkMacOSXDialog.c	24;"	d	file:
modalProc	generic/tk.h	/^    Tk_ClassModalProc *modalProc;$/;"	m	struct:Tk_ClassProcs
modalSession	macosx/tkMacOSXKeyEvent.c	/^static NSModalSession modalSession = nil;$/;"	v	file:
mode	generic/ttk/ttkProgress.c	/^    int 	mode;$/;"	m	struct:__anon101	file:
mode	xlib/X11/Xlib.h	/^	int mode;		\/* NotifyNormal, NotifyGrab, NotifyUngrab *\/$/;"	m	struct:__anon290
mode	xlib/X11/Xlib.h	/^	int mode;		\/* NotifyNormal, NotifyGrab, NotifyUngrab *\/$/;"	m	struct:__anon291
modeModMask	generic/tkInt.h	/^    unsigned int modeModMask;	\/* Has one bit set to indicate the modifier$/;"	m	struct:TkDisplay
modeObj	generic/ttk/ttkProgress.c	/^    Tcl_Obj 	*modeObj;$/;"	m	struct:__anon101	file:
modeObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *modeObj;		\/* progress bar mode *\/$/;"	m	struct:__anon213	file:
mode_switch	xlib/X11/Xlib.h	/^	unsigned int mode_switch;  \/* keyboard group modifiers *\/$/;"	m	struct:_XDisplay
modified	macosx/tkMacOSXSend.c	/^    int modified;		\/* Non-zero means that the property has been$/;"	m	struct:NameRegistry	file:
modified	unix/tkUnixSend.c	/^    int modified;		\/* Non-zero means that the property has been$/;"	m	struct:NameRegistry	file:
modifiermap	xlib/X11/Xlib.h	/^	XModifierKeymap *modifiermap;	\/* This server's modifier keymap *\/$/;"	m	struct:_XDisplay
modifiermap	xlib/X11/Xlib.h	/^ 	KeyCode *modifiermap;	\/* An 8 by max_keypermod array of modifiers *\/$/;"	m	struct:__anon285
modifiers	macosx/tkMacOSXMenu.c	/^} modifiers[] = {$/;"	v	typeref:struct:__anon199	file:
monoClass	generic/tkFont.c	/^static const char *const monoClass[] = {$/;"	v	file:
monoColorPtr	generic/tkConfig.c	/^	Tcl_Obj *monoColorPtr;	\/* For color and border options, this is an$/;"	m	union:TkOption::__anon182	file:
motion_buffer	xlib/X11/Xlib.h	/^	unsigned long motion_buffer;	\/* size of motion buffer *\/$/;"	m	struct:_XDisplay
mouseButtonState	generic/tkInt.h	/^    int mouseButtonState;	\/* Current mouse button state for this$/;"	m	struct:TkDisplay
mouseButtonWindow	generic/tkInt.h	/^    Window mouseButtonWindow;	\/* Window the button state was set in, added$/;"	m	struct:TkDisplay
mouseTimer	win/tkWinPointer.c	/^static Tcl_TimerToken mouseTimer;	\/* Handle to the latest mouse timer. *\/$/;"	v	file:
mouseTimerSet	win/tkWinPointer.c	/^static int mouseTimerSet = 0;		\/* 1 if the mouse timer is active. *\/$/;"	v	file:
move	library/demos/aniwave.tcl	/^proc move {} {$/;"	p
msgHeight	generic/tkMessage.c	/^    int msgHeight;		\/* Height in pixels needed to display$/;"	m	struct:__anon153	file:
msgWidth	generic/tkMessage.c	/^    int msgWidth;		\/* Width in pixels needed to display$/;"	m	struct:__anon153	file:
multAtoms	unix/tkUnixSelect.c	/^    Atom *multAtoms;		\/* Information about conversions to perform:$/;"	m	struct:IncrInfo	file:
multi	win/tkWinDialog.c	/^    int multi;                  \/* Multiple selection enabled *\/$/;"	m	struct:OFNOpts	file:
multi_byte	xlib/X11/Xlib.h	/^	char *multi_byte;$/;"	m	union:_XIMText::__anon331
multiple	macosx/tkMacOSXDialog.c	/^    int multiple;$/;"	m	struct:__anon191	file:
multipleAtom	generic/tkInt.h	/^    Atom multipleAtom;		\/* Atom for MULTIPLE. None means selection$/;"	m	struct:TkDisplay
mustExist	win/tkWinDialog.c	/^    int mustExist;              \/* Used only for  *\/$/;"	m	struct:OFNOpts	file:
mustExist	win/tkWinDialog.c	/^   int mustExist;		\/* True if file must exist to return from$/;"	m	struct:__anon231	file:
mwidth	xlib/X11/Xlib.h	/^	int mwidth, mheight;	\/* width and height of  in millimeters *\/$/;"	m	struct:__anon271
nCh	macosx/tkMacOSXFont.c	249;"	d	file:
nCh	macosx/tkMacOSXFont.c	311;"	d	file:
nColumns	generic/ttk/ttkTreeview.c	/^    int nColumns; 		\/* #columns *\/$/;"	m	struct:__anon83	file:
nDisplayColumns	generic/ttk/ttkTreeview.c	/^    int nDisplayColumns;	\/* #display columns *\/$/;"	m	struct:__anon83	file:
nElements	generic/tkEntry.h	/^    int nElements;		\/* Holds the current count of elements *\/$/;"	m	struct:__anon184
nElements	generic/tkListbox.c	/^    int nElements;		\/* Holds the current count of elements *\/$/;"	m	struct:__anon149	file:
nNumImages	win/tkWinWm.c	/^    int nNumImages;		\/* How many images? *\/$/;"	m	struct:__anon234	file:
nResources	generic/ttk/ttkTheme.c	/^    int nResources;		\/* #Element options *\/$/;"	m	struct:Ttk_ElementClass_	file:
nSlaves	generic/ttk/ttkManager.c	/^    int 	 	nSlaves;$/;"	m	struct:TtkManager_	file:
nTags	generic/ttk/ttkTagSet.c	/^    int 		nTags;		\/* #tags defined so far *\/$/;"	m	struct:TtkTagTable	file:
nTags	generic/ttk/ttkWidget.h	/^    int 	nTags;$/;"	m	struct:TtkTagSet
nWinPoints	win/tkWinDraw.c	/^    int nWinPoints;		\/* Current size of point array. *\/$/;"	m	struct:ThreadSpecificData	file:
n_properties	xlib/X11/Xlib.h	/^    int         n_properties;   \/* how many properties there are *\/$/;"	m	struct:__anon321
name	generic/tk.h	/^    CONST86 char *name;		\/* Name of image file format *\/$/;"	m	struct:Tk_PhotoImageFormat
name	generic/tk.h	/^    CONST86 char *name;		\/* Name of image type. *\/$/;"	m	struct:Tk_ImageType
name	generic/tk.h	/^    CONST86 char *name;		\/* The name of this type of item, such as$/;"	m	struct:Tk_ItemType
name	generic/tk.h	/^    CONST86 char *name;$/;"	m	struct:Tk_SmoothMethod
name	generic/tk.h	/^    Tk_Uid name;		\/* Name of virtual event. *\/$/;"	m	struct:__anon9
name	generic/tk.h	/^    char *name;			\/* Name of element. *\/$/;"	m	struct:Tk_ElementSpec
name	generic/tk.h	/^    char *name;			\/* Name of the required option. *\/$/;"	m	struct:Tk_ElementOptionSpec
name	generic/tk.h	/^    const char *name;		\/* Name of the custom option. *\/$/;"	m	struct:Tk_ObjCustomOption
name	generic/tk.h	/^    const char *name;		\/* Name of the geometry manager (command used$/;"	m	struct:Tk_GeomMgr
name	generic/tkBind.c	/^    Tk_Uid name;		\/* Tk_Uid of virtual event. *\/$/;"	m	union:__anon166	file:
name	generic/tkBind.c	/^    const char *name;			\/* Name of keysym. *\/$/;"	m	struct:__anon172	file:
name	generic/tkBind.c	/^    const char *name;	\/* Name of event. *\/$/;"	m	struct:__anon174	file:
name	generic/tkBind.c	/^    const char *name; \/* Name of modifier. *\/$/;"	m	struct:__anon173	file:
name	generic/tkFileFilter.h	/^    char *name;			\/* Name of the file filter, such as "Text$/;"	m	struct:FileFilter
name	generic/tkImgPhoto.c	/^    Tcl_Obj *name;		\/* Name specified without an option. *\/$/;"	m	struct:SubcommandOptions	file:
name	generic/tkInt.h	/^    char *name;			\/* Name of display (with any screen identifier$/;"	m	struct:TkDisplay
name	generic/tkInt.h	/^    const char *name;$/;"	m	struct:TkEnsemble
name	generic/tkStyle.c	/^    const char *name;		\/* Name of element. Points to a hash key. *\/$/;"	m	struct:Element	file:
name	generic/tkStyle.c	/^    const char *name;		\/* Name of engine. Points to a hash key. *\/$/;"	m	struct:StyleEngine	file:
name	generic/tkStyle.c	/^    const char *name;		\/* Name of style. Points to a hash key. *\/$/;"	m	struct:Style	file:
name	generic/tkText.h	/^    char *name;			\/* Name used in the hash table. Used by$/;"	m	struct:TkTextEmbImage
name	generic/tkText.h	/^    const char *name;		\/* Name of this kind of segment. *\/$/;"	m	struct:Tk_SegType
name	generic/tkText.h	/^    const char *name;		\/* Name of this tag. This field is actually a$/;"	m	struct:TkTextTag
name	generic/tkVisual.c	/^    const char *name;		\/* Textual name of class. *\/$/;"	m	struct:VisualDictionary	file:
name	generic/tkWindow.c	/^    const char *name;		\/* Name of command. *\/$/;"	m	struct:__anon144	file:
name	generic/tkWindow.c	/^static char *name = NULL;$/;"	v	file:
name	generic/ttk/ttkLayout.c	/^    char *name;$/;"	m	struct:Ttk_TemplateNode_	file:
name	generic/ttk/ttkTheme.c	/^    const char *name;		\/* Points to hash table key *\/$/;"	m	struct:Ttk_ElementClass_	file:
name	generic/ttk/ttkTheme.h	/^    const char *name;			\/* subcommand name *\/$/;"	m	struct:TtkEnsemble
name	macosx/tkMacOSXBitmap.c	/^    const char *name;		\/* Name of icon. *\/$/;"	m	struct:__anon187	file:
name	macosx/tkMacOSXColor.c	/^    const char *name;$/;"	m	struct:SystemColorMapEntry	file:
name	macosx/tkMacOSXCursor.c	/^    const char *name;$/;"	m	struct:CursorName	file:
name	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const NSUInteger mask;$/;"	m	struct:__anon199	file:
name	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const UniChar ch;$/;"	m	struct:__anon200	file:
name	macosx/tkMacOSXMenu.c	/^    const char *name; const size_t len; const int flag;$/;"	m	struct:__anon198	file:
name	macosx/tkMacOSXSend.c	/^    char *name;			\/* Interpreter's name (malloc-ed). *\/$/;"	m	struct:RegisteredInterp	file:
name	unix/tkUnixCursor.c	/^    const char *name;$/;"	m	struct:CursorName	file:
name	unix/tkUnixCursor.c	/^    const char *name;$/;"	m	struct:TkCursorName	file:
name	unix/tkUnixSend.c	/^    char *name;			\/* Interpreter's name (malloc-ed). *\/$/;"	m	struct:RegisteredInterp	file:
name	win/tkWinColor.c	/^    const char *name;$/;"	m	struct:__anon255	file:
name	win/tkWinCursor.c	/^    const char *name;$/;"	m	struct:CursorName	file:
name	win/tkWinSend.c	/^    char *name;			\/* The registered application name *\/$/;"	m	struct:__anon223	file:
name	win/ttkWinMonitor.c	/^    const char *name;$/;"	m	struct:__anon222	file:
name	win/ttkWinTheme.c	/^    const char *name;		\/* element name *\/$/;"	m	struct:__anon244	file:
name	xlib/X11/Xlib.h	/^    Atom name;$/;"	m	struct:__anon320
nameHashPtr	generic/tkBitmap.c	/^    Tcl_HashEntry *nameHashPtr;	\/* Entry in nameTable for this structure$/;"	m	struct:TkBitmap	file:
namePtr	generic/tkMenu.h	/^    Tcl_Obj *namePtr;		\/* Name of variable (for check buttons and$/;"	m	struct:TkMenuEntry
nameTable	generic/tkBind.c	/^    Tcl_HashTable nameTable;	\/* Used to map a virtual event name to the$/;"	m	struct:__anon167	file:
nameTable	generic/tkBind.c	/^static Tcl_HashTable nameTable;	\/* keyArray hashed by keysym name. *\/$/;"	v	file:
nameTable	generic/tkInt.h	/^    Tcl_HashTable nameTable;	\/* Hash table mapping path names to TkWindow$/;"	m	struct:TkMainInfo
nameTable	generic/tkInt.h	/^    Tcl_HashTable nameTable;	\/* Maps from names to Atom's. *\/$/;"	m	struct:TkDisplay
nameTriedPtr	win/tkWinFont.c	/^    Tcl_DString *nameTriedPtr;$/;"	m	struct:CanUse	file:
nameUid	generic/tk.h	/^    Tk_Uid nameUid;$/;"	m	struct:Tk_FakeWin
nameUid	generic/tkInt.h	/^    Tk_Uid nameUid;		\/* Name of the window within its parent$/;"	m	struct:TkWindow
nameUid	generic/tkOption.c	/^    Tk_Uid nameUid;		\/* Name or class from one element of an option$/;"	m	struct:Element	file:
namedColors	generic/ttk/ttkCache.c	/^    Tcl_HashTable namedColors;	\/* Entries: RGB values as Tcl_StringObjs *\/$/;"	m	struct:Ttk_ResourceCache_	file:
namedHashPtr	generic/tkFont.h	/^    Tcl_HashEntry *namedHashPtr;\/* Pointer to hash table entry that$/;"	m	struct:TkFont
namedTable	generic/tkFont.c	/^    Tcl_HashTable namedTable;	\/* Map a name to a set of attributes for a$/;"	m	struct:TkFontInfo	file:
native	generic/tkInt.h	/^    int native;			\/* 0 means generic (X style) bitmap, 1 means$/;"	m	struct:__anon132
nbElements	generic/tkStyle.c	/^    int nbElements;		\/* Size of the below tables. *\/$/;"	m	struct:ThreadSpecificData	file:
nbInit	generic/tkStyle.c	/^    int nbInit;			\/* Number of calls to the init proc. *\/$/;"	m	struct:ThreadSpecificData	file:
nbWidgetSpecs	generic/tkStyle.c	/^    int nbWidgetSpecs;		\/* Size of the array below. Number of distinct$/;"	m	struct:StyledElement	file:
nbytes	xlib/X11/Xlib.h	/^	int nbytes;$/;"	m	struct:__anon287
nchars	xlib/X11/Xlib.h	/^    int             nchars;$/;"	m	struct:__anon327
nchars	xlib/X11/Xlib.h	/^    int             nchars;$/;"	m	struct:__anon328
nchars	xlib/X11/Xlib.h	/^    int nchars;			\/* number of characters *\/$/;"	m	struct:__anon322
nchars	xlib/X11/Xlib.h	/^    int nchars;			\/* number of characters *\/$/;"	m	struct:__anon324
ncolors	generic/tkCanvPs.c	/^    int ncolors;		\/* Number of color values stored *\/$/;"	m	struct:TkColormapData	file:
ndepths	xlib/X11/Xlib.h	/^	int ndepths;		\/* number of depths possible *\/$/;"	m	struct:__anon271
needMods	generic/tkBind.c	/^    int needMods;		\/* Mask of modifiers that must be present (0$/;"	m	struct:__anon169	file:
negparenUid	generic/tkCanvas.c	/^    Tk_Uid negparenUid;$/;"	m	struct:__anon154	file:
negtagvalUid	generic/tkCanvas.c	/^    Tk_Uid negtagvalUid;$/;"	m	struct:__anon154	file:
newAppPtr	generic/tkTest.c	/^static NewApp *newAppPtr = NULL;\/* First in list of all new interpreters. *\/$/;"	v	file:
newCurrentPtr	generic/tkCanvas.h	/^    Tk_Item *newCurrentPtr;	\/* The item that is about to become the$/;"	m	struct:TkCanvas
newFileDialogsState	win/tkWinDialog.c	/^    int   newFileDialogsState;$/;"	m	struct:ThreadSpecificData	file:
newRoom	library/demos/floor.tcl	/^proc newRoom w {$/;"	p
newTopPixelOffset	generic/tkTextDisp.c	/^    int newTopPixelOffset;	\/* Desired first pixel in top display line to$/;"	m	struct:TextDInfo	file:
newXPixelOffset	generic/tkTextDisp.c	/^    int newXPixelOffset;	\/* Desired x scroll position, measured as the$/;"	m	struct:TextDInfo	file:
next	generic/tkCanvas.h	/^    TagSearchExpr *next;	\/* For linked lists of expressions - used in$/;"	m	struct:TagSearchExpr_s
next	generic/tkFileFilter.h	/^    struct FileFilter *next;	\/* Chains to the next filter in a filter$/;"	m	struct:FileFilter	typeref:struct:FileFilter::FileFilter
next	generic/tkFileFilter.h	/^    struct FileFilterClause *next;$/;"	m	struct:FileFilterClause	typeref:struct:FileFilterClause::FileFilterClause
next	generic/tkFileFilter.h	/^    struct GlobPattern *next;	\/* Chains to the next glob pattern in a glob$/;"	m	struct:GlobPattern	typeref:struct:GlobPattern::GlobPattern
next	generic/tkFileFilter.h	/^    struct MacFileType *next;	\/* Chains to the next mac file type in a mac$/;"	m	struct:MacFileType	typeref:struct:MacFileType::MacFileType
next	generic/tkText.h	/^    struct TkText *next;	\/* Next in list of linked peers. *\/$/;"	m	struct:TkText	typeref:struct:TkText::TkText
next	generic/tkText.h	/^    struct TkTextEmbWindowClient *next;$/;"	m	struct:TkTextEmbWindowClient	typeref:struct:TkTextEmbWindowClient::TkTextEmbWindowClient
next	generic/tkUndo.h	/^    struct TkUndoAtom *next;	\/* Pointer to the next element in the$/;"	m	struct:TkUndoAtom	typeref:struct:TkUndoAtom::TkUndoAtom
next	generic/tkUndo.h	/^    struct TkUndoSubAtom *next;	\/* Pointer to the next element in the linked$/;"	m	struct:TkUndoSubAtom	typeref:struct:TkUndoSubAtom::TkUndoSubAtom
next	generic/ttk/ttkLayout.c	/^    Ttk_LayoutNode	*next, *child;$/;"	m	struct:Ttk_LayoutNode_	file:
next	generic/ttk/ttkLayout.c	/^    struct Ttk_TemplateNode_ *next, *child;$/;"	m	struct:Ttk_TemplateNode_	typeref:struct:Ttk_TemplateNode_::Ttk_TemplateNode_	file:
next	generic/ttk/ttkTheme.c	/^    struct CleanupStruct *next;$/;"	m	struct:CleanupStruct	typeref:struct:CleanupStruct::CleanupStruct	file:
next	generic/ttk/ttkTreeview.c	/^    TreeItem	*next;		\/* Next sibling *\/$/;"	m	struct:TreeItemRec	file:
next	xlib/X11/Xlib.h	/^	struct _XExtData *next;	\/* next item on list of data for structure *\/$/;"	m	struct:_XExtData	typeref:struct:_XExtData::_XExtData
nextCascadePtr	generic/tkMenu.h	/^    struct TkMenuEntry *nextCascadePtr;$/;"	m	struct:TkMenuEntry	typeref:struct:TkMenuEntry::TkMenuEntry
nextHandler	generic/tkEvent.c	/^    TkEventHandler *nextHandler;\/* Next handler in search. *\/$/;"	m	struct:InProgress	file:
nextId	generic/tkCanvas.h	/^    int nextId;			\/* Number to use as id for next item created$/;"	m	struct:TkCanvas
nextInstancePtr	generic/tkMenu.h	/^    struct TkMenu *nextInstancePtr;$/;"	m	struct:TkMenu	typeref:struct:TkMenu::TkMenu
nextObjPtr	generic/tkBind.c	/^    struct PatSeq *nextObjPtr;	\/* In a binding table, next in list of all$/;"	m	struct:PatSeq	typeref:struct:PatSeq::PatSeq	file:
nextPtr	generic/tk.h	/^    struct Tk_ImageType *nextPtr;$/;"	m	struct:Tk_ImageType	typeref:struct:Tk_ImageType::Tk_ImageType
nextPtr	generic/tk.h	/^    struct Tk_Item *nextPtr;	\/* Next in display list of all items in this$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_Item
nextPtr	generic/tk.h	/^    struct Tk_ItemType *nextPtr;\/* Used to link types together into a list. *\/$/;"	m	struct:Tk_ItemType	typeref:struct:Tk_ItemType::Tk_ItemType
nextPtr	generic/tk.h	/^    struct Tk_PhotoImageFormat *nextPtr;$/;"	m	struct:Tk_PhotoImageFormat	typeref:struct:Tk_PhotoImageFormat::Tk_PhotoImageFormat
nextPtr	generic/tk.h	/^    struct Tk_SavedOptions *nextPtr;$/;"	m	struct:Tk_SavedOptions	typeref:struct:Tk_SavedOptions::Tk_SavedOptions
nextPtr	generic/tk3d.h	/^    struct TkBorder *nextPtr;	\/* Points to the next TkBorder structure with$/;"	m	struct:TkBorder	typeref:struct:TkBorder::TkBorder
nextPtr	generic/tkBitmap.c	/^    struct TkBitmap *nextPtr;	\/* Points to the next TkBitmap structure with$/;"	m	struct:TkBitmap	typeref:struct:TkBitmap::TkBitmap	file:
nextPtr	generic/tkCanvUtil.c	/^    struct SmoothAssocData *nextPtr;$/;"	m	struct:SmoothAssocData	typeref:struct:SmoothAssocData::SmoothAssocData	file:
nextPtr	generic/tkColor.h	/^    struct TkColor *nextPtr;	\/* Points to the next TkColor structure with$/;"	m	struct:TkColor	typeref:struct:TkColor::TkColor
nextPtr	generic/tkConfig.c	/^    struct OptionTable *nextPtr;\/* If templatePtr was part of a chain of$/;"	m	struct:OptionTable	typeref:struct:OptionTable::OptionTable	file:
nextPtr	generic/tkEvent.c	/^    struct ExitHandler *nextPtr;\/* Next in list of all exit handlers for this$/;"	m	struct:ExitHandler	typeref:struct:ExitHandler::ExitHandler	file:
nextPtr	generic/tkEvent.c	/^    struct GenericHandler *nextPtr;$/;"	m	struct:GenericHandler	typeref:struct:GenericHandler::GenericHandler	file:
nextPtr	generic/tkEvent.c	/^    struct InProgress *nextPtr;	\/* Next higher nested search. *\/$/;"	m	struct:InProgress	typeref:struct:InProgress::InProgress	file:
nextPtr	generic/tkFocus.c	/^    struct TkDisplayFocusInfo *nextPtr;$/;"	m	struct:TkDisplayFocusInfo	typeref:struct:TkDisplayFocusInfo::TkDisplayFocusInfo	file:
nextPtr	generic/tkFocus.c	/^    struct TkToplevelFocusInfo *nextPtr;$/;"	m	struct:TkToplevelFocusInfo	typeref:struct:TkToplevelFocusInfo::TkToplevelFocusInfo	file:
nextPtr	generic/tkFont.h	/^    struct TkFont *nextPtr;	\/* Points to the next TkFont structure with$/;"	m	struct:TkFont	typeref:struct:TkFont::TkFont
nextPtr	generic/tkGeometry.c	/^    struct MaintainSlave *nextPtr;$/;"	m	struct:MaintainSlave	typeref:struct:MaintainSlave::MaintainSlave	file:
nextPtr	generic/tkGrid.c	/^    struct Gridder *nextPtr;	\/* Next window managed within same master.$/;"	m	struct:Gridder	typeref:struct:Gridder::Gridder	file:
nextPtr	generic/tkImage.c	/^    struct Image *nextPtr;	\/* Next in list of all image instances$/;"	m	struct:Image	typeref:struct:Image::Image	file:
nextPtr	generic/tkImgBmap.c	/^    struct BitmapInstance *nextPtr;$/;"	m	struct:BitmapInstance	typeref:struct:BitmapInstance::BitmapInstance	file:
nextPtr	generic/tkImgPhoto.h	/^    PhotoInstance *nextPtr;	\/* Pointer to the next instance in the list of$/;"	m	struct:PhotoInstance
nextPtr	generic/tkInt.h	/^    struct TkCursor *nextPtr;	\/* Points to the next TkCursor structure with$/;"	m	struct:TkCursor	typeref:struct:TkCursor::TkCursor
nextPtr	generic/tkInt.h	/^    struct TkDisplay *nextPtr;	\/* Next in list of all displays. *\/$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkDisplay
nextPtr	generic/tkInt.h	/^    struct TkErrorHandler *nextPtr;$/;"	m	struct:TkErrorHandler	typeref:struct:TkErrorHandler::TkErrorHandler
nextPtr	generic/tkInt.h	/^    struct TkEventHandler *nextPtr;$/;"	m	struct:TkEventHandler	typeref:struct:TkEventHandler::TkEventHandler
nextPtr	generic/tkInt.h	/^    struct TkMainInfo *nextPtr;	\/* Next in list of all main windows managed by$/;"	m	struct:TkMainInfo	typeref:struct:TkMainInfo::TkMainInfo
nextPtr	generic/tkInt.h	/^    struct TkWindow *nextPtr;	\/* Next higher sibling (in stacking order) in$/;"	m	struct:TkWindow	typeref:struct:TkWindow::TkWindow
nextPtr	generic/tkMenu.h	/^    struct TkMenuTopLevelList *nextPtr;$/;"	m	struct:TkMenuTopLevelList	typeref:struct:TkMenuTopLevelList::TkMenuTopLevelList
nextPtr	generic/tkPack.c	/^    struct Packer *nextPtr;	\/* Next window packed within same master. List$/;"	m	struct:Packer	typeref:struct:Packer::Packer	file:
nextPtr	generic/tkPlace.c	/^    struct Slave *nextPtr;	\/* Next in list of windows placed relative to$/;"	m	struct:Slave	typeref:struct:Slave::Slave	file:
nextPtr	generic/tkSelect.h	/^    struct TkClipboardBuffer *nextPtr;$/;"	m	struct:TkClipboardBuffer	typeref:struct:TkClipboardBuffer::TkClipboardBuffer
nextPtr	generic/tkSelect.h	/^    struct TkClipboardTarget *nextPtr;$/;"	m	struct:TkClipboardTarget	typeref:struct:TkClipboardTarget::TkClipboardTarget
nextPtr	generic/tkSelect.h	/^    struct TkSelHandler *nextPtr;$/;"	m	struct:TkSelHandler	typeref:struct:TkSelHandler::TkSelHandler
nextPtr	generic/tkSelect.h	/^    struct TkSelInProgress *nextPtr;$/;"	m	struct:TkSelInProgress	typeref:struct:TkSelInProgress::TkSelInProgress
nextPtr	generic/tkSelect.h	/^    struct TkSelRetrievalInfo *nextPtr;$/;"	m	struct:TkSelRetrievalInfo	typeref:struct:TkSelRetrievalInfo::TkSelRetrievalInfo
nextPtr	generic/tkSelect.h	/^    struct TkSelectionInfo *nextPtr;$/;"	m	struct:TkSelectionInfo	typeref:struct:TkSelectionInfo::TkSelectionInfo
nextPtr	generic/tkTest.c	/^    struct NewApp *nextPtr;	\/* Next in list of new interpreters. *\/$/;"	m	struct:NewApp	typeref:struct:NewApp::NewApp	file:
nextPtr	generic/tkText.h	/^    TkTextSegment *nextPtr;	\/* Where to resume search in next call to$/;"	m	struct:TkTextSearch
nextPtr	generic/tkText.h	/^    struct TkTextDispChunk *nextPtr;$/;"	m	struct:TkTextDispChunk	typeref:struct:TkTextDispChunk::TkTextDispChunk
nextPtr	generic/tkText.h	/^    struct TkTextLine *nextPtr;	\/* Next in linked list of lines with same$/;"	m	struct:TkTextLine	typeref:struct:TkTextLine::TkTextLine
nextPtr	generic/tkText.h	/^    struct TkTextSegment *nextPtr;$/;"	m	struct:TkTextSegment	typeref:struct:TkTextSegment::TkTextSegment
nextPtr	generic/tkTextBTree.c	/^    struct Node *nextPtr;	\/* Next in list of siblings with the same$/;"	m	struct:Node	typeref:struct:Node::Node	file:
nextPtr	generic/tkTextBTree.c	/^    struct Summary *nextPtr;	\/* Next in list of all tags for same node, or$/;"	m	struct:Summary	typeref:struct:Summary::Summary	file:
nextPtr	generic/tkTextDisp.c	/^    struct DLine *nextPtr;	\/* Next in list of all display lines for this$/;"	m	struct:DLine	typeref:struct:DLine::DLine	file:
nextPtr	generic/tkVisual.c	/^    struct TkColormap *nextPtr;	\/* Next in list of colormaps for this display,$/;"	m	struct:TkColormap	typeref:struct:TkColormap::TkColormap	file:
nextPtr	generic/tkWindow.c	/^    struct TkHalfdeadWindow *nextPtr;$/;"	m	struct:TkHalfdeadWindow	typeref:struct:TkHalfdeadWindow::TkHalfdeadWindow	file:
nextPtr	macosx/tkMacOSXEmbed.c	/^    struct Container *nextPtr;	\/* Next in list of all containers in this$/;"	m	struct:Container	typeref:struct:Container::Container	file:
nextPtr	macosx/tkMacOSXSend.c	/^    struct RegisteredInterp *nextPtr;$/;"	m	struct:RegisteredInterp	typeref:struct:RegisteredInterp::RegisteredInterp	file:
nextPtr	macosx/tkMacOSXWm.h	/^    struct ProtocolHandler *nextPtr;$/;"	m	struct:ProtocolHandler	typeref:struct:ProtocolHandler::ProtocolHandler
nextPtr	unix/tkUnixColor.c	/^    struct TkStressedCmap *nextPtr;$/;"	m	struct:TkStressedCmap	typeref:struct:TkStressedCmap::TkStressedCmap	file:
nextPtr	unix/tkUnixEmbed.c	/^    struct Container *nextPtr;	\/* Next in list of all containers in this$/;"	m	struct:Container	typeref:struct:Container::Container	file:
nextPtr	unix/tkUnixFont.c	/^    struct FontFamily *nextPtr;	\/* Next in list of all known font families. *\/$/;"	m	struct:FontFamily	typeref:struct:FontFamily::FontFamily	file:
nextPtr	unix/tkUnixSelect.c	/^    struct IncrInfo *nextPtr;	\/* Next in list of all INCR-style retrievals$/;"	m	struct:IncrInfo	typeref:struct:IncrInfo::IncrInfo	file:
nextPtr	unix/tkUnixSend.c	/^    struct PendingCommand *nextPtr;$/;"	m	struct:PendingCommand	typeref:struct:PendingCommand::PendingCommand	file:
nextPtr	unix/tkUnixSend.c	/^    struct RegisteredInterp *nextPtr;$/;"	m	struct:RegisteredInterp	typeref:struct:RegisteredInterp::RegisteredInterp	file:
nextPtr	unix/tkUnixWm.c	/^    struct ProtocolHandler *nextPtr;$/;"	m	struct:ProtocolHandler	typeref:struct:ProtocolHandler::ProtocolHandler	file:
nextPtr	unix/tkUnixWm.c	/^    struct TkWmInfo *nextPtr;	\/* Next in list of all top-level windows. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::TkWmInfo	file:
nextPtr	win/nmakehlp.c	/^    struct list_item_t *nextPtr;$/;"	m	struct:list_item_t	typeref:struct:list_item_t::list_item_t	file:
nextPtr	win/tkWinEmbed.c	/^    struct Container *nextPtr;	\/* Next in list of all containers in this$/;"	m	struct:Container	typeref:struct:Container::Container	file:
nextPtr	win/tkWinFont.c	/^    struct FontFamily *nextPtr;	\/* Next in list of all known font families. *\/$/;"	m	struct:FontFamily	typeref:struct:FontFamily::FontFamily	file:
nextPtr	win/tkWinWm.c	/^    struct ProtocolHandler *nextPtr;$/;"	m	struct:ProtocolHandler	typeref:struct:ProtocolHandler::ProtocolHandler	file:
nextPtr	win/tkWinWm.c	/^    struct TkWmInfo *nextPtr;	\/* Next in list of all top-level windows. *\/$/;"	m	struct:TkWmInfo	typeref:struct:TkWmInfo::TkWmInfo	file:
nextSeqPtr	generic/tkBind.c	/^    struct PatSeq *nextSeqPtr;	\/* Next in list of all pattern sequences that$/;"	m	struct:PatSeq	typeref:struct:PatSeq::PatSeq	file:
nextToUse	generic/tkOption.c	/^    Element *nextToUse;		\/* Pointer to &els[numUsed]. *\/$/;"	m	struct:ElArray	file:
next_event_serial_num	xlib/X11/Xlib.h	/^	unsigned long next_event_serial_num; \/* inserted into next queue elt *\/$/;"	m	struct:_XDisplay
nfaces	unix/tkUnixRFont.c	/^    int nfaces;$/;"	m	struct:__anon221	file:
nformats	xlib/X11/Xlib.h	/^	int nformats;		\/* number of pixmap formats in list *\/$/;"	m	struct:_XDisplay
nimages	generic/ttk/ttkDefaultTheme.c	/^    int nimages;	\/* #images \/ row *\/$/;"	m	struct:__anon90	file:
nitems	xlib/X11/Xutil.h	/^    unsigned long nitems;		\/* number of data items in value *\/$/;"	m	struct:__anon260
noCase	generic/tkText.c	/^    int noCase;			\/* Case-insenstivive? *\/$/;"	m	struct:SearchSpec	file:
noLineStop	generic/tkText.c	/^    int noLineStop;		\/* If not set, a regexp search will use the$/;"	m	struct:SearchSpec	file:
no_vcvars	win/buildall.vc.bat	/^:no_vcvars$/;"	l
nodePtr	generic/tkTextBTree.c	/^	struct Node *nodePtr;	\/* Used if level > 0. *\/$/;"	m	union:Node::__anon176	typeref:struct:Node::__anon176::Node	file:
normalBorder	generic/tkButton.h	/^    Tk_3DBorder normalBorder;	\/* Value of -background option: specifies$/;"	m	struct:__anon178
normalBorder	generic/tkEntry.h	/^    Tk_3DBorder normalBorder;	\/* Used for drawing border around whole$/;"	m	struct:__anon183
normalBorder	generic/tkListbox.c	/^    Tk_3DBorder normalBorder;	\/* Used for drawing border around whole$/;"	m	struct:__anon149	file:
normalBorder	generic/tkMenubutton.h	/^    Tk_3DBorder normalBorder;	\/* Structure used to draw 3-D border and$/;"	m	struct:__anon137
normalFg	generic/tkButton.h	/^    XColor *normalFg;		\/* Value of -font option: specifies foreground$/;"	m	struct:__anon178
normalFg	generic/tkMenubutton.h	/^    XColor *normalFg;		\/* Foreground color in normal mode. *\/$/;"	m	struct:__anon137
normalTextGC	generic/tkButton.h	/^    GC normalTextGC;		\/* GC for drawing text in normal mode. Also$/;"	m	struct:__anon178
normalTextGC	generic/tkMenubutton.h	/^    GC normalTextGC;		\/* GC for drawing text in normal mode. *\/$/;"	m	struct:__anon137
notAA	macosx/tkMacOSXDraw.c	38;"	d	file:
notebook	generic/ttk/ttkNotebook.c	/^    NotebookPart notebook;$/;"	m	struct:__anon67	file:
notifyDetail	generic/tkBind.c	/^static const TkStateMap notifyDetail[] = {$/;"	v	file:
notifyMode	generic/tkBind.c	/^static const TkStateMap notifyMode[] = {$/;"	v	file:
nsAttributes	macosx/tkMacOSXFont.c	/^    NSDictionary *nsAttributes;$/;"	m	struct:__anon203	file:
nsFont	macosx/tkMacOSXFont.c	/^    NSFont *nsFont;$/;"	m	struct:__anon203	file:
nscreens	xlib/X11/Xlib.h	/^	int nscreens;		\/* number of screens on this server*\/$/;"	m	struct:_XDisplay
null_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable null_statemap[] = { {0,0,0} };$/;"	v	file:
num	generic/tkImgGIF.c	/^    int num;$/;"	m	struct:__anon129	file:
numBits	generic/tkImgGIF.c	/^    int numBits;		\/* Number of bits\/code. *\/$/;"	m	struct:__anon130	file:
numBytes	generic/tkCanvText.c	/^    int numBytes;		\/* Length of text in bytes. *\/$/;"	m	struct:TextItem	file:
numBytes	generic/tkEntry.h	/^    int numBytes;		\/* Length of string in bytes. *\/$/;"	m	struct:__anon183
numBytes	generic/tkFont.c	/^    int numBytes;		\/* The number of bytes in this chunk. *\/$/;"	m	struct:LayoutChunk	file:
numBytes	generic/tkText.h	/^    int numBytes;		\/* Number of bytes that will be displayed in$/;"	m	struct:TkTextDispChunk
numBytes	generic/tkTextDisp.c	/^    int numBytes;		\/* Number of bytes that belong to this$/;"	m	struct:CharInfo	file:
numBytes	generic/tkTextDisp.c	/^    int numBytes;		\/* Number of bytes to display. *\/$/;"	m	struct:CharInfo	file:
numBytes	generic/ttk/ttkEntry.c	/^    int numBytes;		\/* Length of string in bytes. *\/$/;"	m	struct:__anon26	file:
numChannels	generic/tkImgPNG.c	/^    unsigned char numChannels;	\/* Number of channels per pixel. *\/$/;"	m	struct:__anon179	file:
numChars	generic/tkCanvText.c	/^    int numChars;		\/* Length of text in characters. *\/$/;"	m	struct:TextItem	file:
numChars	generic/tkEntry.h	/^    int numChars;		\/* Length of string in characters. Both string$/;"	m	struct:__anon183
numChars	generic/tkFont.c	/^    int numChars;		\/* The number of characters in this chunk. *\/$/;"	m	struct:LayoutChunk	file:
numChars	generic/tkMessage.c	/^    int numChars;		\/* Number of characters in string, not$/;"	m	struct:__anon153	file:
numChars	generic/ttk/ttkEntry.c	/^    int numChars;		\/* Length of string in characters. *\/$/;"	m	struct:__anon26	file:
numChildren	generic/tkTextBTree.c	/^    int numChildren;		\/* Number of children of this node. *\/$/;"	m	struct:Node	file:
numChunks	generic/tkFont.c	/^    int numChunks;		\/* Number of chunks actually used in following$/;"	m	struct:TextLayout	file:
numColors	generic/tkImgPhoto.h	/^    int	numColors;		\/* Number of colors allocated for this map. *\/$/;"	m	struct:ColorTable
numColors	unix/tkUnixColor.c	/^    int numColors;		\/* Number of entries currently active at$/;"	m	struct:TkStressedCmap	file:
numCols	generic/tkGrid.c	/^    int numCols, numRows;	\/* Number of columns or rows this slave spans.$/;"	m	struct:Gridder	file:
numConversions	unix/tkUnixSelect.c	/^    unsigned long numConversions;$/;"	m	struct:IncrInfo	file:
numCopies	generic/tkTextDisp.c	/^static int numCopies;		\/* Number of calls to XCopyArea to copy part$/;"	v	file:
numCurTags	generic/tkText.h	/^    int numCurTags;		\/* Number of tags associated with character at$/;"	m	struct:TkText
numDisplayBytes	generic/tkEntry.h	/^    int numDisplayBytes;	\/* Length of displayString in bytes. *\/$/;"	m	struct:__anon183
numDisplayChars	generic/tkFont.c	/^    int numDisplayChars;	\/* The number of characters to display when$/;"	m	struct:LayoutChunk	file:
numEntries	generic/tkMenu.h	/^    int numEntries;		\/* Number of elements in entries. *\/$/;"	m	struct:TkMenu
numFilters	generic/tkFileFilter.h	/^    int numFilters;		\/* number of filters in the list *\/$/;"	m	struct:FileFilterList
numIdSearches	generic/tkInt.h	/^    int numIdSearches;$/;"	m	struct:TkDisplay
numIncrs	unix/tkUnixSelect.c	/^    int numIncrs;		\/* Number of entries in converts that aren't$/;"	m	struct:IncrInfo	file:
numItems	generic/tk.h	/^    int numItems;		\/* The number of valid items in items field. *\/$/;"	m	struct:Tk_SavedOptions
numKey	generic/tkInt.h	/^    int numKey;			\/* Integer representation of a value. *\/$/;"	m	struct:TkStateMap
numLevels	generic/tkOption.c	/^    int numLevels;		\/* Total space allocated. *\/$/;"	m	struct:ThreadSpecificData	file:
numLines	generic/tkText.c	/^    int numLines;		\/* Total lines which are available. *\/$/;"	m	struct:SearchSpec	file:
numLines	generic/tkTextBTree.c	/^    int numLines;		\/* Total number of lines (leaves) in the$/;"	m	struct:Node	file:
numMainWindows	generic/tkWindow.c	/^    int numMainWindows;		\/* Count of numver of main windows currently$/;"	m	struct:ThreadSpecificData	file:
numModKeyCodes	generic/tkInt.h	/^    int numModKeyCodes;		\/* Number of entries in modKeyCodes array$/;"	m	struct:TkDisplay
numOptions	generic/tkConfig.c	/^    int numOptions;		\/* The number of items in the options array$/;"	m	struct:OptionTable	file:
numOutlinePoints	generic/tkCanvArc.c	/^    int numOutlinePoints;	\/* Number of points at outlinePtr. Zero means$/;"	m	struct:ArcItem	file:
numOwned	generic/tkBind.c	/^    int numOwned;		\/* Number of physical events owned. *\/$/;"	m	struct:__anon170	file:
numOwners	generic/tkBind.c	/^    int numOwners;		\/* Number of virtual events to trigger. *\/$/;"	m	struct:VirtualOwners	file:
numPats	generic/tkBind.c	/^    int numPats;		\/* Number of patterns in sequence (usually$/;"	m	struct:PatSeq	file:
numPixels	generic/tkTextBTree.c	/^    int *numPixels;		\/* Array containing total number of vertical$/;"	m	struct:Node	file:
numPoints	generic/tkCanvLine.c	/^    int numPoints;		\/* Number of points in line (always >= 0). *\/$/;"	m	struct:LineItem	file:
numPoints	generic/tkCanvPoly.c	/^    int numPoints;		\/* Number of points in polygon. Polygon is$/;"	m	struct:PolygonItem	file:
numRedisplays	generic/tkTextDisp.c	/^static int numRedisplays;	\/* Number of calls to DisplayText. *\/$/;"	v	file:
numRows	generic/tkGrid.c	/^    int numCols, numRows;	\/* Number of columns or rows this slave spans.$/;"	m	struct:Gridder	file:
numSelected	generic/tkListbox.c	/^    int numSelected;		\/* Number of elements currently selected. *\/$/;"	m	struct:__anon149	file:
numSlaves	generic/tkPanedWindow.c	/^    int numSlaves;		\/* Number of slaves. *\/$/;"	m	struct:PanedWindow	file:
numSlowSearches	generic/tkInt.h	/^    int numSlowSearches;$/;"	m	struct:TkDisplay
numSubFonts	unix/tkUnixFont.c	/^    int numSubFonts;		\/* Length of following array. *\/$/;"	m	struct:UnixFont	file:
numSubFonts	win/tkWinFont.c	/^    int numSubFonts;		\/* Length of following array. *\/$/;"	m	struct:WinFont	file:
numTables	win/tkWinFont.c	/^    USHORT numTables;		\/* Number of encoding tables following. *\/$/;"	m	struct:CMAPTABLE	file:
numTabs	generic/tkText.h	/^    int numTabs;		\/* Number of tab stops. *\/$/;"	m	struct:TkTextTabArray
numTags	generic/tk.h	/^    int numTags;		\/* Number of tag slots actually used at$/;"	m	struct:Tk_Item
numTags	generic/tkInt.h	/^    int numTags;		\/* Number of tags at *tagPtr. *\/$/;"	m	struct:TkWindow
numTags	generic/tkText.h	/^    int numTags;		\/* Number of tags currently defined for$/;"	m	struct:TkSharedText
numTags	generic/tkText.h	/^    int numTags;		\/* Total tags in widget. *\/$/;"	m	struct:TkTextElideInfo
numTags	generic/tkTextBTree.c	/^    int numTags;		\/* Number of tags for which there is currently$/;"	m	struct:TagInfo	file:
numTransients	unix/tkUnixWm.c	/^    int numTransients;		\/* number of transients on this window *\/$/;"	m	struct:TkWmInfo	file:
numTransients	win/tkWinWm.c	/^    int numTransients;		\/* Number of transients on this window *\/$/;"	m	struct:TkWmInfo	file:
numUsed	generic/tkOption.c	/^    int numUsed;		\/* Number of elements currently in use out of$/;"	m	struct:ElArray	file:
number	generic/tk.h	/^    int number;$/;"	m	struct:Tk_Dash
number	xlib/X11/Xlib.h	/^	int number;		\/* number returned by XRegisterExtension *\/$/;"	m	struct:_XExtData
nvisuals	xlib/X11/Xlib.h	/^	int nvisuals;		\/* number of Visual types at this depth *\/$/;"	m	struct:__anon270
obdata	xlib/X11/Xlib.h	/^    XPointer obdata;		\/* hook for the object routines to hang on *\/$/;"	m	struct:_XImage
obj	win/tkWinSend.c	/^    LPUNKNOWN obj;		\/* Interface for the registration object *\/$/;"	m	struct:__anon223	file:
objDataPtr	generic/tkImgPNG.c	/^    Tcl_Obj *objDataPtr;$/;"	m	struct:__anon179	file:
objOffset	generic/tk.h	/^    int objOffset;		\/* Where in record to store a Tcl_Obj * that$/;"	m	struct:Tk_OptionSpec
objProc	generic/tkWindow.c	/^    Tcl_ObjCmdProc *objProc;	\/* Command's object- (or string-) based$/;"	m	struct:__anon144	file:
objRefCount	generic/tk3d.h	/^    int objRefCount;		\/* The number of Tcl objects that reference$/;"	m	struct:TkBorder
objRefCount	generic/tkBitmap.c	/^    int objRefCount;		\/* Number of Tcl_Obj's that reference this$/;"	m	struct:TkBitmap	file:
objRefCount	generic/tkColor.h	/^    int objRefCount;		\/* The number of Tcl objects that reference$/;"	m	struct:TkColor
objRefCount	generic/tkFont.h	/^    int objRefCount;		\/* The number of Tcl objects that reference$/;"	m	struct:TkFont
objRefCount	generic/tkInt.h	/^    int objRefCount;		\/* Number of Tcl objects that reference this$/;"	m	struct:TkCursor
objdir	macosx/GNUmakefile	/^objdir			= $(subst ${space},\\ ,${OBJ_DIR})$/;"	m
object	generic/tkBind.c	/^    ClientData object;		\/* For binding table, identifies the binding$/;"	m	struct:__anon168	file:
objectTable	generic/tkBind.c	/^    Tcl_HashTable objectTable;	\/* Used to map from an object to a list of$/;"	m	struct:Tk_BindingTable_	file:
observe	macosx/tkMacOSXInit.c	81;"	d	file:
observe	macosx/tkMacOSXInit.c	89;"	d	file:
observe	macosx/tkMacOSXMenu.c	1456;"	d	file:
observe	macosx/tkMacOSXMenu.c	1460;"	d	file:
observe	macosx/tkMacOSXWindowEvent.c	227;"	d	file:
observe	macosx/tkMacOSXWindowEvent.c	243;"	d	file:
offBits	generic/ttk/ttkTheme.h	/^    unsigned int offBits;	\/* Bits which must be cleared *\/$/;"	m	struct:__anon71
offRelief	generic/tkButton.h	/^    int offRelief;		\/* Value of -offrelief option: specifies a 3-d$/;"	m	struct:__anon178
offTime	generic/ttk/ttkBlink.c	/^    int 		offTime;	\/* #milliseconds to blink cursor off *\/$/;"	m	struct:__anon99	file:
offValueObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *offValueObj;$/;"	m	struct:__anon19	file:
offValuePtr	generic/tkButton.h	/^    Tcl_Obj *offValuePtr;	\/* Value of -offvalue option: specifies value$/;"	m	struct:__anon178
offValuePtr	generic/tkMenu.h	/^    Tcl_Obj *offValuePtr;	\/* Value to store in variable when not$/;"	m	struct:TkMenuEntry
offbits	generic/ttk/ttkTheme.h	/^    unsigned int offbits;	\/* bits to turn off *\/$/;"	m	struct:__anon70
offset	generic/tk.h	/^    int offset;			\/* Dash offset. *\/$/;"	m	struct:Tk_Outline
offset	generic/tk.h	/^    int offset;			\/* Where in widget record to store value; use$/;"	m	struct:Tk_ConfigSpec
offset	generic/tk.h	/^    int offset[4];		\/* Address differences between the red, green,$/;"	m	struct:Tk_PhotoImageBlock
offset	generic/tkGrid.c	/^    int offset;			\/* This is a cached value used for$/;"	m	struct:SlotInfo	file:
offset	generic/tkImgGIF.c	/^    int offset;$/;"	m	struct:__anon130	file:
offset	generic/tkText.h	/^    int offset;			\/* Vertical offset of text's baseline from$/;"	m	struct:TkTextTag
offset	generic/tkTextDisp.c	/^    int offset;			\/* Offset in pixels of baseline, relative to$/;"	m	struct:StyleValues	file:
offset	generic/ttk/ttkTheme.h	/^    int offset;			\/* Offset of Tcl_Obj* field in element record *\/$/;"	m	struct:Ttk_ElementOptionSpec
offset	macosx/tkMacOSXButton.c	/^    int offset;			\/* 0 means this is a normal widget. 1 means$/;"	m	struct:__anon201	file:
offset	unix/tkUnixSelect.c	/^    int offset;			\/* The starting byte offset into the selection$/;"	m	struct:ConvertInfo	file:
offset	win/tkWinFont.c	/^    ULONG offset;		\/* Byte offset from beginning of CMAPTABLE to$/;"	m	struct:ENCODINGTABLE	file:
offsetOption	generic/tkCanvArc.c	/^static const Tk_CustomOption offsetOption = {$/;"	v	file:
offsetOption	generic/tkCanvLine.c	/^static const Tk_CustomOption offsetOption = {$/;"	v	file:
offsetOption	generic/tkCanvPoly.c	/^static const Tk_CustomOption offsetOption = {$/;"	v	file:
offsetOption	generic/tkCanvText.c	/^static const Tk_CustomOption offsetOption = {$/;"	v	file:
offsetOption	generic/tkCanvas.c	/^static const Tk_CustomOption offsetOption = {$/;"	v	file:
offsetOption	generic/tkRectOval.c	/^static const Tk_CustomOption offsetOption = {$/;"	v	file:
offsetString	generic/tkText.h	/^    char *offsetString;		\/* -offset option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
oldFormatList	generic/tkImgPhoto.c	/^    Tk_PhotoImageFormat *oldFormatList;$/;"	m	struct:ThreadSpecificData	file:
oldImageTypeList	generic/tkImage.c	/^    Tk_ImageType *oldImageTypeList;$/;"	m	struct:ThreadSpecificData	file:
oldProc	win/tkWinButton.c	/^    WNDPROC oldProc;		\/* Old window procedure. *\/$/;"	m	struct:WinButton	file:
oldProc	win/tkWinScrlbr.c	/^    WNDPROC oldProc;		\/* Old window procedure. *\/$/;"	m	struct:WinScrollbar	file:
oldServiceMode	win/tkWinMenu.c	/^    int oldServiceMode;		\/* Used while processing a menu; we need to$/;"	m	struct:ThreadSpecificData	file:
oldY	generic/tkTextDisp.c	/^    int oldY;			\/* Y-position at which line currently appears$/;"	m	struct:DLine	file:
onBits	generic/ttk/ttkTheme.h	/^    unsigned int onBits;	\/* Bits which must be set *\/$/;"	m	struct:__anon71
onTime	generic/ttk/ttkBlink.c	/^    int 		onTime;		\/* #milliseconds to blink cursor on *\/$/;"	m	struct:__anon99	file:
onValueObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *onValueObj;$/;"	m	struct:__anon19	file:
onValuePtr	generic/tkButton.h	/^    Tcl_Obj *onValuePtr;	\/* Value of -offvalue option: specifies value$/;"	m	struct:__anon178
onValuePtr	generic/tkMenu.h	/^    Tcl_Obj *onValuePtr;	\/* Value to store in variable when selected$/;"	m	struct:TkMenuEntry
onbits	generic/ttk/ttkTheme.h	/^    unsigned int onbits;	\/* bits to turn on *\/$/;"	m	struct:__anon70
opaqueTag	macosx/tkMacOSXWm.c	/^BOOL opaqueTag = FALSE;$/;"	v
opcode	generic/ttk/ttkTheme.h	/^    unsigned		opcode;$/;"	m	struct:__anon76
openObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*openObj;$/;"	m	struct:TreeItemRec	file:
openOptionStrings	macosx/tkMacOSXDialog.c	/^static const char *const openOptionStrings[] = {$/;"	v	file:
openOptions	macosx/tkMacOSXDialog.c	/^enum openOptions {$/;"	g	file:
optMapCache	generic/ttk/ttkTheme.c	/^    Tcl_HashTable optMapCache;	\/* Map: Tk_OptionTable * -> OptionMap *\/$/;"	m	struct:Ttk_ElementClass_	file:
optionLevel	generic/tkInt.h	/^    int optionLevel;		\/* -1 means no option information is currently$/;"	m	struct:TkWindow
optionName	generic/tk.h	/^    const char *optionName;	\/* Name used to specify option in Tcl$/;"	m	struct:Tk_OptionSpec
optionName	generic/ttk/ttkTheme.h	/^    const char *optionName;		\/* Command-line name of the widget option *\/$/;"	m	struct:Ttk_ElementOptionSpec
optionNames	generic/tkImgPhoto.c	/^static const char *const optionNames[] = {$/;"	v	file:
optionObjType	generic/tkConfig.c	/^static const Tcl_ObjType optionObjType = {$/;"	v	file:
optionPtr	generic/tk.h	/^    struct TkOption *optionPtr;	\/* Points to information that describes the$/;"	m	struct:Tk_SavedOption	typeref:struct:Tk_SavedOption::TkOption
optionRootPtr	generic/tkInt.h	/^    struct ElArray *optionRootPtr;$/;"	m	struct:TkMainInfo	typeref:struct:TkMainInfo::ElArray
optionSpecs	generic/tkButton.c	/^static const Tk_OptionSpec *const optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkFrame.c	/^static const Tk_OptionSpec *const optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkListbox.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkMenubutton.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkMessage.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkPanedWindow.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkPlace.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkScale.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkSquare.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkText.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkTextImage.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/tkTextWind.c	/^static const Tk_OptionSpec optionSpecs[] = {$/;"	v	file:
optionSpecs	generic/ttk/ttkTagSet.c	/^    Tk_OptionSpec	*optionSpecs;	\/* ... *\/$/;"	m	struct:TtkTagTable	file:
optionSpecs	generic/ttk/ttkWidget.h	/^    const Tk_OptionSpec	*optionSpecs;	\/* Option specifications *\/$/;"	m	struct:WidgetSpec_
optionTable	generic/tkBusy.h	/^    Tk_OptionTable optionTable;$/;"	m	struct:Busy
optionTable	generic/tkButton.h	/^    Tk_OptionTable optionTable;	\/* Table that defines configuration options$/;"	m	struct:__anon178
optionTable	generic/tkEntry.h	/^    Tk_OptionTable optionTable;	\/* Table that defines configuration options$/;"	m	struct:__anon183
optionTable	generic/tkFrame.c	/^    Tk_OptionTable optionTable;	\/* Table that defines configuration options$/;"	m	struct:__anon145	file:
optionTable	generic/tkListbox.c	/^    Tk_OptionTable optionTable;	\/* Table that defines configuration options$/;"	m	struct:__anon149	file:
optionTable	generic/tkMenu.h	/^    Tk_OptionTable optionTable;	\/* Option table for this menu entry. *\/$/;"	m	struct:TkMenuEntry
optionTable	generic/tkMenubutton.h	/^    Tk_OptionTable optionTable;	\/* Table that defines configuration options$/;"	m	struct:__anon137
optionTable	generic/tkMessage.c	/^    Tk_OptionTable optionTable;	\/* Table that defines options available for$/;"	m	struct:__anon153	file:
optionTable	generic/tkPanedWindow.c	/^    Tk_OptionTable optionTable;	\/* Token representing the configuration$/;"	m	struct:PanedWindow	file:
optionTable	generic/tkPlace.c	/^    Tk_OptionTable optionTable;	\/* Table that defines configuration options$/;"	m	struct:Slave	file:
optionTable	generic/tkScale.h	/^    Tk_OptionTable optionTable;	\/* Table that defines configuration options$/;"	m	struct:TkScale
optionTable	generic/tkSquare.c	/^    Tk_OptionTable optionTable;	\/* Token representing the configuration$/;"	m	struct:__anon142	file:
optionTable	generic/tkStyle.c	/^    Tk_OptionTable optionTable;	\/* Option table for the widget class using the$/;"	m	struct:StyledWidgetSpec	file:
optionTable	generic/tkTest.c	/^    Tk_OptionTable optionTable;	\/* The option table that go with this$/;"	m	struct:TrivialCommandHeader	file:
optionTable	generic/tkText.h	/^    Tk_OptionTable optionTable;	\/* Token representing the configuration$/;"	m	struct:TkText
optionTable	generic/tkText.h	/^    Tk_OptionTable optionTable;	\/* Token representing the configuration$/;"	m	struct:TkTextEmbImage
optionTable	generic/tkText.h	/^    Tk_OptionTable optionTable;	\/* Token representing the configuration$/;"	m	struct:TkTextEmbWindow
optionTable	generic/tkText.h	/^    Tk_OptionTable optionTable;	\/* Token representing the configuration$/;"	m	struct:TkTextTag
optionTable	generic/ttk/ttkLayout.c	/^    Tk_OptionTable	optionTable;$/;"	m	struct:Ttk_Layout_	file:
optionTable	generic/ttk/ttkTagSet.c	/^    Tk_OptionTable	optionTable;	\/* ... *\/$/;"	m	struct:TtkTagTable	file:
optionTable	generic/ttk/ttkWidget.h	/^    Tk_OptionTable optionTable;	\/* Option table *\/$/;"	m	struct:__anon48
options	generic/tk.h	/^    Tk_ElementOptionSpec *options;$/;"	m	struct:Tk_ElementSpec
options	generic/tkConfig.c	/^    Option options[1];		\/* Information about the individual options in$/;"	m	struct:OptionTable	file:
options	generic/tkImgPhoto.c	/^    int options;		\/* Individual bits indicate which options were$/;"	m	struct:SubcommandOptions	file:
options	generic/tkMenu.c	/^enum options {$/;"	g	file:
options	generic/ttk/ttkTheme.h	/^    Ttk_ElementOptionSpec *options;	\/* List of options, NULL-terminated *\/$/;"	m	struct:Ttk_ElementSpec
optionsPtr	generic/tkStyle.c	/^    const Tk_OptionSpec **optionsPtr;$/;"	m	struct:StyledWidgetSpec	file:
orUid	generic/tkCanvas.c	/^    Tk_Uid orUid;$/;"	m	struct:__anon154	file:
orderFrontStandardAboutPanel	macosx/tkMacOSXMenus.c	/^- (void) orderFrontStandardAboutPanel: (id) sender$/;"	f
orient	generic/tkPanedWindow.c	/^    enum orient orient;		\/* Orientation of the widget. *\/$/;"	m	struct:PanedWindow	typeref:enum:PanedWindow::orient	file:
orient	generic/tkPanedWindow.c	/^enum orient { ORIENT_HORIZONTAL, ORIENT_VERTICAL };$/;"	g	file:
orient	generic/tkScale.h	/^    enum orient orient;		\/* Orientation for window (vertical or$/;"	m	struct:TkScale	typeref:enum:TkScale::orient
orient	generic/tkScale.h	/^enum orient {$/;"	g
orient	generic/ttk/ttkPanedwindow.c	/^    int 	orient;$/;"	m	struct:__anon123	file:
orient	generic/ttk/ttkScale.c	/^    int orient;$/;"	m	struct:__anon107	file:
orient	generic/ttk/ttkScrollbar.c	/^    int 	orient;$/;"	m	struct:__anon51	file:
orient	generic/ttk/ttkSeparator.c	/^    int 	orient;$/;"	m	struct:__anon116	file:
orientObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*orientObj;$/;"	m	struct:__anon58	file:
orientObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *orientObj;		\/* Orientation of overall slider *\/$/;"	m	struct:__anon97	file:
orientObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *orientObj;$/;"	m	struct:__anon95	file:
orientObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *orientObj;$/;"	m	struct:__anon96	file:
orientObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*orientObj;$/;"	m	struct:__anon38	file:
orientObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *orientObj;	     \/* orientation of overall slider *\/$/;"	m	struct:__anon45	file:
orientObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *orientObj; 	\/* widget orientation *\/$/;"	m	struct:__anon46	file:
orientObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *orientObj;$/;"	m	struct:__anon44	file:
orientObj	generic/ttk/ttkPanedwindow.c	/^    Tcl_Obj	*orientObj;$/;"	m	struct:__anon123	file:
orientObj	generic/ttk/ttkProgress.c	/^    Tcl_Obj 	*orientObj;$/;"	m	struct:__anon101	file:
orientObj	generic/ttk/ttkScale.c	/^    Tcl_Obj *orientObj;       \/* widget orientation *\/$/;"	m	struct:__anon107	file:
orientObj	generic/ttk/ttkScrollbar.c	/^    Tcl_Obj	*orientObj;$/;"	m	struct:__anon51	file:
orientObj	generic/ttk/ttkSeparator.c	/^    Tcl_Obj	*orientObj;$/;"	m	struct:__anon116	file:
orientObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *orientObj;		\/* horizontal \/ vertical *\/$/;"	m	struct:__anon212	file:
orientObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *orientObj;		\/* horizontal \/ vertical *\/$/;"	m	struct:__anon213	file:
orientObj	win/ttkWinTheme.c	/^    Tcl_Obj *orientObj;  \/* orientation of the slider widget *\/$/;"	m	struct:__anon251	file:
orientObj	win/ttkWinTheme.c	/^    Tcl_Obj *orientObj;$/;"	m	struct:__anon250	file:
orientOption	generic/tkScrollbar.c	/^static const Tk_CustomOption orientOption = {$/;"	v	file:
orientStrings	generic/tkPanedWindow.c	/^static const char *const orientStrings[] = {$/;"	v	file:
orientStrings	generic/tkScale.c	/^static const char *const orientStrings[] = {$/;"	v	file:
otherTable	generic/tkInt.h	/^    Tcl_HashTable *otherTable;	\/* Second table (other than idTable) used to$/;"	m	struct:TkCursor
out	win/buildall.vc.bat	/^:out$/;"	l
outCount	generic/tkImgGIF.c	/^    unsigned int outCount;	\/* # of codes output (for debugging) *\/$/;"	m	struct:__anon130	file:
outline	generic/tkCanvArc.c	/^    Tk_Outline outline;		\/* Outline structure *\/$/;"	m	struct:ArcItem	file:
outline	generic/tkCanvLine.c	/^    Tk_Outline outline;		\/* Outline structure *\/$/;"	m	struct:LineItem	file:
outline	generic/tkCanvPoly.c	/^    Tk_Outline outline;		\/* Outline structure *\/$/;"	m	struct:PolygonItem	file:
outline	generic/tkRectOval.c	/^    Tk_Outline outline;		\/* Outline structure *\/$/;"	m	struct:RectOvalItem	file:
outlinePtr	generic/tkCanvArc.c	/^    double *outlinePtr;		\/* Points to (x,y) coordinates for points that$/;"	m	struct:ArcItem	file:
overRelief	generic/tkButton.h	/^    int overRelief;		\/* Value of -overrelief option: specifies a$/;"	m	struct:__anon178
overlap	generic/tkText.c	/^    int overlap;		\/* If set, results from multiple searches$/;"	m	struct:SearchSpec	file:
override_redirect	xlib/X11/Xlib.h	/^	Bool override_redirect;	\/* boolean, is override set... *\/$/;"	m	struct:__anon300
override_redirect	xlib/X11/Xlib.h	/^	Bool override_redirect;	\/* creation should be overridden *\/$/;"	m	struct:__anon297
override_redirect	xlib/X11/Xlib.h	/^	Bool override_redirect;$/;"	m	struct:__anon302
override_redirect	xlib/X11/Xlib.h	/^	Bool override_redirect;$/;"	m	struct:__anon303
override_redirect	xlib/X11/Xlib.h	/^    Bool override_redirect;	\/* boolean value for override-redirect *\/$/;"	m	struct:__anon273
override_redirect	xlib/X11/Xlib.h	/^    Bool override_redirect;	\/* boolean value for override-redirect *\/$/;"	m	struct:__anon274
overstrike	generic/tkFont.h	/^    int overstrike;		\/* Non-zero for overstrike font. *\/$/;"	m	struct:TkFontAttributes
overstrike	generic/tkText.h	/^    int overstrike;		\/* Non-zero means draw horizontal line through$/;"	m	struct:TkTextTag
overstrike	generic/tkTextDisp.c	/^    int overstrike;		\/* Non-zero means draw overstrike through$/;"	m	struct:StyleValues	file:
overstrikeMap	generic/tkFont.c	/^static const TkStateMap overstrikeMap[] = {$/;"	v	file:
overstrikeString	generic/tkText.h	/^    char *overstrikeString;	\/* -overstrike option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
owner	generic/tkSelect.h	/^    Tk_Window owner;		\/* Current owner of this selection. *\/$/;"	m	struct:TkSelectionInfo
owner	generic/ttk/ttkBlink.c	/^    WidgetCore		*owner; 	\/* Widget that currently has cursor *\/$/;"	m	struct:__anon99	file:
owner	xlib/X11/Xlib.h	/^	Window owner;$/;"	m	struct:__anon311
owners	generic/tkBind.c	/^    Tcl_HashEntry *owners[1];	\/* Array of pointers to entries in nameTable.$/;"	m	struct:VirtualOwners	file:
packBottom	generic/ttk/ttkLayout.c	/^static Ttk_Box packBottom(Ttk_Box *cavity, int height)$/;"	f	file:
packInit	generic/tkInt.h	/^    int packInit;		\/* 0 means table below needs initializing. *\/$/;"	m	struct:TkDisplay
packLeft	generic/ttk/ttkLayout.c	/^static Ttk_Box packLeft(Ttk_Box *cavity, int width)$/;"	f	file:
packRight	generic/ttk/ttkLayout.c	/^static Ttk_Box packRight(Ttk_Box *cavity, int width)$/;"	f	file:
packSideStrings	generic/ttk/ttkLayout.c	/^static const char *packSideStrings[] =$/;"	v	file:
packTop	generic/ttk/ttkLayout.c	/^static Ttk_Box packTop(Ttk_Box *cavity, int height)$/;"	f	file:
packerHashTable	generic/tkInt.h	/^    Tcl_HashTable packerHashTable;$/;"	m	struct:TkDisplay
packerType	generic/tkPack.c	/^static const Tk_GeomMgr packerType = {$/;"	v	file:
packetAccumulator	generic/tkImgGIF.c	/^    unsigned char packetAccumulator[256];$/;"	m	struct:__anon130	file:
pad	generic/tkGrid.c	/^    int pad;			\/* Extra padding, in pixels, required for this$/;"	m	struct:SlotInfo	file:
pad	generic/tkGrid.c	/^    int pad;			\/* Padding needed for this slot *\/$/;"	m	struct:GridLayout	file:
pad	xlib/X11/Xlib.h	/^	char pad;$/;"	m	struct:__anon277
pad	xlib/X11/Xlib.h	/^	long pad[24];$/;"	m	union:_XEvent
padLeft	generic/tkGrid.c	/^    int padLeft, padTop;	\/* The part of padX or padY to use on the left$/;"	m	struct:Gridder	file:
padLeft	generic/tkPack.c	/^    int padLeft, padTop;	\/* The part of padX or padY to use on the left$/;"	m	struct:Packer	file:
padTop	generic/tkGrid.c	/^    int padLeft, padTop;	\/* The part of padX or padY to use on the left$/;"	m	struct:Gridder	file:
padTop	generic/tkPack.c	/^    int padLeft, padTop;	\/* The part of padX or padY to use on the left$/;"	m	struct:Packer	file:
padX	generic/tkButton.h	/^    int padX;			\/* Integer value corresponding to padXPtr. *\/$/;"	m	struct:__anon178
padX	generic/tkFrame.c	/^    int padX;			\/* Integer value corresponding to padXPtr. *\/$/;"	m	struct:__anon145	file:
padX	generic/tkGrid.c	/^    int padX, padY;		\/* Total additional pixels to leave around the$/;"	m	struct:Gridder	file:
padX	generic/tkMenubutton.h	/^    int padX, padY;		\/* Extra space around text or bitmap (pixels$/;"	m	struct:__anon137
padX	generic/tkMessage.c	/^    int padX, padY;		\/* User-requested extra space around text. *\/$/;"	m	struct:__anon153	file:
padX	generic/tkPack.c	/^    int padX, padY;		\/* Total additional pixels to leave around the$/;"	m	struct:Packer	file:
padX	generic/tkText.h	/^    int padX, padY;		\/* Padding between text and window border. *\/$/;"	m	struct:TkText
padX	generic/tkText.h	/^    int padX, padY;		\/* Padding to leave around each side of image,$/;"	m	struct:TkTextEmbImage
padX	generic/tkText.h	/^    int padX, padY;		\/* Padding to leave around each side of$/;"	m	struct:TkTextEmbWindow
padXPtr	generic/tkButton.h	/^    Tcl_Obj *padXPtr;		\/* Value of -padx option: specifies how many$/;"	m	struct:__anon178
padXPtr	generic/tkFrame.c	/^    Tcl_Obj *padXPtr;		\/* Value of -padx option: specifies how many$/;"	m	struct:__anon145	file:
padXPtr	generic/tkMessage.c	/^    Tcl_Obj *padXPtr, *padYPtr;	\/* Tcl_Obj rep's of padX, padY values. *\/$/;"	m	struct:__anon153	file:
padY	generic/tkButton.h	/^    int padY;			\/* Integer value corresponding to padYPtr. *\/$/;"	m	struct:__anon178
padY	generic/tkFrame.c	/^    int padY;			\/* Integer value corresponding to padYPtr. *\/$/;"	m	struct:__anon145	file:
padY	generic/tkGrid.c	/^    int padX, padY;		\/* Total additional pixels to leave around the$/;"	m	struct:Gridder	file:
padY	generic/tkMenubutton.h	/^    int padX, padY;		\/* Extra space around text or bitmap (pixels$/;"	m	struct:__anon137
padY	generic/tkMessage.c	/^    int padX, padY;		\/* User-requested extra space around text. *\/$/;"	m	struct:__anon153	file:
padY	generic/tkPack.c	/^    int padX, padY;		\/* Total additional pixels to leave around the$/;"	m	struct:Packer	file:
padY	generic/tkText.h	/^    int padX, padY;		\/* Padding between text and window border. *\/$/;"	m	struct:TkText
padY	generic/tkText.h	/^    int padX, padY;		\/* Padding to leave around each side of image,$/;"	m	struct:TkTextEmbImage
padY	generic/tkText.h	/^    int padX, padY;		\/* Padding to leave around each side of$/;"	m	struct:TkTextEmbWindow
padYPtr	generic/tkButton.h	/^    Tcl_Obj *padYPtr;		\/* Value of -padx option: specifies how many$/;"	m	struct:__anon178
padYPtr	generic/tkFrame.c	/^    Tcl_Obj *padYPtr;		\/* Value of -padx option: specifies how many$/;"	m	struct:__anon145	file:
padYPtr	generic/tkMessage.c	/^    Tcl_Obj *padXPtr, *padYPtr;	\/* Tcl_Obj rep's of padX, padY values. *\/$/;"	m	struct:__anon153	file:
padding	generic/ttk/ttkFrame.c	/^    Ttk_Padding 	padding;	\/* internal padding *\/$/;"	m	struct:__anon122	file:
padding	generic/ttk/ttkImage.c	/^    Ttk_Padding padding;	\/* Internal padding *\/$/;"	m	struct:__anon60	file:
padding	generic/ttk/ttkNotebook.c	/^    Ttk_Padding	padding;$/;"	m	struct:__anon65	file:
padding	generic/ttk/ttkNotebook.c	/^    Ttk_Padding 	padding;	\/* External padding *\/$/;"	m	struct:__anon68	file:
padding	win/ttkWinXPTheme.c	/^    Ttk_Padding	padding;	\/* See NOTE-GetThemeMargins *\/$/;"	m	struct:__anon240	file:
paddingObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *paddingObj;$/;"	m	struct:__anon13	file:
paddingObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *paddingObj;$/;"	m	struct:__anon56	file:
paddingObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*paddingObj;$/;"	m	struct:__anon36	file:
paddingObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj	*paddingObj;$/;"	m	struct:__anon118	file:
paddingObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj	*paddingObj;		\/* Padding inside pane *\/$/;"	m	struct:__anon65	file:
paddingObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj *paddingObj;	\/* Padding around notebook *\/$/;"	m	struct:__anon66	file:
paddingObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *paddingObj;$/;"	m	struct:__anon111	file:
paddingObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *paddingObj;	\/* internal padding *\/$/;"	m	struct:__anon83	file:
padx	generic/tkPanedWindow.c	/^    int padx;			\/* Additional padding requested for slave, in$/;"	m	struct:Slave	file:
pady	generic/tkPanedWindow.c	/^    int pady;			\/* Additional padding requested for slave, in$/;"	m	struct:Slave	file:
pageAnchor	generic/tkCanvPs.c	/^    Tk_Anchor pageAnchor;	\/* How to anchor bbox on Postscript page. *\/$/;"	m	struct:TkPostscriptInfo	file:
pageHeightString	generic/tkCanvPs.c	/^    char *pageHeightString;	\/* Printed height of output. *\/$/;"	m	struct:TkPostscriptInfo	file:
pageWidthString	generic/tkCanvPs.c	/^    char *pageWidthString;	\/* Printed width of output. *\/$/;"	m	struct:TkPostscriptInfo	file:
pageX	generic/tkCanvPs.c	/^    double pageX, pageY;	\/* Postscript coordinates (in points)$/;"	m	struct:TkPostscriptInfo	file:
pageXString	generic/tkCanvPs.c	/^    char *pageXString;		\/* String value of "-pagex" option or NULL. *\/$/;"	m	struct:TkPostscriptInfo	file:
pageY	generic/tkCanvPs.c	/^    double pageX, pageY;	\/* Postscript coordinates (in points)$/;"	m	struct:TkPostscriptInfo	file:
pageYString	generic/tkCanvPs.c	/^    char *pageYString;		\/* String value of "-pagey" option or NULL. *\/$/;"	m	struct:TkPostscriptInfo	file:
palette	generic/tkImgPNG.c	/^    } palette[256];		\/* Palette RGB\/Transparency table. *\/$/;"	m	struct:__anon179	typeref:struct:__anon179::__anon180	file:
palette	generic/tkImgPhoto.h	/^    Tk_Uid palette;		\/* Palette for these particular instances. *\/$/;"	m	struct:PhotoInstance
palette	generic/tkImgPhoto.h	/^    Tk_Uid palette;		\/* Specifies how many shades of each primary$/;"	m	struct:ColorTableId
palette	generic/tkImgPhoto.h	/^    Tk_Uid palette;		\/* User-specified default palette for$/;"	m	struct:PhotoMaster
palette	win/tkWinInt.h	/^    HPALETTE palette;		\/* Palette handle used when drawing. *\/$/;"	m	struct:__anon229
palette	win/tkWinInt.h	/^    HPALETTE palette;$/;"	m	struct:TkWinDCState
paletteLen	generic/tkImgPNG.c	/^    int paletteLen;		\/* Number of PLTE entries (1..256). *\/$/;"	m	struct:__anon179	file:
paneHeight	generic/tkPanedWindow.c	/^    int paneWidth, paneHeight;	\/* Pane dimensions (may be different from$/;"	m	struct:Slave	file:
paneOptionTable	generic/ttk/ttkNotebook.c	/^    Tk_OptionTable paneOptionTable;	\/* Tab+pane options *\/$/;"	m	struct:__anon66	file:
paneOptionTable	generic/ttk/ttkPanedwindow.c	/^    Tk_OptionTable paneOptionTable;$/;"	m	struct:__anon123	file:
paneWidth	generic/tkPanedWindow.c	/^    int paneWidth, paneHeight;	\/* Pane dimensions (may be different from$/;"	m	struct:Slave	file:
paned	generic/ttk/ttkPanedwindow.c	/^    PanedPart	paned;$/;"	m	struct:__anon124	file:
panedWindowMgrType	generic/tkPanedWindow.c	/^static const Tk_GeomMgr panedWindowMgrType = {$/;"	v	file:
parcel	generic/ttk/ttkLayout.c	/^    Ttk_Box 		parcel;		\/* allocated parcel *\/$/;"	m	struct:Ttk_LayoutNode_	file:
parcel	generic/ttk/ttkNotebook.c	/^    Ttk_Box	parcel;			\/* Tab position *\/$/;"	m	struct:__anon65	file:
parenUid	generic/tkCanvas.c	/^    Tk_Uid parenUid;$/;"	m	struct:__anon154	file:
parent	generic/tkText.h	/^    struct TkTextSegment *parent;$/;"	m	struct:TkTextEmbWindowClient	typeref:struct:TkTextEmbWindowClient::TkTextSegment
parent	generic/ttk/ttkTreeview.c	/^    TreeItem	*parent;	\/* Parent item *\/$/;"	m	struct:TreeItemRec	file:
parent	macosx/tkMacOSXDialog.c	/^    Tk_Window parent;$/;"	m	struct:FontchooserData	file:
parent	macosx/tkMacOSXEmbed.c	/^    Window parent;		\/* The Mac Drawable for the parent of the pair$/;"	m	struct:Container	file:
parent	unix/tkUnixEmbed.c	/^    Window parent;		\/* X's window id for the parent of the pair$/;"	m	struct:Container	file:
parent	win/tkWinDialog.c	/^    Tk_Window parent;$/;"	m	struct:HookData	file:
parent	xlib/X11/Xlib.h	/^	Window parent;		\/* parent of the window *\/$/;"	m	struct:__anon297
parent	xlib/X11/Xlib.h	/^	Window parent;$/;"	m	struct:__anon301
parent	xlib/X11/Xlib.h	/^	Window parent;$/;"	m	struct:__anon302
parent	xlib/X11/Xlib.h	/^	Window parent;$/;"	m	struct:__anon306
parent	xlib/X11/Xlib.h	/^	Window parent;$/;"	m	struct:__anon308
parentEntryPtr	generic/tkMenu.h	/^    TkMenuEntry *parentEntryPtr;\/* First in the list of all cascade menu$/;"	m	struct:TkMenuReferences
parentHWnd	win/tkWinEmbed.c	/^    HWND parentHWnd;		\/* Windows HWND to the parent window *\/$/;"	m	struct:Container	file:
parentHeight	macosx/tkMacOSXWm.h	/^    int parentWidth, parentHeight;$/;"	m	struct:TkWmInfo
parentHeight	unix/tkUnixWm.c	/^    int parentWidth, parentHeight;$/;"	m	struct:TkWmInfo	file:
parentObj	win/tkWinDialog.c	/^    Tcl_Obj *parentObj;$/;"	m	struct:HookData	file:
parentPtr	generic/tk.h	/^    Tk_Window parentPtr;	\/* parentPtr *\/$/;"	m	struct:Tk_FakeWin
parentPtr	generic/tkInt.h	/^    struct TkWindow *parentPtr;	\/* Pointer to parent window (logical parent,$/;"	m	struct:TkWindow	typeref:struct:TkWindow::TkWindow
parentPtr	generic/tkStyle.c	/^    struct StyleEngine *parentPtr;$/;"	m	struct:StyleEngine	typeref:struct:StyleEngine::StyleEngine	file:
parentPtr	generic/tkText.h	/^    struct Node *parentPtr;	\/* Pointer to parent node containing line. *\/$/;"	m	struct:TkTextLine	typeref:struct:TkTextLine::Node
parentPtr	generic/tkTextBTree.c	/^    struct Node *parentPtr;	\/* Pointer to parent node, or NULL if this is$/;"	m	struct:Node	typeref:struct:Node::Node	file:
parentPtr	generic/ttk/ttkTheme.c	/^    Ttk_Theme parentPtr;             	\/* Parent theme. *\/$/;"	m	struct:Ttk_Theme_	file:
parentPtr	macosx/tkMacOSXEmbed.c	/^    TkWindow *parentPtr;	\/* Tk's information about the container, or$/;"	m	struct:Container	file:
parentPtr	unix/tkUnixEmbed.c	/^    TkWindow *parentPtr;	\/* Tk's information about the container, or$/;"	m	struct:Container	file:
parentPtr	win/tkWinEmbed.c	/^    TkWindow *parentPtr;	\/* Tk's information about the container or$/;"	m	struct:Container	file:
parentRoot	unix/tkUnixEmbed.c	/^    Window parentRoot;		\/* Id for the root window of parent's$/;"	m	struct:Container	file:
parentStyle	generic/ttk/ttkTheme.c	/^    Ttk_Style		parentStyle;	\/* Previous style in chain *\/$/;"	m	struct:Ttk_Style_	file:
parentTopLevelPtr	generic/tkMenu.h	/^    Tk_Window parentTopLevelPtr;\/* If this menu is a menubar, this is the$/;"	m	struct:TkMenu
parentWidth	macosx/tkMacOSXWm.h	/^    int parentWidth, parentHeight;$/;"	m	struct:TkWmInfo
parentWidth	unix/tkUnixWm.c	/^    int parentWidth, parentHeight;$/;"	m	struct:TkWmInfo	file:
parseHex64bit	xlib/xcolors.c	/^parseHex64bit($/;"	f	file:
parseProc	generic/tk.h	/^    Tk_OptionParseProc *parseProc;$/;"	m	struct:Tk_CustomOption
partId	win/ttkWinTheme.c	/^    int partId;			\/* part id for DrawFrameControl  *\/$/;"	m	struct:__anon244	file:
partId	win/ttkWinXPTheme.c	/^    int 	partId;		\/* BP_PUSHBUTTON, BP_CHECKBUTTON, etc. *\/$/;"	m	struct:__anon240	file:
partialLine	generic/tkListbox.c	/^    int partialLine;		\/* 0 means that the window holds exactly$/;"	m	struct:__anon149	file:
patSeqs	generic/tkBind.c	/^    PatSeq *patSeqs[1];		\/* Array of pointers to physical event$/;"	m	struct:__anon170	file:
pathName	generic/tk.h	/^    char *pathName;$/;"	m	struct:Tk_FakeWin
pathName	generic/tkInt.h	/^    char *pathName;		\/* Path name of window (concatenation of all$/;"	m	struct:TkWindow
pats	generic/tkBind.c	/^    TkPattern pats[1];		\/* Array of "numPats" patterns. Only one$/;"	m	struct:PatSeq	file:
pattern	generic/tk.h	/^    } pattern;$/;"	m	struct:Tk_Dash	typeref:union:Tk_Dash::__anon12
pattern	generic/tkFileFilter.h	/^    char *pattern;		\/* String value of the pattern, such as$/;"	m	struct:GlobPattern
pattern	unix/tkUnixRFont.c	/^    FcPattern *pattern;$/;"	m	struct:__anon221	file:
patternTable	generic/tkBind.c	/^    Tcl_HashTable patternTable;	\/* Used to map from a physical event to a list$/;"	m	struct:__anon167	file:
patternTable	generic/tkBind.c	/^    Tcl_HashTable patternTable;	\/* Used to map from an event to a list of$/;"	m	struct:Tk_BindingTable_	file:
patterns	generic/tkFileFilter.h	/^    GlobPattern *patterns;	\/* Head of glob pattern type list *\/$/;"	m	struct:FileFilterClause
patternsTail	generic/tkFileFilter.h	/^    GlobPattern *patternsTail;	\/* Tail of glob pattern type list *\/$/;"	m	struct:FileFilterClause
peers	generic/tkText.h	/^    struct TkText *peers;$/;"	m	struct:TkSharedText	typeref:struct:TkSharedText::TkText
pendingCommands	unix/tkUnixSend.c	/^    PendingCommand *pendingCommands;$/;"	m	struct:ThreadSpecificData	file:
pendingIncrs	unix/tkUnixSelect.c	/^    IncrInfo *pendingIncrs;	\/* List of all incr structures currently$/;"	m	struct:ThreadSpecificData	file:
pendingPtr	generic/tkEvent.c	/^    InProgress *pendingPtr;	\/* Topmost search in progress, or NULL if$/;"	m	struct:ThreadSpecificData	file:
pendingPtr	generic/tkSelect.c	/^    TkSelInProgress *pendingPtr;$/;"	m	struct:ThreadSpecificData	file:
pendingRetrievals	unix/tkUnixSelect.c	/^static TkSelRetrievalInfo *pendingRetrievals = NULL;$/;"	v	file:
perVisualIntensityMaps	xlib/X11/Xlib.h	/^	   XPointer perVisualIntensityMaps;$/;"	m	struct:_XDisplay::__anon286
per_char	xlib/X11/Xlib.h	/^    XCharStruct	*per_char;	\/* first_char to last_char information *\/$/;"	m	struct:__anon321
period	generic/ttk/ttkProgress.c	/^    int 	period;			\/* Animation period *\/$/;"	m	struct:__anon101	file:
phase	generic/tkImgPNG.c	/^    unsigned char phase;	\/* Interlacing phase (0..6). *\/$/;"	m	struct:__anon179	file:
phaseObj	generic/ttk/ttkProgress.c	/^    Tcl_Obj 	*phaseObj;$/;"	m	struct:__anon101	file:
phaseObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *phaseObj;		\/* animation phase *\/$/;"	m	struct:__anon213	file:
phaseSize	generic/tkImgPNG.c	/^    int phaseSize;		\/* Number of bytes\/line in current phase. *\/$/;"	m	struct:__anon179	file:
phoneSkipLeft	library/demos/entry3.tcl	/^proc phoneSkipLeft {W} {$/;"	p
phoneSkipRight	library/demos/entry3.tcl	/^proc phoneSkipRight {W {add 0}} {$/;"	p
pickEvent	generic/tkCanvas.h	/^    XEvent pickEvent;		\/* The event upon which the current choice of$/;"	m	struct:TkCanvas
pickEvent	generic/tkText.h	/^    XEvent pickEvent;		\/* The event from which the current character$/;"	m	struct:TkText
pipe	win/nmakehlp.c	/^    HANDLE pipe;$/;"	m	struct:__anon256	file:
pipeinfo	win/nmakehlp.c	/^} pipeinfo;$/;"	t	typeref:struct:__anon256	file:
pitch	generic/tk.h	/^    int pitch;			\/* Address difference between corresponding$/;"	m	struct:Tk_PhotoImageBlock
pix	macosx/tkMacOSXCursor.c	28;"	d	file:
pix32	generic/tkImgPhoto.h	/^    unsigned char *pix32;	\/* Local storage for 32-bit image. *\/$/;"	m	struct:PhotoMaster
pixel	generic/tkImgPhoto.h	/^typedef unsigned int pixel;$/;"	t
pixel	xlib/X11/Xlib.h	/^	unsigned long pixel;$/;"	m	struct:__anon277
pixelMap	generic/tkImgPhoto.h	/^    unsigned long *pixelMap;	\/* Actual pixel values allocated. *\/$/;"	m	struct:ColorTable
pixelObjType	generic/tkObj.c	/^static const Tcl_ObjType pixelObjType = {$/;"	v	file:
pixelOffset	generic/tkImgGIF.c	/^    unsigned char *pixelOffset;$/;"	m	struct:__anon129	file:
pixelOption	generic/tkCanvArc.c	/^static const Tk_CustomOption pixelOption = {$/;"	v	file:
pixelOption	generic/tkCanvLine.c	/^static const Tk_CustomOption pixelOption = {$/;"	v	file:
pixelOption	generic/tkCanvPoly.c	/^static const Tk_CustomOption pixelOption = {$/;"	v	file:
pixelOption	generic/tkRectOval.c	/^static const Tk_CustomOption pixelOption = {$/;"	v	file:
pixelPitch	generic/tkImgGIF.c	/^    int pixelPitch;$/;"	m	struct:__anon129	file:
pixelPtr	generic/tk.h	/^    unsigned char *pixelPtr;	\/* Pointer to the first pixel. *\/$/;"	m	struct:Tk_PhotoImageBlock
pixelReference	generic/tkText.h	/^    int pixelReference;		\/* Counter into the current tree reference$/;"	m	struct:TkText
pixelReferences	generic/tkTextBTree.c	/^    int pixelReferences;	\/* Number of clients of this B-tree which care$/;"	m	struct:BTree	file:
pixelSize	generic/tk.h	/^    int pixelSize;		\/* Address difference between successive$/;"	m	struct:Tk_PhotoImageBlock
pixelSize	generic/tkImgGIF.c	/^    int pixelSize;$/;"	m	struct:__anon129	file:
pixelSize	unix/tkUnixFont.c	/^    int pixelSize;		\/* Original pixel size used when font was$/;"	m	struct:UnixFont	file:
pixelSize	win/tkWinFont.c	/^    int pixelSize;		\/* Original pixel size used when font was$/;"	m	struct:WinFont	file:
pixels	generic/tkImgPhoto.h	/^    Pixmap pixels;		\/* X pixmap containing dithered image. *\/$/;"	m	struct:PhotoInstance
pixels	generic/tkText.h	/^    int *pixels;		\/* Array containing two integers for each$/;"	m	struct:TkTextLine
pixels	generic/ttk/ttkDefaultTheme.c	/^    const char *const *pixels;	\/* array[height] of char[width*nimage] *\/$/;"	m	struct:__anon90	file:
pixelsPerMM	generic/tkCanvas.h	/^    double pixelsPerMM;		\/* Scale factor between MM and pixels; used$/;"	m	struct:TkCanvas
pixmap	generic/tkInt.h	/^	Pixmap pixmap;$/;"	m	union:TkpClipMask::__anon134
pixmap	win/tkWinButton.c	/^    Pixmap pixmap;		\/* Bitmap for rendering the button. *\/$/;"	m	struct:WinButton	file:
pixmapGC	generic/tkCanvas.h	/^    GC pixmapGC;		\/* Used to copy bits from a pixmap to the$/;"	m	struct:TkCanvas
pixmap_format	xlib/X11/Xlib.h	/^		ScreenFormat *pixmap_format;$/;"	m	union:__anon325
pixmap_format	xlib/X11/Xlib.h	/^	ScreenFormat *pixmap_format;	\/* pixmap format list *\/$/;"	m	struct:_XDisplay
place	xlib/X11/Xlib.h	/^	int place;		\/* PlaceOnTop, PlaceOnBottom *\/$/;"	m	struct:__anon307
place	xlib/X11/Xlib.h	/^	int place;		\/* PlaceOnTop, PlaceOnBottom *\/$/;"	m	struct:__anon308
placeInit	generic/tkInt.h	/^    int placeInit;		\/* 0 means tables below need initializing. *\/$/;"	m	struct:TkDisplay
placerType	generic/tkPlace.c	/^static const Tk_GeomMgr placerType = {$/;"	v	file:
plane_mask	xlib/X11/Xlib.h	/^	unsigned long plane_mask;\/* plane mask *\/$/;"	m	struct:__anon268
platform	win/tkWinFont.c	/^    USHORT platform;		\/* Platform for which data is targeted. 3$/;"	m	struct:ENCODINGTABLE	file:
platformData	generic/tkMenu.h	/^    TkMenuPlatformData platformData;$/;"	m	struct:TkMenu
platformEntryData	generic/tkMenu.h	/^    TkMenuPlatformEntryData platformEntryData;$/;"	m	struct:TkMenuEntry
plotDown	library/demos/plot.tcl	/^proc plotDown {w x y} {$/;"	p
plotMove	library/demos/plot.tcl	/^proc plotMove {w x y} {$/;"	p
pngSignature	generic/tkImgPNG.c	/^static const unsigned char pngSignature[] = {$/;"	v	file:
pointProc	generic/tk.h	/^    Tk_ItemPointProc *pointProc;\/* Computes distance from item to a given$/;"	m	struct:Tk_ItemType
pointsAllocated	generic/tkCanvPoly.c	/^    int pointsAllocated;	\/* Number of points for which space is$/;"	m	struct:PolygonItem	file:
poolProtected	macosx/tkMacOSXInit.c	/^@synthesize poolProtected = _poolProtected;$/;"	v
poolProtected	macosx/tkMacOSXPrivate.h	/^@property BOOL poolProtected;$/;"	v
populateRoots	library/demos/tree.tcl	/^proc populateRoots {tree} {$/;"	p
populateTree	library/demos/tree.tcl	/^proc populateTree {tree node} {$/;"	p
portBounds	macosx/tkMacOSXPrivate.h	/^    CGRect portBounds;$/;"	m	struct:TkMacOSXDrawingContext
position	xlib/X11/Xlib.h	/^    int position;		 \/* Caret offset within pre-edit string *\/$/;"	m	struct:_XIMPreeditCaretCallbackStruct
postCommandGeneration	generic/tkInt.h	/^    int postCommandGeneration;$/;"	m	struct:TkDisplay
postCommandGeneration	generic/tkMacWinMenu.c	/^    int postCommandGeneration;$/;"	m	struct:ThreadSpecificData	file:
postCommandGeneration	generic/tkMenu.h	/^    int postCommandGeneration;	\/* Need to do pre-invocation post command$/;"	m	struct:TkMenu
postCommandObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*postCommandObj;$/;"	m	struct:__anon28	file:
postCommandPtr	generic/tkMenu.h	/^    Tcl_Obj *postCommandPtr;	\/* Used to detect cycles in cascade hierarchy$/;"	m	struct:TkMenu
postConfigureProc	generic/ttk/ttkWidget.h	/^    int 	(*postConfigureProc)(Tcl_Interp *, void *recordPtr, int flags);$/;"	m	struct:WidgetSpec_
postedCascade	generic/tkMenu.h	/^    TkMenuEntry *postedCascade;	\/* Points to menu entry for cascaded submenu$/;"	m	struct:TkMenu
postscriptProc	generic/tk.h	/^    Tk_ImagePostscriptProc *postscriptProc;$/;"	m	struct:Tk_ImageType
postscriptProc	generic/tk.h	/^    Tk_ItemPostscriptProc *postscriptProc;$/;"	m	struct:Tk_ItemType
postscriptProc	generic/tk.h	/^    void (*postscriptProc) (Tcl_Interp *interp, Tk_Canvas canvas,$/;"	m	struct:Tk_SmoothMethod
predefBitmapTable	generic/tkBitmap.c	/^    Tcl_HashTable predefBitmapTable;$/;"	m	struct:ThreadSpecificData	file:
prefWidth	generic/tkEntry.h	/^    int prefWidth;		\/* Desired width of window, measured in$/;"	m	struct:__anon183
preferences	macosx/tkMacOSXHLEvents.c	/^- (void) preferences: (id) sender$/;"	f
prefix	unix/Makefile	/^prefix			= \/home\/sanjit\/Documents\/workArea\/LINUXCNC\/compiler\/odroid\/firmware\/buildroot-2016.11.2\/output\/host\/usr\/arm-buildroot-linux-gnueabihf\/sysroot\/usr\/lib$/;"	m
prepass	generic/tkCanvPs.c	/^    int prepass;		\/* Non-zero means that we're currently in the$/;"	m	struct:TkPostscriptInfo	file:
pressedElement	generic/ttk/ttkTrack.c	/^    Ttk_Element 	pressedElement; \/* currently pressed element *\/$/;"	m	struct:__anon50	file:
prev	generic/ttk/ttkTreeview.c	/^    TreeItem	*prev;		\/* Previous sibling *\/$/;"	m	struct:TreeItemRec	file:
prevHeight	generic/tkText.h	/^    int prevWidth, prevHeight;	\/* Last known dimensions of window; used to$/;"	m	struct:TkText
prevPtr	generic/tk.h	/^    struct Tk_Item *prevPtr;	\/* Previous in display list of all items in$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_Item
prevWidth	generic/tkText.h	/^    int prevWidth, prevHeight;	\/* Last known dimensions of window; used to$/;"	m	struct:TkText
printProc	generic/tk.h	/^    Tk_OptionPrintProc *printProc;$/;"	m	struct:Tk_CustomOption
priority	generic/tkOption.c	/^    int priority;		\/* Used to select among matching options.$/;"	m	struct:Element	file:
priority	generic/tkText.h	/^    int priority;		\/* Priority of this tag within widget. 0 means$/;"	m	struct:TkTextTag
priority	generic/ttk/ttkTagSet.c	/^    int 	priority;		\/* 1=>highest *\/$/;"	m	struct:TtkTag	file:
privatePtr	generic/tkInt.h	/^    struct TkWindowPrivate *privatePtr;$/;"	m	struct:TkWindow	typeref:struct:TkWindow::TkWindowPrivate
private_data	xlib/X11/Xlib.h	/^	XPointer private_data;	\/* data private to this extension. *\/$/;"	m	struct:_XExtData
proc	generic/tkEvent.c	/^    Tcl_ExitProc *proc;		\/* Function to call when process exits. *\/$/;"	m	struct:ExitHandler	file:
proc	generic/tkEvent.c	/^    Tk_GenericProc *proc;	\/* Function to dispatch on all X events. *\/$/;"	m	struct:GenericHandler	file:
proc	generic/tkInt.h	/^    Tcl_ObjCmdProc *proc;$/;"	m	struct:TkEnsemble
proc	generic/tkInt.h	/^    Tk_EventProc *proc;		\/* Function to invoke when an event in mask$/;"	m	struct:TkEventHandler
proc	generic/tkSelect.h	/^    Tk_GetSelProc *proc;	\/* Procedure to call to handle pieces of$/;"	m	struct:TkSelRetrievalInfo
proc	generic/tkSelect.h	/^    Tk_SelectionProc *proc;	\/* Procedure to generate selection in this$/;"	m	struct:TkSelHandler
processingCompose	macosx/tkMacOSXKeyEvent.c	/^static BOOL processingCompose = NO;$/;"	v	file:
procs	win/ttkWinXPTheme.c	/^    XPThemeProcs *procs;	\/* Pointer to theme procedure table *\/$/;"	m	struct:__anon241	file:
procs	win/ttkWinXPTheme.c	/^    XPThemeProcs *procs;$/;"	m	struct:__anon239	file:
progress	generic/ttk/ttkProgress.c	/^    ProgressbarPart	progress;$/;"	m	struct:__anon102	file:
prolog	generic/tkCanvPs.c	/^    int prolog;			\/* Non-zero means output should contain the$/;"	m	struct:TkPostscriptInfo	file:
propLength	macosx/tkMacOSXSend.c	/^    unsigned long propLength;	\/* Length of the property, in bytes. *\/$/;"	m	struct:NameRegistry	file:
propLength	unix/tkUnixSend.c	/^    unsigned long propLength;	\/* Length of the property, in bytes. *\/$/;"	m	struct:NameRegistry	file:
propNotify	generic/tkBind.c	/^static const TkStateMap propNotify[] = {$/;"	v	file:
properties	xlib/X11/Xlib.h	/^    XFontProp	*properties;	\/* pointer to array of additional properties*\/$/;"	m	struct:__anon321
property	generic/tkSelect.h	/^    Atom property;		\/* Property where selection will appear. *\/$/;"	m	struct:TkSelRetrievalInfo
property	macosx/tkMacOSXSend.c	/^    char *property;		\/* The contents of the property, or NULL if$/;"	m	struct:NameRegistry	file:
property	unix/tkUnixSend.c	/^    char *property;		\/* The contents of the property, or NULL if$/;"	m	struct:NameRegistry	file:
property	xlib/X11/Xlib.h	/^	Atom property;		\/* ATOM or None *\/$/;"	m	struct:__anon312
property	xlib/X11/Xlib.h	/^	Atom property;$/;"	m	struct:__anon311
protPtr	macosx/tkMacOSXWm.h	/^    ProtocolHandler *protPtr;	\/* First in list of protocol handlers for this$/;"	m	struct:TkWmInfo
protPtr	unix/tkUnixWm.c	/^    ProtocolHandler *protPtr;	\/* First in list of protocol handlers for this$/;"	m	struct:TkWmInfo	file:
protPtr	win/tkWinWm.c	/^    ProtocolHandler *protPtr;	\/* First in list of protocol handlers for this$/;"	m	struct:TkWmInfo	file:
proto_major_version	xlib/X11/Xlib.h	/^	int proto_major_version;\/* maj. version of server's X protocol *\/$/;"	m	struct:_XDisplay
proto_minor_version	xlib/X11/Xlib.h	/^	int proto_minor_version;\/* minor version of servers X protocol *\/$/;"	m	struct:_XDisplay
protocol	macosx/tkMacOSXWm.h	/^    Atom protocol;		\/* Identifies the protocol. *\/$/;"	m	struct:ProtocolHandler
protocol	unix/tkUnixWm.c	/^    Atom protocol;		\/* Identifies the protocol. *\/$/;"	m	struct:ProtocolHandler	file:
protocol	win/tkWinWm.c	/^    Atom protocol;		\/* Identifies the protocol. *\/$/;"	m	struct:ProtocolHandler	file:
prototypes	macosx/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prototypes	unix/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prototypes	win/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxyBackground	generic/tkPanedWindow.c	/^    Tk_3DBorder proxyBackground;\/* Background color used to draw proxy. If NULL, use background. *\/$/;"	m	struct:PanedWindow	file:
proxyBorderWidth	generic/tkPanedWindow.c	/^    int proxyBorderWidth;	\/* Borderwidth used to draw proxy. *\/$/;"	m	struct:PanedWindow	file:
proxyBorderWidthPtr	generic/tkPanedWindow.c	/^    Tcl_Obj *proxyBorderWidthPtr; \/* Tcl_Obj rep for proxyBorderWidth *\/$/;"	m	struct:PanedWindow	file:
proxyRelief	generic/tkPanedWindow.c	/^    int proxyRelief;		\/* Relief used to draw proxy, if TK_RELIEF_NULL then use relief. *\/$/;"	m	struct:PanedWindow	file:
proxywin	generic/tkPanedWindow.c	/^    Tk_Window proxywin;		\/* Window for the resizing proxy. *\/$/;"	m	struct:PanedWindow	file:
proxyx	generic/tkPanedWindow.c	/^    int proxyx, proxyy;		\/* Proxy x,y coordinates. *\/$/;"	m	struct:PanedWindow	file:
proxyy	generic/tkPanedWindow.c	/^    int proxyx, proxyy;		\/* Proxy x,y coordinates. *\/$/;"	m	struct:PanedWindow	file:
psInfo	generic/tkCanvas.h	/^    Tk_PostscriptInfo psInfo;	\/* Pointer to information used for generating$/;"	m	struct:TkCanvas
pszName	win/tkWinDialog.c	/^    LPCWSTR pszName;$/;"	m	struct:__anon232	file:
pszSpec	win/tkWinDialog.c	/^    LPCWSTR pszSpec;$/;"	m	struct:__anon232	file:
pt	generic/tk.h	/^	char *pt;$/;"	m	union:Tk_Dash::__anon12
pthread_mutex_init	unix/configure	/^pthread_mutex_init ();$/;"	f
pushbutton_statemap	win/ttkWinTheme.c	/^static Ttk_StateTable pushbutton_statemap[] = {$/;"	v	file:
pushbutton_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable pushbutton_statemap[] =$/;"	v	file:
put_pixel	xlib/X11/Xlib.h	/^	int (*put_pixel)            (struct _XImage *, int, int, unsigned long);$/;"	m	struct:_XImage::funcs
put_pixel	xlib/X11/Xlib.h	/^	int (*put_pixel)();$/;"	m	struct:_XImage::funcs
puzzleSwitch	library/demos/puzzle.tcl	/^proc puzzleSwitch {w num} {$/;"	p
pwOptions	generic/tkPanedWindow.c	/^    Tk_OptionTable pwOptions;	\/* Token for paned window option table. *\/$/;"	m	struct:__anon139	file:
qfree	xlib/X11/Xlib.h	/^	struct _XSQEvent *qfree; \/* unallocated event queue elements *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::_XSQEvent
qlen	xlib/X11/Xlib.h	/^	int qlen;		\/* Length of input event queue *\/$/;"	m	struct:_XDisplay
queuePosition	generic/tkBind.c	/^static const TkStateMap queuePosition[] = {$/;"	v	file:
rMargin	generic/tkText.h	/^    int rMargin;		\/* Right margin for text, in pixels. Only$/;"	m	struct:TkTextTag
rMargin	generic/tkTextDisp.c	/^    int rMargin;		\/* Right margin, in pixels. *\/$/;"	m	struct:StyleValues	file:
rMarginString	generic/tkText.h	/^    char *rMarginString;	\/* -rmargin option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
radians	macosx/tkMacOSXDraw.c	29;"	d	file:
radiobutton	generic/ttk/ttkButton.c	/^    RadiobuttonPart radiobutton;$/;"	m	struct:__anon22	file:
radiobuttonOptionSpecs	generic/tkButton.c	/^static const Tk_OptionSpec radiobuttonOptionSpecs[] = {$/;"	v	file:
radiobutton_pixels	generic/ttk/ttkDefaultTheme.c	/^static const char *const radiobutton_pixels[] = {$/;"	v	file:
radiobutton_spec	generic/ttk/ttkDefaultTheme.c	/^static IndicatorSpec radiobutton_spec = {$/;"	v	file:
radiobutton_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable radiobutton_statemap[] =$/;"	v	file:
radiobutton_states	generic/ttk/ttkDefaultTheme.c	/^static Ttk_StateTable radiobutton_states[] = {$/;"	v	file:
rand	macosx/configure	/^rand();$/;"	f
rand	unix/configure	/^rand();$/;"	f
rangeShift	win/tkWinFont.c	/^    USHORT rangeShift;		\/* 2 x segCount - searchRange. *\/$/;"	m	struct:SEGMENTTABLE	file:
rbearing	xlib/X11/Xlib.h	/^    short	rbearing;	\/* origin to right edge of raster *\/$/;"	m	struct:__anon319
reader	generic/tkImgGIF.c	/^    } reader;$/;"	m	struct:__anon127	typeref:struct:__anon127::__anon128	file:
readonlyBorder	generic/tkEntry.h	/^    Tk_3DBorder readonlyBorder;	\/* Used for drawing border around whole window$/;"	m	struct:__anon183
realEventMasks	generic/tkEvent.c	/^static const unsigned long realEventMasks[MappingNotify+1] = {$/;"	v	file:
realName	unix/tkUnixFont.c	/^    const char *realName;	\/* The real name of the encoding to load if$/;"	m	struct:EncodingAlias	file:
recomputeAngle	library/demos/pendulum.tcl	/^proc recomputeAngle {} {$/;"	p
recordPtr	generic/tk.h	/^    char *recordPtr;		\/* The data structure in which to restore$/;"	m	struct:Tk_SavedOptions
recordPtr	generic/ttk/ttkLayout.c	/^    void 		*recordPtr;$/;"	m	struct:Ttk_Layout_	file:
recordSize	generic/ttk/ttkTagSet.c	/^    int         	recordSize;	\/* size of tag record *\/$/;"	m	struct:TtkTagTable	file:
recordSize	generic/ttk/ttkWidget.h	/^    size_t 		recordSize;	\/* #bytes in widget record *\/$/;"	m	struct:WidgetSpec_
red	generic/tkColor.c	/^    int red, green, blue;	\/* Values for desired color. *\/$/;"	m	struct:__anon157	file:
red	generic/tkImgPNG.c	/^	unsigned char red;$/;"	m	struct:__anon179::__anon180	file:
red	xlib/X11/Xlib.h	/^	unsigned short red, green, blue;$/;"	m	struct:__anon277
redValues	generic/tkImgPhoto.h	/^    pixel redValues[256];	\/* Maps 8-bit values of red intensity to a$/;"	m	struct:ColorTable
red_mask	generic/tkCanvPs.c	/^    int red_mask, green_mask, blue_mask;	\/* Masks and shifts for each *\/$/;"	m	struct:TkColormapData	file:
red_mask	xlib/X11/Xlib.h	/^	unsigned long red_mask, green_mask, blue_mask;	\/* mask values *\/$/;"	m	struct:__anon269
red_mask	xlib/X11/Xlib.h	/^    unsigned long red_mask;	\/* bits in z arrangment *\/$/;"	m	struct:_XImage
red_mask	xlib/X11/Xutil.h	/^  unsigned long red_mask;$/;"	m	struct:__anon264
red_max	xlib/X11/Xutil.h	/^	unsigned long red_max;$/;"	m	struct:__anon265
red_mult	xlib/X11/Xutil.h	/^	unsigned long red_mult;$/;"	m	struct:__anon265
red_shift	generic/tkCanvPs.c	/^    int red_shift, green_shift, blue_shift;	\/* color band *\/$/;"	m	struct:TkColormapData	file:
redoStack	generic/tkUndo.h	/^    TkUndoAtom *redoStack;	\/* The redo stack. *\/$/;"	m	struct:TkUndoRedoStack
redrawX1	generic/tkCanvas.h	/^    int redrawX1, redrawY1;	\/* Upper left corner of area to redraw, in$/;"	m	struct:TkCanvas
redrawX2	generic/tkCanvas.h	/^    int redrawX2, redrawY2;	\/* Lower right corner of area to redraw, in$/;"	m	struct:TkCanvas
redrawY1	generic/tkCanvas.h	/^    int redrawX1, redrawY1;	\/* Upper left corner of area to redraw, in$/;"	m	struct:TkCanvas
redrawY2	generic/tkCanvas.h	/^    int redrawX2, redrawY2;	\/* Lower right corner of area to redraw, in$/;"	m	struct:TkCanvas
redraw_flags	generic/tk.h	/^    int redraw_flags;		\/* Some flags used in the canvas *\/$/;"	m	struct:Tk_Item
refCount	generic/tkConfig.c	/^    int refCount;		\/* Counts the number of uses of this table$/;"	m	struct:OptionTable	file:
refCount	generic/tkConsole.c	/^    int refCount;$/;"	m	struct:ConsoleInfo	file:
refCount	generic/tkFont.c	/^    int refCount;		\/* Number of users of named font. *\/$/;"	m	struct:NamedFont	file:
refCount	generic/tkGC.c	/^    int refCount;		\/* Number of active uses of gc. *\/$/;"	m	struct:__anon140	file:
refCount	generic/tkImgBmap.c	/^    int refCount;		\/* Number of instances that share this data$/;"	m	struct:BitmapInstance	file:
refCount	generic/tkImgPhoto.h	/^    int	refCount;		\/* Number of instances using this map. *\/$/;"	m	struct:ColorTable
refCount	generic/tkImgPhoto.h	/^    int refCount;		\/* Number of instances using this structure. *\/$/;"	m	struct:PhotoInstance
refCount	generic/tkInt.h	/^    int refCount;		\/* Number of windows whose "mainPtr" fields$/;"	m	struct:TkMainInfo
refCount	generic/tkInt.h	/^    int refCount;		\/* Reference count of how many Tk applications$/;"	m	struct:TkDisplay
refCount	generic/tkText.h	/^    int refCount;		\/* Number of cached TkTextIndex objects$/;"	m	struct:TkText
refCount	generic/tkText.h	/^    int refCount;		\/* Reference count this shared object. *\/$/;"	m	struct:TkSharedText
refCount	generic/tkTextDisp.c	/^    int refCount;		\/* Number of times this structure is$/;"	m	struct:TextStyle	file:
refCount	generic/tkVisual.c	/^    int refCount;		\/* How many uses of the colormap are still$/;"	m	struct:TkColormap	file:
refCount	unix/tkUnixFont.c	/^    int refCount;		\/* How many SubFonts are referring to this$/;"	m	struct:FontFamily	file:
refCount	win/tkWinFont.c	/^    size_t refCount;		\/* How many SubFonts are referring to this$/;"	m	struct:FontFamily	file:
refCount	win/tkWinWm.c	/^    size_t refCount;	\/* Number of instances that share this data$/;"	m	struct:WinIconInstance	file:
refCounts	win/tkWinInt.h	/^    Tcl_HashTable refCounts;	\/* Hash table of palette entry reference$/;"	m	struct:__anon229
refcount	win/tkWinSendCom.h	/^    long refcount;$/;"	m	struct:__anon254
referenceCount	macosx/tkMacOSXInt.h	/^    int referenceCount;		\/* Don't delete toplevel until children are$/;"	m	struct:TkWindowPrivate
region	generic/tkInt.h	/^	TkRegion region;$/;"	m	union:TkpClipMask::__anon134
region	unix/tkUnixDraw.c	/^    TkRegion region;		\/* Region into which damage is accumulated. *\/$/;"	m	struct:ScrollInfo	file:
regionString	generic/tkCanvas.h	/^    char *regionString;		\/* The option string from which scrollX1 etc.$/;"	m	struct:TkCanvas
regionStrings	generic/ttk/ttkTreeview.c	/^static const char *regionStrings[] = {$/;"	v	file:
registerWinProc	macosx/tkMacOSXInt.h	/^    Tk_MacOSXEmbedRegisterWinProc *registerWinProc;$/;"	m	struct:__anon196
registryProperty	generic/tkInt.h	/^    Atom registryProperty;	\/* X's name for property containing registry$/;"	m	struct:TkDisplay
relHeight	generic/tkPlace.c	/^    double relWidth, relHeight;	\/* Dimensions for tkwin relative to size of$/;"	m	struct:Slave	file:
relHeightPtr	generic/tkPlace.c	/^    Tcl_Obj *relHeightPtr;$/;"	m	struct:Slave	file:
relWidth	generic/tkPlace.c	/^    double relWidth, relHeight;	\/* Dimensions for tkwin relative to size of$/;"	m	struct:Slave	file:
relWidthPtr	generic/tkPlace.c	/^    Tcl_Obj *relWidthPtr;$/;"	m	struct:Slave	file:
relX	generic/tkPlace.c	/^    double relX, relY;		\/* X and Y coordinates relative to size of$/;"	m	struct:Slave	file:
relY	generic/tkPlace.c	/^    double relX, relY;		\/* X and Y coordinates relative to size of$/;"	m	struct:Slave	file:
release	xlib/X11/Xlib.h	/^	int release;		\/* release of the server *\/$/;"	m	struct:_XDisplay
relief	generic/tkButton.h	/^    int relief;			\/* Value of -relief option: specifies 3-d$/;"	m	struct:__anon178
relief	generic/tkCanvas.h	/^    int relief;			\/* Indicates whether window as a whole is$/;"	m	struct:TkCanvas
relief	generic/tkEntry.h	/^    int relief;			\/* 3-D effect: TK_RELIEF_RAISED, etc. *\/$/;"	m	struct:__anon183
relief	generic/tkFrame.c	/^    int relief;			\/* 3-d effect: TK_RELIEF_RAISED etc. *\/$/;"	m	struct:__anon145	file:
relief	generic/tkListbox.c	/^    int relief;			\/* 3-D effect: TK_RELIEF_RAISED, etc. *\/$/;"	m	struct:__anon149	file:
relief	generic/tkMenubutton.h	/^    int relief;			\/* 3-d effect: TK_RELIEF_RAISED, etc. *\/$/;"	m	struct:__anon137
relief	generic/tkMessage.c	/^    int relief;			\/* 3-D effect: TK_RELIEF_RAISED, etc. *\/$/;"	m	struct:__anon153	file:
relief	generic/tkPanedWindow.c	/^    int relief;			\/* 3D border effect (TK_RELIEF_RAISED, etc) *\/$/;"	m	struct:PanedWindow	file:
relief	generic/tkScale.h	/^    int relief;			\/* Indicates whether window as a whole is$/;"	m	struct:TkScale
relief	generic/tkScrollbar.h	/^    int relief;			\/* Indicates whether window as a whole is$/;"	m	struct:TkScrollbar
relief	generic/tkText.h	/^    int relief;			\/* 3-D relief for background. *\/$/;"	m	struct:TkTextTag
relief	generic/tkText.h	/^    int relief;			\/* 3-d effect for border around entire widget:$/;"	m	struct:TkText
relief	generic/tkTextDisp.c	/^    int relief;			\/* 3-D relief for background. *\/$/;"	m	struct:StyleValues	file:
relief	macosx/tkMacOSXButton.c	/^    int relief;$/;"	m	struct:__anon201	file:
relief	macosx/tkMacOSXMenubutton.c	/^    int relief;$/;"	m	struct:__anon204	file:
reliefObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon15	file:
reliefObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*reliefObj;$/;"	m	struct:__anon53	file:
reliefObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj	*reliefObj;$/;"	m	struct:__anon104	file:
reliefObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon105	file:
reliefObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj	*reliefObj;$/;"	m	struct:__anon88	file:
reliefObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *reliefObj;		\/* Relief for this object *\/$/;"	m	struct:__anon97	file:
reliefObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon92	file:
reliefObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon95	file:
reliefObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon96	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*reliefObj;$/;"	m	struct:__anon34	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*reliefObj;$/;"	m	struct:__anon36	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *reliefObj; 	\/* border relief for this object *\/$/;"	m	struct:__anon46	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *reliefObj;      \/* the relief for this object *\/$/;"	m	struct:__anon45	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon40	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon41	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon42	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon43	file:
reliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon44	file:
reliefObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj	*reliefObj;$/;"	m	struct:__anon118	file:
reliefObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon111	file:
reliefObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *reliefObj;$/;"	m	struct:__anon113	file:
reliefObj	win/ttkWinTheme.c	/^    Tcl_Obj	*reliefObj;$/;"	m	struct:__anon245	file:
reliefObj	win/ttkWinTheme.c	/^    Tcl_Obj	*reliefObj;$/;"	m	struct:__anon247	file:
reliefPtr	generic/tkMenu.h	/^    Tcl_Obj *reliefPtr;		\/* 3-d effect: TK_RELIEF_RAISED, etc. *\/$/;"	m	struct:TkMenu
reliefPtr	generic/tkSquare.c	/^    Tcl_Obj *reliefPtr;$/;"	m	struct:__anon142	file:
reliefString	generic/tkText.h	/^    char *reliefString;		\/* -relief option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
reliefStrings	generic/tk3d.c	/^static const char *const reliefStrings[] = {$/;"	v	file:
removeItemAtIndex	macosx/tkMacOSXMenu.c	/^- (void) removeItemAtIndex: (NSInteger) index$/;"	f
reparent	macosx/tkMacOSXWm.h	/^    Window reparent;		\/* If the window has been reparented, this$/;"	m	struct:TkWmInfo
reparent	unix/tkUnixWm.c	/^    Window reparent;		\/* If the window has been reparented, this$/;"	m	struct:TkWmInfo	file:
repeat	library/demos/pendulum.tcl	/^proc repeat w {$/;"	p
repeatDelay	generic/tkButton.h	/^    int repeatDelay;		\/* Value of -repeatdelay option; specifies the$/;"	m	struct:__anon178
repeatDelay	generic/tkEntry.h	/^    int repeatDelay;		\/* repeat delay *\/$/;"	m	struct:__anon184
repeatDelay	generic/tkScale.h	/^    int repeatDelay;		\/* How long to wait before auto-repeating on$/;"	m	struct:TkScale
repeatDelay	generic/tkScrollbar.h	/^    int repeatDelay;		\/* How long to wait before auto-repeating on$/;"	m	struct:TkScrollbar
repeatInterval	generic/tkButton.h	/^    int repeatInterval;		\/* Value of -repeatinterval option; specifies$/;"	m	struct:__anon178
repeatInterval	generic/tkEntry.h	/^    int repeatInterval;		\/* repeat interval *\/$/;"	m	struct:__anon184
repeatInterval	generic/tkScale.h	/^    int repeatInterval;		\/* Interval between autorepeats (in ms). *\/$/;"	m	struct:TkScale
repeatInterval	generic/tkScrollbar.h	/^    int repeatInterval;		\/* Interval between autorepeats (in ms). *\/$/;"	m	struct:TkScrollbar
reqFormat	generic/tkEntry.h	/^    char *reqFormat;		\/* Sprintf conversion specifier used for the$/;"	m	struct:__anon184
reqGridHeight	macosx/tkMacOSXWm.h	/^    int reqGridWidth, reqGridHeight;$/;"	m	struct:TkWmInfo
reqGridHeight	unix/tkUnixWm.c	/^    int reqGridWidth, reqGridHeight;$/;"	m	struct:TkWmInfo	file:
reqGridHeight	win/tkWinWm.c	/^    int reqGridWidth, reqGridHeight;$/;"	m	struct:TkWmInfo	file:
reqGridWidth	macosx/tkMacOSXWm.h	/^    int reqGridWidth, reqGridHeight;$/;"	m	struct:TkWmInfo
reqGridWidth	unix/tkUnixWm.c	/^    int reqGridWidth, reqGridHeight;$/;"	m	struct:TkWmInfo	file:
reqGridWidth	win/tkWinWm.c	/^    int reqGridWidth, reqGridHeight;$/;"	m	struct:TkWmInfo	file:
reqHeight	generic/tk.h	/^    int reqWidth, reqHeight;$/;"	m	struct:Tk_FakeWin
reqHeight	generic/tkInt.h	/^    int reqWidth, reqHeight;	\/* Arguments from last call to$/;"	m	struct:TkWindow
reqSize	generic/ttk/ttkPanedwindow.c	/^    int 	reqSize;		\/* Pane request size *\/$/;"	m	struct:__anon125	file:
reqState	unix/tkUnixWm.c	/^    WmAttributes reqState;	\/* Requested state of [wm attributes] *\/$/;"	m	struct:TkWmInfo	file:
reqWidth	generic/tk.h	/^    int reqWidth, reqHeight;$/;"	m	struct:Tk_FakeWin
reqWidth	generic/tkInt.h	/^    int reqWidth, reqHeight;	\/* Arguments from last call to$/;"	m	struct:TkWindow
reqWindow	unix/tkUnixSelect.c	/^    Window reqWindow;		\/* Requestor's window id. *\/$/;"	m	struct:IncrInfo	file:
request	generic/tkInt.h	/^    int request;		\/* Consider only errors with this major$/;"	m	struct:TkErrorHandler
request	xlib/X11/Xlib.h	/^	int request;		\/* one of MappingModifier, MappingKeyboard,$/;"	m	struct:__anon316
request	xlib/X11/Xlib.h	/^	unsigned long request;	\/* sequence number of last request. *\/$/;"	m	struct:_XDisplay
requestProc	generic/tk.h	/^    Tk_GeomRequestProc *requestProc;$/;"	m	struct:Tk_GeomMgr
request_code	xlib/X11/Xlib.h	/^	unsigned char request_code;	\/* Major op-code of failed request *\/$/;"	m	struct:__anon317
requestor	xlib/X11/Xlib.h	/^	Window requestor;$/;"	m	struct:__anon311
requestor	xlib/X11/Xlib.h	/^	Window requestor;$/;"	m	struct:__anon312
resPtr	generic/tkText.c	/^    Tcl_Obj *resPtr;		\/* Keeps track of currently found locations *\/$/;"	m	struct:SearchSpec	file:
res_class	xlib/X11/Xutil.h	/^	char *res_class;$/;"	m	struct:__anon263
res_name	xlib/X11/Xutil.h	/^	char *res_name;$/;"	m	struct:__anon263
reserved	generic/tk.h	/^    char *reserved;		\/* reserved for future expansion *\/$/;"	m	struct:Tk_ImageType
reserved1	generic/tk.h	/^    char *reserved1;		\/* Reserved for future extension. *\/$/;"	m	struct:Tk_ItemType
reserved1	generic/tk.h	/^    char *reserved1;		\/* reserved for future use *\/$/;"	m	struct:Tk_Item
reserved1	generic/tk.h	/^    void *reserved1;		\/* Reserved for future expansion. *\/$/;"	m	struct:Tk_Outline
reserved1	generic/tkCanvas.h	/^    void *reserved1;$/;"	m	struct:TkCanvas
reserved1	generic/tkIntPlatDecls.h	/^    void (*reserved1)(void);$/;"	m	struct:TkIntPlatStubs
reserved1	generic/tkMenu.h	/^    void *reserved1; \/* not used any more. *\/$/;"	m	struct:TkMenu
reserved10	generic/tkIntDecls.h	/^    void (*reserved10)(void);$/;"	m	struct:TkIntStubs
reserved11	generic/tkIntDecls.h	/^    void (*reserved11)(void);$/;"	m	struct:TkIntStubs
reserved11	generic/tkIntPlatDecls.h	/^    void (*reserved11)(void);$/;"	m	struct:TkIntPlatStubs
reserved120	generic/tkIntDecls.h	/^    void (*reserved120)(void);$/;"	m	struct:TkIntStubs
reserved121	generic/tkIntDecls.h	/^    void (*reserved121)(void); \/* Dummy entry for stubs table backwards compatibility *\/$/;"	m	struct:TkIntStubs
reserved121	generic/tkIntDecls.h	/^    void (*reserved121)(void);$/;"	m	struct:TkIntStubs
reserved122	generic/tkIntDecls.h	/^    void (*reserved122)(void); \/* Dummy entry for stubs table backwards compatibility *\/$/;"	m	struct:TkIntStubs
reserved122	generic/tkIntDecls.h	/^    void (*reserved122)(void);$/;"	m	struct:TkIntStubs
reserved123	generic/tkIntDecls.h	/^    void (*reserved123)(void);$/;"	m	struct:TkIntStubs
reserved124	generic/tkIntDecls.h	/^    void (*reserved124)(void); \/* Dummy entry for stubs table backwards compatibility *\/$/;"	m	struct:TkIntStubs
reserved124	generic/tkIntDecls.h	/^    void (*reserved124)(void);$/;"	m	struct:TkIntStubs
reserved125	generic/tkIntDecls.h	/^    void (*reserved125)(void);$/;"	m	struct:TkIntStubs
reserved126	generic/tkIntDecls.h	/^    void (*reserved126)(void);$/;"	m	struct:TkIntStubs
reserved127	generic/tkIntDecls.h	/^    void (*reserved127)(void);$/;"	m	struct:TkIntStubs
reserved128	generic/tkIntDecls.h	/^    void (*reserved128)(void);$/;"	m	struct:TkIntStubs
reserved129	generic/tkIntDecls.h	/^    void (*reserved129)(void);$/;"	m	struct:TkIntStubs
reserved13	generic/tkIntPlatDecls.h	/^    void (*reserved13)(void);$/;"	m	struct:TkIntPlatStubs
reserved130	generic/tkIntDecls.h	/^    void (*reserved130)(void);$/;"	m	struct:TkIntStubs
reserved131	generic/tkIntDecls.h	/^    void (*reserved131)(void);$/;"	m	struct:TkIntStubs
reserved132	generic/tkIntDecls.h	/^    void (*reserved132)(void);$/;"	m	struct:TkIntStubs
reserved133	generic/tkIntDecls.h	/^    void (*reserved133)(void);$/;"	m	struct:TkIntStubs
reserved134	generic/tkIntDecls.h	/^    void (*reserved134)(void);$/;"	m	struct:TkIntStubs
reserved15	generic/tkIntPlatDecls.h	/^    void (*reserved15)(void);$/;"	m	struct:TkIntPlatStubs
reserved15	generic/ttk/ttkDecls.h	/^    void (*reserved15)(void);$/;"	m	struct:TtkStubs
reserved155	generic/tkIntDecls.h	/^    void (*reserved155)(void);$/;"	m	struct:TkIntStubs
reserved16	generic/ttk/ttkDecls.h	/^    void (*reserved16)(void);$/;"	m	struct:TtkStubs
reserved17	generic/ttk/ttkDecls.h	/^    void (*reserved17)(void);$/;"	m	struct:TtkStubs
reserved18	generic/ttk/ttkDecls.h	/^    void (*reserved18)(void);$/;"	m	struct:TtkStubs
reserved19	generic/tkIntPlatDecls.h	/^    void (*reserved19)(void);$/;"	m	struct:TkIntPlatStubs
reserved19	generic/ttk/ttkDecls.h	/^    void (*reserved19)(void);$/;"	m	struct:TtkStubs
reserved2	generic/tk.h	/^    int reserved2;		\/* Carefully compatible with *\/$/;"	m	struct:Tk_ItemType
reserved2	generic/tk.h	/^    void *reserved2;$/;"	m	struct:Tk_Outline
reserved2	generic/tkCanvas.h	/^    void *reserved2;$/;"	m	struct:TkCanvas
reserved2	generic/tkIntPlatDecls.h	/^    void (*reserved2)(void);$/;"	m	struct:TkIntPlatStubs
reserved20	generic/tkIntPlatDecls.h	/^    void (*reserved20)(void);$/;"	m	struct:TkIntPlatStubs
reserved218	generic/tkDecls.h	/^    void (*reserved218)(void);$/;"	m	struct:TkStubs
reserved219	generic/tkDecls.h	/^    void (*reserved219)(void);$/;"	m	struct:TkStubs
reserved3	generic/tk.h	/^    char *reserved3;		\/* Jan Nijtmans dash patch *\/$/;"	m	struct:Tk_ItemType
reserved3	generic/tk.h	/^    void *reserved3;$/;"	m	struct:Tk_Outline
reserved3	generic/tkCanvas.h	/^    void *reserved3;$/;"	m	struct:TkCanvas
reserved3	generic/tkIntDecls.h	/^    void (*reserved3)(void);$/;"	m	struct:TkIntStubs
reserved36	generic/ttk/ttkDecls.h	/^    void (*reserved36)(void);$/;"	m	struct:TtkStubs
reserved37	generic/ttk/ttkDecls.h	/^    void (*reserved37)(void);$/;"	m	struct:TtkStubs
reserved38	generic/ttk/ttkDecls.h	/^    void (*reserved38)(void);$/;"	m	struct:TtkStubs
reserved39	generic/ttk/ttkDecls.h	/^    void (*reserved39)(void);$/;"	m	struct:TtkStubs
reserved4	generic/tk.h	/^    char *reserved4;$/;"	m	struct:Tk_ItemType
reserved48	generic/tkIntPlatDecls.h	/^    void (*reserved48)(void);$/;"	m	struct:TkIntPlatStubs
reserved76	generic/tkIntDecls.h	/^    void (*reserved76)(void);$/;"	m	struct:TkIntStubs
reserved81	generic/tkIntXlibDecls.h	/^    void (*reserved81)(void);$/;"	m	struct:TkIntXlibStubs
reserved84	generic/tkIntDecls.h	/^    void (*reserved84)(void);$/;"	m	struct:TkIntStubs
reserved9	generic/ttk/ttkDecls.h	/^    void (*reserved9)(void);$/;"	m	struct:TtkStubs
resizeOpaque	generic/tkPanedWindow.c	/^    int resizeOpaque;		\/* Boolean indicating whether resize should be$/;"	m	struct:PanedWindow	file:
resolution	generic/tkScale.h	/^    double resolution;		\/* If > 0, all values are rounded to an even$/;"	m	struct:TkScale
resourceRefCount	generic/tk3d.h	/^    int resourceRefCount;	\/* Number of active uses of this color (each$/;"	m	struct:TkBorder
resourceRefCount	generic/tkBitmap.c	/^    int resourceRefCount;	\/* Number of active uses of this bitmap (each$/;"	m	struct:TkBitmap	file:
resourceRefCount	generic/tkColor.h	/^    int resourceRefCount;	\/* Number of active uses of this color (each$/;"	m	struct:TkColor
resourceRefCount	generic/tkFont.h	/^    int resourceRefCount;	\/* Number of active uses of this font (each$/;"	m	struct:TkFont
resourceRefCount	generic/tkInt.h	/^    int resourceRefCount;	\/* Number of active uses of this cursor (each$/;"	m	struct:TkCursor
resource_alloc	xlib/X11/Xlib.h	/^	XID (*resource_alloc)(); \/* allocator function *\/$/;"	m	struct:_XDisplay
resource_base	xlib/X11/Xlib.h	/^        XID resource_base;	\/* resource ID base *\/$/;"	m	struct:_XDisplay
resource_id	xlib/X11/Xlib.h	/^	XID resource_id;	\/* allocator current ID *\/$/;"	m	struct:_XDisplay
resource_mask	xlib/X11/Xlib.h	/^	XID resource_mask;	\/* resource ID mask bits *\/$/;"	m	struct:_XDisplay
resource_shift	xlib/X11/Xlib.h	/^	int resource_shift;	\/* allocator shift to correct bits *\/$/;"	m	struct:_XDisplay
resourceid	xlib/X11/Xlib.h	/^	XID resourceid;		\/* resource id *\/$/;"	m	struct:__anon317
rest	generic/tkWindow.c	/^static int rest = 0;$/;"	v	file:
restoreProc	generic/tk.h	/^    Tk_CustomOptionRestoreProc *restoreProc;$/;"	m	struct:Tk_ObjCustomOption
restrictArg	generic/tkEvent.c	/^    ClientData restrictArg;	\/* Argument to pass to restrictProc. *\/$/;"	m	struct:ThreadSpecificData	file:
restrictProc	generic/tkEvent.c	/^    Tk_RestrictProc *restrictProc;$/;"	m	struct:ThreadSpecificData	file:
restrictWinPtr	generic/tkPointer.c	/^    TkWindow *restrictWinPtr;	\/* Window to which all mouse events will be$/;"	m	struct:ThreadSpecificData	file:
result	generic/tkSelect.h	/^    int result;			\/* Initially -1. Set to a Tcl return value$/;"	m	struct:TkSelRetrievalInfo
result	unix/tkUnixSend.c	/^    char *result;		\/* String result for command (malloc'ed), or$/;"	m	struct:PendingCommand	file:
retDir	win/tkWinDialog.c	/^   TCHAR retDir[MAX_PATH];	\/* Returned folder to use *\/$/;"	m	struct:__anon231	file:
returnCode	macosx/tkMacOSXDialog.c	/^- (void) tkAlertDidEnd: (NSAlert *) alert returnCode: (NSInteger) returnCode$/;"	f
returnValue	generic/tkObj.c	/^    double returnValue;$/;"	m	struct:MMRep	file:
returnValue	generic/tkObj.c	/^    int returnValue;$/;"	m	struct:PixelRep	file:
reverser	library/demos/aniwave.tcl	/^proc reverser {} {$/;"	p
revert	generic/tkUndo.h	/^    TkUndoSubAtom *revert;	\/* Linked list of 'revert' actions to perform$/;"	m	struct:TkUndoAtom
revision	generic/ttk/ttkDecls.h	/^    int revision;$/;"	m	struct:TtkStubs
rewritebuffer	generic/tkCanvas.c	/^    char *rewritebuffer;	\/* Tag string (after removing escapes) *\/$/;"	m	struct:TagSearch	file:
rewritebufferAllocated	generic/tkCanvas.c	/^    unsigned int rewritebufferAllocated;$/;"	m	struct:TagSearch	file:
rgbString	generic/tkColor.c	/^    char rgbString[20];		\/* *\/$/;"	m	struct:ThreadSpecificData	file:
right	generic/ttk/ttkTheme.h	/^    short right;$/;"	m	struct:__anon72
rightBearing	generic/tkMenubutton.h	/^    int rightBearing;		\/* Amount text sticks right from its$/;"	m	struct:__anon137
rightarrow_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable rightarrow_statemap[] =$/;"	v	file:
roomChanged	library/demos/floor.tcl	/^proc roomChanged {w args} {$/;"	p
root	generic/tk.h	/^    Window root;		\/* Root window that the event occured on. *\/$/;"	m	struct:__anon9
root	generic/ttk/ttkLayout.c	/^    Ttk_LayoutNode	*root;$/;"	m	struct:Ttk_Layout_	file:
root	generic/ttk/ttkTreeview.c	/^    TreeItem *root;		\/* Root item *\/$/;"	m	struct:__anon83	file:
root	xlib/X11/Xlib.h	/^	Window root;		\/* Root window id. *\/$/;"	m	struct:__anon271
root	xlib/X11/Xlib.h	/^	Window root;	        \/* root window that the event occured on *\/$/;"	m	struct:__anon287
root	xlib/X11/Xlib.h	/^	Window root;	        \/* root window that the event occured on *\/$/;"	m	struct:__anon288
root	xlib/X11/Xlib.h	/^	Window root;	        \/* root window that the event occured on *\/$/;"	m	struct:__anon289
root	xlib/X11/Xlib.h	/^	Window root;	        \/* root window that the event occured on *\/$/;"	m	struct:__anon290
root	xlib/X11/Xlib.h	/^    Window root;        	\/* root of screen containing window *\/$/;"	m	struct:__anon274
rootPtr	generic/tkTextBTree.c	/^    Node *rootPtr;		\/* Pointer to root of B-tree. *\/$/;"	m	struct:BTree	file:
rootStyle	generic/ttk/ttkTheme.c	/^    Ttk_Style rootStyle;		\/* "." style, root of chain *\/$/;"	m	struct:Ttk_Theme_	file:
root_depth	xlib/X11/Xlib.h	/^	int root_depth;		\/* bits per pixel *\/$/;"	m	struct:__anon271
root_input_mask	xlib/X11/Xlib.h	/^	long root_input_mask;	\/* initial root input mask *\/$/;"	m	struct:__anon271
root_visual	xlib/X11/Xlib.h	/^	Visual *root_visual;	\/* root visual *\/$/;"	m	struct:__anon271
rotate	generic/tkCanvPs.c	/^    int rotate;			\/* Non-zero means output should be rotated on$/;"	m	struct:TkPostscriptInfo	file:
row	generic/tkGrid.c	/^    int column, row;		\/* Location in the grid (starting from$/;"	m	struct:Gridder	file:
rowEnd	generic/tkGrid.c	/^    int rowEnd;			\/* The last row occupied by any slave. *\/$/;"	m	struct:__anon135	file:
rowHeight	generic/ttk/ttkTreeview.c	/^    int rowHeight;		\/* Height of each item *\/$/;"	m	struct:__anon83	file:
rowLayout	generic/ttk/ttkTreeview.c	/^    Ttk_Layout rowLayout;$/;"	m	struct:__anon83	file:
rowMax	generic/tkGrid.c	/^    int rowMax;			\/* The number of rows with constraints. *\/$/;"	m	struct:__anon135	file:
rowNumberObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *rowNumberObj;$/;"	m	struct:__anon87	file:
rowPtr	generic/tkGrid.c	/^    SlotInfo *rowPtr;		\/* Pointer to array of row constraints. *\/$/;"	m	struct:__anon135	file:
rowSpace	generic/tkGrid.c	/^    int rowSpace;		\/* The number of slots currently allocated for$/;"	m	struct:__anon135	file:
rsize	generic/tkImgGIF.c	/^    int rsize;$/;"	m	struct:__anon129	file:
rulerMkTab	library/demos/ruler.tcl	/^proc rulerMkTab {c x y} {$/;"	p
rulerMoveTab	library/demos/ruler.tcl	/^proc rulerMoveTab {c x y} {$/;"	p
rulerNewTab	library/demos/ruler.tcl	/^proc rulerNewTab {c x y} {$/;"	p
rulerReleaseTab	library/demos/ruler.tcl	/^proc rulerReleaseTab c {$/;"	p
rulerSelectTab	library/demos/ruler.tcl	/^proc rulerSelectTab {c x y} {$/;"	p
s	xlib/X11/Xlib.h	/^		short s[10];$/;"	m	union:__anon314::__anon315
sValuePtr	generic/tkTextDisp.c	/^    StyleValues *sValuePtr;	\/* Raw information from which GCs were$/;"	m	struct:TextStyle	file:
same_screen	generic/tk.h	/^    Bool same_screen;		\/* Same screen flag. *\/$/;"	m	struct:__anon9
same_screen	xlib/X11/Xlib.h	/^	Bool same_screen;	\/* same screen flag *\/$/;"	m	struct:__anon287
same_screen	xlib/X11/Xlib.h	/^	Bool same_screen;	\/* same screen flag *\/$/;"	m	struct:__anon288
same_screen	xlib/X11/Xlib.h	/^	Bool same_screen;	\/* same screen flag *\/$/;"	m	struct:__anon289
same_screen	xlib/X11/Xlib.h	/^	Bool same_screen;	\/* same screen flag *\/$/;"	m	struct:__anon290
sansClass	generic/tkFont.c	/^static const char *const sansClass[] = {$/;"	v	file:
sashCursor	generic/tkPanedWindow.c	/^    Tk_Cursor sashCursor;	\/* Cursor used when mouse is above a sash. *\/$/;"	m	struct:PanedWindow	file:
sashLayout	generic/ttk/ttkPanedwindow.c	/^    Ttk_Layout	sashLayout;$/;"	m	struct:__anon123	file:
sashPad	generic/tkPanedWindow.c	/^    int sashPad;		\/* Additional padding around each sash. *\/$/;"	m	struct:PanedWindow	file:
sashPadObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *sashPadObj;	\/* padding on either side of handle *\/$/;"	m	struct:__anon106	file:
sashPadPtr	generic/tkPanedWindow.c	/^    Tcl_Obj *sashPadPtr;	\/* Tcl_Obj rep for sash padding. *\/$/;"	m	struct:PanedWindow	file:
sashPos	generic/ttk/ttkPanedwindow.c	/^    int 	sashPos;		\/* Folowing sash position *\/$/;"	m	struct:__anon125	file:
sashRelief	generic/tkPanedWindow.c	/^    int sashRelief;		\/* Relief used to draw sash. *\/$/;"	m	struct:PanedWindow	file:
sashReliefObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *sashReliefObj;	\/* sash relief *\/$/;"	m	struct:__anon106	file:
sashThickness	generic/ttk/ttkPanedwindow.c	/^    int 	sashThickness;$/;"	m	struct:__anon123	file:
sashThicknessObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *sashThicknessObj;	\/* overall thickness of sash *\/$/;"	m	struct:__anon106	file:
sashWidth	generic/tkPanedWindow.c	/^    int sashWidth;		\/* Width of each sash, in pixels. *\/$/;"	m	struct:PanedWindow	file:
sashWidthPtr	generic/tkPanedWindow.c	/^    Tcl_Obj *sashWidthPtr;	\/* Tcl_Obj rep for sash width. *\/$/;"	m	struct:PanedWindow	file:
sashx	generic/tkPanedWindow.c	/^    int sashx, sashy;		\/* Coordinates of the sash of the right or$/;"	m	struct:Slave	file:
sashy	generic/tkPanedWindow.c	/^    int sashx, sashy;		\/* Coordinates of the sash of the right or$/;"	m	struct:Slave	file:
saveOptionStrings	macosx/tkMacOSXDialog.c	/^static const char *const saveOptionStrings[] = {$/;"	v	file:
saveOptions	macosx/tkMacOSXDialog.c	/^enum saveOptions {$/;"	g	file:
save_under	xlib/X11/Xlib.h	/^    Bool save_under;		\/* boolean, should bits under be saved? *\/$/;"	m	struct:__anon274
save_under	xlib/X11/Xlib.h	/^    Bool save_under;		\/* should bits under be saved? (popups) *\/$/;"	m	struct:__anon273
save_unders	xlib/X11/Xlib.h	/^	Bool save_unders;$/;"	m	struct:__anon271
savedsynchandler	xlib/X11/Xlib.h	/^	int (*savedsynchandler)(); \/* user synchandler when Xlib usurps *\/$/;"	m	struct:_XDisplay
sbCmd	generic/tkEntry.c	/^enum sbCmd {$/;"	g	file:
sbCmdNames	generic/tkEntry.c	/^static const char *const sbCmdNames[] = {$/;"	v	file:
sbOptSpec	generic/tkEntry.c	/^static const Tk_OptionSpec sbOptSpec[] = {$/;"	v	file:
sbSelCmdNames	generic/tkEntry.c	/^static const char *const sbSelCmdNames[] = {$/;"	v	file:
sbselCmd	generic/tkEntry.c	/^enum sbselCmd {$/;"	g	file:
scale	generic/tkCanvPs.c	/^    double scale;		\/* Scale factor for conversion: each pixel$/;"	m	struct:TkPostscriptInfo	file:
scale	generic/ttk/ttkScale.c	/^    ScalePart  scale;$/;"	m	struct:__anon108	file:
scaleActionProc	macosx/tkMacOSXScale.c	/^static ControlActionUPP scaleActionProc = NULL; \/* Pointer to func. *\/$/;"	v	file:
scaleClass	generic/tkScale.c	/^static const Tk_ClassProcs scaleClass = {$/;"	v	file:
scaleHandle	macosx/tkMacOSXScale.c	/^    ControlRef scaleHandle;	\/* Handle to the Scale control struct. *\/$/;"	m	struct:MacScale	file:
scaleProc	generic/tk.h	/^    Tk_ItemScaleProc *scaleProc;\/* Procedure to rescale items of this type. *\/$/;"	m	struct:Tk_ItemType
scale_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable scale_statemap[] =$/;"	v	file:
scanCommandNames	generic/tkListbox.c	/^static const char *const scanCommandNames[] = {$/;"	v	file:
scanMarkIndex	generic/tkEntry.h	/^    int scanMarkIndex;		\/* Character index of character that was at$/;"	m	struct:__anon183
scanMarkX	generic/tkEntry.h	/^    int scanMarkX;		\/* X-position at which scan started (e.g.$/;"	m	struct:__anon183
scanMarkX	generic/tkListbox.c	/^    int scanMarkX;		\/* X-position at which scan started (e.g.$/;"	m	struct:__anon149	file:
scanMarkX	generic/tkTextDisp.c	/^    int scanMarkX;		\/* X-position of mouse at time scan started. *\/$/;"	m	struct:TextDInfo	file:
scanMarkXOffset	generic/tkListbox.c	/^    int scanMarkXOffset;	\/* Value of "xOffset" field when scan$/;"	m	struct:__anon149	file:
scanMarkXPixel	generic/tkTextDisp.c	/^    int scanMarkXPixel;		\/* Pixel index of left edge of the window when$/;"	m	struct:TextDInfo	file:
scanMarkY	generic/tkListbox.c	/^    int scanMarkY;		\/* Y-position at which scan started (e.g.$/;"	m	struct:__anon149	file:
scanMarkY	generic/tkTextDisp.c	/^    int scanMarkY;		\/* Y-position of mouse at time scan started. *\/$/;"	m	struct:TextDInfo	file:
scanMarkYIndex	generic/tkListbox.c	/^    int scanMarkYIndex;		\/* Index of line that was at top of window$/;"	m	struct:__anon149	file:
scanTotalYScroll	generic/tkTextDisp.c	/^    int scanTotalYScroll;	\/* Total scrolling (in screen pixels) that has$/;"	m	struct:TextDInfo	file:
scanX	generic/tkCanvas.h	/^    int scanX;			\/* X-position at which scan started (e.g.$/;"	m	struct:TkCanvas
scanXOrigin	generic/tkCanvas.h	/^    int scanXOrigin;		\/* Value of xOrigin field when scan started. *\/$/;"	m	struct:TkCanvas
scanY	generic/tkCanvas.h	/^    int scanY;			\/* Y-position at which scan started (e.g.$/;"	m	struct:TkCanvas
scanYOrigin	generic/tkCanvas.h	/^    int scanYOrigin;		\/* Value of yOrigin field when scan started. *\/$/;"	m	struct:TkCanvas
scancommand	generic/tkListbox.c	/^enum scancommand {$/;"	g	file:
scanline_pad	xlib/X11/Xlib.h	/^	int scanline_pad;	\/* scanline must padded to this multiple *\/$/;"	m	struct:__anon272
scanline_pad	xlib/X11/Xlib.h	/^    int scanline_pad;$/;"	m	struct:__anon267
schar	generic/tkImgPhoto.h	/^	typedef char schar;$/;"	t
schar	generic/tkImgPhoto.h	/^	typedef short schar;$/;"	t
schar	generic/tkImgPhoto.h	/^    typedef signed char schar;$/;"	t
scratch_buffer	xlib/X11/Xlib.h	/^	char *scratch_buffer;	\/* place to hang scratch buffer *\/$/;"	m	struct:_XDisplay
scratch_length	xlib/X11/Xlib.h	/^	unsigned long scratch_length;	\/* length of scratch buffer *\/$/;"	m	struct:_XDisplay
screen	generic/tk3d.h	/^    Screen *screen;		\/* Screen on which the border will be used. *\/$/;"	m	struct:TkBorder
screen	generic/tkColor.h	/^    Screen *screen;		\/* Screen where this color is valid. Used to$/;"	m	struct:TkColor
screen	generic/tkFont.h	/^    Screen *screen;		\/* The screen where this font is valid. *\/$/;"	m	struct:TkFont
screen	unix/tkUnixRFont.c	/^    int screen;$/;"	m	struct:__anon221	file:
screen	xlib/X11/Xlib.h	/^		Screen *screen;$/;"	m	union:__anon325
screen	xlib/X11/Xlib.h	/^    Screen *screen;		\/* back pointer to correct screen *\/$/;"	m	struct:__anon274
screen	xlib/X11/Xutil.h	/^  int screen;$/;"	m	struct:__anon264
screenInfo	generic/tkBind.c	/^    ScreenInfo screenInfo;	\/* Keeps track of the current display and$/;"	m	struct:TkBindInfo_	file:
screenName	generic/tkFrame.c	/^    char *screenName;		\/* Screen on which widget is created. Non-null$/;"	m	struct:__anon145	file:
screenNum	generic/tk.h	/^    int screenNum;$/;"	m	struct:Tk_FakeWin
screenNum	generic/tkBitmap.c	/^    int screenNum;		\/* Screen on which bitmap is valid. *\/$/;"	m	struct:TkBitmap	file:
screenNum	generic/tkGC.c	/^    int screenNum;		\/* screen number of display *\/$/;"	m	struct:__anon141	file:
screenNum	generic/tkInt.h	/^    int screenNum;		\/* Index of screen for window, among all those$/;"	m	struct:TkWindow
screens	xlib/X11/Xlib.h	/^	Screen *screens;	\/* pointer to list of screens *\/$/;"	m	struct:_XDisplay
script	generic/tkBind.c	/^    char *script;		\/* Binding script to evaluate when sequence$/;"	m	struct:PatSeq	file:
scriptPath	macosx/tkMacOSXInit.c	/^static char scriptPath[PATH_MAX + 1] = "";$/;"	v	file:
scrollButton	library/demos/cscroll.tcl	/^proc scrollButton canvas {$/;"	p
scrollCmd	generic/tkEntry.h	/^    char *scrollCmd;		\/* Command prefix for communicating with$/;"	m	struct:__anon183
scrollCmd	generic/ttk/ttkWidget.h	/^    char 	*scrollCmd;	\/* Widget option *\/$/;"	m	struct:__anon49
scrollEnter	library/demos/cscroll.tcl	/^proc scrollEnter canvas {$/;"	p
scrollGC	generic/tkTextDisp.c	/^    GC scrollGC;		\/* Graphics context for copying from one place$/;"	m	struct:TextDInfo	file:
scrollLeave	library/demos/cscroll.tcl	/^proc scrollLeave canvas {$/;"	p
scrollPtr	generic/ttk/ttkScroll.c	/^    Scrollable	*scrollPtr;$/;"	m	struct:ScrollHandleRec	file:
scrollWinPtr	macosx/tkMacOSXWm.h	/^    TkWindow *scrollWinPtr;	\/* Ptr to scrollbar handling grow widget. *\/$/;"	m	struct:TkWmInfo
scrollX1	generic/tkCanvas.h	/^    int scrollX1, scrollY1, scrollX2, scrollY2;$/;"	m	struct:TkCanvas
scrollX2	generic/tkCanvas.h	/^    int scrollX1, scrollY1, scrollX2, scrollY2;$/;"	m	struct:TkCanvas
scrollY1	generic/tkCanvas.h	/^    int scrollX1, scrollY1, scrollX2, scrollY2;$/;"	m	struct:TkCanvas
scrollY2	generic/tkCanvas.h	/^    int scrollX1, scrollY1, scrollX2, scrollY2;$/;"	m	struct:TkCanvas
scrollbar	generic/ttk/ttkScrollbar.c	/^    ScrollbarPart scrollbar;$/;"	m	struct:__anon52	file:
scrollbarTimer	generic/tkTextDisp.c	/^    Tcl_TimerToken scrollbarTimer;$/;"	m	struct:TextDInfo	file:
scrollbar_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable scrollbar_statemap[] =$/;"	v	file:
searchElide	generic/tkText.c	/^    int searchElide;		\/* Search in hidden text as well. *\/$/;"	m	struct:SearchSpec	file:
searchOver	generic/tkCanvas.c	/^    int searchOver;		\/* Non-zero means NextItem should always$/;"	m	struct:TagSearch	file:
searchRange	win/tkWinFont.c	/^    USHORT searchRange;		\/* 2 x (2**floor(log2(segCount))). *\/$/;"	m	struct:SEGMENTTABLE	file:
segCount	win/tkWinFont.c	/^    int segCount;		\/* The length of the following arrays. *\/$/;"	m	struct:FontFamily	file:
segCountX2	win/tkWinFont.c	/^    USHORT segCountX2;		\/* 2 x segCount. *\/$/;"	m	struct:SEGMENTTABLE	file:
segOffset	generic/tkText.h	/^    int segOffset;		\/* Offset of segment within line. *\/$/;"	m	struct:TkTextElideInfo
segPtr	generic/tkText.h	/^    TkTextSegment *segPtr;	\/* Actual tag segment returned by last call to$/;"	m	struct:TkTextSearch
segPtr	generic/tkText.h	/^    TkTextSegment *segPtr;	\/* Segment to look at next. *\/$/;"	m	struct:TkTextElideInfo
segPtr	generic/tkText.h	/^    struct TkTextSegment *segPtr;$/;"	m	struct:TkTextLine	typeref:struct:TkTextLine::TkTextSegment
segment	win/tkWinFont.c	/^    SEGMENTTABLE segment;$/;"	m	union:SUBTABLE	file:
selBorder	generic/tk.h	/^    Tk_3DBorder selBorder;	\/* Border and background for selected$/;"	m	struct:Tk_CanvasTextInfo
selBorder	generic/tkEntry.h	/^    Tk_3DBorder selBorder;	\/* Border and background for selected$/;"	m	struct:__anon183
selBorder	generic/tkListbox.c	/^    Tk_3DBorder selBorder;	\/* Borders and backgrounds for selected$/;"	m	struct:__anon149	file:
selBorder	generic/tkListbox.c	/^    Tk_3DBorder selBorder;	\/* Used for selected text *\/$/;"	m	struct:__anon150	file:
selBorder	generic/tkText.h	/^    Tk_3DBorder selBorder;	\/* Border and background for selected$/;"	m	struct:TkText
selBorderObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *selBorderObj;	\/* Border and background for selection *\/$/;"	m	struct:__anon25	file:
selBorderWidth	generic/tk.h	/^    int selBorderWidth;		\/* Width of border around selection. Read-only$/;"	m	struct:Tk_CanvasTextInfo
selBorderWidth	generic/tkEntry.h	/^    int selBorderWidth;		\/* Width of border around selection. *\/$/;"	m	struct:__anon183
selBorderWidth	generic/tkListbox.c	/^    int selBorderWidth;		\/* Width of border around selection. *\/$/;"	m	struct:__anon149	file:
selBorderWidth	generic/tkText.h	/^    int selBorderWidth;		\/* Width of border around selection. *\/$/;"	m	struct:TkText
selBorderWidthObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *selBorderWidthObj;	\/* Width of selection border *\/$/;"	m	struct:__anon25	file:
selBorderWidthPtr	generic/tkText.h	/^    Tcl_Obj *selBorderWidthPtr;	\/* Width of border around selection. *\/$/;"	m	struct:TkText
selCmd	generic/tkEntry.c	/^enum selCmd {$/;"	g	file:
selCmdNames	generic/tkEntry.c	/^static const char *const selCmdNames[] = {$/;"	v	file:
selCommandNames	generic/tkListbox.c	/^static const char *const selCommandNames[] = {$/;"	v	file:
selElement	generic/tkEntry.h	/^    int selElement;		\/* currently selected control *\/$/;"	m	struct:__anon184
selElementNames	generic/tkEntry.c	/^static const char *const selElementNames[] = {$/;"	v	file:
selFgColor	generic/tkListbox.c	/^    XColor *selFgColor;		\/* Text color in selected mode. *\/$/;"	m	struct:__anon150	file:
selFgColorPtr	generic/tk.h	/^    XColor *selFgColorPtr;	\/* Foreground color for selected text.$/;"	m	struct:Tk_CanvasTextInfo
selFgColorPtr	generic/tkEntry.h	/^    XColor *selFgColorPtr;	\/* Foreground color for selected text. *\/$/;"	m	struct:__anon183
selFgColorPtr	generic/tkListbox.c	/^    XColor *selFgColorPtr;	\/* Foreground color for selected elements. *\/$/;"	m	struct:__anon149	file:
selFgColorPtr	generic/tkText.h	/^    XColor *selFgColorPtr;	\/* Foreground color for selected text. This is$/;"	m	struct:TkText
selForegroundObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *selForegroundObj;	\/* Foreground color for selected text *\/$/;"	m	struct:__anon25	file:
selHandlerList	generic/tkInt.h	/^    struct TkSelHandler *selHandlerList;$/;"	m	struct:TkWindow	typeref:struct:TkWindow::TkSelHandler
selIndex	generic/tkText.h	/^    TkTextIndex selIndex;	\/* Used during multi-pass selection$/;"	m	struct:TkText
selItemPtr	generic/tk.h	/^    Tk_Item *selItemPtr;	\/* Pointer to selected item. NULL means$/;"	m	struct:Tk_CanvasTextInfo
selPtr	generic/tkSelect.h	/^    TkSelHandler *selPtr;	\/* Handler being executed. If this handler is$/;"	m	struct:TkSelInProgress
selTagPtr	generic/tkText.h	/^    TkTextTag *selTagPtr;	\/* Pointer to "sel" tag. Used to tell when a$/;"	m	struct:TkText
selTextGC	generic/tkCanvText.c	/^    GC selTextGC;		\/* Graphics context for selected text. *\/$/;"	m	struct:TextItem	file:
selTextGC	generic/tkEntry.h	/^    GC selTextGC;		\/* For drawing selected text. *\/$/;"	m	struct:__anon183
selTextGC	generic/tkListbox.c	/^    GC selTextGC;		\/* For drawing selected text. *\/$/;"	m	struct:__anon149	file:
selVarNamePtr	generic/tkButton.h	/^    Tcl_Obj *selVarNamePtr;	\/* Value of -variable option: specifies name$/;"	m	struct:__anon178
selcommand	generic/tkListbox.c	/^enum selcommand {$/;"	g	file:
selectAnchor	generic/tk.h	/^    int selectAnchor;		\/* Character index of fixed end of selection$/;"	m	struct:Tk_CanvasTextInfo
selectAnchor	generic/tkEntry.h	/^    int selectAnchor;		\/* Fixed end of selection (i.e. "select to"$/;"	m	struct:__anon183
selectAnchor	generic/tkListbox.c	/^    int selectAnchor;		\/* Fixed end of selection (i.e. element at$/;"	m	struct:__anon149	file:
selectAndLoadDir	library/demos/image2.tcl	/^proc selectAndLoadDir w {$/;"	p
selectBorder	generic/tkButton.h	/^    Tk_3DBorder selectBorder;	\/* Value of -selectcolor option: specifies$/;"	m	struct:__anon178
selectFirst	generic/tk.h	/^    int selectFirst;		\/* Character index of first selected$/;"	m	struct:Tk_CanvasTextInfo
selectFirst	generic/tkEntry.h	/^    int selectFirst;		\/* Character index of first selected character$/;"	m	struct:__anon183
selectFirst	generic/ttk/ttkEntry.c	/^    int selectFirst;		\/* Index of start of selection, or -1 *\/$/;"	m	struct:__anon26	file:
selectImage	generic/tkButton.h	/^    Tk_Image selectImage;	\/* Derived from selectImagePtr by calling$/;"	m	struct:__anon178
selectImage	generic/tkMenu.h	/^    Tk_Image selectImage;	\/* Image to display in entry when selected, or$/;"	m	struct:TkMenuEntry
selectImagePtr	generic/tkButton.h	/^    Tcl_Obj *selectImagePtr;	\/* Value of -selectimage option: specifies$/;"	m	struct:__anon178
selectImagePtr	generic/tkMenu.h	/^    Tcl_Obj *selectImagePtr;	\/* Name of image to display when selected, or$/;"	m	struct:TkMenuEntry
selectLast	generic/tk.h	/^    int selectLast;		\/* Character index of last selected character.$/;"	m	struct:Tk_CanvasTextInfo
selectLast	generic/tkEntry.h	/^    int selectLast;		\/* Character index just after last selected$/;"	m	struct:__anon183
selectLast	generic/ttk/ttkEntry.c	/^    int selectLast;		\/* Index of end of selection, or -1 *\/$/;"	m	struct:__anon26	file:
selectMode	generic/tkListbox.c	/^    Tk_Uid selectMode;		\/* Selection style: single, browse, multiple,$/;"	m	struct:__anon149	file:
selectModeObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *selectModeObj;	\/* -selectmode option *\/$/;"	m	struct:__anon83	file:
selection	generic/tkListbox.c	/^    Tcl_HashTable *selection;	\/* Tracks selection *\/$/;"	m	struct:__anon149	file:
selection	generic/tkSelect.h	/^    Atom selection;		\/* Selection being requested. *\/$/;"	m	struct:TkSelRetrievalInfo
selection	generic/tkSelect.h	/^    Atom selection;		\/* Selection name, e.g. XA_PRIMARY. *\/$/;"	m	struct:TkSelHandler
selection	generic/tkSelect.h	/^    Atom selection;		\/* Selection name, e.g. XA_PRIMARY. *\/$/;"	m	struct:TkSelectionInfo
selection	unix/tkUnixSelect.c	/^    Atom selection;		\/* Selection that is being retrieved. *\/$/;"	m	struct:IncrInfo	file:
selection	xlib/X11/Xlib.h	/^	Atom selection;$/;"	m	struct:__anon310
selection	xlib/X11/Xlib.h	/^	Atom selection;$/;"	m	struct:__anon311
selection	xlib/X11/Xlib.h	/^	Atom selection;$/;"	m	struct:__anon312
selectionInfoPtr	generic/tkInt.h	/^    struct TkSelectionInfo *selectionInfoPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkSelectionInfo
selectionProc	generic/tk.h	/^    Tk_ItemSelectionProc *selectionProc;$/;"	m	struct:Tk_ItemType
selelement	generic/tkEntry.h	/^enum selelement {$/;"	g
sendDebug	unix/tkUnixSend.c	/^    int sendDebug;		\/* This can be set while debugging to do$/;"	m	struct:__anon217	file:
sendSerial	unix/tkUnixSend.c	/^    int sendSerial;		\/* The serial number that was used in the last$/;"	m	struct:__anon217	file:
send_event	generic/tk.h	/^    Bool send_event;		\/* True if this came from a SendEvent$/;"	m	struct:__anon10
send_event	generic/tk.h	/^    Bool send_event;		\/* True if this came from a SendEvent$/;"	m	struct:__anon9
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon287
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon288
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon289
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon290
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon291
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon292
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon293
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon294
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon295
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon296
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon297
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon298
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon299
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon300
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon301
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon302
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon303
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon304
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon305
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon306
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon307
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon308
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon309
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon310
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon311
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon312
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon313
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon314
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon316
send_event	xlib/X11/Xlib.h	/^	Bool send_event;	\/* true if this came from a SendEvent request *\/$/;"	m	struct:__anon318
sep	tests/butGeom.tcl	/^proc sep {} {$/;"	p
sep	tests/butGeom2.tcl	/^proc sep {} {$/;"	p
separated	generic/tkCanvPs.c	/^    int separated;		\/* Whether to use separate color bands *\/$/;"	m	struct:TkColormapData	file:
separator	generic/ttk/ttkSeparator.c	/^    SeparatorPart separator;$/;"	m	struct:__anon117	file:
serial	generic/tk.h	/^    unsigned long serial;	\/* # of last request processed by server. *\/$/;"	m	struct:__anon10
serial	generic/tk.h	/^    unsigned long serial;	\/* # of last request processed by server. *\/$/;"	m	struct:__anon9
serial	generic/tkGrab.c	/^    unsigned int serial;	\/* Serial number with which to compare. *\/$/;"	m	struct:__anon143	file:
serial	generic/tkOption.c	/^    int serial;			\/* A serial number for all options entered$/;"	m	struct:ThreadSpecificData	file:
serial	generic/tkSelect.h	/^    int serial;			\/* Serial number of last XSelectionSetOwner$/;"	m	struct:TkSelectionInfo
serial	generic/ttk/ttkTreeview.c	/^    int serial;			\/* Next item # for autogenerated names *\/$/;"	m	struct:__anon83	file:
serial	unix/tkUnixSend.c	/^    int serial;			\/* Serial number expected in result. *\/$/;"	m	struct:PendingCommand	file:
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon287
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon288
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon289
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon290
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon291
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon292
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon293
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon294
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon295
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon296
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon297
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon298
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon299
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon300
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon301
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon302
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon303
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon304
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon305
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon306
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon307
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon308
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon309
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon310
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon311
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon312
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon313
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon314
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon316
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* # of last request processed by server *\/$/;"	m	struct:__anon318
serial	xlib/X11/Xlib.h	/^	unsigned long serial;	\/* serial number of failed request *\/$/;"	m	struct:__anon317
serifClass	generic/tkFont.c	/^static const char *const serifClass[] = {$/;"	v	file:
serverWinPtr	generic/tkInt.h	/^    struct TkWindow *serverWinPtr;$/;"	m	struct:TkDisplay	typeref:struct:TkDisplay::TkWindow
setColor	library/demos/clrpick.tcl	/^proc setColor {w button name options} {$/;"	p
setColor_helper	library/demos/clrpick.tcl	/^proc setColor_helper {w options color} {$/;"	p
setFrameSize	macosx/tkMacOSXWindowEvent.c	/^-(void) setFrameSize: (NSSize)newsize$/;"	f
setGrid	generic/tkListbox.c	/^    int setGrid;		\/* Non-zero means pass gridding information to$/;"	m	struct:__anon149	file:
setGrid	generic/tkText.h	/^    int setGrid;		\/* Non-zero means pass gridding information to$/;"	m	struct:TkText
setHeight	library/demos/vscale.tcl	/^proc setHeight {w height} {$/;"	p
setMarkedText	macosx/tkMacOSXKeyEvent.c	/^- (void)setMarkedText: (id)aString selectedRange: (NSRange)selRange$/;"	f
setProc	generic/tk.h	/^    Tk_CustomOptionSetProc *setProc;$/;"	m	struct:Tk_ObjCustomOption
setState	library/demos/ttkbut.tcl	/^proc setState {rootWidget exceptThese value} {$/;"	p
setStipple	tests/canvPsText.tcl	/^proc setStipple c {$/;"	p
setWidth	library/demos/hscale.tcl	/^proc setWidth {w width} {$/;"	p
setargv	win/winMain.c	/^setargv($/;"	f	file:
settingsTable	generic/ttk/ttkTheme.c	/^    Tcl_HashTable	settingsTable;	\/* KEY: string; VALUE: StateMap *\/$/;"	m	struct:Ttk_Style_	file:
setup	tests/constraints.tcl	/^	    proc setup args {$/;"	p
setupXEvent	macosx/tkMacOSXKeyEvent.c	/^setupXEvent(XEvent *xEvent, NSWindow *w, unsigned int state)$/;"	f	file:
setwidth	generic/tkFont.h	/^    int setwidth;		\/* The proportionate width, see below for$/;"	m	struct:TkXLFDAttributes
shadeColorObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *shadeColorObj;$/;"	m	struct:__anon91	file:
shadow	generic/tk3d.h	/^    Pixmap shadow;		\/* Stipple pattern to use for drawing shadows$/;"	m	struct:TkBorder
shadowColors	generic/ttk/ttkDefaultTheme.c	/^static int const shadowColors[6][4] = {$/;"	v	file:
shape	unix/tkUnixCursor.c	/^    unsigned int shape;$/;"	m	struct:CursorName	file:
shareable	generic/tkVisual.c	/^    int shareable;		\/* 0 means this colormap was allocated by a$/;"	m	struct:TkColormap	file:
sharedTextPtr	generic/tkText.h	/^    TkSharedText *sharedTextPtr;\/* Shared section of all peers. *\/$/;"	m	struct:TkText
sharedTextPtr	generic/tkText.h	/^    struct TkSharedText *sharedTextPtr;$/;"	m	struct:TkTextEmbImage	typeref:struct:TkTextEmbImage::TkSharedText
sharedTextPtr	generic/tkText.h	/^    struct TkSharedText *sharedTextPtr;$/;"	m	struct:TkTextEmbWindow	typeref:struct:TkTextEmbWindow::TkSharedText
sharedTextPtr	generic/tkTextBTree.c	/^    TkSharedText *sharedTextPtr;\/* Used to find tagTable in consistency$/;"	m	struct:BTree	file:
shiftreliefObj	generic/ttk/ttkElements.c	/^    Tcl_Obj	*shiftreliefObj;$/;"	m	struct:__anon36	file:
shl_load	unix/configure	/^shl_load ();$/;"	f
showChar	generic/tkEntry.h	/^    char *showChar;		\/* Value of -show option. If non-NULL, first$/;"	m	struct:__anon183
showChar	generic/ttk/ttkEntry.c	/^    char *showChar;		\/* Used to derive displayString *\/$/;"	m	struct:__anon26	file:
showFlags	generic/ttk/ttkTreeview.c	/^    unsigned showFlags;		\/* bitmask of subparts to display *\/$/;"	m	struct:__anon83	file:
showHandle	generic/tkPanedWindow.c	/^    int showHandle;		\/* Boolean indicating whether sash handles$/;"	m	struct:PanedWindow	file:
showHelp	macosx/tkMacOSXMenus.c	/^- (void) showHelp: (id) sender$/;"	f
showMenuAccelerators	win/tkWinMenu.c	/^static BOOL showMenuAccelerators;$/;"	v	file:
showMessageBox	library/demos/msgbox.tcl	/^proc showMessageBox {w} {$/;"	p
showObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *showObj;		\/* -show list *\/$/;"	m	struct:__anon83	file:
showPendulum	library/demos/pendulum.tcl	/^proc showPendulum {canvas {at {}} {x {}} {y {}}} {$/;"	p
showPhase	library/demos/pendulum.tcl	/^proc showPhase {canvas} {$/;"	p
showStrings	generic/ttk/ttkTreeview.c	/^static const char *showStrings[] = {$/;"	v	file:
showValue	generic/tkScale.h	/^    int showValue;		\/* Non-zero means to display the scale value$/;"	m	struct:TkScale
sibling	xlib/X11/Xlib.h	/^    Window sibling;$/;"	m	struct:__anon276
side	generic/tkPack.c	/^    Side side;			\/* Side of master against which this window is$/;"	m	struct:Packer	file:
sideNames	generic/tkPack.c	/^static const char *const sideNames[] = {$/;"	v	file:
sine	generic/tkCanvText.c	/^    double sine;		\/* Sine of angle field. *\/$/;"	m	struct:TextItem	file:
size	generic/tk.h	/^    unsigned int size;$/;"	m	struct:Tk_ClassProcs
size	generic/tkFont.h	/^    int size;			\/* Pointsize of font, 0 for default size, or$/;"	m	struct:TkFontAttributes
size	generic/tkGrid.c	/^    int size;			\/* Nominal size (width or height) in pixels of$/;"	m	struct:Gridder	file:
size	generic/tkSelect.h	/^    int size;			\/* Size of units returned by proc (8 for$/;"	m	struct:TkSelHandler
size	generic/tkText.h	/^    int size;			\/* Size of this segment (# of bytes of index$/;"	m	struct:TkTextSegment
size	generic/ttk/ttkTheme.h	/^    Ttk_ElementSizeProc *size;		\/* Compute min size and padding *\/$/;"	m	struct:Ttk_ElementSpec
size	macosx/tkMacOSXInt.h	/^    CGSize size;$/;"	m	struct:TkWindowPrivate
size	win/tkWinInt.h	/^    UINT size;			\/* Number of entries in the palette. *\/$/;"	m	struct:__anon229
sizeHintsFlags	macosx/tkMacOSXWm.h	/^    int sizeHintsFlags;		\/* Flags word for XSizeHints structure. If the$/;"	m	struct:TkWmInfo
sizeHintsFlags	unix/tkUnixWm.c	/^    int sizeHintsFlags;		\/* Flags word for XSizeHints structure. If the$/;"	m	struct:TkWmInfo	file:
sizeHintsFlags	win/tkWinWm.c	/^    int sizeHintsFlags;		\/* Flags word for XSizeHints structure. If the$/;"	m	struct:TkWmInfo	file:
sizeObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon55	file:
sizeObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon56	file:
sizeObj	generic/ttk/ttkClassicTheme.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon105	file:
sizeObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon92	file:
sizeObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon93	file:
sizeObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon96	file:
sizeObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon42	file:
sizeObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *sizeObj;$/;"	m	struct:__anon86	file:
sizeObjPtr	generic/tkSquare.c	/^    Tcl_Obj *sizeObjPtr;	\/* Width and height of square. *\/$/;"	m	struct:__anon142	file:
sizeProc	generic/ttk/ttkWidget.h	/^    int 	(*sizeProc)(void *recordPtr, int *widthPtr, int *heightPtr);$/;"	m	struct:WidgetSpec_
sizegripGrowDirection	macosx/ttkMacOSXTheme.c	/^static const ThemeGrowDirection sizegripGrowDirection$/;"	v	file:
sizeofSlaves	generic/tkPanedWindow.c	/^    int sizeofSlaves;		\/* Number of elements in the slaves array. *\/$/;"	m	struct:PanedWindow	file:
sl	macosx/tkMacOSXMenu.c	33;"	d	file:
sl	macosx/tkMacOSXMenu.c	91;"	d	file:
slack	generic/ttk/ttkTreeview.c	/^    int slack;			\/* Slack space (see Resizing section) *\/$/;"	m	struct:__anon83	file:
slant	generic/tkFont.h	/^    int slant;			\/* Slant flag; see below for def'n. *\/$/;"	m	struct:TkFontAttributes
slant	generic/tkFont.h	/^    int slant;			\/* The tristate value for the slant, which is$/;"	m	struct:TkXLFDAttributes
slantMap	generic/tkFont.c	/^static const TkStateMap slantMap[] = {$/;"	v	file:
slave	generic/tkGeometry.c	/^    Tk_Window slave;		\/* The slave window being positioned. *\/$/;"	m	struct:MaintainSlave	file:
slaveData	generic/ttk/ttkManager.c	/^    void 		*slaveData;$/;"	m	struct:__anon69	file:
slaveOptionSpecs	generic/tkPanedWindow.c	/^static const Tk_OptionSpec slaveOptionSpecs[] = {$/;"	v	file:
slaveOpts	generic/tkPanedWindow.c	/^    Tk_OptionTable slaveOpts;	\/* Token for slave cget option table. *\/$/;"	m	struct:__anon139	file:
slaveOpts	generic/tkPanedWindow.c	/^    Tk_OptionTable slaveOpts;	\/* Token for slave cget table. *\/$/;"	m	struct:PanedWindow	file:
slavePtr	generic/tkGeometry.c	/^    MaintainSlave *slavePtr;	\/* First in list of all slaves associated with$/;"	m	struct:MaintainMaster	file:
slavePtr	generic/tkGrid.c	/^    struct Gridder *slavePtr;	\/* First in list of slaves managed inside this$/;"	m	struct:Gridder	typeref:struct:Gridder::Gridder	file:
slavePtr	generic/tkPack.c	/^    struct Packer *slavePtr;	\/* First in list of slaves packed inside this$/;"	m	struct:Packer	typeref:struct:Packer::Packer	file:
slavePtr	generic/tkPlace.c	/^    struct Slave *slavePtr;	\/* First in linked list of slaves placed$/;"	m	struct:Master	typeref:struct:Master::Slave	file:
slaveTable	generic/tkInt.h	/^    Tcl_HashTable slaveTable;	\/* Maps from Tk_Window toke to the Slave$/;"	m	struct:TkDisplay
slaveWindow	generic/ttk/ttkManager.c	/^    Tk_Window 		slaveWindow;$/;"	m	struct:__anon69	file:
slaves	generic/tkPanedWindow.c	/^    Slave **slaves;		\/* Pointer to array of Slaves. *\/$/;"	m	struct:PanedWindow	file:
slaves	generic/ttk/ttkManager.c	/^    Ttk_Slave 		**slaves;$/;"	m	struct:TtkManager_	file:
slider	macosx/tkMacOSXScale.c	30;"	d	file:
sliderFirst	generic/tkScrollbar.h	/^    int sliderFirst;		\/* Pixel coordinate of top or left edge of$/;"	m	struct:TkScrollbar
sliderLast	generic/tkScrollbar.h	/^    int sliderLast;		\/* Coordinate of pixel just after bottom or$/;"	m	struct:TkScrollbar
sliderLength	generic/tkScale.h	/^    int sliderLength;		\/* Length of slider, measured in pixels along$/;"	m	struct:TkScale
sliderRelief	generic/tkScale.h	/^    int sliderRelief;		\/* Is slider to be drawn raised, sunken,$/;"	m	struct:TkScale
sliderlengthObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*sliderlengthObj;$/;"	m	struct:__anon58	file:
smooth	generic/tkCanvLine.c	/^    const Tk_SmoothMethod *smooth; \/* Non-zero means draw line smoothed (i.e.$/;"	m	struct:LineItem	file:
smooth	generic/tkCanvPoly.c	/^    const Tk_SmoothMethod *smooth; \/* Non-zero means draw shape smoothed (i.e.$/;"	m	struct:PolygonItem	file:
smooth	generic/tkCanvUtil.c	/^    Tk_SmoothMethod smooth;	\/* Name and functions associated with this$/;"	m	struct:SmoothAssocData	file:
smoothOption	generic/tkCanvLine.c	/^static const Tk_CustomOption smoothOption = {$/;"	v	file:
smoothOption	generic/tkCanvPoly.c	/^static const Tk_CustomOption smoothOption = {$/;"	v	file:
snprintf	win/nmakehlp.c	38;"	d	file:
solidGC	unix/tkUnix3d.c	/^    GC solidGC;		\/* Used to draw solid relief. *\/$/;"	m	struct:__anon218	file:
source	generic/tkBitmap.c	/^    const char *source;		\/* Bitmap bits. *\/$/;"	m	struct:__anon2	file:
source	generic/tkCursor.c	/^    const char *source;		\/* Cursor bits. *\/$/;"	m	struct:__anon1	file:
source	generic/tkInt.h	/^    const void *source;		\/* Bits for bitmap. *\/$/;"	m	struct:__anon132
source	unix/tkUnixRFont.c	/^    FcPattern *source;$/;"	m	struct:__anon220	file:
space	generic/ttk/ttkLabel.c	/^    int  		space;$/;"	m	struct:__anon63	file:
space	macosx/GNUmakefile	/^space			:= ${empty} ${empty}$/;"	m
spaceAbove	generic/tkTextDisp.c	/^    int spaceAbove;		\/* How much extra space was added to the top$/;"	m	struct:DLine	file:
spaceBelow	generic/tkTextDisp.c	/^    int spaceBelow;		\/* How much extra space was added to the$/;"	m	struct:DLine	file:
spaceObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj		*spaceObj;$/;"	m	struct:__anon63	file:
spacing1	generic/tkText.h	/^    int spacing1;		\/* Default extra spacing above first display$/;"	m	struct:TkText
spacing1	generic/tkText.h	/^    int spacing1;		\/* Extra spacing above first display line for$/;"	m	struct:TkTextTag
spacing1	generic/tkTextDisp.c	/^    int spacing1;		\/* Spacing above first dline in text line. *\/$/;"	m	struct:StyleValues	file:
spacing1String	generic/tkText.h	/^    char *spacing1String;	\/* -spacing1 option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
spacing2	generic/tkText.h	/^    int spacing2;		\/* Default extra spacing between display lines$/;"	m	struct:TkText
spacing2	generic/tkText.h	/^    int spacing2;		\/* Extra spacing between display lines for the$/;"	m	struct:TkTextTag
spacing2	generic/tkTextDisp.c	/^    int spacing2;		\/* Spacing between lines of dline. *\/$/;"	m	struct:StyleValues	file:
spacing2String	generic/tkText.h	/^    char *spacing2String;	\/* -spacing2 option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
spacing3	generic/tkText.h	/^    int spacing3;		\/* Default extra spacing below last display$/;"	m	struct:TkText
spacing3	generic/tkText.h	/^    int spacing3;		\/* Extra spacing below last display line for$/;"	m	struct:TkTextTag
spacing3	generic/tkTextDisp.c	/^    int spacing3;		\/* Spacing below last dline in text line. *\/$/;"	m	struct:StyleValues	file:
spacing3String	generic/tkText.h	/^    char *spacing3String;	\/* -spacing2 option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
specFlags	generic/tk.h	/^    int specFlags;		\/* Any combination of the values defined$/;"	m	struct:Tk_ConfigSpec
specPtr	generic/tkConfig.c	/^    const Tk_OptionSpec *specPtr;$/;"	m	struct:TkOption	file:
specPtr	generic/tkStyle.c	/^    struct Tk_ElementSpec *specPtr;$/;"	m	struct:StyledElement	typeref:struct:StyledElement::Tk_ElementSpec	file:
specPtr	generic/ttk/ttkTheme.c	/^    Ttk_ElementSpec *specPtr;	\/* Template provided during registration. *\/$/;"	m	struct:Ttk_ElementClass_	file:
specialAccelerators	macosx/tkMacOSXMenu.c	/^} specialAccelerators[] = {$/;"	v	typeref:struct:__anon200	file:
specialMenus	macosx/tkMacOSXMenu.c	/^} specialMenus[] = {$/;"	v	typeref:struct:__anon198	file:
specsArray	generic/tkMenu.c	/^static const Tk_OptionSpec *specsArray[] = {$/;"	v	file:
spinbox	generic/ttk/ttkEntry.c	/^    SpinboxPart spinbox;$/;"	m	struct:__anon31	file:
spinbutton_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable spinbutton_statemap[] =$/;"	v	file:
splineSteps	generic/tkCanvLine.c	/^    int splineSteps;		\/* Number of steps in each spline segment. *\/$/;"	m	struct:LineItem	file:
splineSteps	generic/tkCanvPoly.c	/^    int splineSteps;		\/* Number of steps in each spline segment. *\/$/;"	m	struct:PolygonItem	file:
splitProc	generic/tkText.h	/^    Tk_SegSplitProc *splitProc;	\/* Procedure to split large segment into two$/;"	m	struct:Tk_SegType
square	generic/ttk/ttkSquare.c	/^    SquarePart square;$/;"	m	struct:__anon112	file:
src	generic/tk.h	/^    char *src;			\/* Value to be used in setting dst; usage$/;"	m	struct:__anon5
ssize	generic/tkImgGIF.c	/^    int ssize;$/;"	m	struct:__anon129	file:
stack_mode	xlib/X11/Xlib.h	/^    int stack_mode;$/;"	m	struct:__anon276
stacks	generic/tkOption.c	/^    ElArray *stacks[NUM_STACKS];$/;"	m	struct:ThreadSpecificData	file:
stale	win/tkWinInt.h	/^    int stale;			\/* 1 if palette needs to be realized,$/;"	m	struct:__anon229
start	generic/tkCanvArc.c	/^    double start;		\/* Angle at which arc begins, in degrees$/;"	m	struct:ArcItem	file:
start	generic/tkFont.c	/^    const char *start;		\/* Pointer to simple string to be displayed.$/;"	m	struct:LayoutChunk	file:
start	generic/tkText.h	/^    TkTextLine *start;		\/* First B-tree line to show, or NULL to start$/;"	m	struct:TkText
startBuilding	win/buildall.vc.bat	/^:startBuilding$/;"	l
startCount	win/tkWinFont.c	/^    USHORT *startCount;		\/* Truetype information about the font, *\/$/;"	m	struct:FontFamily	file:
startEnd	generic/tkTextBTree.c	/^    TkTextLine **startEnd;$/;"	m	struct:BTree	file:
startEndCount	generic/tkTextBTree.c	/^    int startEndCount;$/;"	m	struct:BTree	file:
startEndRef	generic/tkTextBTree.c	/^    TkText **startEndRef;$/;"	m	struct:BTree	file:
startLine	generic/tkImgPNG.c	/^static const int startLine[8] = {$/;"	v	file:
startLine	generic/tkText.c	/^    int startLine;		\/* First line to examine. *\/$/;"	m	struct:SearchSpec	file:
startOffset	generic/tkText.c	/^    int startOffset;		\/* Index in first line to start at. *\/$/;"	m	struct:SearchSpec	file:
startX	generic/tkGrid.c	/^    int startX;			\/* Pixel offset of this layout within its$/;"	m	struct:__anon135	file:
startY	generic/tkGrid.c	/^    int startY;			\/* Pixel offset of this layout within its$/;"	m	struct:__anon135	file:
state	generic/tk.h	/^    Tk_State state;		\/* State of item. *\/$/;"	m	struct:Tk_Item
state	generic/tk.h	/^    unsigned int state;		\/* Key or button mask *\/$/;"	m	struct:__anon9
state	generic/tkButton.h	/^    enum state state;		\/* Value of -state option: specifies state of$/;"	m	struct:__anon178	typeref:enum:__anon178::state
state	generic/tkButton.h	/^enum state {$/;"	g
state	generic/tkCanvas.h	/^    int state;			\/* Last known modifier state. Used to defer$/;"	m	struct:TkCanvas
state	generic/tkEntry.h	/^    int state;			\/* Normal or disabled. Entry is read-only when$/;"	m	struct:__anon183
state	generic/tkEntry.h	/^enum state {$/;"	g
state	generic/tkImgGIF.c	/^    int state;			\/* decoder state (0-4 or GIF_DONE) *\/$/;"	m	struct:mFile	file:
state	generic/tkListbox.c	/^    int state;			\/* Listbox state. *\/$/;"	m	struct:__anon149	file:
state	generic/tkListbox.c	/^enum state {$/;"	g	file:
state	generic/tkMenu.h	/^    int state;			\/* State of button for display purposes:$/;"	m	struct:TkMenuEntry
state	generic/tkMenubutton.h	/^    enum state state;		\/* State of button for display purposes:$/;"	m	struct:__anon137	typeref:enum:__anon137::state
state	generic/tkMenubutton.h	/^enum state {$/;"	g
state	generic/tkScale.h	/^    enum state state;		\/* Values are active, normal, or disabled.$/;"	m	struct:TkScale	typeref:enum:TkScale::state
state	generic/tkScale.h	/^enum state {$/;"	g
state	generic/tkText.h	/^    int state;			\/* Either STATE_NORMAL or STATE_DISABLED. A$/;"	m	struct:TkText
state	generic/ttk/ttkLayout.c	/^    Ttk_State 	 	state;		\/* Current state *\/$/;"	m	struct:Ttk_LayoutNode_	file:
state	generic/ttk/ttkNotebook.c	/^    TAB_STATE 	state;$/;"	m	struct:__anon65	file:
state	generic/ttk/ttkTreeview.c	/^    Ttk_State 	state;$/;"	m	struct:TreeItemRec	file:
state	generic/ttk/ttkWidget.h	/^    Ttk_State state;		\/* Current widget state *\/$/;"	m	struct:__anon48
state	macosx/tkMacOSXMouseEvent.c	/^    unsigned int state;$/;"	m	struct:__anon194	file:
state	unix/tkUnixSelect.c	/^    Tcl_EncodingState *state;	\/* One state info per pair in multAtoms: State$/;"	m	struct:IncrInfo	file:
state	unix/tkUnixSelect.c	/^    Tcl_EncodingState state;	\/* The encoding state needed across chunks. *\/$/;"	m	struct:ConvertInfo	file:
state	xlib/X11/Xlib.h	/^	int state;		\/* ColormapInstalled, ColormapUninstalled *\/$/;"	m	struct:__anon313
state	xlib/X11/Xlib.h	/^	int state;		\/* NewValue, Deleted *\/$/;"	m	struct:__anon309
state	xlib/X11/Xlib.h	/^	int state;		\/* Visibility state *\/$/;"	m	struct:__anon296
state	xlib/X11/Xlib.h	/^	unsigned int state;	\/* key or button mask *\/$/;"	m	struct:__anon287
state	xlib/X11/Xlib.h	/^	unsigned int state;	\/* key or button mask *\/$/;"	m	struct:__anon288
state	xlib/X11/Xlib.h	/^	unsigned int state;	\/* key or button mask *\/$/;"	m	struct:__anon289
state	xlib/X11/Xlib.h	/^	unsigned int state;	\/* key or button mask *\/$/;"	m	struct:__anon290
stateEpoch	generic/tkText.h	/^    int stateEpoch;		\/* This is incremented each time the B-tree's$/;"	m	struct:TkSharedText
stateEpoch	generic/tkTextBTree.c	/^    int stateEpoch;		\/* Updated each time any aspect of the B-tree$/;"	m	struct:BTree	file:
stateMap	win/ttkWinTheme.c	/^    Ttk_StateTable *stateMap;	\/* map Tk states to Win32 flags *\/$/;"	m	struct:__anon244	file:
stateNames	generic/ttk/ttkState.c	/^static const char *const stateNames[] =$/;"	v	file:
stateObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *stateObj;$/;"	m	struct:__anon13	file:
stateObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *stateObj;		\/* Compatibility option -- see CheckStateObj *\/$/;"	m	struct:__anon26	file:
stateOption	generic/tkCanvArc.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkCanvBmap.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkCanvImg.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkCanvLine.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkCanvPoly.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkCanvText.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkCanvWind.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkCanvas.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateOption	generic/tkRectOval.c	/^static const Tk_CustomOption stateOption = {$/;"	v	file:
stateStrings	generic/tkButton.c	/^static const char *const stateStrings[] = {$/;"	v	file:
stateStrings	generic/tkEntry.c	/^static const char *const stateStrings[] = {$/;"	v	file:
stateStrings	generic/tkListbox.c	/^static const char *const stateStrings[] = {$/;"	v	file:
stateStrings	generic/tkMenubutton.c	/^static const char *const stateStrings[] = {$/;"	v	file:
stateStrings	generic/tkScale.c	/^static const char *const stateStrings[] = {$/;"	v	file:
stateStrings	generic/tkText.c	/^static const char *const stateStrings[] = {$/;"	v	file:
statemap	win/ttkWinXPTheme.c	/^    Ttk_StateTable *statemap;	\/* Map Tk states to XP states *\/$/;"	m	struct:__anon240	file:
states	generic/ttk/ttkImage.c	/^    Ttk_StateSpec	*states;	\/* array[mapCount] of states ... *\/$/;"	m	struct:TtkImageSpec	file:
staticSubFonts	unix/tkUnixFont.c	/^    SubFont staticSubFonts[SUBFONT_SPACE];$/;"	m	struct:UnixFont	file:
staticSubFonts	win/tkWinFont.c	/^    SubFont staticSubFonts[SUBFONT_SPACE];$/;"	m	struct:WinFont	file:
staticTagSpace	generic/tk.h	/^    Tk_Uid staticTagSpace[TK_TAG_SPACE];$/;"	m	struct:Tk_Item
status	win/tkWin32Dll.c	/^    int status;$/;"	m	struct:TCLEXCEPTION_REGISTRATION	file:
sticky	generic/tkGrid.c	/^    int sticky;			\/* which sides of its cavity this window$/;"	m	struct:Gridder	file:
sticky	generic/tkPanedWindow.c	/^    int sticky;			\/* Sticky string. *\/$/;"	m	struct:Slave	file:
sticky	generic/ttk/ttkImage.c	/^    Ttk_Sticky sticky;		\/* -stickiness specification *\/$/;"	m	struct:__anon60	file:
sticky	generic/ttk/ttkNotebook.c	/^    Ttk_Sticky	sticky;$/;"	m	struct:__anon65	file:
stickyObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj 	*stickyObj;$/;"	m	struct:__anon65	file:
stickyOption	generic/tkPanedWindow.c	/^static const Tk_ObjCustomOption stickyOption = {$/;"	v	file:
stipple	generic/tk.h	/^    Pixmap stipple;		\/* Outline Stipple pattern. *\/$/;"	m	struct:Tk_Outline
stipple	generic/tkCanvText.c	/^    Pixmap stipple;		\/* Stipple bitmap for text, or None. *\/$/;"	m	struct:TextItem	file:
stipple	xlib/X11/Xlib.h	/^	Pixmap stipple;		\/* stipple 1 plane pixmap for stipping *\/$/;"	m	struct:__anon268
stippleGC	generic/tkButton.h	/^    GC stippleGC;		\/* Used to produce disabled stipple effect for$/;"	m	struct:__anon178
stippleGC	generic/tkMenubutton.h	/^    GC stippleGC;		\/* Used to produce disabled stipple effect for$/;"	m	struct:__anon137
stippleObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj 	*stippleObj;	\/* For TTK_STATE_DISABLED *\/$/;"	m	struct:__anon62	file:
stopLine	generic/tkText.c	/^    int stopLine;		\/* Last line to examine, or -1 when we search$/;"	m	struct:SearchSpec	file:
stopOffset	generic/tkText.c	/^    int stopOffset;		\/* Index to stop at, provided stopLine is not$/;"	m	struct:SearchSpec	file:
strDataBuf	generic/tkImgPNG.c	/^    unsigned char *strDataBuf;	\/* Raw source data for from-string reads. *\/$/;"	m	struct:__anon179	file:
strDataLen	generic/tkImgPNG.c	/^    int strDataLen;		\/* Length of source data. *\/$/;"	m	struct:__anon179	file:
strKey	generic/tkInt.h	/^    const char *strKey;		\/* String representation of a value. *\/$/;"	m	struct:TkStateMap
strcasecmp	win/tkWinPort.h	74;"	d
stream	generic/tkImgPNG.c	/^    Tcl_ZlibStream stream;	\/* Inflating or deflating stream; this one is$/;"	m	struct:__anon179	file:
stressPtr	generic/tkInt.h	/^    TkStressedCmap *stressPtr;	\/* First in list of colormaps that have filled$/;"	m	struct:TkDisplay
stretch	generic/tkPanedWindow.c	/^    enum stretch stretch;	\/* Controls how slave grows\/shrinks *\/$/;"	m	struct:Slave	typeref:enum:Slave::stretch	file:
stretch	generic/tkPanedWindow.c	/^enum stretch {$/;"	g	file:
stretch	generic/tkText.h	/^    int stretch;		\/* Should window stretch to fill vertical$/;"	m	struct:TkTextEmbWindow
stretch	generic/ttk/ttkTreeview.c	/^    int 	stretch;	\/* Should column stretch while resizing? *\/$/;"	m	struct:__anon82	file:
stretchStrings	generic/tkPanedWindow.c	/^static const char *const stretchStrings[] = {$/;"	v	file:
strictLimits	generic/tkText.c	/^    int strictLimits;		\/* If set, matches must be completely inside$/;"	m	struct:SearchSpec	file:
strictMotif	generic/tkInt.h	/^    int strictMotif;		\/* This is linked to the tk_strictMotif global$/;"	m	struct:TkMainInfo
string	generic/tkCanvas.c	/^    const char *string;		\/* Tag expression string *\/$/;"	m	struct:TagSearch	file:
string	generic/tkEntry.h	/^    const char *string;		\/* Pointer to storage for string;$/;"	m	struct:__anon183
string	generic/tkFont.c	/^    const char *string;		\/* The string that was layed out. *\/$/;"	m	struct:TextLayout	file:
string	generic/tkImgBmap.c	/^    const char *string; \/* Next character of string data for bitmap,$/;"	m	struct:ParseInfo	file:
string	generic/tkMessage.c	/^    char *string;		\/* String displayed in message. *\/$/;"	m	struct:__anon153	file:
string	generic/ttk/ttkEntry.c	/^    char *string;		\/* Storage for string (malloced) *\/$/;"	m	struct:__anon26	file:
string	xlib/X11/Xlib.h	/^    } string;$/;"	m	struct:_XIMText	typeref:union:_XIMText::__anon331
stringIndex	generic/tkCanvas.c	/^    int stringIndex;		\/* Current position in string scan *\/$/;"	m	struct:TagSearch	file:
stringLength	generic/tkCanvas.c	/^    int stringLength;		\/* Length of tag expression string *\/$/;"	m	struct:TagSearch	file:
stringMatchProc	generic/tk.h	/^    Tk_ImageStringMatchProc *stringMatchProc;$/;"	m	struct:Tk_PhotoImageFormat
stringReadProc	generic/tk.h	/^    Tk_ImageStringReadProc *stringReadProc;$/;"	m	struct:Tk_PhotoImageFormat
stringWriteProc	generic/tk.h	/^    Tk_ImageStringWriteProc *stringWriteProc;$/;"	m	struct:Tk_PhotoImageFormat
strncasecmp	win/tkWinPort.h	73;"	d
strokearea	tests/arc.tcl	/^proc strokearea {x y} {$/;"	p
stubWindow	win/ttkWinXPTheme.c	/^    HWND                                stubWindow;$/;"	m	struct:__anon238	file:
style	generic/tkCanvArc.c	/^    Style style;		\/* How to draw arc: arc, chord, or$/;"	m	struct:ArcItem	file:
style	generic/ttk/ttkLayout.c	/^    Ttk_Style	 	style;$/;"	m	struct:Ttk_Layout_	file:
style	win/tkWinButton.c	/^    DWORD style;		\/* Window style flags. *\/$/;"	m	struct:WinButton	file:
style	win/tkWinWm.c	/^    DWORD style, exStyle;	\/* Style flags for the wrapper window. *\/$/;"	m	struct:TkWmInfo	file:
style	xlib/X11/Xlib.h	/^    XIMCaretStyle style;	 \/* Feedback of the caret *\/$/;"	m	struct:_XIMPreeditCaretCallbackStruct
styleConfig	win/tkWinWm.c	/^    LONG styleConfig;		\/* Extra user requested style bits *\/$/;"	m	struct:TkWmInfo	file:
styleData	generic/ttk/ttkEntry.c	/^    EntryStyleData styleData;	\/* Display style data (widget options) *\/$/;"	m	struct:__anon26	file:
styleDefaults	generic/ttk/ttkEntry.c	/^    EntryStyleData styleDefaults;\/* Style defaults (fallback values) *\/$/;"	m	struct:__anon26	file:
styleMask	macosx/tkMacOSXWm.c	/^    int flags; NSUInteger styleMask;$/;"	m	struct:__anon205	file:
styleName	generic/ttk/ttkTheme.c	/^    const char		*styleName;	\/* points to hash table key *\/$/;"	m	struct:Ttk_Style_	file:
styleObj	generic/ttk/ttkWidget.h	/^    Tcl_Obj *styleObj;		\/* Name of currently-applied style *\/$/;"	m	struct:__anon48
styleObjType	generic/tkStyle.c	/^static const Tcl_ObjType styleObjType = {$/;"	v	file:
styleOption	generic/tkCanvArc.c	/^static const Tk_CustomOption styleOption = {$/;"	v	file:
stylePtr	generic/tkText.h	/^    struct TextStyle *stylePtr;	\/* Display information, known only to$/;"	m	struct:TkTextDispChunk	typeref:struct:TkTextDispChunk::TextStyle
styleTable	generic/tkStyle.c	/^    Tcl_HashTable styleTable;	\/* Map a name to a style. Keys are strings,$/;"	m	struct:ThreadSpecificData	file:
styleTable	generic/tkTextDisp.c	/^    Tcl_HashTable styleTable;	\/* Hash table that maps from StyleValues to$/;"	m	struct:TextDInfo	file:
styleTable	generic/ttk/ttkTheme.c	/^    Tcl_HashTable styleTable;	     	\/* Map style names to Styles *\/$/;"	m	struct:Ttk_Theme_	file:
styles	macosx/GNUmakefile	/^styles			:= develop deploy$/;"	m
subFontArray	unix/tkUnixFont.c	/^    SubFont *subFontArray;	\/* Array of SubFonts that have been loaded in$/;"	m	struct:UnixFont	file:
subFontArray	win/tkWinFont.c	/^    SubFont *subFontArray;	\/* Array of SubFonts that have been loaded in$/;"	m	struct:WinFont	file:
subFontPtr	win/tkWinFont.c	/^    SubFont *subFontPtr;$/;"	m	struct:CanUse	file:
subFontPtrPtr	win/tkWinFont.c	/^    SubFont **subFontPtrPtr;$/;"	m	struct:CanUse	file:
subHeaderKeys	win/tkWinFont.c	/^    USHORT subHeaderKeys[256];	\/* Maps high bytes to subHeaders: value is$/;"	m	struct:HIBYTETABLE	file:
sub_image	xlib/X11/Xlib.h	/^	struct _XImage *(*sub_image)();$/;"	m	struct:_XImage::funcs	typeref:struct:_XImage::funcs::sub_image
sub_image	xlib/X11/Xlib.h	/^	struct _XImage *(*sub_image)(struct _XImage *, int, int, unsigned int, unsigned int);$/;"	m	struct:_XImage::funcs	typeref:struct:_XImage::funcs::sub_image
subensemble	generic/tkInt.h	/^    const struct TkEnsemble *subensemble;$/;"	m	struct:TkEnsemble	typeref:struct:TkEnsemble::TkEnsemble
subsampleX	generic/tkImgPhoto.c	/^    int subsampleX, subsampleY;	\/* Values specified for -subsample option. *\/$/;"	m	struct:SubcommandOptions	file:
subsampleY	generic/tkImgPhoto.c	/^    int subsampleX, subsampleY;	\/* Values specified for -subsample option. *\/$/;"	m	struct:SubcommandOptions	file:
subwindow	generic/tk.h	/^    Window subwindow;		\/* Child window. *\/$/;"	m	struct:__anon9
subwindow	xlib/X11/Xlib.h	/^	Window subwindow;	\/* child window *\/$/;"	m	struct:__anon287
subwindow	xlib/X11/Xlib.h	/^	Window subwindow;	\/* child window *\/$/;"	m	struct:__anon288
subwindow	xlib/X11/Xlib.h	/^	Window subwindow;	\/* child window *\/$/;"	m	struct:__anon289
subwindow	xlib/X11/Xlib.h	/^	Window subwindow;	\/* child window *\/$/;"	m	struct:__anon290
subwindow_mode	xlib/X11/Xlib.h	/^	int subwindow_mode;     \/* ClipByChildren, IncludeInferiors *\/$/;"	m	struct:__anon268
success	win/rmd.bat	/^:success$/;"	l
summaryPtr	generic/tkTextBTree.c	/^    Summary *summaryPtr;	\/* First in malloc-ed list of info about tags$/;"	m	struct:Node	file:
supported_styles	xlib/X11/Xlib.h	/^    XIMStyle *supported_styles;$/;"	m	struct:__anon329
symbolClass	generic/tkFont.c	/^static const char *const symbolClass[] = {$/;"	v	file:
synchandler	xlib/X11/Xlib.h	/^	int (*synchandler)();	\/* Synchronization handler *\/$/;"	m	struct:_XDisplay
synchronize	generic/tkWindow.c	/^static int synchronize = 0;$/;"	v	file:
synonymPtr	generic/tkConfig.c	/^	struct TkOption *synonymPtr;$/;"	m	union:TkOption::__anon182	typeref:struct:TkOption::__anon182::TkOption	file:
sysColors	win/tkWinColor.c	/^static const SystemColorEntry sysColors[] = {$/;"	v	file:
sysColors	win/ttkWinMonitor.c	/^static SystemColorEntry sysColors[] = {$/;"	v	file:
system	win/tkWinCursor.c	/^    int system;			\/* 1 if cursor is a system cursor, else 0. *\/$/;"	m	struct:__anon243	file:
systemClass	generic/tkFont.c	/^static const char *const systemClass[] = {$/;"	v	file:
systemColorMap	macosx/tkMacOSXColor.c	/^static const struct SystemColorMapEntry systemColorMap[] = {$/;"	v	typeref:struct:SystemColorMapEntry	file:
systemEncoding	win/tkWinFont.c	/^static Tcl_Encoding systemEncoding;$/;"	v	file:
systemFontMap	macosx/tkMacOSXFont.c	/^static const struct SystemFontMapEntry systemFontMap[] = {$/;"	v	typeref:struct:SystemFontMapEntry	file:
systemMap	win/tkWinFont.c	/^static const TkStateMap systemMap[] = {$/;"	v	file:
systemName	macosx/tkMacOSXFont.c	/^    const char *systemName;$/;"	m	struct:SystemFontMapEntry	file:
systemPalette	win/tkWinWm.c	/^    HPALETTE systemPalette;	\/* System palette; refers to the currently$/;"	m	struct:ThreadSpecificData	file:
tabArrayPtr	generic/tkText.h	/^    TkTextTabArray *tabArrayPtr;$/;"	m	struct:TkText
tabArrayPtr	generic/tkText.h	/^    struct TkTextTabArray *tabArrayPtr;$/;"	m	struct:TkTextTag	typeref:struct:TkTextTag::TkTextTabArray
tabArrayPtr	generic/tkTextDisp.c	/^    TkTextTabArray *tabArrayPtr;\/* Locations and types of tab stops (may be$/;"	m	struct:StyleValues	file:
tabIncrement	generic/tkText.h	/^    double tabIncrement;	\/* The accurate fractional pixel increment$/;"	m	struct:TkTextTabArray
tabLayout	generic/ttk/ttkNotebook.c	/^    Ttk_Layout tabLayout;	\/* Sublayout for tabs *\/$/;"	m	struct:__anon66	file:
tabMargins	generic/ttk/ttkNotebook.c	/^    Ttk_Padding 	tabMargins;	\/* Margins around tab row *\/$/;"	m	struct:__anon68	file:
tabOptionPtr	generic/tkText.h	/^    Tcl_Obj *tabOptionPtr; 	\/* Value of -tabs option string. *\/$/;"	m	struct:TkText
tabOptionTable	generic/ttk/ttkNotebook.c	/^    Tk_OptionTable tabOptionTable;	\/* Tab options *\/$/;"	m	struct:__anon66	file:
tabOrient	generic/ttk/ttkNotebook.c	/^    Ttk_Orient		tabOrient;	\/* ... *\/$/;"	m	struct:__anon68	file:
tabPlacement	generic/ttk/ttkNotebook.c	/^    Ttk_PositionSpec 	tabPlacement;	\/* How to pack tabs within tab row *\/$/;"	m	struct:__anon68	file:
tabPosition	generic/ttk/ttkNotebook.c	/^    Ttk_PositionSpec	tabPosition;	\/* Where to place tabs *\/$/;"	m	struct:__anon68	file:
tabStringPtr	generic/tkText.h	/^    Tcl_Obj *tabStringPtr;	\/* -tabs option string. NULL means option not$/;"	m	struct:TkTextTag
tabStyle	generic/tkText.h	/^    int tabStyle;		\/* One of TABULAR or WORDPROCESSOR or NONE (if$/;"	m	struct:TkTextTag
tabStyle	generic/tkText.h	/^    int tabStyle;		\/* One of TABULAR or WORDPROCESSOR. *\/$/;"	m	struct:TkText
tabStyle	generic/tkTextDisp.c	/^    int tabStyle;		\/* One of TABULAR or WORDPROCESSOR. *\/$/;"	m	struct:StyleValues	file:
tabStyleStrings	generic/tkText.c	/^static const char *const tabStyleStrings[] = {$/;"	v	file:
tabStyleStrings	generic/tkTextTag.c	/^static const char *const tabStyleStrings[] = {$/;"	v	file:
tabWidth	generic/tkFont.h	/^    int tabWidth;		\/* Width of tabs in this font (pixels). *\/$/;"	m	struct:TkFont
tabitem_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable tabitem_statemap[] =$/;"	v	file:
table	win/tkWinWm.c	/^    Tcl_HashTable *table;$/;"	m	struct:TkWmStackorderToplevelPair	file:
tablePtr	generic/tkBusy.h	/^    Tcl_HashTable *tablePtr;$/;"	m	struct:Busy
tablePtr	generic/tkImage.c	/^    Tcl_HashTable *tablePtr;	\/* Pointer to hash table containing image (the$/;"	m	struct:ImageMaster	file:
tabs	generic/tkText.h	/^    TkTextTab tabs[1];		\/* Array of tabs. The actual size will be$/;"	m	struct:TkTextTabArray
tag	generic/tkCanvas.c	/^    Tk_Uid tag;			\/* Tag to search for. 0 means return all$/;"	m	struct:TagSearch	file:
tagCnts	generic/tkText.h	/^    int *tagCnts;		\/* 0 or 1 depending if the tag with that$/;"	m	struct:TkTextElideInfo
tagName	generic/ttk/ttkTagSet.c	/^    const char	*tagName;		\/* Back-pointer to hash table entry *\/$/;"	m	struct:TtkTag	file:
tagOptionSpecs	generic/tkTextTag.c	/^static const Tk_OptionSpec tagOptionSpecs[] = {$/;"	v	file:
tagOptionTable	generic/ttk/ttkTreeview.c	/^    Tk_OptionTable tagOptionTable;$/;"	m	struct:__anon83	file:
tagPtr	generic/tk.h	/^    Tk_Uid *tagPtr;		\/* Pointer to array of tags. Usually points to$/;"	m	struct:Tk_Item
tagPtr	generic/tkInt.h	/^    ClientData *tagPtr;		\/* Points to array of tags used for bindings$/;"	m	struct:TkWindow
tagPtr	generic/tkText.h	/^    TkTextTag *tagPtr;		\/* Tag to search for (or tag found, if allTags$/;"	m	struct:TkTextSearch
tagPtr	generic/tkText.h	/^    struct TkTextTag *tagPtr;	\/* Tag that starts or ends here. *\/$/;"	m	struct:TkTextToggle	typeref:struct:TkTextToggle::TkTextTag
tagPtr	generic/tkTextBTree.c	/^    TkTextTag *tagPtr;		\/* Handle for tag. *\/$/;"	m	struct:Summary	file:
tagPtrs	generic/tkText.h	/^    TkTextTag **tagPtrs;	\/* Only filled with a tagPtr if the$/;"	m	struct:TkTextElideInfo
tagPtrs	generic/tkTextBTree.c	/^    TkTextTag **tagPtrs;	\/* Array of tags seen so far. Malloc-ed. *\/$/;"	m	struct:TagInfo	file:
tagRecord	generic/ttk/ttkTagSet.c	/^    void	*tagRecord;		\/* User data *\/$/;"	m	struct:TtkTag	file:
tagRootPtr	generic/tkText.h	/^    struct Node *tagRootPtr;	\/* Pointer into the B-Tree at the lowest node$/;"	m	struct:TkTextTag	typeref:struct:TkTextTag::Node
tagSpace	generic/tk.h	/^    int tagSpace;		\/* Total amount of tag space available at$/;"	m	struct:Tk_Item
tagTable	generic/tkText.h	/^    Tcl_HashTable tagTable;	\/* Hash table that maps from tag names to$/;"	m	struct:TkSharedText
tagTable	generic/ttk/ttkTreeview.c	/^    Ttk_TagTable tagTable;$/;"	m	struct:__anon83	file:
tags	generic/ttk/ttkTagSet.c	/^    Tcl_HashTable	tags;		\/* defined tags *\/$/;"	m	struct:TtkTagTable	file:
tags	generic/ttk/ttkWidget.h	/^    Ttk_Tag	*tags;$/;"	m	struct:TtkTagSet
tagsObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*tagsObj;$/;"	m	struct:TreeItemRec	file:
tagsOption	generic/tkCanvArc.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagsOption	generic/tkCanvBmap.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagsOption	generic/tkCanvImg.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagsOption	generic/tkCanvLine.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagsOption	generic/tkCanvPoly.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagsOption	generic/tkCanvText.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagsOption	generic/tkCanvWind.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagsOption	generic/tkRectOval.c	/^static const Tk_CustomOption tagsOption = {$/;"	v	file:
tagset	generic/ttk/ttkTreeview.c	/^    Ttk_TagSet	tagset;$/;"	m	struct:TreeItemRec	file:
tagvalUid	generic/tkCanvas.c	/^    Tk_Uid tagvalUid;$/;"	m	struct:__anon154	file:
tail	generic/ttk/ttkLayout.c	/^static const char *tail(const char *elementName)$/;"	f	file:
tail	xlib/X11/Xlib.h	/^	struct _XSQEvent *head, *tail;	\/* Input event queue. *\/$/;"	m	struct:_XDisplay	typeref:struct:_XDisplay::
takeFocus	generic/tkCanvas.h	/^    char *takeFocus;		\/* Value of -takefocus option; not used in the$/;"	m	struct:TkCanvas
takeFocus	generic/tkEntry.h	/^    char *takeFocus;		\/* Value of -takefocus option; not used in the$/;"	m	struct:__anon183
takeFocus	generic/tkFrame.c	/^    char *takeFocus;		\/* Value of -takefocus option; not used in the$/;"	m	struct:__anon145	file:
takeFocus	generic/tkListbox.c	/^    char *takeFocus;		\/* Value of -takefocus option; not used in the$/;"	m	struct:__anon149	file:
takeFocus	generic/tkMenubutton.h	/^    char *takeFocus;		\/* Value of -takefocus option; not used in the$/;"	m	struct:__anon137
takeFocus	generic/tkMessage.c	/^    char *takeFocus;		\/* Value of -takefocus option; not used in the$/;"	m	struct:__anon153	file:
takeFocus	generic/tkScrollbar.h	/^    char *takeFocus;		\/* Value of -takefocus option; not used in the$/;"	m	struct:TkScrollbar
takeFocus	generic/tkText.h	/^    char *takeFocus;		\/* Value of -takeFocus option; not used in the$/;"	m	struct:TkText
takeFocusPtr	generic/tkButton.h	/^    Tcl_Obj *takeFocusPtr;	\/* Value of -takefocus option; not used in the$/;"	m	struct:__anon178
takeFocusPtr	generic/tkMenu.h	/^    Tcl_Obj *takeFocusPtr;	\/* Value of -takefocus option; not used in the$/;"	m	struct:TkMenu
takeFocusPtr	generic/tkScale.h	/^    Tcl_Obj *takeFocusPtr;	\/* Value of -takefocus option; not used in the$/;"	m	struct:TkScale
takeFocusPtr	generic/ttk/ttkWidget.h	/^    Tcl_Obj *takeFocusPtr;	\/* Storage for -takefocus option *\/$/;"	m	struct:__anon48
target	generic/tkSelect.h	/^    Atom target;		\/* Desired form for selection. *\/$/;"	m	struct:TkSelRetrievalInfo
target	generic/tkSelect.h	/^    Atom target;		\/* Target type for selection conversion, such$/;"	m	struct:TkSelHandler
target	macosx/GNUmakefile	/^			target = $*$/;"	m
target	macosx/GNUmakefile	/^build-${PROJECT}:	target = ${BUILD_TARGET}$/;"	m
target	macosx/GNUmakefile	/^install-${PROJECT}:	target = ${INSTALL_TARGET}$/;"	m
target	unix/tkUnixSend.c	/^    const char *target;		\/* Name of interpreter command is being sent$/;"	m	struct:PendingCommand	file:
target	xlib/X11/Xlib.h	/^	Atom target;$/;"	m	struct:__anon311
target	xlib/X11/Xlib.h	/^	Atom target;$/;"	m	struct:__anon312
targets	macosx/GNUmakefile	/^targets			:= $(foreach v,${meta},${$v})$/;"	m
targetsAtom	generic/tkInt.h	/^    Atom targetsAtom;		\/* Atom for TARGETS. *\/$/;"	m	struct:TkDisplay
tclListValidFlags	library/comdlg.tcl	/^proc tclListValidFlags {v} {$/;"	p
tclParseConfigSpec	library/comdlg.tcl	/^proc tclParseConfigSpec {w specs flags argList} {$/;"	p
tclpIsAtty	generic/tkMain.c	/^    int (*tclpIsAtty) (int fd); \/* 16 *\/$/;"	m	struct:__anon138	file:
tearoff	generic/tkMenu.h	/^    int tearoff;		\/* 1 means this menu can be torn off. On some$/;"	m	struct:TkMenu
tearoff	library/demos/toolbar.tcl	/^proc tearoff {w x y} {$/;"	p
tearoffCommandPtr	generic/tkMenu.h	/^    Tcl_Obj *tearoffCommandPtr;	\/* If non-NULL, points to a command to run$/;"	m	struct:TkMenu
temp	generic/tkGrid.c	/^    int temp;			\/* This is a temporary value used for$/;"	m	struct:SlotInfo	file:
tempBufs	unix/tkUnixSelect.c	/^    char **tempBufs;		\/* One pointer for each pair in multAtoms;$/;"	m	struct:IncrInfo	file:
test	macosx/GNUmakefile	/^test			:= ${styles:%=test-%}$/;"	m
text	generic/tkCanvText.c	/^    char *text;			\/* Text for item (malloc-ed). *\/$/;"	m	struct:TextItem	file:
text	generic/tkMenubutton.h	/^    char *text;			\/* Text to display in button (malloc'ed) or$/;"	m	struct:__anon137
text	generic/ttk/ttkLabel.c	/^    TextElement 	text;$/;"	m	struct:__anon63	file:
text	xlib/X11/Xlib.h	/^	XIMText *text;$/;"	m	union:_XIMStatusDrawCallbackStruct::__anon335
text	xlib/X11/Xlib.h	/^    XIMText *text;$/;"	m	struct:_XIMPreeditDrawCallbackStruct
textAtom	generic/tkInt.h	/^    Atom textAtom;		\/* Atom for TEXT. *\/$/;"	m	struct:TkDisplay
textB1Move	library/demos/ctext.tcl	/^proc textB1Move {w x y} {$/;"	p
textB1Press	library/demos/ctext.tcl	/^proc textB1Press {w x y} {$/;"	p
textBs	library/demos/ctext.tcl	/^proc textBs {w} {$/;"	p
textClass	generic/tkText.c	/^static const Tk_ClassProcs textClass = {$/;"	v	file:
textColor	macosx/tkMacOSXColor.c	/^    ThemeTextColor textColor;$/;"	m	struct:SystemColorMapEntry	file:
textColorPtr	generic/tkFrame.c	/^    XColor *textColorPtr;	\/* Value of -fg option: specifies foreground$/;"	m	struct:__anon146	file:
textColorPtr	generic/tkScale.h	/^    XColor *textColorPtr;	\/* Color for drawing text. *\/$/;"	m	struct:TkScale
textDel	library/demos/ctext.tcl	/^proc textDel {w} {$/;"	p
textEnter	library/demos/ctext.tcl	/^proc textEnter {w} {$/;"	p
textGC	generic/tkEntry.h	/^    GC textGC;			\/* For drawing normal text. *\/$/;"	m	struct:__anon183
textGC	generic/tkFrame.c	/^    GC textGC;			\/* GC for drawing text in normal mode. *\/$/;"	m	struct:__anon146	file:
textGC	generic/tkListbox.c	/^    GC textGC;			\/* For drawing normal text. *\/$/;"	m	struct:__anon149	file:
textGC	generic/tkMenu.h	/^    GC textGC;			\/* GC for drawing text and other features of$/;"	m	struct:TkMenu
textGC	generic/tkMenu.h	/^    GC textGC;			\/* GC for drawing text in entry. NULL means$/;"	m	struct:TkMenuEntry
textGC	generic/tkMessage.c	/^    GC textGC;			\/* GC for drawing text in normal mode. *\/$/;"	m	struct:__anon153	file:
textGC	generic/tkScale.h	/^    GC textGC;			\/* GC for drawing text in normal mode. *\/$/;"	m	struct:TkScale
textGeomType	generic/tkTextWind.c	/^static const Tk_GeomMgr textGeomType = {$/;"	v	file:
textHeight	generic/tkButton.h	/^    int textHeight;		\/* Height needed to display text as requested,$/;"	m	struct:__anon178
textHeight	generic/tkMenubutton.h	/^    int textHeight;		\/* Height needed to display text as requested,$/;"	m	struct:__anon137
textInfo	generic/tkCanvas.h	/^    Tk_CanvasTextInfo textInfo; \/* Contains lots of fields; see tk.h for$/;"	m	struct:TkCanvas
textInfoPtr	generic/tkCanvText.c	/^    Tk_CanvasTextInfo *textInfoPtr;$/;"	m	struct:TextItem	file:
textInsert	library/demos/ctext.tcl	/^proc textInsert {w string} {$/;"	p
textLayout	generic/tkButton.h	/^    Tk_TextLayout textLayout;	\/* Saved text layout information. *\/$/;"	m	struct:__anon178
textLayout	generic/tkCanvText.c	/^    Tk_TextLayout textLayout;	\/* Cached text layout information. *\/$/;"	m	struct:TextItem	file:
textLayout	generic/tkEntry.h	/^    Tk_TextLayout textLayout;	\/* Cached text layout information. *\/$/;"	m	struct:__anon183
textLayout	generic/tkFrame.c	/^    Tk_TextLayout textLayout;	\/* Stored text layout information. *\/$/;"	m	struct:__anon146	file:
textLayout	generic/tkMenubutton.h	/^    Tk_TextLayout textLayout;	\/* Saved text layout information. *\/$/;"	m	struct:__anon137
textLayout	generic/tkMessage.c	/^    Tk_TextLayout textLayout;	\/* Saved layout information. *\/$/;"	m	struct:__anon153	file:
textLayout	generic/ttk/ttkEntry.c	/^    Tk_TextLayout textLayout;	\/* Cached text layout information. *\/$/;"	m	struct:__anon26	file:
textLayout	generic/ttk/ttkLabel.c	/^    Tk_TextLayout	textLayout;$/;"	m	struct:__anon61	file:
textLoadFile	library/demos/search.tcl	/^proc textLoadFile {w file} {$/;"	p
textMakePeer	library/demos/twind.tcl	/^proc textMakePeer {parent} {$/;"	p
textObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *textObj;$/;"	m	struct:__anon13	file:
textObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj	*textObj;$/;"	m	struct:__anon120	file:
textObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*textObj;$/;"	m	struct:__anon61	file:
textObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj *textObj;$/;"	m	struct:__anon65	file:
textObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*textObj;$/;"	m	struct:TreeItemRec	file:
textObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj *textObj;		\/* taken from item \/ data cell *\/$/;"	m	struct:__anon81	file:
textObj	win/ttkWinXPTheme.c	/^    Tcl_Obj *textObj;$/;"	m	struct:__anon242	file:
textOutProc	win/tkWinFont.c	/^    BOOL (WINAPI *textOutProc)(HDC hdc, int x, int y, TCHAR *str, int len);$/;"	m	struct:FontFamily	file:
textPaste	library/demos/ctext.tcl	/^proc textPaste {w pos} {$/;"	p
textPtr	generic/tkButton.h	/^    Tcl_Obj *textPtr;		\/* Value of -text option: specifies text to$/;"	m	struct:__anon178
textPtr	generic/tkFrame.c	/^    Tcl_Obj *textPtr;		\/* Value of -text option: specifies text to$/;"	m	struct:__anon146	file:
textPtr	generic/tkText.h	/^    const struct TkText *textPtr;$/;"	m	struct:TkTextTag	typeref:struct:TkTextTag::TkText
textPtr	generic/tkText.h	/^    struct TkText *textPtr;	\/* Information about the overall text$/;"	m	struct:TkTextEmbWindowClient	typeref:struct:TkTextEmbWindowClient::TkText
textPtr	generic/tkText.h	/^    struct TkText *textPtr;	\/* May be NULL, but otherwise the text widget$/;"	m	struct:TkTextIndex	typeref:struct:TkTextIndex::TkText
textPtr	generic/tkText.h	/^    struct TkText *textPtr;	\/* Overall information about text widget. *\/$/;"	m	struct:TkTextMark	typeref:struct:TkTextMark::TkText
textSearch	library/demos/search.tcl	/^proc textSearch {w string tag} {$/;"	p
textSplitWindow	library/demos/twind.tcl	/^proc textSplitWindow {textW} {$/;"	p
textToggle	library/demos/search.tcl	/^proc textToggle {cmd1 sleep1 cmd2 sleep2} {$/;"	p
textVarName	generic/tkEntry.h	/^    char *textVarName;		\/* Name of variable (malloc'ed) or NULL. If$/;"	m	struct:__anon183
textVarName	generic/tkMenubutton.h	/^    char *textVarName;		\/* Name of variable (malloc'ed) or NULL. If$/;"	m	struct:__anon137
textVarName	generic/tkMessage.c	/^    char *textVarName;		\/* Name of variable (malloc'ed) or NULL.$/;"	m	struct:__anon153	file:
textVarNamePtr	generic/tkButton.h	/^    Tcl_Obj *textVarNamePtr;	\/* Value of -textvariable option: specifies$/;"	m	struct:__anon178
textVariableObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *textVariableObj;$/;"	m	struct:__anon13	file:
textVariableObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *textVariableObj;	\/* Name of linked variable *\/$/;"	m	struct:__anon26	file:
textVariableTrace	generic/ttk/ttkButton.c	/^    Ttk_TraceHandle	*textVariableTrace;$/;"	m	struct:__anon13	file:
textVariableTrace	generic/ttk/ttkEntry.c	/^    Ttk_TraceHandle *textVariableTrace;$/;"	m	struct:__anon26	file:
textWidth	generic/tkButton.h	/^    int textWidth;		\/* Width needed to display text as requested,$/;"	m	struct:__anon178
textWidth	generic/tkMenubutton.h	/^    int textWidth;		\/* Width needed to display text as requested,$/;"	m	struct:__anon137
textWindBigB	library/demos/twind.tcl	/^proc textWindBigB w {$/;"	p
textWindBigH	library/demos/twind.tcl	/^proc textWindBigH w {$/;"	p
textWindBigP	library/demos/twind.tcl	/^proc textWindBigP w {$/;"	p
textWindDel	library/demos/twind.tcl	/^proc textWindDel t {$/;"	p
textWindOff	library/demos/twind.tcl	/^proc textWindOff w {$/;"	p
textWindOn	library/demos/twind.tcl	/^proc textWindOn w {$/;"	p
textWindPlot	library/demos/twind.tcl	/^proc textWindPlot t {$/;"	p
textWindSmallB	library/demos/twind.tcl	/^proc textWindSmallB w {$/;"	p
textWindSmallH	library/demos/twind.tcl	/^proc textWindSmallH w {$/;"	p
textWindSmallP	library/demos/twind.tcl	/^proc textWindSmallP w {$/;"	p
themeChangePending	generic/ttk/ttkTheme.c	/^    int themeChangePending;		\/* scheduled ThemeChangedProc call? *\/$/;"	m	struct:__anon115	file:
themeTable	generic/ttk/ttkTheme.c	/^    Tcl_HashTable themeTable;		\/* KEY: name; VALUE: Theme pointer *\/$/;"	m	struct:__anon115	file:
thicknessMetric	macosx/ttkMacOSXTheme.c	/^    SInt32		thicknessMetric;$/;"	m	struct:__anon211	file:
thicknessObj	generic/ttk/ttkDefaultTheme.c	/^    Tcl_Obj *thicknessObj;	\/* Short axis dimension *\/$/;"	m	struct:__anon97	file:
thicknessObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *thicknessObj;	\/* the height\/width of the bar *\/$/;"	m	struct:__anon46	file:
thicknessObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *thicknessObj;   \/* slider thickness *\/$/;"	m	struct:__anon45	file:
thicknessObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *thicknessObj;$/;"	m	struct:__anon44	file:
thicknessObj	generic/ttk/ttkPanedwindow.c	/^    Tcl_Obj *thicknessObj;$/;"	m	struct:__anon126	file:
thinShadowColors	generic/ttk/ttkDefaultTheme.c	/^static int const thinShadowColors[6][4] = {$/;"	v	file:
thisLineObj	generic/tkImgPNG.c	/^    Tcl_Obj *thisLineObj;	\/* Current line of pixels to process. *\/$/;"	m	struct:__anon179	file:
tickInterval	generic/tkScale.h	/^    double tickInterval;	\/* Distance between tick marks; 0 means don't$/;"	m	struct:TkScale
tile	xlib/X11/Xlib.h	/^	Pixmap tile;		\/* tile pixmap for tiling operations *\/$/;"	m	struct:__anon268
time	generic/tk.h	/^    Time time;			\/* Milliseconds. *\/$/;"	m	struct:__anon9
time	generic/tkSelect.h	/^    Time time;			\/* Timestamp used to acquire selection. *\/$/;"	m	struct:TkSelectionInfo
time	unix/tkUnixSelect.c	/^    Time time;			\/* Timestamp corresponding to selection at$/;"	m	struct:IncrInfo	file:
time	xlib/X11/Xlib.h	/^	Time time;		\/* milliseconds *\/$/;"	m	struct:__anon287
time	xlib/X11/Xlib.h	/^	Time time;		\/* milliseconds *\/$/;"	m	struct:__anon288
time	xlib/X11/Xlib.h	/^	Time time;		\/* milliseconds *\/$/;"	m	struct:__anon289
time	xlib/X11/Xlib.h	/^	Time time;		\/* milliseconds *\/$/;"	m	struct:__anon290
time	xlib/X11/Xlib.h	/^	Time time;$/;"	m	struct:__anon309
time	xlib/X11/Xlib.h	/^	Time time;$/;"	m	struct:__anon310
time	xlib/X11/Xlib.h	/^	Time time;$/;"	m	struct:__anon311
time	xlib/X11/Xlib.h	/^	Time time;$/;"	m	struct:__anon312
time	xlib/X11/Xlib.h	/^        Time time;$/;"	m	struct:__anon284
timeout	generic/tkSelect.h	/^    Tcl_TimerToken timeout;	\/* Token for current timeout procedure. *\/$/;"	m	struct:TkSelRetrievalInfo
timeout	unix/tkUnixSelect.c	/^    Tcl_TimerToken timeout;	\/* Token for timer function. *\/$/;"	m	struct:IncrInfo	file:
timer	generic/ttk/ttkBlink.c	/^    Tcl_TimerToken	timer;		\/* Blink timer *\/$/;"	m	struct:__anon99	file:
timer	generic/ttk/ttkProgress.c	/^    Tcl_TimerToken timer;		\/* Animation timer *\/$/;"	m	struct:__anon101	file:
timesAliases	generic/tkFont.c	/^static const char *const timesAliases[] = {$/;"	v	file:
timestampAtom	generic/tkInt.h	/^    Atom timestampAtom;		\/* Atom for TIMESTAMP. *\/$/;"	m	struct:TkDisplay
title	unix/tkUnixWm.c	/^    char *title;		\/* Title to display in window caption. If$/;"	m	struct:TkWmInfo	file:
title	win/tkWinWm.c	/^    char *title;		\/* Title to display in window caption. If$/;"	m	struct:TkWmInfo	file:
titleObj	macosx/tkMacOSXDialog.c	/^    Tcl_Obj *titleObj;$/;"	m	struct:FontchooserData	file:
titleObj	win/tkWinDialog.c	/^    Tcl_Obj *titleObj;          \/* Title for dialog *\/$/;"	m	struct:OFNOpts	file:
titleObj	win/tkWinDialog.c	/^    Tcl_Obj *titleObj;$/;"	m	struct:HookData	file:
titlePtr	generic/tkMenu.h	/^    Tcl_Obj *titlePtr;		\/* The title to use when this menu is torn$/;"	m	struct:TkMenu
titleUid	macosx/tkMacOSXWm.h	/^    Tk_Uid titleUid;		\/* Title to display in window caption. If NULL,$/;"	m	struct:TkWmInfo
tk::SaveGrabInfo	library/menu.tcl	/^proc tk::SaveGrabInfo w {$/;"	p
tk::ScrollButtonDown	library/scrlbar.tcl	/^proc tk::ScrollButtonDown {w x y} {$/;"	p
tk::ensure_psenc_is_loaded	library/mkpsenc.tcl	/^proc tk::ensure_psenc_is_loaded {} {$/;"	p
tkAboutDlg	generic/tkIntPlatDecls.h	/^    void (*tkAboutDlg) (void); \/* 7 *\/$/;"	m	struct:TkIntPlatStubs
tkAlignImageData	generic/tkIntPlatDecls.h	/^    char * (*tkAlignImageData) (XImage *image, int alignment, int bitOrder); \/* 0 *\/$/;"	m	struct:TkIntPlatStubs
tkAllocWindow	generic/tkIntDecls.h	/^    TkWindow * (*tkAllocWindow) (TkDisplay *dispPtr, int screenNum, TkWindow *parentPtr); \/* 0 *\/$/;"	m	struct:TkIntStubs
tkAlwaysValidAttributes	macosx/tkMacOSXWm.c	47;"	d	file:
tkApplicationMenu	macosx/tkMacOSXPrivate.h	/^enum { tkMainMenu = 1, tkApplicationMenu, tkWindowsMenu, tkHelpMenu};$/;"	e	enum:__anon190
tkArcType	generic/tkCanvArc.c	/^Tk_ItemType tkArcType = {$/;"	v
tkArcType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkArcType, tkBitmapType, tkImageType, tkLineType;$/;"	v
tkBTreeDebug	generic/tkText.h	/^MODULE_SCOPE int	tkBTreeDebug;$/;"	v
tkBTreeDebug	generic/tkTextBTree.c	/^int tkBTreeDebug = 0;$/;"	v
tkBTreeNumLines	generic/tkIntDecls.h	/^    int (*tkBTreeNumLines) (TkTextBTree tree, const struct TkText *textPtr); \/* 167 *\/$/;"	m	struct:TkIntStubs
tkBasicMenuEntryConfigSpecs	generic/tkMenu.c	/^static const Tk_OptionSpec tkBasicMenuEntryConfigSpecs[] = {$/;"	v	file:
tkBezierPoints	generic/tkIntDecls.h	/^    void (*tkBezierPoints) (double control[], int numSteps, double *coordPtr); \/* 1 *\/$/;"	m	struct:TkIntStubs
tkBezierScreenPoints	generic/tkIntDecls.h	/^    void (*tkBezierScreenPoints) (Tk_Canvas canvas, double control[], int numSteps, XPoint *xPointPtr); \/* 2 *\/$/;"	m	struct:TkIntStubs
tkBezierSmoothMethod	generic/tkCanvUtil.c	/^const Tk_SmoothMethod tkBezierSmoothMethod = {$/;"	v
tkBezierSmoothMethod	generic/tkInt.h	/^MODULE_SCOPE const Tk_SmoothMethod tkBezierSmoothMethod;$/;"	v
tkBindEventProc	generic/tkIntDecls.h	/^    void (*tkBindEventProc) (TkWindow *winPtr, XEvent *eventPtr); \/* 4 *\/$/;"	m	struct:TkIntStubs
tkBindFree	generic/tkIntDecls.h	/^    void (*tkBindFree) (TkMainInfo *mainPtr); \/* 5 *\/$/;"	m	struct:TkIntStubs
tkBindInit	generic/tkIntDecls.h	/^    void (*tkBindInit) (TkMainInfo *mainPtr); \/* 6 *\/$/;"	m	struct:TkIntStubs
tkBitmapImageType	generic/tkImgBmap.c	/^Tk_ImageType tkBitmapImageType = {$/;"	v
tkBitmapImageType	generic/tkInt.h	/^MODULE_SCOPE Tk_ImageType	tkBitmapImageType;$/;"	v
tkBitmapObjType	generic/tkBitmap.c	/^const Tcl_ObjType tkBitmapObjType = {$/;"	v
tkBitmapObjType	generic/tkInt.h	/^MODULE_SCOPE const Tcl_ObjType tkBitmapObjType;$/;"	v
tkBitmapType	generic/tkCanvBmap.c	/^Tk_ItemType tkBitmapType = {$/;"	v
tkBitmapType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkArcType, tkBitmapType, tkImageType, tkLineType;$/;"	v
tkBorderObjType	generic/tk3d.c	/^const Tcl_ObjType tkBorderObjType = {$/;"	v
tkBorderObjType	generic/tkInt.h	/^MODULE_SCOPE const Tcl_ObjType tkBorderObjType;$/;"	v
tkBusy	generic/tkBusy.h	/^    Tk_Window tkBusy;		\/* Busy window: Transparent window used to$/;"	m	struct:Busy
tkCanJoinAllSpacesAttribute	macosx/tkMacOSXWm.c	39;"	d	file:
tkCanvasDashParseProc	generic/tkIntDecls.h	/^    int (*tkCanvasDashParseProc) (ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, const char *value, char *widgRec, int offset); \/* 171 *\/$/;"	m	struct:TkIntStubs
tkCanvasDashPrintProc	generic/tkIntDecls.h	/^    CONST86 char * (*tkCanvasDashPrintProc) (ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr); \/* 172 *\/$/;"	m	struct:TkIntStubs
tkCascadeEntryConfigSpecs	generic/tkMenu.c	/^static const Tk_OptionSpec tkCascadeEntryConfigSpecs[] = {$/;"	v	file:
tkChangeEventWindow	generic/tkIntDecls.h	/^    void (*tkChangeEventWindow) (XEvent *eventPtr, TkWindow *winPtr); \/* 7 *\/$/;"	m	struct:TkIntStubs
tkCheckButtonEntryConfigSpecs	generic/tkMenu.c	/^static const Tk_OptionSpec tkCheckButtonEntryConfigSpecs[] = {$/;"	v	file:
tkClipBox	generic/tkIntDecls.h	/^    void (*tkClipBox) (TkRegion rgn, XRectangle *rect_return); \/* 113 *\/$/;"	m	struct:TkIntStubs
tkClipCleanup	generic/tkIntDecls.h	/^    void (*tkClipCleanup) (TkDisplay *dispPtr); \/* 143 *\/$/;"	m	struct:TkIntStubs
tkClipInit	generic/tkIntDecls.h	/^    int (*tkClipInit) (Tcl_Interp *interp, TkDisplay *dispPtr); \/* 8 *\/$/;"	m	struct:TkIntStubs
tkCmdMap	generic/tkCmds.c	/^static const TkEnsemble tkCmdMap[] = {$/;"	v	file:
tkColorObjType	generic/tkColor.c	/^const Tcl_ObjType tkColorObjType = {$/;"	v
tkColorObjType	generic/tkInt.h	/^MODULE_SCOPE const Tcl_ObjType tkColorObjType;$/;"	v
tkComputeAnchor	generic/tkIntDecls.h	/^    void (*tkComputeAnchor) (Tk_Anchor anchor, Tk_Window tkwin, int padX, int padY, int innerWidth, int innerHeight, int *xPtr, int *yPtr); \/* 9 *\/$/;"	m	struct:TkIntStubs
tkCreateCursorFromData	generic/tkIntDecls.h	/^    TkCursor * (*tkCreateCursorFromData) (Tk_Window tkwin, const char *source, const char *mask, int width, int height, int xHot, int yHot, XColor fg, XColor bg); \/* 12 *\/$/;"	m	struct:TkIntStubs
tkCreateFrame	generic/tkIntDecls.h	/^    int (*tkCreateFrame) (ClientData clientData, Tcl_Interp *interp, int argc, const char *const *argv, int toplevel, const char *appName); \/* 13 *\/$/;"	m	struct:TkIntStubs
tkCreateMainWindow	generic/tkIntDecls.h	/^    Tk_Window (*tkCreateMainWindow) (Tcl_Interp *interp, const char *screenName, const char *baseName); \/* 14 *\/$/;"	m	struct:TkIntStubs
tkCreateRegion	generic/tkIntDecls.h	/^    TkRegion (*tkCreateRegion) (void); \/* 114 *\/$/;"	m	struct:TkIntStubs
tkCreateThreadExitHandler	generic/tkIntDecls.h	/^    void (*tkCreateThreadExitHandler) (Tcl_ExitProc *proc, ClientData clientData); \/* 153 *\/$/;"	m	struct:TkIntStubs
tkCreateXEventSource	generic/tkIntPlatDecls.h	/^    void (*tkCreateXEventSource) (void); \/* 0 *\/$/;"	m	struct:TkIntPlatStubs
tkCreateXEventSource	generic/tkIntPlatDecls.h	/^    void (*tkCreateXEventSource) (void); \/* 37 *\/$/;"	m	struct:TkIntPlatStubs
tkCurrentTime	generic/tkIntDecls.h	/^    Time (*tkCurrentTime) (TkDisplay *dispPtr); \/* 15 *\/$/;"	m	struct:TkIntStubs
tkCursorNames	unix/tkUnixCursor.c	/^} tkCursorNames[] = {$/;"	v	typeref:struct:TkCursorName	file:
tkCursorObjType	generic/tkCursor.c	/^Tcl_ObjType const tkCursorObjType = {$/;"	v
tkCursorObjType	generic/tkInt.h	/^MODULE_SCOPE const Tcl_ObjType tkCursorObjType;$/;"	v
tkDebugBitmap	generic/tkIntDecls.h	/^    Tcl_Obj * (*tkDebugBitmap) (Tk_Window tkwin, const char *name); \/* 98 *\/$/;"	m	struct:TkIntStubs
tkDebugBorder	generic/tkIntDecls.h	/^    Tcl_Obj * (*tkDebugBorder) (Tk_Window tkwin, const char *name); \/* 99 *\/$/;"	m	struct:TkIntStubs
tkDebugColor	generic/tkIntDecls.h	/^    Tcl_Obj * (*tkDebugColor) (Tk_Window tkwin, const char *name); \/* 101 *\/$/;"	m	struct:TkIntStubs
tkDebugConfig	generic/tkIntDecls.h	/^    Tcl_Obj * (*tkDebugConfig) (Tcl_Interp *interp, Tk_OptionTable table); \/* 102 *\/$/;"	m	struct:TkIntStubs
tkDebugCursor	generic/tkIntDecls.h	/^    Tcl_Obj * (*tkDebugCursor) (Tk_Window tkwin, const char *name); \/* 100 *\/$/;"	m	struct:TkIntStubs
tkDebugFont	generic/tkIntDecls.h	/^    Tcl_Obj * (*tkDebugFont) (Tk_Window tkwin, const char *name); \/* 103 *\/$/;"	m	struct:TkIntStubs
tkDefButtonBorderWidth	generic/tkButton.c	/^char tkDefButtonBorderWidth[TCL_INTEGER_SPACE] = DEF_BUTTON_BORDER_WIDTH;$/;"	v
tkDefButtonBorderWidth	generic/tkButton.h	/^MODULE_SCOPE char tkDefButtonBorderWidth[TCL_INTEGER_SPACE];$/;"	v
tkDefButtonHighlightWidth	generic/tkButton.c	/^char tkDefButtonHighlightWidth[TCL_INTEGER_SPACE] = DEF_BUTTON_HIGHLIGHT_WIDTH;$/;"	v
tkDefButtonHighlightWidth	generic/tkButton.h	/^MODULE_SCOPE char tkDefButtonHighlightWidth[TCL_INTEGER_SPACE];$/;"	v
tkDefButtonPadx	generic/tkButton.c	/^char tkDefButtonPadx[TCL_INTEGER_SPACE] = DEF_BUTTON_PADX;$/;"	v
tkDefButtonPadx	generic/tkButton.h	/^MODULE_SCOPE char tkDefButtonPadx[TCL_INTEGER_SPACE];$/;"	v
tkDefButtonPady	generic/tkButton.c	/^char tkDefButtonPady[TCL_INTEGER_SPACE] = DEF_BUTTON_PADY;$/;"	v
tkDefButtonPady	generic/tkButton.h	/^MODULE_SCOPE char tkDefButtonPady[TCL_INTEGER_SPACE];$/;"	v
tkDefLabelHighlightWidth	generic/tkButton.c	/^char tkDefLabelHighlightWidth[TCL_INTEGER_SPACE] = DEF_LABEL_HIGHLIGHT_WIDTH;$/;"	v
tkDefLabelHighlightWidth	generic/tkButton.h	/^MODULE_SCOPE char tkDefLabelHighlightWidth[TCL_INTEGER_SPACE];$/;"	v
tkDefLabelPadx	generic/tkButton.c	/^char tkDefLabelPadx[TCL_INTEGER_SPACE] = DEF_LABCHKRAD_PADX;$/;"	v
tkDefLabelPadx	generic/tkButton.h	/^MODULE_SCOPE char tkDefLabelPadx[TCL_INTEGER_SPACE];$/;"	v
tkDefLabelPady	generic/tkButton.c	/^char tkDefLabelPady[TCL_INTEGER_SPACE] = DEF_LABCHKRAD_PADY;$/;"	v
tkDefLabelPady	generic/tkButton.h	/^MODULE_SCOPE char tkDefLabelPady[TCL_INTEGER_SPACE];$/;"	v
tkDefScrollbarWidth	generic/tkScrollbar.c	/^char tkDefScrollbarWidth[TCL_INTEGER_SPACE] = DEF_SCROLLBAR_WIDTH;$/;"	v
tkDefScrollbarWidth	generic/tkScrollbar.h	/^MODULE_SCOPE char tkDefScrollbarWidth[TCL_INTEGER_SPACE];$/;"	v
tkDeleteAllImages	generic/tkIntDecls.h	/^    void (*tkDeleteAllImages) (TkMainInfo *mainPtr); \/* 16 *\/$/;"	m	struct:TkIntStubs
tkDeleteThreadExitHandler	generic/tkIntDecls.h	/^    void (*tkDeleteThreadExitHandler) (Tcl_ExitProc *proc, ClientData clientData); \/* 154 *\/$/;"	m	struct:TkIntStubs
tkDemo	macosx/tkMacOSXMenus.c	/^- (void) tkDemo: (id) sender$/;"	f
tkDestroyRegion	generic/tkIntDecls.h	/^    void (*tkDestroyRegion) (TkRegion rgn); \/* 115 *\/$/;"	m	struct:TkIntStubs
tkDoConfigureNotify	generic/tkIntDecls.h	/^    void (*tkDoConfigureNotify) (TkWindow *winPtr); \/* 17 *\/$/;"	m	struct:TkIntStubs
tkDrawAngledChars	generic/tkIntDecls.h	/^    void (*tkDrawAngledChars) (Display *display, Drawable drawable, GC gc, Tk_Font tkfont, const char *source, int numBytes, double x, double y, double angle); \/* 184 *\/$/;"	m	struct:TkIntStubs
tkDrawAngledTextLayout	generic/tkIntDecls.h	/^    void (*tkDrawAngledTextLayout) (Display *display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, double angle, int firstChar, int lastChar); \/* 181 *\/$/;"	m	struct:TkIntStubs
tkDrawInsetFocusHighlight	generic/tkIntDecls.h	/^    void (*tkDrawInsetFocusHighlight) (Tk_Window tkwin, GC gc, int width, Drawable drawable, int padding); \/* 18 *\/$/;"	m	struct:TkIntStubs
tkEventDeadWindow	generic/tkIntDecls.h	/^    void (*tkEventDeadWindow) (TkWindow *winPtr); \/* 19 *\/$/;"	m	struct:TkIntStubs
tkFillPolygon	generic/tkIntDecls.h	/^    void (*tkFillPolygon) (Tk_Canvas canvas, double *coordPtr, int numPoints, Display *display, Drawable drawable, GC gc, GC outlineGC); \/* 20 *\/$/;"	m	struct:TkIntStubs
tkFindStateNum	generic/tkIntDecls.h	/^    int (*tkFindStateNum) (Tcl_Interp *interp, const char *option, const TkStateMap *mapPtr, const char *strKey); \/* 21 *\/$/;"	m	struct:TkIntStubs
tkFindStateNumObj	generic/tkIntDecls.h	/^    int (*tkFindStateNumObj) (Tcl_Interp *interp, Tcl_Obj *optionPtr, const TkStateMap *mapPtr, Tcl_Obj *keyPtr); \/* 104 *\/$/;"	m	struct:TkIntStubs
tkFindStateString	generic/tkIntDecls.h	/^    CONST86 char * (*tkFindStateString) (const TkStateMap *mapPtr, int numKey); \/* 22 *\/$/;"	m	struct:TkIntStubs
tkFocusDeadWindow	generic/tkIntDecls.h	/^    void (*tkFocusDeadWindow) (TkWindow *winPtr); \/* 23 *\/$/;"	m	struct:TkIntStubs
tkFocusFilterEvent	generic/tkIntDecls.h	/^    int (*tkFocusFilterEvent) (TkWindow *winPtr, XEvent *eventPtr); \/* 24 *\/$/;"	m	struct:TkIntStubs
tkFocusFree	generic/tkIntDecls.h	/^    void (*tkFocusFree) (TkMainInfo *mainPtr); \/* 142 *\/$/;"	m	struct:TkIntStubs
tkFocusKeyEvent	generic/tkIntDecls.h	/^    TkWindow * (*tkFocusKeyEvent) (TkWindow *winPtr, XEvent *eventPtr); \/* 25 *\/$/;"	m	struct:TkIntStubs
tkFontObjType	generic/tkFont.c	/^const Tcl_ObjType tkFontObjType = {$/;"	v
tkFontObjType	generic/tkInt.h	/^MODULE_SCOPE const Tcl_ObjType tkFontObjType;$/;"	v
tkFontPkgFree	generic/tkIntDecls.h	/^    void (*tkFontPkgFree) (TkMainInfo *mainPtr); \/* 27 *\/$/;"	m	struct:TkIntStubs
tkFontPkgInit	generic/tkIntDecls.h	/^    void (*tkFontPkgInit) (TkMainInfo *mainPtr); \/* 26 *\/$/;"	m	struct:TkIntStubs
tkFontchooserEnsemble	generic/tkCmds.c	/^MODULE_SCOPE const TkEnsemble tkFontchooserEnsemble[];$/;"	v
tkFontchooserEnsemble	generic/tkCmds.c	55;"	d	file:
tkFontchooserEnsemble	macosx/tkMacOSXDialog.c	/^MODULE_SCOPE const TkEnsemble tkFontchooserEnsemble[];$/;"	v
tkFontchooserEnsemble	macosx/tkMacOSXDialog.c	/^const TkEnsemble tkFontchooserEnsemble[] = {$/;"	v
tkFontchooserEnsemble	win/tkWinDialog.c	/^MODULE_SCOPE const TkEnsemble tkFontchooserEnsemble[];$/;"	v
tkFontchooserEnsemble	win/tkWinDialog.c	/^const TkEnsemble tkFontchooserEnsemble[] = {$/;"	v
tkFreeBindingTags	generic/tkIntDecls.h	/^    void (*tkFreeBindingTags) (TkWindow *winPtr); \/* 28 *\/$/;"	m	struct:TkIntStubs
tkGCCleanup	generic/tkIntDecls.h	/^    void (*tkGCCleanup) (TkDisplay *dispPtr); \/* 144 *\/$/;"	m	struct:TkIntStubs
tkGenWMConfigureEvent	generic/tkPlatDecls.h	/^    void (*tkGenWMConfigureEvent) (Tk_Window tkwin, int x, int y, int width, int height, int flags); \/* 5 *\/$/;"	m	struct:TkPlatStubs
tkGenWMDestroyEvent	generic/tkIntPlatDecls.h	/^    void (*tkGenWMDestroyEvent) (Tk_Window tkwin); \/* 51 *\/$/;"	m	struct:TkIntPlatStubs
tkGenerateActivateEvents	generic/tkIntPlatDecls.h	/^    void (*tkGenerateActivateEvents) (TkWindow *winPtr, int active); \/* 0 *\/$/;"	m	struct:TkIntPlatStubs
tkGenerateActivateEvents	generic/tkIntPlatDecls.h	/^    void (*tkGenerateActivateEvents) (TkWindow *winPtr, int active); \/* 2 *\/$/;"	m	struct:TkIntPlatStubs
tkGenerateButtonEvent	generic/tkIntPlatDecls.h	/^    int (*tkGenerateButtonEvent) (int x, int y, Window window, unsigned int state); \/* 50 *\/$/;"	m	struct:TkIntPlatStubs
tkGeomMgr	generic/ttk/ttkManager.h	/^    Tk_GeomMgr tkGeomMgr;		\/* "real" Tk Geometry Manager *\/$/;"	m	struct:__anon109
tkGetBitmapData	generic/tkIntDecls.h	/^    char * (*tkGetBitmapData) (Tcl_Interp *interp, const char *string, const char *fileName, int *widthPtr, int *heightPtr, int *hotXPtr, int *hotYPtr); \/* 30 *\/$/;"	m	struct:TkIntStubs
tkGetBitmapPredefTable	generic/tkIntDecls.h	/^    Tcl_HashTable * (*tkGetBitmapPredefTable) (void); \/* 105 *\/$/;"	m	struct:TkIntStubs
tkGetButtPoints	generic/tkIntDecls.h	/^    void (*tkGetButtPoints) (double p1[], double p2[], double width, int project, double m1[], double m2[]); \/* 31 *\/$/;"	m	struct:TkIntStubs
tkGetCursorByName	generic/tkIntDecls.h	/^    TkCursor * (*tkGetCursorByName) (Tcl_Interp *interp, Tk_Window tkwin, Tk_Uid string); \/* 32 *\/$/;"	m	struct:TkIntStubs
tkGetDefaultScreenName	generic/tkIntDecls.h	/^    const char * (*tkGetDefaultScreenName) (Tcl_Interp *interp, const char *screenName); \/* 33 *\/$/;"	m	struct:TkIntStubs
tkGetDisplay	generic/tkIntDecls.h	/^    TkDisplay * (*tkGetDisplay) (Display *display); \/* 34 *\/$/;"	m	struct:TkIntStubs
tkGetDisplayList	generic/tkIntDecls.h	/^    TkDisplay * (*tkGetDisplayList) (void); \/* 106 *\/$/;"	m	struct:TkIntStubs
tkGetDisplayOf	generic/tkIntDecls.h	/^    int (*tkGetDisplayOf) (Tcl_Interp *interp, int objc, Tcl_Obj *const objv[], Tk_Window *tkwinPtr); \/* 35 *\/$/;"	m	struct:TkIntStubs
tkGetFocusWin	generic/tkIntDecls.h	/^    TkWindow * (*tkGetFocusWin) (TkWindow *winPtr); \/* 36 *\/$/;"	m	struct:TkIntStubs
tkGetInterpNames	generic/tkIntDecls.h	/^    int (*tkGetInterpNames) (Tcl_Interp *interp, Tk_Window tkwin); \/* 37 *\/$/;"	m	struct:TkIntStubs
tkGetMainInfoList	generic/tkIntDecls.h	/^    TkMainInfo * (*tkGetMainInfoList) (void); \/* 107 *\/$/;"	m	struct:TkIntStubs
tkGetMiterPoints	generic/tkIntDecls.h	/^    int (*tkGetMiterPoints) (double p1[], double p2[], double p3[], double width, double m1[], double m2[]); \/* 38 *\/$/;"	m	struct:TkIntStubs
tkGetOptionSpec	generic/tkIntDecls.h	/^    const Tk_OptionSpec * (*tkGetOptionSpec) (const char *name, Tk_OptionTable optionTable); \/* 149 *\/$/;"	m	struct:TkIntStubs
tkGetPointerCoords	generic/tkIntDecls.h	/^    void (*tkGetPointerCoords) (Tk_Window tkwin, int *xPtr, int *yPtr); \/* 39 *\/$/;"	m	struct:TkIntStubs
tkGetServerInfo	generic/tkIntDecls.h	/^    void (*tkGetServerInfo) (Tcl_Interp *interp, Tk_Window tkwin); \/* 40 *\/$/;"	m	struct:TkIntStubs
tkGetTransientMaster	generic/tkIntPlatDecls.h	/^    Window (*tkGetTransientMaster) (TkWindow *winPtr); \/* 49 *\/$/;"	m	struct:TkIntPlatStubs
tkGetWindowFromObj	generic/tkIntDecls.h	/^    int (*tkGetWindowFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr, Tk_Window *windowPtr); \/* 108 *\/$/;"	m	struct:TkIntStubs
tkGrabDeadWindow	generic/tkIntDecls.h	/^    void (*tkGrabDeadWindow) (TkWindow *winPtr); \/* 41 *\/$/;"	m	struct:TkIntStubs
tkGrabState	generic/tkIntDecls.h	/^    int (*tkGrabState) (TkWindow *winPtr); \/* 42 *\/$/;"	m	struct:TkIntStubs
tkHUDWindowAttribute	macosx/tkMacOSXWm.c	45;"	d	file:
tkHandleEventProc	generic/tkInt.h	/^MODULE_SCOPE void		(*tkHandleEventProc) (XEvent* eventPtr);$/;"	v
tkHelpMenu	macosx/tkMacOSXPrivate.h	/^enum { tkMainMenu = 1, tkApplicationMenu, tkWindowsMenu, tkHelpMenu};$/;"	e	enum:__anon190
tkImageType	generic/tkCanvImg.c	/^Tk_ItemType tkImageType = {$/;"	v
tkImageType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkArcType, tkBitmapType, tkImageType, tkLineType;$/;"	v
tkImgFmtGIF	generic/tkImgGIF.c	/^Tk_PhotoImageFormat tkImgFmtGIF = {$/;"	v
tkImgFmtGIF	generic/tkInt.h	/^MODULE_SCOPE Tk_PhotoImageFormat tkImgFmtGIF;$/;"	v
tkImgFmtPNG	generic/tkImgPNG.c	/^Tk_PhotoImageFormat tkImgFmtPNG = {$/;"	v
tkImgFmtPNG	generic/tkInt.h	/^MODULE_SCOPE Tk_PhotoImageFormat tkImgFmtPNG;$/;"	v
tkImgFmtPPM	generic/tkImgPPM.c	/^Tk_PhotoImageFormat tkImgFmtPPM = {$/;"	v
tkImgFmtPPM	generic/tkInt.h	/^MODULE_SCOPE Tk_PhotoImageFormat tkImgFmtPPM;$/;"	v
tkInOutEvents	generic/tkIntDecls.h	/^    void (*tkInOutEvents) (XEvent *eventPtr, TkWindow *sourcePtr, TkWindow *destPtr, int leaveType, int enterType, Tcl_QueuePosition position); \/* 44 *\/$/;"	m	struct:TkIntStubs
tkIncludePoint	generic/tkIntDecls.h	/^    void (*tkIncludePoint) (Tk_Item *itemPtr, double *pointPtr); \/* 43 *\/$/;"	m	struct:TkIntStubs
tkInstallFrameMenu	generic/tkIntDecls.h	/^    void (*tkInstallFrameMenu) (Tk_Window tkwin); \/* 45 *\/$/;"	m	struct:TkIntStubs
tkInstance	win/tkWinX.c	/^static HINSTANCE tkInstance = NULL;	\/* Application instance handle. *\/$/;"	v	file:
tkIntPlatStubs	generic/tkDecls.h	/^    const struct TkIntPlatStubs *tkIntPlatStubs;$/;"	m	struct:__anon156	typeref:struct:__anon156::TkIntPlatStubs
tkIntPlatStubs	generic/tkStubInit.c	/^static const TkIntPlatStubs tkIntPlatStubs = {$/;"	v	file:
tkIntPlatStubsPtr	generic/tkStubLib.c	/^MODULE_SCOPE const TkIntPlatStubs *tkIntPlatStubsPtr;$/;"	v
tkIntPlatStubsPtr	generic/tkStubLib.c	/^const TkIntPlatStubs *tkIntPlatStubsPtr = NULL;$/;"	v
tkIntStubs	generic/tkDecls.h	/^    const struct TkIntStubs *tkIntStubs;$/;"	m	struct:__anon156	typeref:struct:__anon156::TkIntStubs
tkIntStubs	generic/tkStubInit.c	/^static const TkIntStubs tkIntStubs = {$/;"	v	file:
tkIntStubs	generic/tkStubInit.c	/^static const TkIntStubs tkIntStubs;$/;"	v	file:
tkIntStubsPtr	generic/tkStubLib.c	/^MODULE_SCOPE const TkIntStubs *tkIntStubsPtr;$/;"	v
tkIntStubsPtr	generic/tkStubLib.c	/^const TkIntStubs *tkIntStubsPtr = NULL;$/;"	v
tkIntXlibStubs	generic/tkDecls.h	/^    const struct TkIntXlibStubs *tkIntXlibStubs;$/;"	m	struct:__anon156	typeref:struct:__anon156::TkIntXlibStubs
tkIntXlibStubs	generic/tkStubInit.c	/^static const TkIntXlibStubs tkIntXlibStubs = {$/;"	v	file:
tkIntXlibStubsPtr	generic/tkStubLib.c	/^MODULE_SCOPE const TkIntXlibStubs *tkIntXlibStubsPtr;$/;"	v
tkIntXlibStubsPtr	generic/tkStubLib.c	/^const TkIntXlibStubs *tkIntXlibStubsPtr = NULL;$/;"	v
tkIntersectAngledTextLayout	generic/tkIntDecls.h	/^    int (*tkIntersectAngledTextLayout) (Tk_TextLayout layout, int x, int y, int width, int height, double angle); \/* 183 *\/$/;"	m	struct:TkIntStubs
tkIntersectRegion	generic/tkIntDecls.h	/^    void (*tkIntersectRegion) (TkRegion sra, TkRegion srcb, TkRegion dr_return); \/* 116 *\/$/;"	m	struct:TkIntStubs
tkKeysymToString	generic/tkIntDecls.h	/^    CONST86 char * (*tkKeysymToString) (KeySym keysym); \/* 46 *\/$/;"	m	struct:TkIntStubs
tkLibPath	macosx/tkMacOSXInit.c	/^static char tkLibPath[PATH_MAX + 1] = "";$/;"	v	file:
tkLineToArea	generic/tkIntDecls.h	/^    int (*tkLineToArea) (double end1Ptr[], double end2Ptr[], double rectPtr[]); \/* 47 *\/$/;"	m	struct:TkIntStubs
tkLineToPoint	generic/tkIntDecls.h	/^    double (*tkLineToPoint) (double end1Ptr[], double end2Ptr[], double pointPtr[]); \/* 48 *\/$/;"	m	struct:TkIntStubs
tkLineType	generic/tkCanvLine.c	/^Tk_ItemType tkLineType = {$/;"	v
tkLineType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkArcType, tkBitmapType, tkImageType, tkLineType;$/;"	v
tkMacOSXButtonKeyState	generic/tkIntPlatDecls.h	/^    unsigned int (*tkMacOSXButtonKeyState) (void); \/* 8 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXClearMenubarActive	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXClearMenubarActive) (void); \/* 9 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXContainerId	generic/tkIntPlatDecls.h	/^    MacDrawable * (*tkMacOSXContainerId) (TkWindow *winPtr); \/* 43 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXCursors	macosx/tkMacOSXCursors.h	/^static const unsigned char tkMacOSXCursors[][68] = {$/;"	v
tkMacOSXDispatchMenuEvent	generic/tkIntPlatDecls.h	/^    int (*tkMacOSXDispatchMenuEvent) (int menuID, int index); \/* 10 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXDoHLEvent	generic/tkIntPlatDecls.h	/^    int (*tkMacOSXDoHLEvent) (void *theEvent); \/* 14 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXDrawable	generic/tkIntPlatDecls.h	/^    void * (*tkMacOSXDrawable) (Drawable drawable); \/* 54 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXEmbedHandler	macosx/tkMacOSXEmbed.c	/^TkMacOSXEmbedHandler *tkMacOSXEmbedHandler = NULL;$/;"	v
tkMacOSXEmbedHandler	macosx/tkMacOSXInt.h	/^MODULE_SCOPE TkMacOSXEmbedHandler *tkMacOSXEmbedHandler;$/;"	v
tkMacOSXGetCapture	generic/tkIntPlatDecls.h	/^    Tk_Window (*tkMacOSXGetCapture) (void); \/* 47 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXGetDrawablePort	generic/tkPlatDecls.h	/^    void * (*tkMacOSXGetDrawablePort) (Drawable drawable); \/* 7 *\/$/;"	m	struct:TkPlatStubs
tkMacOSXGetHostToplevel	generic/tkIntPlatDecls.h	/^    MacDrawable * (*tkMacOSXGetHostToplevel) (TkWindow *winPtr); \/* 44 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXGetRootControl	generic/tkPlatDecls.h	/^    void * (*tkMacOSXGetRootControl) (Drawable drawable); \/* 8 *\/$/;"	m	struct:TkPlatStubs
tkMacOSXGetXWindow	generic/tkIntPlatDecls.h	/^    Window (*tkMacOSXGetXWindow) (void *macWinPtr); \/* 16 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXGrowToplevel	generic/tkIntPlatDecls.h	/^    int (*tkMacOSXGrowToplevel) (void *whichWindow, XPoint start); \/* 17 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXHandleMenuSelect	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXHandleMenuSelect) (short theMenu, unsigned short theItem, int optionKeyPressed); \/* 18 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXHandleTearoffMenu	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXHandleTearoffMenu) (void); \/* 12 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXInitAppleEvents	generic/tkPlatDecls.h	/^    void (*tkMacOSXInitAppleEvents) (Tcl_Interp *interp); \/* 4 *\/$/;"	m	struct:TkPlatStubs
tkMacOSXInitMenus	generic/tkPlatDecls.h	/^    void (*tkMacOSXInitMenus) (Tcl_Interp *interp); \/* 3 *\/$/;"	m	struct:TkPlatStubs
tkMacOSXInstallCursor	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXInstallCursor) (int resizeOverride); \/* 11 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXInvalClipRgns	generic/tkPlatDecls.h	/^    void (*tkMacOSXInvalClipRgns) (Tk_Window tkwin); \/* 6 *\/$/;"	m	struct:TkPlatStubs
tkMacOSXInvalidateWindow	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXInvalidateWindow) (MacDrawable *macWin, int flag); \/* 21 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXIsCharacterMissing	generic/tkIntPlatDecls.h	/^    int (*tkMacOSXIsCharacterMissing) (Tk_Font tkfont, unsigned int searchChar); \/* 22 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXMacOSXVersion	macosx/tkMacOSXInit.c	/^long tkMacOSXMacOSXVersion = 0;$/;"	v
tkMacOSXMacOSXVersion	macosx/tkMacOSXPrivate.h	/^MODULE_SCOPE long tkMacOSXMacOSXVersion;$/;"	v
tkMacOSXMakeRealWindowExist	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXMakeRealWindowExist) (TkWindow *winPtr); \/* 23 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXMakeStippleMap	generic/tkIntPlatDecls.h	/^    void * (*tkMacOSXMakeStippleMap) (Drawable d1, Drawable d2); \/* 24 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXMenuClick	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXMenuClick) (void); \/* 25 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXPreprocessMenu	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXPreprocessMenu) (void); \/* 45 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXProcessFiles	macosx/tkMacOSXHLEvents.c	/^tkMacOSXProcessFiles($/;"	f	file:
tkMacOSXRegisterOffScreenWindow	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXRegisterOffScreenWindow) (Window window, void *portPtr); \/* 26 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXResizable	generic/tkIntPlatDecls.h	/^    int (*tkMacOSXResizable) (TkWindow *winPtr); \/* 27 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXSetDrawingEnabled	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXSetDrawingEnabled) (TkWindow *winPtr, int flag); \/* 52 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXSetHelpMenuItemCount	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXSetHelpMenuItemCount) (void); \/* 28 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXSetScrollbarGrow	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXSetScrollbarGrow) (TkWindow *winPtr, int flag); \/* 29 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXSetUpClippingRgn	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXSetUpClippingRgn) (Drawable drawable); \/* 30 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXSetUpGraphicsPort	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXSetUpGraphicsPort) (GC gc, void *destPort); \/* 31 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXUnregisterMacWindow	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXUnregisterMacWindow) (void *portPtr); \/* 33 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXUpdateClipRgn	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXUpdateClipRgn) (TkWindow *winPtr); \/* 32 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXUseMenuID	generic/tkIntPlatDecls.h	/^    int (*tkMacOSXUseMenuID) (short macID); \/* 34 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXVisableClipRgn	generic/tkIntPlatDecls.h	/^    TkRegion (*tkMacOSXVisableClipRgn) (TkWindow *winPtr); \/* 35 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXWinBounds	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXWinBounds) (TkWindow *winPtr, void *geometry); \/* 36 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXWindowOffset	generic/tkIntPlatDecls.h	/^    void (*tkMacOSXWindowOffset) (void *wRef, int *xOffset, int *yOffset); \/* 37 *\/$/;"	m	struct:TkIntPlatStubs
tkMacOSXWmAttrNotifyVal	macosx/tkMacOSXWm.c	/^static int tkMacOSXWmAttrNotifyVal = 0;$/;"	v	file:
tkMacOSXXCursors	macosx/tkMacOSXXCursors.h	/^static const unsigned char tkMacOSXXCursors[][68] = {$/;"	v
tkMacOSXZeroScreenHeight	macosx/tkMacOSXPrivate.h	/^MODULE_SCOPE CGFloat tkMacOSXZeroScreenHeight;$/;"	v
tkMacOSXZeroScreenHeight	macosx/tkMacOSXXStubs.c	/^CGFloat tkMacOSXZeroScreenHeight = 0;$/;"	v
tkMacOSXZeroScreenTop	macosx/tkMacOSXPrivate.h	/^MODULE_SCOPE CGFloat tkMacOSXZeroScreenTop;$/;"	v
tkMacOSXZeroScreenTop	macosx/tkMacOSXXStubs.c	/^CGFloat tkMacOSXZeroScreenTop = 0;$/;"	v
tkMacOSXZoomToplevel	generic/tkIntPlatDecls.h	/^    int (*tkMacOSXZoomToplevel) (void *whichWindow, short zoomPart); \/* 41 *\/$/;"	m	struct:TkIntPlatStubs
tkMainMenu	macosx/tkMacOSXPrivate.h	/^enum { tkMainMenu = 1, tkApplicationMenu, tkWindowsMenu, tkHelpMenu};$/;"	e	enum:__anon190
tkMainWindowList	generic/tkInt.h	/^MODULE_SCOPE TkMainInfo		*tkMainWindowList;$/;"	v
tkMakeBezierCurve	generic/tkIntDecls.h	/^    int (*tkMakeBezierCurve) (Tk_Canvas canvas, double *pointPtr, int numPoints, int numSteps, XPoint xPoints[], double dblPoints[]); \/* 49 *\/$/;"	m	struct:TkIntStubs
tkMakeBezierPostscript	generic/tkIntDecls.h	/^    void (*tkMakeBezierPostscript) (Tcl_Interp *interp, Tk_Canvas canvas, double *pointPtr, int numPoints); \/* 50 *\/$/;"	m	struct:TkIntStubs
tkMakeRawCurve	generic/tkIntDecls.h	/^    int (*tkMakeRawCurve) (Tk_Canvas canvas, double *pointPtr, int numPoints, int numSteps, XPoint xPoints[], double dblPoints[]); \/* 150 *\/$/;"	m	struct:TkIntStubs
tkMakeRawCurvePostscript	generic/tkIntDecls.h	/^    void (*tkMakeRawCurvePostscript) (Tcl_Interp *interp, Tk_Canvas canvas, double *pointPtr, int numPoints); \/* 151 *\/$/;"	m	struct:TkIntStubs
tkMaster	generic/tkImgBmap.c	/^    Tk_ImageMaster tkMaster;	\/* Tk's token for image master. NULL means the$/;"	m	struct:BitmapMaster	file:
tkMaster	generic/tkImgPhoto.h	/^    Tk_ImageMaster tkMaster;	\/* Tk's token for image master. NULL means the$/;"	m	struct:PhotoMaster
tkMenuConfigSpecs	generic/tkMenu.c	/^static const Tk_OptionSpec tkMenuConfigSpecs[] = {$/;"	v	file:
tkMenuItemInvoke	macosx/tkMacOSXMenu.c	/^- (void) tkMenuItemInvoke: (id) sender$/;"	f
tkMoveToActiveSpaceAttribute	macosx/tkMacOSXWm.c	41;"	d	file:
tkName	macosx/tkMacOSXFont.c	/^    const char *tkName;$/;"	m	struct:SystemFontMapEntry	file:
tkName1	macosx/tkMacOSXFont.c	/^    const char *tkName1;$/;"	m	struct:SystemFontMapEntry	file:
tkNonactivatingPanelAttribute	macosx/tkMacOSXWm.c	43;"	d	file:
tkOffsetParseProc	generic/tkIntDecls.h	/^    int (*tkOffsetParseProc) (ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, const char *value, char *widgRec, int offset); \/* 173 *\/$/;"	m	struct:TkIntStubs
tkOffsetPrintProc	generic/tkIntDecls.h	/^    CONST86 char * (*tkOffsetPrintProc) (ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr); \/* 174 *\/$/;"	m	struct:TkIntStubs
tkOptionClassChanged	generic/tkIntDecls.h	/^    void (*tkOptionClassChanged) (TkWindow *winPtr); \/* 51 *\/$/;"	m	struct:TkIntStubs
tkOptionDeadWindow	generic/tkIntDecls.h	/^    void (*tkOptionDeadWindow) (TkWindow *winPtr); \/* 52 *\/$/;"	m	struct:TkIntStubs
tkOrientParseProc	generic/tkIntDecls.h	/^    int (*tkOrientParseProc) (ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, const char *value, char *widgRec, int offset); \/* 177 *\/$/;"	m	struct:TkIntStubs
tkOrientPrintProc	generic/tkIntDecls.h	/^    CONST86 char * (*tkOrientPrintProc) (ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr); \/* 178 *\/$/;"	m	struct:TkIntStubs
tkOvalToArea	generic/tkIntDecls.h	/^    int (*tkOvalToArea) (double *ovalPtr, double *rectPtr); \/* 53 *\/$/;"	m	struct:TkIntStubs
tkOvalToPoint	generic/tkIntDecls.h	/^    double (*tkOvalToPoint) (double ovalPtr[], double width, int filled, double pointPtr[]); \/* 54 *\/$/;"	m	struct:TkIntStubs
tkOvalType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkOvalType, tkPolygonType;$/;"	v
tkOvalType	generic/tkRectOval.c	/^Tk_ItemType tkOvalType = {$/;"	v
tkParent	generic/tkBusy.h	/^    Tk_Window tkParent;		\/* Parent window of the busy window. It may be$/;"	m	struct:Busy
tkPhotoGetValidRegion	generic/tkIntDecls.h	/^    TkRegion (*tkPhotoGetValidRegion) (Tk_PhotoHandle handle); \/* 140 *\/$/;"	m	struct:TkIntStubs
tkPhotoImageType	generic/tkImgPhoto.c	/^Tk_ImageType tkPhotoImageType = {$/;"	v
tkPhotoImageType	generic/tkInt.h	/^MODULE_SCOPE Tk_ImageType	tkPhotoImageType;$/;"	v
tkPixelParseProc	generic/tkIntDecls.h	/^    int (*tkPixelParseProc) (ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, const char *value, char *widgRec, int offset); \/* 175 *\/$/;"	m	struct:TkIntStubs
tkPixelPrintProc	generic/tkIntDecls.h	/^    CONST86 char * (*tkPixelPrintProc) (ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr); \/* 176 *\/$/;"	m	struct:TkIntStubs
tkPlatStubs	generic/tkDecls.h	/^    const struct TkPlatStubs *tkPlatStubs;$/;"	m	struct:__anon156	typeref:struct:__anon156::TkPlatStubs
tkPlatStubs	generic/tkStubInit.c	/^static const TkPlatStubs tkPlatStubs = {$/;"	v	file:
tkPlatStubsPtr	generic/tkStubLib.c	/^MODULE_SCOPE const TkPlatStubs *tkPlatStubsPtr;$/;"	v
tkPlatStubsPtr	generic/tkStubLib.c	/^const TkPlatStubs *tkPlatStubsPtr = NULL;$/;"	v
tkPlatformId	win/tkWinX.c	/^static int tkPlatformId = 0;		\/* version of Windows platform *\/$/;"	v	file:
tkPointerDeadWindow	generic/tkIntPlatDecls.h	/^    void (*tkPointerDeadWindow) (TkWindow *winPtr); \/* 3 *\/$/;"	m	struct:TkIntPlatStubs
tkPointerDeadWindow	generic/tkIntPlatDecls.h	/^    void (*tkPointerDeadWindow) (TkWindow *winPtr); \/* 4 *\/$/;"	m	struct:TkIntPlatStubs
tkPointerEvent	generic/tkIntDecls.h	/^    int (*tkPointerEvent) (XEvent *eventPtr, TkWindow *winPtr); \/* 69 *\/$/;"	m	struct:TkIntStubs
tkPolygonToArea	generic/tkIntDecls.h	/^    int (*tkPolygonToArea) (double *polyPtr, int numPoints, double *rectPtr); \/* 70 *\/$/;"	m	struct:TkIntStubs
tkPolygonToPoint	generic/tkIntDecls.h	/^    double (*tkPolygonToPoint) (double *polyPtr, int numPoints, double *pointPtr); \/* 71 *\/$/;"	m	struct:TkIntStubs
tkPolygonType	generic/tkCanvPoly.c	/^Tk_ItemType tkPolygonType = {$/;"	v
tkPolygonType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkOvalType, tkPolygonType;$/;"	v
tkPositionInTree	generic/tkIntDecls.h	/^    int (*tkPositionInTree) (TkWindow *winPtr, TkWindow *treePtr); \/* 72 *\/$/;"	m	struct:TkIntStubs
tkPredefBitmapTable	generic/tkInt.h	/^MODULE_SCOPE Tcl_HashTable	tkPredefBitmapTable;$/;"	v
tkPutImage	generic/tkIntXlibDecls.h	/^    int (*tkPutImage) (unsigned long *colors, int ncolors, Display *display, Drawable d, GC gc, XImage *image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height); \/* 57 *\/$/;"	m	struct:TkIntXlibStubs
tkPutImage	generic/tkIntXlibDecls.h	/^    int (*tkPutImage) (unsigned long *colors, int ncolors, Display *display, Drawable d, GC gc, XImage *image, int src_x, int src_y, int dest_x, int dest_y, unsigned int width, unsigned int height); \/* 80 *\/$/;"	m	struct:TkIntXlibStubs
tkQueueEventForAllChildren	generic/tkIntDecls.h	/^    void (*tkQueueEventForAllChildren) (TkWindow *winPtr, XEvent *eventPtr); \/* 77 *\/$/;"	m	struct:TkIntStubs
tkRadioButtonEntryConfigSpecs	generic/tkMenu.c	/^static const Tk_OptionSpec tkRadioButtonEntryConfigSpecs[] = {$/;"	v	file:
tkRawSmoothMethod	generic/tkCanvUtil.c	/^static const Tk_SmoothMethod tkRawSmoothMethod = {$/;"	v	file:
tkReadBitmapFile	generic/tkIntDecls.h	/^    int (*tkReadBitmapFile) (Display *display, Drawable d, const char *filename, unsigned int *width_return, unsigned int *height_return, Pixmap *bitmap_return, int *x_hot_return, int *y_hot_return); \/* 78 *\/$/;"	m	struct:TkIntStubs
tkRectInRegion	generic/tkIntDecls.h	/^    int (*tkRectInRegion) (TkRegion rgn, int x, int y, unsigned int width, unsigned int height); \/* 117 *\/$/;"	m	struct:TkIntStubs
tkRectangleType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkRectangleType, tkTextType, tkWindowType;$/;"	v
tkRectangleType	generic/tkRectOval.c	/^Tk_ItemType tkRectangleType = {$/;"	v
tkRef	generic/tkBusy.h	/^    Tk_Window tkRef;		\/* Reference window of the busy window. It is$/;"	m	struct:Busy
tkScrollWindow	generic/tkIntDecls.h	/^    int (*tkScrollWindow) (Tk_Window tkwin, GC gc, int x, int y, int width, int height, int dx, int dy, TkRegion damageRgn); \/* 79 *\/$/;"	m	struct:TkIntStubs
tkSelDeadWindow	generic/tkIntDecls.h	/^    void (*tkSelDeadWindow) (TkWindow *winPtr); \/* 80 *\/$/;"	m	struct:TkIntStubs
tkSelEventProc	generic/tkIntDecls.h	/^    void (*tkSelEventProc) (Tk_Window tkwin, XEvent *eventPtr); \/* 81 *\/$/;"	m	struct:TkIntStubs
tkSelGetSelection	generic/tkIntDecls.h	/^    int (*tkSelGetSelection) (Tcl_Interp *interp, Tk_Window tkwin, Atom selection, Atom target, Tk_GetSelProc *proc, ClientData clientData); \/* 158 *\/$/;"	m	struct:TkIntStubs
tkSelInit	generic/tkIntDecls.h	/^    void (*tkSelInit) (Tk_Window tkwin); \/* 82 *\/$/;"	m	struct:TkIntStubs
tkSelPropProc	generic/tkIntDecls.h	/^    void (*tkSelPropProc) (XEvent *eventPtr); \/* 83 *\/$/;"	m	struct:TkIntStubs
tkSendCleanup	generic/tkIntPlatDecls.h	/^    void (*tkSendCleanup) (TkDisplay *dispPtr); \/* 10 *\/$/;"	m	struct:TkIntPlatStubs
tkSendCleanup	generic/tkIntPlatDecls.h	/^    void (*tkSendCleanup) (TkDisplay *dispPtr); \/* 44 *\/$/;"	m	struct:TkIntPlatStubs
tkSeparatorEntryConfigSpecs	generic/tkMenu.c	/^static const Tk_OptionSpec tkSeparatorEntryConfigSpecs[] = {$/;"	v	file:
tkSetFocusWin	generic/tkIntDecls.h	/^    void (*tkSetFocusWin) (TkWindow *winPtr, int force); \/* 136 *\/$/;"	m	struct:TkIntStubs
tkSetMacColor	generic/tkIntPlatDecls.h	/^    int (*tkSetMacColor) (unsigned long pixel, void *macColor); \/* 38 *\/$/;"	m	struct:TkIntPlatStubs
tkSetPixmapColormap	generic/tkIntPlatDecls.h	/^    void (*tkSetPixmapColormap) (Pixmap pixmap, Colormap colormap); \/* 10 *\/$/;"	m	struct:TkIntPlatStubs
tkSetRegion	generic/tkIntDecls.h	/^    void (*tkSetRegion) (Display *display, GC gc, TkRegion rgn); \/* 118 *\/$/;"	m	struct:TkIntStubs
tkSetWMName	generic/tkIntPlatDecls.h	/^    void (*tkSetWMName) (TkWindow *winPtr, Tk_Uid titleUid); \/* 39 *\/$/;"	m	struct:TkIntPlatStubs
tkSetWindowMenuBar	generic/tkIntDecls.h	/^    void (*tkSetWindowMenuBar) (Tcl_Interp *interp, Tk_Window tkwin, const char *oldMenuName, const char *menuName); \/* 85 *\/$/;"	m	struct:TkIntStubs
tkSmoothParseProc	generic/tkIntDecls.h	/^    int (*tkSmoothParseProc) (ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, const char *value, char *widgRec, int offset); \/* 179 *\/$/;"	m	struct:TkIntStubs
tkSmoothPrintProc	generic/tkIntDecls.h	/^    CONST86 char * (*tkSmoothPrintProc) (ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr); \/* 180 *\/$/;"	m	struct:TkIntStubs
tkSource	macosx/tkMacOSXMenus.c	/^- (void) tkSource: (id) sender$/;"	f
tkStateKeyObjType	generic/tkInt.h	/^MODULE_SCOPE const Tcl_ObjType tkStateKeyObjType;$/;"	v
tkStateKeyObjType	generic/tkUtil.c	/^const Tcl_ObjType tkStateKeyObjType = {$/;"	v
tkStateParseProc	generic/tkIntDecls.h	/^    int (*tkStateParseProc) (ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, const char *value, char *widgRec, int offset); \/* 169 *\/$/;"	m	struct:TkIntStubs
tkStatePrintProc	generic/tkIntDecls.h	/^    CONST86 char * (*tkStatePrintProc) (ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr); \/* 170 *\/$/;"	m	struct:TkIntStubs
tkStringToKeysym	generic/tkIntDecls.h	/^    KeySym (*tkStringToKeysym) (const char *name); \/* 86 *\/$/;"	m	struct:TkIntStubs
tkStubHooks	generic/tkStubInit.c	/^static const TkStubHooks tkStubHooks = {$/;"	v	file:
tkStubs	generic/tkStubInit.c	/^MODULE_SCOPE const TkStubs tkStubs;$/;"	v
tkStubs	generic/tkStubInit.c	/^const TkStubs tkStubs = {$/;"	v
tkStubs	generic/tkWindow.c	/^MODULE_SCOPE const TkStubs tkStubs;$/;"	v
tkStubsPtr	generic/tkStubLib.c	/^MODULE_SCOPE const TkStubs *tkStubsPtr;$/;"	v
tkStubsPtr	generic/tkStubLib.c	/^const TkStubs *tkStubsPtr = NULL;$/;"	v
tkStylePkgFree	generic/tkIntDecls.h	/^    void (*tkStylePkgFree) (TkMainInfo *mainPtr); \/* 147 *\/$/;"	m	struct:TkIntStubs
tkStylePkgInit	generic/tkIntDecls.h	/^    void (*tkStylePkgInit) (TkMainInfo *mainPtr); \/* 146 *\/$/;"	m	struct:TkIntStubs
tkSubtractRegion	generic/tkIntDecls.h	/^    void (*tkSubtractRegion) (TkRegion sra, TkRegion srcb, TkRegion dr_return); \/* 145 *\/$/;"	m	struct:TkIntStubs
tkSuspendClipboard	generic/tkIntPlatDecls.h	/^    void (*tkSuspendClipboard) (void); \/* 40 *\/$/;"	m	struct:TkIntPlatStubs
tkTearoffEntryConfigSpecs	generic/tkMenu.c	/^static const Tk_OptionSpec tkTearoffEntryConfigSpecs[] = {$/;"	v	file:
tkTextChanged	generic/tkIntDecls.h	/^    void (*tkTextChanged) (struct TkSharedText *sharedTextPtr, struct TkText *textPtr, const struct TkTextIndex *index1Ptr, const struct TkTextIndex *index2Ptr); \/* 166 *\/$/;"	m	struct:TkIntStubs
tkTextCharType	generic/tkText.h	/^MODULE_SCOPE const Tk_SegType tkTextCharType;$/;"	v
tkTextCharType	generic/tkTextBTree.c	/^const Tk_SegType tkTextCharType = {$/;"	v
tkTextDebug	generic/tkText.c	/^int tkTextDebug = 0;$/;"	v
tkTextDebug	generic/tkText.h	/^MODULE_SCOPE int	tkTextDebug;$/;"	v
tkTextEmbImageType	generic/tkText.h	/^MODULE_SCOPE const Tk_SegType tkTextEmbImageType;$/;"	v
tkTextEmbImageType	generic/tkTextImage.c	/^const Tk_SegType tkTextEmbImageType = {$/;"	v
tkTextEmbWindowType	generic/tkText.h	/^MODULE_SCOPE const Tk_SegType tkTextEmbWindowType;$/;"	v
tkTextEmbWindowType	generic/tkTextWind.c	/^const Tk_SegType tkTextEmbWindowType = {$/;"	v
tkTextGetIndex	generic/tkIntDecls.h	/^    int (*tkTextGetIndex) (Tcl_Interp *interp, struct TkText *textPtr, const char *string, struct TkTextIndex *indexPtr); \/* 159 *\/$/;"	m	struct:TkIntStubs
tkTextIndexBackBytes	generic/tkIntDecls.h	/^    int (*tkTextIndexBackBytes) (const struct TkText *textPtr, const struct TkTextIndex *srcPtr, int count, struct TkTextIndex *dstPtr); \/* 160 *\/$/;"	m	struct:TkIntStubs
tkTextIndexForwBytes	generic/tkIntDecls.h	/^    int (*tkTextIndexForwBytes) (const struct TkText *textPtr, const struct TkTextIndex *srcPtr, int count, struct TkTextIndex *dstPtr); \/* 161 *\/$/;"	m	struct:TkIntStubs
tkTextIndexType	generic/tkInt.h	/^MODULE_SCOPE const Tcl_ObjType tkTextIndexType;$/;"	v
tkTextIndexType	generic/tkTextIndex.c	/^const Tcl_ObjType tkTextIndexType = {$/;"	v
tkTextInsertDisplayProc	generic/tkIntDecls.h	/^    void (*tkTextInsertDisplayProc) (struct TkText *textPtr, struct TkTextDispChunk *chunkPtr, int x, int y, int height, int baseline, Display *display, Drawable dst, int screenY); \/* 168 *\/$/;"	m	struct:TkIntStubs
tkTextLeftMarkType	generic/tkText.h	/^MODULE_SCOPE const Tk_SegType tkTextLeftMarkType;$/;"	v
tkTextLeftMarkType	generic/tkTextMark.c	/^const Tk_SegType tkTextLeftMarkType = {$/;"	v
tkTextMakeByteIndex	generic/tkIntDecls.h	/^    struct TkTextIndex * (*tkTextMakeByteIndex) (TkTextBTree tree, const struct TkText *textPtr, int lineIndex, int byteIndex, struct TkTextIndex *indexPtr); \/* 162 *\/$/;"	m	struct:TkIntStubs	typeref:struct:TkIntStubs::tkTextMakeByteIndex
tkTextPrintIndex	generic/tkIntDecls.h	/^    int (*tkTextPrintIndex) (const struct TkText *textPtr, const struct TkTextIndex *indexPtr, char *string); \/* 163 *\/$/;"	m	struct:TkIntStubs
tkTextRightMarkType	generic/tkText.h	/^MODULE_SCOPE const Tk_SegType tkTextRightMarkType;$/;"	v
tkTextRightMarkType	generic/tkTextMark.c	/^const Tk_SegType tkTextRightMarkType = {$/;"	v
tkTextSetMark	generic/tkIntDecls.h	/^    struct TkTextSegment * (*tkTextSetMark) (struct TkText *textPtr, const char *name, struct TkTextIndex *indexPtr); \/* 164 *\/$/;"	m	struct:TkIntStubs	typeref:struct:TkIntStubs::tkTextSetMark
tkTextToggleOffType	generic/tkText.h	/^MODULE_SCOPE const Tk_SegType tkTextToggleOffType;$/;"	v
tkTextToggleOffType	generic/tkTextBTree.c	/^const Tk_SegType tkTextToggleOffType = {$/;"	v
tkTextToggleOnType	generic/tkText.h	/^MODULE_SCOPE const Tk_SegType tkTextToggleOnType;$/;"	v
tkTextToggleOnType	generic/tkTextBTree.c	/^const Tk_SegType tkTextToggleOnType = {$/;"	v
tkTextType	generic/tkCanvText.c	/^Tk_ItemType tkTextType = {$/;"	v
tkTextType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkRectangleType, tkTextType, tkWindowType;$/;"	v
tkTextXviewCmd	generic/tkIntDecls.h	/^    int (*tkTextXviewCmd) (struct TkText *textPtr, Tcl_Interp *interp, int objc, Tcl_Obj *const objv[]); \/* 165 *\/$/;"	m	struct:TkIntStubs
tkThickPolyLineToArea	generic/tkIntDecls.h	/^    int (*tkThickPolyLineToArea) (double *coordPtr, int numPoints, double width, int capStyle, int joinStyle, double *rectPtr); \/* 87 *\/$/;"	m	struct:TkIntStubs
tkToolbarButton	macosx/tkMacOSXWindowEvent.c	/^- (void) tkToolbarButton: (id) sender$/;"	f
tkToplevelWindowForCommand	generic/tkIntDecls.h	/^    Tk_Window (*tkToplevelWindowForCommand) (Tcl_Interp *interp, const char *cmdName); \/* 148 *\/$/;"	m	struct:TkIntStubs
tkUnderlineAngledTextLayout	generic/tkIntDecls.h	/^    void (*tkUnderlineAngledTextLayout) (Display *display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, double angle, int underline); \/* 182 *\/$/;"	m	struct:TkIntStubs
tkUnionRectWithRegion	generic/tkIntDecls.h	/^    void (*tkUnionRectWithRegion) (XRectangle *rect, TkRegion src, TkRegion dr_return); \/* 119 *\/$/;"	m	struct:TkIntStubs
tkUnixContainerId	generic/tkIntPlatDecls.h	/^    Window (*tkUnixContainerId) (TkWindow *winPtr); \/* 40 *\/$/;"	m	struct:TkIntPlatStubs
tkUnixContainerId	generic/tkIntPlatDecls.h	/^    Window (*tkUnixContainerId) (TkWindow *winPtr); \/* 5 *\/$/;"	m	struct:TkIntPlatStubs
tkUnixDoOneXEvent	generic/tkIntPlatDecls.h	/^    int (*tkUnixDoOneXEvent) (Tcl_Time *timePtr); \/* 41 *\/$/;"	m	struct:TkIntPlatStubs
tkUnixDoOneXEvent	generic/tkIntPlatDecls.h	/^    int (*tkUnixDoOneXEvent) (Tcl_Time *timePtr); \/* 6 *\/$/;"	m	struct:TkIntPlatStubs
tkUnixSetMenubar	generic/tkIntPlatDecls.h	/^    void (*tkUnixSetMenubar) (Tk_Window tkwin, Tk_Window menubar); \/* 42 *\/$/;"	m	struct:TkIntPlatStubs
tkUnixSetMenubar	generic/tkIntPlatDecls.h	/^    void (*tkUnixSetMenubar) (Tk_Window tkwin, Tk_Window menubar); \/* 7 *\/$/;"	m	struct:TkIntPlatStubs
tkWebColors	generic/tkColor.c	/^const char *const tkWebColors[20] = {$/;"	v
tkWebColors	generic/tkInt.h	/^MODULE_SCOPE const char *const tkWebColors[20];$/;"	v
tkWinCancelMouseTimer	generic/tkIntPlatDecls.h	/^    void (*tkWinCancelMouseTimer) (void); \/* 11 *\/$/;"	m	struct:TkIntPlatStubs
tkWinChildProc	generic/tkIntPlatDecls.h	/^    LRESULT (__stdcall *tkWinChildProc) (HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam); \/* 36 *\/$/;"	m	struct:TkIntPlatStubs
tkWinClipboardRender	generic/tkIntPlatDecls.h	/^    void (*tkWinClipboardRender) (TkDisplay *dispPtr, UINT format); \/* 12 *\/$/;"	m	struct:TkIntPlatStubs
tkWinCurrentDialog	win/tkWinTest.c	/^HWND tkWinCurrentDialog;$/;"	v
tkWinDialogDebug	generic/tkIntPlatDecls.h	/^    void (*tkWinDialogDebug) (int debug); \/* 31 *\/$/;"	m	struct:TkIntPlatStubs
tkWinEmbeddedEventProc	generic/tkIntPlatDecls.h	/^    LRESULT (*tkWinEmbeddedEventProc) (HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam); \/* 13 *\/$/;"	m	struct:TkIntPlatStubs
tkWinFillRect	generic/tkIntPlatDecls.h	/^    void (*tkWinFillRect) (HDC dc, int x, int y, int width, int height, int pixel); \/* 14 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetBorderPixels	generic/tkIntPlatDecls.h	/^    COLORREF (*tkWinGetBorderPixels) (Tk_Window tkwin, Tk_3DBorder border, int which); \/* 15 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetDrawableDC	generic/tkIntPlatDecls.h	/^    HDC (*tkWinGetDrawableDC) (Display *display, Drawable d, TkWinDCState *state); \/* 16 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetMenuSystemDefault	generic/tkIntPlatDecls.h	/^    Tcl_Obj * (*tkWinGetMenuSystemDefault) (Tk_Window tkwin, const char *dbName, const char *className); \/* 32 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetModifierState	generic/tkIntPlatDecls.h	/^    int (*tkWinGetModifierState) (void); \/* 17 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetPlatformId	generic/tkIntPlatDecls.h	/^    int (*tkWinGetPlatformId) (void); \/* 33 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetPlatformTheme	generic/tkIntPlatDecls.h	/^    int (*tkWinGetPlatformTheme) (void); \/* 35 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetSystemPalette	generic/tkIntPlatDecls.h	/^    HPALETTE (*tkWinGetSystemPalette) (void); \/* 18 *\/$/;"	m	struct:TkIntPlatStubs
tkWinGetWrapperWindow	generic/tkIntPlatDecls.h	/^    HWND (*tkWinGetWrapperWindow) (Tk_Window tkwin); \/* 19 *\/$/;"	m	struct:TkIntPlatStubs
tkWinHandleMenuEvent	generic/tkIntPlatDecls.h	/^    int (*tkWinHandleMenuEvent) (HWND *phwnd, UINT *pMessage, WPARAM *pwParam, LPARAM *plParam, LRESULT *plResult); \/* 20 *\/$/;"	m	struct:TkIntPlatStubs
tkWinIndexOfColor	generic/tkIntPlatDecls.h	/^    int (*tkWinIndexOfColor) (XColor *colorPtr); \/* 21 *\/$/;"	m	struct:TkIntPlatStubs
tkWinReleaseDrawableDC	generic/tkIntPlatDecls.h	/^    void (*tkWinReleaseDrawableDC) (Drawable d, HDC hdc, TkWinDCState *state); \/* 22 *\/$/;"	m	struct:TkIntPlatStubs
tkWinResendEvent	generic/tkIntPlatDecls.h	/^    LRESULT (*tkWinResendEvent) (WNDPROC wndproc, HWND hwnd, XEvent *eventPtr); \/* 23 *\/$/;"	m	struct:TkIntPlatStubs
tkWinSelectPalette	generic/tkIntPlatDecls.h	/^    HPALETTE (*tkWinSelectPalette) (HDC dc, Colormap colormap); \/* 24 *\/$/;"	m	struct:TkIntPlatStubs
tkWinSetForegroundWindow	generic/tkIntPlatDecls.h	/^    void (*tkWinSetForegroundWindow) (TkWindow *winPtr); \/* 30 *\/$/;"	m	struct:TkIntPlatStubs
tkWinSetHINSTANCE	generic/tkIntPlatDecls.h	/^    void (*tkWinSetHINSTANCE) (HINSTANCE hInstance); \/* 34 *\/$/;"	m	struct:TkIntPlatStubs
tkWinSetMenu	generic/tkIntPlatDecls.h	/^    void (*tkWinSetMenu) (Tk_Window tkwin, HMENU hMenu); \/* 25 *\/$/;"	m	struct:TkIntPlatStubs
tkWinSetWindowPos	generic/tkIntPlatDecls.h	/^    void (*tkWinSetWindowPos) (HWND hwnd, HWND siblingHwnd, int pos); \/* 26 *\/$/;"	m	struct:TkIntPlatStubs
tkWinTheme	win/tkWinX.c	/^static int tkWinTheme = 0;		\/* See TkWinGetPlatformTheme *\/$/;"	v	file:
tkWinWmCleanup	generic/tkIntPlatDecls.h	/^    void (*tkWinWmCleanup) (HINSTANCE hInstance); \/* 27 *\/$/;"	m	struct:TkIntPlatStubs
tkWinXCleanup	generic/tkIntPlatDecls.h	/^    void (*tkWinXCleanup) (ClientData clientData); \/* 28 *\/$/;"	m	struct:TkIntPlatStubs
tkWinXInit	generic/tkIntPlatDecls.h	/^    void (*tkWinXInit) (HINSTANCE hInstance); \/* 29 *\/$/;"	m	struct:TkIntPlatStubs
tkWindowDoesNotHideAttribute	macosx/tkMacOSXWm.c	37;"	d	file:
tkWindowType	generic/tkCanvWind.c	/^Tk_ItemType tkWindowType = {$/;"	v
tkWindowType	generic/tkCanvas.h	/^MODULE_SCOPE Tk_ItemType tkRectangleType, tkTextType, tkWindowType;$/;"	v
tkWindowsMenu	macosx/tkMacOSXPrivate.h	/^enum { tkMainMenu = 1, tkApplicationMenu, tkWindowsMenu, tkHelpMenu};$/;"	e	enum:__anon190
tkWmAddToColormapWindows	generic/tkIntDecls.h	/^    void (*tkWmAddToColormapWindows) (TkWindow *winPtr); \/* 88 *\/$/;"	m	struct:TkIntStubs
tkWmCleanup	generic/tkIntPlatDecls.h	/^    void (*tkWmCleanup) (TkDisplay *dispPtr); \/* 43 *\/$/;"	m	struct:TkIntPlatStubs
tkWmCleanup	generic/tkIntPlatDecls.h	/^    void (*tkWmCleanup) (TkDisplay *dispPtr); \/* 9 *\/$/;"	m	struct:TkIntPlatStubs
tkWmDeadWindow	generic/tkIntDecls.h	/^    void (*tkWmDeadWindow) (TkWindow *winPtr); \/* 89 *\/$/;"	m	struct:TkIntStubs
tkWmFocusToplevel	generic/tkIntDecls.h	/^    TkWindow * (*tkWmFocusToplevel) (TkWindow *winPtr); \/* 90 *\/$/;"	m	struct:TkIntStubs
tkWmMapWindow	generic/tkIntDecls.h	/^    void (*tkWmMapWindow) (TkWindow *winPtr); \/* 91 *\/$/;"	m	struct:TkIntStubs
tkWmNewWindow	generic/tkIntDecls.h	/^    void (*tkWmNewWindow) (TkWindow *winPtr); \/* 92 *\/$/;"	m	struct:TkIntStubs
tkWmProtocolEventProc	generic/tkIntDecls.h	/^    void (*tkWmProtocolEventProc) (TkWindow *winPtr, XEvent *evenvPtr); \/* 93 *\/$/;"	m	struct:TkIntStubs
tkWmRemoveFromColormapWindows	generic/tkIntDecls.h	/^    void (*tkWmRemoveFromColormapWindows) (TkWindow *winPtr); \/* 94 *\/$/;"	m	struct:TkIntStubs
tkWmRestackToplevel	generic/tkIntDecls.h	/^    void (*tkWmRestackToplevel) (TkWindow *winPtr, int aboveBelow, TkWindow *otherPtr); \/* 95 *\/$/;"	m	struct:TkIntStubs
tkWmSetClass	generic/tkIntDecls.h	/^    void (*tkWmSetClass) (TkWindow *winPtr); \/* 96 *\/$/;"	m	struct:TkIntStubs
tkWmStackorderToplevel	generic/tkIntDecls.h	/^    TkWindow ** (*tkWmStackorderToplevel) (TkWindow *parentPtr); \/* 141 *\/$/;"	m	struct:TkIntStubs
tkWmUnmapWindow	generic/tkIntDecls.h	/^    void (*tkWmUnmapWindow) (TkWindow *winPtr); \/* 97 *\/$/;"	m	struct:TkIntStubs
tk_3DBorderColor	generic/tkDecls.h	/^    XColor * (*tk_3DBorderColor) (Tk_3DBorder border); \/* 1 *\/$/;"	m	struct:TkStubs
tk_3DBorderGC	generic/tkDecls.h	/^    GC (*tk_3DBorderGC) (Tk_Window tkwin, Tk_3DBorder border, int which); \/* 2 *\/$/;"	m	struct:TkStubs
tk_3DHorizontalBevel	generic/tkDecls.h	/^    void (*tk_3DHorizontalBevel) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftIn, int rightIn, int topBevel, int relief); \/* 3 *\/$/;"	m	struct:TkStubs
tk_3DVerticalBevel	generic/tkDecls.h	/^    void (*tk_3DVerticalBevel) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int leftBevel, int relief); \/* 4 *\/$/;"	m	struct:TkStubs
tk_AddOption	generic/tkDecls.h	/^    void (*tk_AddOption) (Tk_Window tkwin, const char *name, const char *value, int priority); \/* 5 *\/$/;"	m	struct:TkStubs
tk_Alloc3DBorderFromObj	generic/tkDecls.h	/^    Tk_3DBorder (*tk_Alloc3DBorderFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr); \/* 186 *\/$/;"	m	struct:TkStubs
tk_AllocBitmapFromObj	generic/tkDecls.h	/^    Pixmap (*tk_AllocBitmapFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr); \/* 185 *\/$/;"	m	struct:TkStubs
tk_AllocColorFromObj	generic/tkDecls.h	/^    XColor * (*tk_AllocColorFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr); \/* 187 *\/$/;"	m	struct:TkStubs
tk_AllocCursorFromObj	generic/tkDecls.h	/^    Tk_Cursor (*tk_AllocCursorFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr); \/* 188 *\/$/;"	m	struct:TkStubs
tk_AllocFontFromObj	generic/tkDecls.h	/^    Tk_Font (*tk_AllocFontFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr); \/* 189 *\/$/;"	m	struct:TkStubs
tk_AllocStyleFromObj	generic/tkDecls.h	/^    Tk_Style (*tk_AllocStyleFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr); \/* 257 *\/$/;"	m	struct:TkStubs
tk_AttachHWND	generic/tkPlatDecls.h	/^    Window (*tk_AttachHWND) (Tk_Window tkwin, HWND hwnd); \/* 0 *\/$/;"	m	struct:TkPlatStubs
tk_BindEvent	generic/tkDecls.h	/^    void (*tk_BindEvent) (Tk_BindingTable bindingTable, XEvent *eventPtr, Tk_Window tkwin, int numObjects, ClientData *objectPtr); \/* 6 *\/$/;"	m	struct:TkStubs
tk_CanvasDrawableCoords	generic/tkDecls.h	/^    void (*tk_CanvasDrawableCoords) (Tk_Canvas canvas, double x, double y, short *drawableXPtr, short *drawableYPtr); \/* 7 *\/$/;"	m	struct:TkStubs
tk_CanvasEventuallyRedraw	generic/tkDecls.h	/^    void (*tk_CanvasEventuallyRedraw) (Tk_Canvas canvas, int x1, int y1, int x2, int y2); \/* 8 *\/$/;"	m	struct:TkStubs
tk_CanvasGetCoord	generic/tkDecls.h	/^    int (*tk_CanvasGetCoord) (Tcl_Interp *interp, Tk_Canvas canvas, const char *str, double *doublePtr); \/* 9 *\/$/;"	m	struct:TkStubs
tk_CanvasGetCoordFromObj	generic/tkDecls.h	/^    int (*tk_CanvasGetCoordFromObj) (Tcl_Interp *interp, Tk_Canvas canvas, Tcl_Obj *obj, double *doublePtr); \/* 228 *\/$/;"	m	struct:TkStubs
tk_CanvasGetTextInfo	generic/tkDecls.h	/^    Tk_CanvasTextInfo * (*tk_CanvasGetTextInfo) (Tk_Canvas canvas); \/* 10 *\/$/;"	m	struct:TkStubs
tk_CanvasPsBitmap	generic/tkDecls.h	/^    int (*tk_CanvasPsBitmap) (Tcl_Interp *interp, Tk_Canvas canvas, Pixmap bitmap, int x, int y, int width, int height); \/* 11 *\/$/;"	m	struct:TkStubs
tk_CanvasPsColor	generic/tkDecls.h	/^    int (*tk_CanvasPsColor) (Tcl_Interp *interp, Tk_Canvas canvas, XColor *colorPtr); \/* 12 *\/$/;"	m	struct:TkStubs
tk_CanvasPsFont	generic/tkDecls.h	/^    int (*tk_CanvasPsFont) (Tcl_Interp *interp, Tk_Canvas canvas, Tk_Font font); \/* 13 *\/$/;"	m	struct:TkStubs
tk_CanvasPsOutline	generic/tkDecls.h	/^    int (*tk_CanvasPsOutline) (Tk_Canvas canvas, Tk_Item *item, Tk_Outline *outline); \/* 226 *\/$/;"	m	struct:TkStubs
tk_CanvasPsPath	generic/tkDecls.h	/^    void (*tk_CanvasPsPath) (Tcl_Interp *interp, Tk_Canvas canvas, double *coordPtr, int numPoints); \/* 14 *\/$/;"	m	struct:TkStubs
tk_CanvasPsStipple	generic/tkDecls.h	/^    int (*tk_CanvasPsStipple) (Tcl_Interp *interp, Tk_Canvas canvas, Pixmap bitmap); \/* 15 *\/$/;"	m	struct:TkStubs
tk_CanvasPsY	generic/tkDecls.h	/^    double (*tk_CanvasPsY) (Tk_Canvas canvas, double y); \/* 16 *\/$/;"	m	struct:TkStubs
tk_CanvasSetOffset	generic/tkDecls.h	/^    void (*tk_CanvasSetOffset) (Tk_Canvas canvas, GC gc, Tk_TSOffset *offset); \/* 229 *\/$/;"	m	struct:TkStubs
tk_CanvasSetStippleOrigin	generic/tkDecls.h	/^    void (*tk_CanvasSetStippleOrigin) (Tk_Canvas canvas, GC gc); \/* 17 *\/$/;"	m	struct:TkStubs
tk_CanvasTagsParseProc	generic/tkDecls.h	/^    int (*tk_CanvasTagsParseProc) (ClientData clientData, Tcl_Interp *interp, Tk_Window tkwin, const char *value, char *widgRec, int offset); \/* 18 *\/$/;"	m	struct:TkStubs
tk_CanvasTagsPrintProc	generic/tkDecls.h	/^    CONST86 char * (*tk_CanvasTagsPrintProc) (ClientData clientData, Tk_Window tkwin, char *widgRec, int offset, Tcl_FreeProc **freeProcPtr); \/* 19 *\/$/;"	m	struct:TkStubs
tk_CanvasTkwin	generic/tkDecls.h	/^    Tk_Window (*tk_CanvasTkwin) (Tk_Canvas canvas); \/* 20 *\/$/;"	m	struct:TkStubs
tk_CanvasWindowCoords	generic/tkDecls.h	/^    void (*tk_CanvasWindowCoords) (Tk_Canvas canvas, double x, double y, short *screenXPtr, short *screenYPtr); \/* 21 *\/$/;"	m	struct:TkStubs
tk_ChangeOutlineGC	generic/tkDecls.h	/^    int (*tk_ChangeOutlineGC) (Tk_Canvas canvas, Tk_Item *item, Tk_Outline *outline); \/* 224 *\/$/;"	m	struct:TkStubs
tk_ChangeWindowAttributes	generic/tkDecls.h	/^    void (*tk_ChangeWindowAttributes) (Tk_Window tkwin, unsigned long valueMask, XSetWindowAttributes *attsPtr); \/* 22 *\/$/;"	m	struct:TkStubs
tk_CharBbox	generic/tkDecls.h	/^    int (*tk_CharBbox) (Tk_TextLayout layout, int index, int *xPtr, int *yPtr, int *widthPtr, int *heightPtr); \/* 23 *\/$/;"	m	struct:TkStubs
tk_ClearSelection	generic/tkDecls.h	/^    void (*tk_ClearSelection) (Tk_Window tkwin, Atom selection); \/* 24 *\/$/;"	m	struct:TkStubs
tk_ClipboardAppend	generic/tkDecls.h	/^    int (*tk_ClipboardAppend) (Tcl_Interp *interp, Tk_Window tkwin, Atom target, Atom format, const char *buffer); \/* 25 *\/$/;"	m	struct:TkStubs
tk_ClipboardClear	generic/tkDecls.h	/^    int (*tk_ClipboardClear) (Tcl_Interp *interp, Tk_Window tkwin); \/* 26 *\/$/;"	m	struct:TkStubs
tk_CollapseMotionEvents	generic/tkDecls.h	/^    int (*tk_CollapseMotionEvents) (Display *display, int collapse); \/* 248 *\/$/;"	m	struct:TkStubs
tk_ComputeTextLayout	generic/tkDecls.h	/^    Tk_TextLayout (*tk_ComputeTextLayout) (Tk_Font font, const char *str, int numChars, int wrapLength, Tk_Justify justify, int flags, int *widthPtr, int *heightPtr); \/* 31 *\/$/;"	m	struct:TkStubs
tk_ConfigOutlineGC	generic/tkDecls.h	/^    int (*tk_ConfigOutlineGC) (XGCValues *gcValues, Tk_Canvas canvas, Tk_Item *item, Tk_Outline *outline); \/* 223 *\/$/;"	m	struct:TkStubs
tk_ConfigureInfo	generic/tkDecls.h	/^    int (*tk_ConfigureInfo) (Tcl_Interp *interp, Tk_Window tkwin, const Tk_ConfigSpec *specs, char *widgRec, const char *argvName, int flags); \/* 27 *\/$/;"	m	struct:TkStubs
tk_ConfigureValue	generic/tkDecls.h	/^    int (*tk_ConfigureValue) (Tcl_Interp *interp, Tk_Window tkwin, const Tk_ConfigSpec *specs, char *widgRec, const char *argvName, int flags); \/* 28 *\/$/;"	m	struct:TkStubs
tk_ConfigureWidget	generic/tkDecls.h	/^    int (*tk_ConfigureWidget) (Tcl_Interp *interp, Tk_Window tkwin, const Tk_ConfigSpec *specs, int argc, CONST84 char **argv, char *widgRec, int flags); \/* 29 *\/$/;"	m	struct:TkStubs
tk_ConfigureWindow	generic/tkDecls.h	/^    void (*tk_ConfigureWindow) (Tk_Window tkwin, unsigned int valueMask, XWindowChanges *valuePtr); \/* 30 *\/$/;"	m	struct:TkStubs
tk_CoordsToWindow	generic/tkDecls.h	/^    Tk_Window (*tk_CoordsToWindow) (int rootX, int rootY, Tk_Window tkwin); \/* 32 *\/$/;"	m	struct:TkStubs
tk_CreateAnonymousWindow	generic/tkDecls.h	/^    Tk_Window (*tk_CreateAnonymousWindow) (Tcl_Interp *interp, Tk_Window parent, const char *screenName); \/* 241 *\/$/;"	m	struct:TkStubs
tk_CreateBinding	generic/tkDecls.h	/^    unsigned long (*tk_CreateBinding) (Tcl_Interp *interp, Tk_BindingTable bindingTable, ClientData object, const char *eventStr, const char *script, int append); \/* 33 *\/$/;"	m	struct:TkStubs
tk_CreateBindingTable	generic/tkDecls.h	/^    Tk_BindingTable (*tk_CreateBindingTable) (Tcl_Interp *interp); \/* 34 *\/$/;"	m	struct:TkStubs
tk_CreateClientMessageHandler	generic/tkDecls.h	/^    void (*tk_CreateClientMessageHandler) (Tk_ClientMessageProc *proc); \/* 239 *\/$/;"	m	struct:TkStubs
tk_CreateConsoleWindow	generic/tkDecls.h	/^    int (*tk_CreateConsoleWindow) (Tcl_Interp *interp); \/* 216 *\/$/;"	m	struct:TkStubs
tk_CreateErrorHandler	generic/tkDecls.h	/^    Tk_ErrorHandler (*tk_CreateErrorHandler) (Display *display, int errNum, int request, int minorCode, Tk_ErrorProc *errorProc, ClientData clientData); \/* 35 *\/$/;"	m	struct:TkStubs
tk_CreateEventHandler	generic/tkDecls.h	/^    void (*tk_CreateEventHandler) (Tk_Window token, unsigned long mask, Tk_EventProc *proc, ClientData clientData); \/* 36 *\/$/;"	m	struct:TkStubs
tk_CreateGenericHandler	generic/tkDecls.h	/^    void (*tk_CreateGenericHandler) (Tk_GenericProc *proc, ClientData clientData); \/* 37 *\/$/;"	m	struct:TkStubs
tk_CreateImageType	generic/tkDecls.h	/^    void (*tk_CreateImageType) (const Tk_ImageType *typePtr); \/* 38 *\/$/;"	m	struct:TkStubs
tk_CreateItemType	generic/tkDecls.h	/^    void (*tk_CreateItemType) (Tk_ItemType *typePtr); \/* 39 *\/$/;"	m	struct:TkStubs
tk_CreateOldImageType	generic/tkDecls.h	/^    void (*tk_CreateOldImageType) (const Tk_ImageType *typePtr); \/* 272 *\/$/;"	m	struct:TkStubs
tk_CreateOldPhotoImageFormat	generic/tkDecls.h	/^    void (*tk_CreateOldPhotoImageFormat) (const Tk_PhotoImageFormat *formatPtr); \/* 273 *\/$/;"	m	struct:TkStubs
tk_CreateOptionTable	generic/tkDecls.h	/^    Tk_OptionTable (*tk_CreateOptionTable) (Tcl_Interp *interp, const Tk_OptionSpec *templatePtr); \/* 190 *\/$/;"	m	struct:TkStubs
tk_CreateOutline	generic/tkDecls.h	/^    void (*tk_CreateOutline) (Tk_Outline *outline); \/* 221 *\/$/;"	m	struct:TkStubs
tk_CreatePhotoImageFormat	generic/tkDecls.h	/^    void (*tk_CreatePhotoImageFormat) (const Tk_PhotoImageFormat *formatPtr); \/* 40 *\/$/;"	m	struct:TkStubs
tk_CreateSelHandler	generic/tkDecls.h	/^    void (*tk_CreateSelHandler) (Tk_Window tkwin, Atom selection, Atom target, Tk_SelectionProc *proc, ClientData clientData, Atom format); \/* 41 *\/$/;"	m	struct:TkStubs
tk_CreateSmoothMethod	generic/tkDecls.h	/^    void (*tk_CreateSmoothMethod) (Tcl_Interp *interp, const Tk_SmoothMethod *method); \/* 217 *\/$/;"	m	struct:TkStubs
tk_CreateStyle	generic/tkDecls.h	/^    Tk_Style (*tk_CreateStyle) (const char *name, Tk_StyleEngine engine, ClientData clientData); \/* 253 *\/$/;"	m	struct:TkStubs
tk_CreateWindow	generic/tkDecls.h	/^    Tk_Window (*tk_CreateWindow) (Tcl_Interp *interp, Tk_Window parent, const char *name, const char *screenName); \/* 42 *\/$/;"	m	struct:TkStubs
tk_CreateWindowFromPath	generic/tkDecls.h	/^    Tk_Window (*tk_CreateWindowFromPath) (Tcl_Interp *interp, Tk_Window tkwin, const char *pathName, const char *screenName); \/* 43 *\/$/;"	m	struct:TkStubs
tk_DefineBitmap	generic/tkDecls.h	/^    int (*tk_DefineBitmap) (Tcl_Interp *interp, const char *name, const void *source, int width, int height); \/* 44 *\/$/;"	m	struct:TkStubs
tk_DefineCursor	generic/tkDecls.h	/^    void (*tk_DefineCursor) (Tk_Window window, Tk_Cursor cursor); \/* 45 *\/$/;"	m	struct:TkStubs
tk_DeleteAllBindings	generic/tkDecls.h	/^    void (*tk_DeleteAllBindings) (Tk_BindingTable bindingTable, ClientData object); \/* 46 *\/$/;"	m	struct:TkStubs
tk_DeleteBinding	generic/tkDecls.h	/^    int (*tk_DeleteBinding) (Tcl_Interp *interp, Tk_BindingTable bindingTable, ClientData object, const char *eventStr); \/* 47 *\/$/;"	m	struct:TkStubs
tk_DeleteBindingTable	generic/tkDecls.h	/^    void (*tk_DeleteBindingTable) (Tk_BindingTable bindingTable); \/* 48 *\/$/;"	m	struct:TkStubs
tk_DeleteClientMessageHandler	generic/tkDecls.h	/^    void (*tk_DeleteClientMessageHandler) (Tk_ClientMessageProc *proc); \/* 240 *\/$/;"	m	struct:TkStubs
tk_DeleteErrorHandler	generic/tkDecls.h	/^    void (*tk_DeleteErrorHandler) (Tk_ErrorHandler handler); \/* 49 *\/$/;"	m	struct:TkStubs
tk_DeleteEventHandler	generic/tkDecls.h	/^    void (*tk_DeleteEventHandler) (Tk_Window token, unsigned long mask, Tk_EventProc *proc, ClientData clientData); \/* 50 *\/$/;"	m	struct:TkStubs
tk_DeleteGenericHandler	generic/tkDecls.h	/^    void (*tk_DeleteGenericHandler) (Tk_GenericProc *proc, ClientData clientData); \/* 51 *\/$/;"	m	struct:TkStubs
tk_DeleteImage	generic/tkDecls.h	/^    void (*tk_DeleteImage) (Tcl_Interp *interp, const char *name); \/* 52 *\/$/;"	m	struct:TkStubs
tk_DeleteOptionTable	generic/tkDecls.h	/^    void (*tk_DeleteOptionTable) (Tk_OptionTable optionTable); \/* 191 *\/$/;"	m	struct:TkStubs
tk_DeleteOutline	generic/tkDecls.h	/^    void (*tk_DeleteOutline) (Display *display, Tk_Outline *outline); \/* 222 *\/$/;"	m	struct:TkStubs
tk_DeleteSelHandler	generic/tkDecls.h	/^    void (*tk_DeleteSelHandler) (Tk_Window tkwin, Atom selection, Atom target); \/* 53 *\/$/;"	m	struct:TkStubs
tk_DestroyWindow	generic/tkDecls.h	/^    void (*tk_DestroyWindow) (Tk_Window tkwin); \/* 54 *\/$/;"	m	struct:TkStubs
tk_DisplayName	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_DisplayName) (Tk_Window tkwin); \/* 55 *\/$/;"	m	struct:TkStubs
tk_DistanceToTextLayout	generic/tkDecls.h	/^    int (*tk_DistanceToTextLayout) (Tk_TextLayout layout, int x, int y); \/* 56 *\/$/;"	m	struct:TkStubs
tk_DitherPhoto	generic/tkDecls.h	/^    void (*tk_DitherPhoto) (Tk_PhotoHandle handle, int x, int y, int width, int height); \/* 230 *\/$/;"	m	struct:TkStubs
tk_Draw3DPolygon	generic/tkDecls.h	/^    void (*tk_Draw3DPolygon) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint *pointPtr, int numPoints, int borderWidth, int leftRelief); \/* 57 *\/$/;"	m	struct:TkStubs
tk_Draw3DRectangle	generic/tkDecls.h	/^    void (*tk_Draw3DRectangle) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief); \/* 58 *\/$/;"	m	struct:TkStubs
tk_DrawChars	generic/tkDecls.h	/^    void (*tk_DrawChars) (Display *display, Drawable drawable, GC gc, Tk_Font tkfont, const char *source, int numBytes, int x, int y); \/* 59 *\/$/;"	m	struct:TkStubs
tk_DrawElement	generic/tkDecls.h	/^    void (*tk_DrawElement) (Tk_Style style, Tk_StyledElement element, char *recordPtr, Tk_Window tkwin, Drawable d, int x, int y, int width, int height, int state); \/* 264 *\/$/;"	m	struct:TkStubs
tk_DrawFocusHighlight	generic/tkDecls.h	/^    void (*tk_DrawFocusHighlight) (Tk_Window tkwin, GC gc, int width, Drawable drawable); \/* 60 *\/$/;"	m	struct:TkStubs
tk_DrawTextLayout	generic/tkDecls.h	/^    void (*tk_DrawTextLayout) (Display *display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int firstChar, int lastChar); \/* 61 *\/$/;"	m	struct:TkStubs
tk_Fill3DPolygon	generic/tkDecls.h	/^    void (*tk_Fill3DPolygon) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, XPoint *pointPtr, int numPoints, int borderWidth, int leftRelief); \/* 62 *\/$/;"	m	struct:TkStubs
tk_Fill3DRectangle	generic/tkDecls.h	/^    void (*tk_Fill3DRectangle) (Tk_Window tkwin, Drawable drawable, Tk_3DBorder border, int x, int y, int width, int height, int borderWidth, int relief); \/* 63 *\/$/;"	m	struct:TkStubs
tk_FindPhoto	generic/tkDecls.h	/^    Tk_PhotoHandle (*tk_FindPhoto) (Tcl_Interp *interp, const char *imageName); \/* 64 *\/$/;"	m	struct:TkStubs
tk_FontId	generic/tkDecls.h	/^    Font (*tk_FontId) (Tk_Font font); \/* 65 *\/$/;"	m	struct:TkStubs
tk_Free3DBorder	generic/tkDecls.h	/^    void (*tk_Free3DBorder) (Tk_3DBorder border); \/* 66 *\/$/;"	m	struct:TkStubs
tk_Free3DBorderFromObj	generic/tkDecls.h	/^    void (*tk_Free3DBorderFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 192 *\/$/;"	m	struct:TkStubs
tk_FreeBitmap	generic/tkDecls.h	/^    void (*tk_FreeBitmap) (Display *display, Pixmap bitmap); \/* 67 *\/$/;"	m	struct:TkStubs
tk_FreeBitmapFromObj	generic/tkDecls.h	/^    void (*tk_FreeBitmapFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 193 *\/$/;"	m	struct:TkStubs
tk_FreeColor	generic/tkDecls.h	/^    void (*tk_FreeColor) (XColor *colorPtr); \/* 68 *\/$/;"	m	struct:TkStubs
tk_FreeColorFromObj	generic/tkDecls.h	/^    void (*tk_FreeColorFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 194 *\/$/;"	m	struct:TkStubs
tk_FreeColormap	generic/tkDecls.h	/^    void (*tk_FreeColormap) (Display *display, Colormap colormap); \/* 69 *\/$/;"	m	struct:TkStubs
tk_FreeConfigOptions	generic/tkDecls.h	/^    void (*tk_FreeConfigOptions) (char *recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin); \/* 195 *\/$/;"	m	struct:TkStubs
tk_FreeCursor	generic/tkDecls.h	/^    void (*tk_FreeCursor) (Display *display, Tk_Cursor cursor); \/* 70 *\/$/;"	m	struct:TkStubs
tk_FreeCursorFromObj	generic/tkDecls.h	/^    void (*tk_FreeCursorFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 197 *\/$/;"	m	struct:TkStubs
tk_FreeFont	generic/tkDecls.h	/^    void (*tk_FreeFont) (Tk_Font f); \/* 71 *\/$/;"	m	struct:TkStubs
tk_FreeFontFromObj	generic/tkDecls.h	/^    void (*tk_FreeFontFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 198 *\/$/;"	m	struct:TkStubs
tk_FreeGC	generic/tkDecls.h	/^    void (*tk_FreeGC) (Display *display, GC gc); \/* 72 *\/$/;"	m	struct:TkStubs
tk_FreeImage	generic/tkDecls.h	/^    void (*tk_FreeImage) (Tk_Image image); \/* 73 *\/$/;"	m	struct:TkStubs
tk_FreeOptions	generic/tkDecls.h	/^    void (*tk_FreeOptions) (const Tk_ConfigSpec *specs, char *widgRec, Display *display, int needFlags); \/* 74 *\/$/;"	m	struct:TkStubs
tk_FreePixmap	generic/tkDecls.h	/^    void (*tk_FreePixmap) (Display *display, Pixmap pixmap); \/* 75 *\/$/;"	m	struct:TkStubs
tk_FreeSavedOptions	generic/tkDecls.h	/^    void (*tk_FreeSavedOptions) (Tk_SavedOptions *savePtr); \/* 196 *\/$/;"	m	struct:TkStubs
tk_FreeStyle	generic/tkDecls.h	/^    void (*tk_FreeStyle) (Tk_Style style); \/* 255 *\/$/;"	m	struct:TkStubs
tk_FreeStyleFromObj	generic/tkDecls.h	/^    void (*tk_FreeStyleFromObj) (Tcl_Obj *objPtr); \/* 259 *\/$/;"	m	struct:TkStubs
tk_FreeTextLayout	generic/tkDecls.h	/^    void (*tk_FreeTextLayout) (Tk_TextLayout textLayout); \/* 76 *\/$/;"	m	struct:TkStubs
tk_FreeXId	generic/tkDecls.h	/^    void (*tk_FreeXId) (Display *display, XID xid); \/* 77 *\/$/;"	m	struct:TkStubs
tk_GCForColor	generic/tkDecls.h	/^    GC (*tk_GCForColor) (XColor *colorPtr, Drawable drawable); \/* 78 *\/$/;"	m	struct:TkStubs
tk_GeometryRequest	generic/tkDecls.h	/^    void (*tk_GeometryRequest) (Tk_Window tkwin, int reqWidth, int reqHeight); \/* 79 *\/$/;"	m	struct:TkStubs
tk_Get3DBorder	generic/tkDecls.h	/^    Tk_3DBorder (*tk_Get3DBorder) (Tcl_Interp *interp, Tk_Window tkwin, Tk_Uid colorName); \/* 80 *\/$/;"	m	struct:TkStubs
tk_Get3DBorderFromObj	generic/tkDecls.h	/^    Tk_3DBorder (*tk_Get3DBorderFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 199 *\/$/;"	m	struct:TkStubs
tk_GetAllBindings	generic/tkDecls.h	/^    void (*tk_GetAllBindings) (Tcl_Interp *interp, Tk_BindingTable bindingTable, ClientData object); \/* 81 *\/$/;"	m	struct:TkStubs
tk_GetAnchor	generic/tkDecls.h	/^    int (*tk_GetAnchor) (Tcl_Interp *interp, const char *str, Tk_Anchor *anchorPtr); \/* 82 *\/$/;"	m	struct:TkStubs
tk_GetAnchorFromObj	generic/tkDecls.h	/^    int (*tk_GetAnchorFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tk_Anchor *anchorPtr); \/* 200 *\/$/;"	m	struct:TkStubs
tk_GetAtomName	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_GetAtomName) (Tk_Window tkwin, Atom atom); \/* 83 *\/$/;"	m	struct:TkStubs
tk_GetBinding	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_GetBinding) (Tcl_Interp *interp, Tk_BindingTable bindingTable, ClientData object, const char *eventStr); \/* 84 *\/$/;"	m	struct:TkStubs
tk_GetBitmap	generic/tkDecls.h	/^    Pixmap (*tk_GetBitmap) (Tcl_Interp *interp, Tk_Window tkwin, const char *str); \/* 85 *\/$/;"	m	struct:TkStubs
tk_GetBitmapFromData	generic/tkDecls.h	/^    Pixmap (*tk_GetBitmapFromData) (Tcl_Interp *interp, Tk_Window tkwin, const void *source, int width, int height); \/* 86 *\/$/;"	m	struct:TkStubs
tk_GetBitmapFromObj	generic/tkDecls.h	/^    Pixmap (*tk_GetBitmapFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 201 *\/$/;"	m	struct:TkStubs
tk_GetCapStyle	generic/tkDecls.h	/^    int (*tk_GetCapStyle) (Tcl_Interp *interp, const char *str, int *capPtr); \/* 87 *\/$/;"	m	struct:TkStubs
tk_GetColor	generic/tkDecls.h	/^    XColor * (*tk_GetColor) (Tcl_Interp *interp, Tk_Window tkwin, Tk_Uid name); \/* 88 *\/$/;"	m	struct:TkStubs
tk_GetColorByValue	generic/tkDecls.h	/^    XColor * (*tk_GetColorByValue) (Tk_Window tkwin, XColor *colorPtr); \/* 89 *\/$/;"	m	struct:TkStubs
tk_GetColorFromObj	generic/tkDecls.h	/^    XColor * (*tk_GetColorFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 202 *\/$/;"	m	struct:TkStubs
tk_GetColormap	generic/tkDecls.h	/^    Colormap (*tk_GetColormap) (Tcl_Interp *interp, Tk_Window tkwin, const char *str); \/* 90 *\/$/;"	m	struct:TkStubs
tk_GetCursor	generic/tkDecls.h	/^    Tk_Cursor (*tk_GetCursor) (Tcl_Interp *interp, Tk_Window tkwin, Tk_Uid str); \/* 91 *\/$/;"	m	struct:TkStubs
tk_GetCursorFromData	generic/tkDecls.h	/^    Tk_Cursor (*tk_GetCursorFromData) (Tcl_Interp *interp, Tk_Window tkwin, const char *source, const char *mask, int width, int height, int xHot, int yHot, Tk_Uid fg, Tk_Uid bg); \/* 92 *\/$/;"	m	struct:TkStubs
tk_GetCursorFromObj	generic/tkDecls.h	/^    Tk_Cursor (*tk_GetCursorFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 203 *\/$/;"	m	struct:TkStubs
tk_GetDash	generic/tkDecls.h	/^    int (*tk_GetDash) (Tcl_Interp *interp, const char *value, Tk_Dash *dash); \/* 220 *\/$/;"	m	struct:TkStubs
tk_GetElementBorderWidth	generic/tkDecls.h	/^    int (*tk_GetElementBorderWidth) (Tk_Style style, Tk_StyledElement element, char *recordPtr, Tk_Window tkwin); \/* 263 *\/$/;"	m	struct:TkStubs
tk_GetElementBox	generic/tkDecls.h	/^    void (*tk_GetElementBox) (Tk_Style style, Tk_StyledElement element, char *recordPtr, Tk_Window tkwin, int x, int y, int width, int height, int inner, int *xPtr, int *yPtr, int *widthPtr, int *heightPtr); \/* 262 *\/$/;"	m	struct:TkStubs
tk_GetElementId	generic/tkDecls.h	/^    int (*tk_GetElementId) (const char *name); \/* 252 *\/$/;"	m	struct:TkStubs
tk_GetElementSize	generic/tkDecls.h	/^    void (*tk_GetElementSize) (Tk_Style style, Tk_StyledElement element, char *recordPtr, Tk_Window tkwin, int width, int height, int inner, int *widthPtr, int *heightPtr); \/* 261 *\/$/;"	m	struct:TkStubs
tk_GetFont	generic/tkDecls.h	/^    Tk_Font (*tk_GetFont) (Tcl_Interp *interp, Tk_Window tkwin, const char *str); \/* 93 *\/$/;"	m	struct:TkStubs
tk_GetFontFromObj	generic/tkDecls.h	/^    Tk_Font (*tk_GetFontFromObj) (Tk_Window tkwin, Tcl_Obj *objPtr); \/* 94 *\/$/;"	m	struct:TkStubs
tk_GetFontMetrics	generic/tkDecls.h	/^    void (*tk_GetFontMetrics) (Tk_Font font, Tk_FontMetrics *fmPtr); \/* 95 *\/$/;"	m	struct:TkStubs
tk_GetGC	generic/tkDecls.h	/^    GC (*tk_GetGC) (Tk_Window tkwin, unsigned long valueMask, XGCValues *valuePtr); \/* 96 *\/$/;"	m	struct:TkStubs
tk_GetHINSTANCE	generic/tkPlatDecls.h	/^    HINSTANCE (*tk_GetHINSTANCE) (void); \/* 1 *\/$/;"	m	struct:TkPlatStubs
tk_GetHWND	generic/tkPlatDecls.h	/^    HWND (*tk_GetHWND) (Window window); \/* 2 *\/$/;"	m	struct:TkPlatStubs
tk_GetImage	generic/tkDecls.h	/^    Tk_Image (*tk_GetImage) (Tcl_Interp *interp, Tk_Window tkwin, const char *name, Tk_ImageChangedProc *changeProc, ClientData clientData); \/* 97 *\/$/;"	m	struct:TkStubs
tk_GetImageMasterData	generic/tkDecls.h	/^    ClientData (*tk_GetImageMasterData) (Tcl_Interp *interp, const char *name, CONST86 Tk_ImageType **typePtrPtr); \/* 98 *\/$/;"	m	struct:TkStubs
tk_GetItemTypes	generic/tkDecls.h	/^    Tk_ItemType * (*tk_GetItemTypes) (void); \/* 99 *\/$/;"	m	struct:TkStubs
tk_GetJoinStyle	generic/tkDecls.h	/^    int (*tk_GetJoinStyle) (Tcl_Interp *interp, const char *str, int *joinPtr); \/* 100 *\/$/;"	m	struct:TkStubs
tk_GetJustify	generic/tkDecls.h	/^    int (*tk_GetJustify) (Tcl_Interp *interp, const char *str, Tk_Justify *justifyPtr); \/* 101 *\/$/;"	m	struct:TkStubs
tk_GetJustifyFromObj	generic/tkDecls.h	/^    int (*tk_GetJustifyFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Tk_Justify *justifyPtr); \/* 206 *\/$/;"	m	struct:TkStubs
tk_GetMMFromObj	generic/tkDecls.h	/^    int (*tk_GetMMFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr, double *doublePtr); \/* 207 *\/$/;"	m	struct:TkStubs
tk_GetNumMainWindows	generic/tkDecls.h	/^    int (*tk_GetNumMainWindows) (void); \/* 102 *\/$/;"	m	struct:TkStubs
tk_GetOption	generic/tkDecls.h	/^    Tk_Uid (*tk_GetOption) (Tk_Window tkwin, const char *name, const char *className); \/* 103 *\/$/;"	m	struct:TkStubs
tk_GetOptionInfo	generic/tkDecls.h	/^    Tcl_Obj * (*tk_GetOptionInfo) (Tcl_Interp *interp, char *recordPtr, Tk_OptionTable optionTable, Tcl_Obj *namePtr, Tk_Window tkwin); \/* 204 *\/$/;"	m	struct:TkStubs
tk_GetOptionValue	generic/tkDecls.h	/^    Tcl_Obj * (*tk_GetOptionValue) (Tcl_Interp *interp, char *recordPtr, Tk_OptionTable optionTable, Tcl_Obj *namePtr, Tk_Window tkwin); \/* 205 *\/$/;"	m	struct:TkStubs
tk_GetPixels	generic/tkDecls.h	/^    int (*tk_GetPixels) (Tcl_Interp *interp, Tk_Window tkwin, const char *str, int *intPtr); \/* 104 *\/$/;"	m	struct:TkStubs
tk_GetPixelsFromObj	generic/tkDecls.h	/^    int (*tk_GetPixelsFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr, int *intPtr); \/* 208 *\/$/;"	m	struct:TkStubs
tk_GetPixmap	generic/tkDecls.h	/^    Pixmap (*tk_GetPixmap) (Display *display, Drawable d, int width, int height, int depth); \/* 105 *\/$/;"	m	struct:TkStubs
tk_GetRelief	generic/tkDecls.h	/^    int (*tk_GetRelief) (Tcl_Interp *interp, const char *name, int *reliefPtr); \/* 106 *\/$/;"	m	struct:TkStubs
tk_GetReliefFromObj	generic/tkDecls.h	/^    int (*tk_GetReliefFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int *resultPtr); \/* 209 *\/$/;"	m	struct:TkStubs
tk_GetRootCoords	generic/tkDecls.h	/^    void (*tk_GetRootCoords) (Tk_Window tkwin, int *xPtr, int *yPtr); \/* 107 *\/$/;"	m	struct:TkStubs
tk_GetScreenMM	generic/tkDecls.h	/^    int (*tk_GetScreenMM) (Tcl_Interp *interp, Tk_Window tkwin, const char *str, double *doublePtr); \/* 109 *\/$/;"	m	struct:TkStubs
tk_GetScrollInfo	generic/tkDecls.h	/^    int (*tk_GetScrollInfo) (Tcl_Interp *interp, int argc, CONST84 char **argv, double *dblPtr, int *intPtr); \/* 108 *\/$/;"	m	struct:TkStubs
tk_GetScrollInfoObj	generic/tkDecls.h	/^    int (*tk_GetScrollInfoObj) (Tcl_Interp *interp, int objc, Tcl_Obj *const objv[], double *dblPtr, int *intPtr); \/* 210 *\/$/;"	m	struct:TkStubs
tk_GetSelection	generic/tkDecls.h	/^    int (*tk_GetSelection) (Tcl_Interp *interp, Tk_Window tkwin, Atom selection, Atom target, Tk_GetSelProc *proc, ClientData clientData); \/* 110 *\/$/;"	m	struct:TkStubs
tk_GetStyle	generic/tkDecls.h	/^    Tk_Style (*tk_GetStyle) (Tcl_Interp *interp, const char *name); \/* 254 *\/$/;"	m	struct:TkStubs
tk_GetStyleEngine	generic/tkDecls.h	/^    Tk_StyleEngine (*tk_GetStyleEngine) (const char *name); \/* 250 *\/$/;"	m	struct:TkStubs
tk_GetStyleFromObj	generic/tkDecls.h	/^    Tk_Style (*tk_GetStyleFromObj) (Tcl_Obj *objPtr); \/* 258 *\/$/;"	m	struct:TkStubs
tk_GetStyledElement	generic/tkDecls.h	/^    Tk_StyledElement (*tk_GetStyledElement) (Tk_Style style, int elementId, Tk_OptionTable optionTable); \/* 260 *\/$/;"	m	struct:TkStubs
tk_GetUid	generic/tkDecls.h	/^    Tk_Uid (*tk_GetUid) (const char *str); \/* 111 *\/$/;"	m	struct:TkStubs
tk_GetUserInactiveTime	generic/tkDecls.h	/^    long (*tk_GetUserInactiveTime) (Display *dpy); \/* 269 *\/$/;"	m	struct:TkStubs
tk_GetVRootGeometry	generic/tkDecls.h	/^    void (*tk_GetVRootGeometry) (Tk_Window tkwin, int *xPtr, int *yPtr, int *widthPtr, int *heightPtr); \/* 113 *\/$/;"	m	struct:TkStubs
tk_GetVisual	generic/tkDecls.h	/^    Visual * (*tk_GetVisual) (Tcl_Interp *interp, Tk_Window tkwin, const char *str, int *depthPtr, Colormap *colormapPtr); \/* 112 *\/$/;"	m	struct:TkStubs
tk_Grab	generic/tkDecls.h	/^    int (*tk_Grab) (Tcl_Interp *interp, Tk_Window tkwin, int grabGlobal); \/* 114 *\/$/;"	m	struct:TkStubs
tk_HWNDToWindow	generic/tkPlatDecls.h	/^    Tk_Window (*tk_HWNDToWindow) (HWND hwnd); \/* 3 *\/$/;"	m	struct:TkPlatStubs
tk_HandleEvent	generic/tkDecls.h	/^    void (*tk_HandleEvent) (XEvent *eventPtr); \/* 115 *\/$/;"	m	struct:TkStubs
tk_IdToWindow	generic/tkDecls.h	/^    Tk_Window (*tk_IdToWindow) (Display *display, Window window); \/* 116 *\/$/;"	m	struct:TkStubs
tk_ImageChanged	generic/tkDecls.h	/^    void (*tk_ImageChanged) (Tk_ImageMaster master, int x, int y, int width, int height, int imageWidth, int imageHeight); \/* 117 *\/$/;"	m	struct:TkStubs
tk_Init	generic/tkDecls.h	/^    int (*tk_Init) (Tcl_Interp *interp); \/* 118 *\/$/;"	m	struct:TkStubs
tk_InitConsoleChannels	generic/tkDecls.h	/^    void (*tk_InitConsoleChannels) (Tcl_Interp *interp); \/* 215 *\/$/;"	m	struct:TkStubs
tk_InitOptions	generic/tkDecls.h	/^    int (*tk_InitOptions) (Tcl_Interp *interp, char *recordPtr, Tk_OptionTable optionToken, Tk_Window tkwin); \/* 211 *\/$/;"	m	struct:TkStubs
tk_InternAtom	generic/tkDecls.h	/^    Atom (*tk_InternAtom) (Tk_Window tkwin, const char *name); \/* 119 *\/$/;"	m	struct:TkStubs
tk_Interp	generic/tkDecls.h	/^    Tcl_Interp * (*tk_Interp) (Tk_Window tkwin); \/* 271 *\/$/;"	m	struct:TkStubs
tk_IntersectTextLayout	generic/tkDecls.h	/^    int (*tk_IntersectTextLayout) (Tk_TextLayout layout, int x, int y, int width, int height); \/* 120 *\/$/;"	m	struct:TkStubs
tk_MacOSXIsAppInFront	generic/tkPlatDecls.h	/^    int (*tk_MacOSXIsAppInFront) (void); \/* 10 *\/$/;"	m	struct:TkPlatStubs
tk_MacOSXSetEmbedHandler	generic/tkPlatDecls.h	/^    void (*tk_MacOSXSetEmbedHandler) (Tk_MacOSXEmbedRegisterWinProc *registerWinProcPtr, Tk_MacOSXEmbedGetGrafPortProc *getPortProcPtr, Tk_MacOSXEmbedMakeContainerExistProc *containerExistProcPtr, Tk_MacOSXEmbedGetClipProc *getClipProc, Tk_MacOSXEmbedGetOffsetInParentProc *getOffsetProc); \/* 0 *\/$/;"	m	struct:TkPlatStubs
tk_MacOSXSetupTkNotifier	generic/tkPlatDecls.h	/^    void (*tk_MacOSXSetupTkNotifier) (void); \/* 9 *\/$/;"	m	struct:TkPlatStubs
tk_MacOSXTkOwnsCursor	generic/tkPlatDecls.h	/^    void (*tk_MacOSXTkOwnsCursor) (int tkOwnsIt); \/* 2 *\/$/;"	m	struct:TkPlatStubs
tk_MacOSXTurnOffMenus	generic/tkPlatDecls.h	/^    void (*tk_MacOSXTurnOffMenus) (void); \/* 1 *\/$/;"	m	struct:TkPlatStubs
tk_MainEx	generic/tkDecls.h	/^    void (*tk_MainEx) (int argc, char **argv, Tcl_AppInitProc *appInitProc, Tcl_Interp *interp); \/* 212 *\/$/;"	m	struct:TkStubs
tk_MainLoop	generic/tkDecls.h	/^    void (*tk_MainLoop) (void); \/* 0 *\/$/;"	m	struct:TkStubs
tk_MainWindow	generic/tkDecls.h	/^    Tk_Window (*tk_MainWindow) (Tcl_Interp *interp); \/* 122 *\/$/;"	m	struct:TkStubs
tk_MaintainGeometry	generic/tkDecls.h	/^    void (*tk_MaintainGeometry) (Tk_Window slave, Tk_Window master, int x, int y, int width, int height); \/* 121 *\/$/;"	m	struct:TkStubs
tk_MakeWindowExist	generic/tkDecls.h	/^    void (*tk_MakeWindowExist) (Tk_Window tkwin); \/* 123 *\/$/;"	m	struct:TkStubs
tk_ManageGeometry	generic/tkDecls.h	/^    void (*tk_ManageGeometry) (Tk_Window tkwin, const Tk_GeomMgr *mgrPtr, ClientData clientData); \/* 124 *\/$/;"	m	struct:TkStubs
tk_MapWindow	generic/tkDecls.h	/^    void (*tk_MapWindow) (Tk_Window tkwin); \/* 125 *\/$/;"	m	struct:TkStubs
tk_MeasureChars	generic/tkDecls.h	/^    int (*tk_MeasureChars) (Tk_Font tkfont, const char *source, int numBytes, int maxPixels, int flags, int *lengthPtr); \/* 126 *\/$/;"	m	struct:TkStubs
tk_MoveResizeWindow	generic/tkDecls.h	/^    void (*tk_MoveResizeWindow) (Tk_Window tkwin, int x, int y, int width, int height); \/* 127 *\/$/;"	m	struct:TkStubs
tk_MoveToplevelWindow	generic/tkDecls.h	/^    void (*tk_MoveToplevelWindow) (Tk_Window tkwin, int x, int y); \/* 129 *\/$/;"	m	struct:TkStubs
tk_MoveWindow	generic/tkDecls.h	/^    void (*tk_MoveWindow) (Tk_Window tkwin, int x, int y); \/* 128 *\/$/;"	m	struct:TkStubs
tk_NameOf3DBorder	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOf3DBorder) (Tk_3DBorder border); \/* 130 *\/$/;"	m	struct:TkStubs
tk_NameOfAnchor	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfAnchor) (Tk_Anchor anchor); \/* 131 *\/$/;"	m	struct:TkStubs
tk_NameOfBitmap	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfBitmap) (Display *display, Pixmap bitmap); \/* 132 *\/$/;"	m	struct:TkStubs
tk_NameOfCapStyle	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfCapStyle) (int cap); \/* 133 *\/$/;"	m	struct:TkStubs
tk_NameOfColor	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfColor) (XColor *colorPtr); \/* 134 *\/$/;"	m	struct:TkStubs
tk_NameOfCursor	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfCursor) (Display *display, Tk_Cursor cursor); \/* 135 *\/$/;"	m	struct:TkStubs
tk_NameOfFont	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfFont) (Tk_Font font); \/* 136 *\/$/;"	m	struct:TkStubs
tk_NameOfImage	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfImage) (Tk_ImageMaster imageMaster); \/* 137 *\/$/;"	m	struct:TkStubs
tk_NameOfJoinStyle	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfJoinStyle) (int join); \/* 138 *\/$/;"	m	struct:TkStubs
tk_NameOfJustify	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfJustify) (Tk_Justify justify); \/* 139 *\/$/;"	m	struct:TkStubs
tk_NameOfRelief	generic/tkDecls.h	/^    CONST84_RETURN char * (*tk_NameOfRelief) (int relief); \/* 140 *\/$/;"	m	struct:TkStubs
tk_NameOfStyle	generic/tkDecls.h	/^    const char * (*tk_NameOfStyle) (Tk_Style style); \/* 256 *\/$/;"	m	struct:TkStubs
tk_NameToWindow	generic/tkDecls.h	/^    Tk_Window (*tk_NameToWindow) (Tcl_Interp *interp, const char *pathName, Tk_Window tkwin); \/* 141 *\/$/;"	m	struct:TkStubs
tk_OwnSelection	generic/tkDecls.h	/^    void (*tk_OwnSelection) (Tk_Window tkwin, Atom selection, Tk_LostSelProc *proc, ClientData clientData); \/* 142 *\/$/;"	m	struct:TkStubs
tk_ParseArgv	generic/tkDecls.h	/^    int (*tk_ParseArgv) (Tcl_Interp *interp, Tk_Window tkwin, int *argcPtr, CONST84 char **argv, const Tk_ArgvInfo *argTable, int flags); \/* 143 *\/$/;"	m	struct:TkStubs
tk_PhotoBlank	generic/tkDecls.h	/^    void (*tk_PhotoBlank) (Tk_PhotoHandle handle); \/* 147 *\/$/;"	m	struct:TkStubs
tk_PhotoExpand	generic/tkDecls.h	/^    int (*tk_PhotoExpand) (Tcl_Interp *interp, Tk_PhotoHandle handle, int width, int height); \/* 265 *\/$/;"	m	struct:TkStubs
tk_PhotoExpand_Panic	generic/tkDecls.h	/^    void (*tk_PhotoExpand_Panic) (Tk_PhotoHandle handle, int width, int height); \/* 148 *\/$/;"	m	struct:TkStubs
tk_PhotoGetImage	generic/tkDecls.h	/^    int (*tk_PhotoGetImage) (Tk_PhotoHandle handle, Tk_PhotoImageBlock *blockPtr); \/* 146 *\/$/;"	m	struct:TkStubs
tk_PhotoGetSize	generic/tkDecls.h	/^    void (*tk_PhotoGetSize) (Tk_PhotoHandle handle, int *widthPtr, int *heightPtr); \/* 149 *\/$/;"	m	struct:TkStubs
tk_PhotoPutBlock	generic/tkDecls.h	/^    int (*tk_PhotoPutBlock) (Tcl_Interp *interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock *blockPtr, int x, int y, int width, int height, int compRule); \/* 266 *\/$/;"	m	struct:TkStubs
tk_PhotoPutBlock_NoComposite	generic/tkDecls.h	/^    void (*tk_PhotoPutBlock_NoComposite) (Tk_PhotoHandle handle, Tk_PhotoImageBlock *blockPtr, int x, int y, int width, int height); \/* 144 *\/$/;"	m	struct:TkStubs
tk_PhotoPutBlock_Panic	generic/tkDecls.h	/^    void (*tk_PhotoPutBlock_Panic) (Tk_PhotoHandle handle, Tk_PhotoImageBlock *blockPtr, int x, int y, int width, int height, int compRule); \/* 246 *\/$/;"	m	struct:TkStubs
tk_PhotoPutZoomedBlock	generic/tkDecls.h	/^    int (*tk_PhotoPutZoomedBlock) (Tcl_Interp *interp, Tk_PhotoHandle handle, Tk_PhotoImageBlock *blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule); \/* 267 *\/$/;"	m	struct:TkStubs
tk_PhotoPutZoomedBlock_NoComposite	generic/tkDecls.h	/^    void (*tk_PhotoPutZoomedBlock_NoComposite) (Tk_PhotoHandle handle, Tk_PhotoImageBlock *blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY); \/* 145 *\/$/;"	m	struct:TkStubs
tk_PhotoPutZoomedBlock_Panic	generic/tkDecls.h	/^    void (*tk_PhotoPutZoomedBlock_Panic) (Tk_PhotoHandle handle, Tk_PhotoImageBlock *blockPtr, int x, int y, int width, int height, int zoomX, int zoomY, int subsampleX, int subsampleY, int compRule); \/* 247 *\/$/;"	m	struct:TkStubs
tk_PhotoSetSize	generic/tkDecls.h	/^    int (*tk_PhotoSetSize) (Tcl_Interp *interp, Tk_PhotoHandle handle, int width, int height); \/* 268 *\/$/;"	m	struct:TkStubs
tk_PhotoSetSize_Panic	generic/tkDecls.h	/^    void (*tk_PhotoSetSize_Panic) (Tk_PhotoHandle handle, int width, int height); \/* 150 *\/$/;"	m	struct:TkStubs
tk_PointToChar	generic/tkDecls.h	/^    int (*tk_PointToChar) (Tk_TextLayout layout, int x, int y); \/* 151 *\/$/;"	m	struct:TkStubs
tk_PointerEvent	generic/tkPlatDecls.h	/^    void (*tk_PointerEvent) (HWND hwnd, int x, int y); \/* 4 *\/$/;"	m	struct:TkPlatStubs
tk_PostscriptBitmap	generic/tkDecls.h	/^    int (*tk_PostscriptBitmap) (Tcl_Interp *interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap, int startX, int startY, int width, int height); \/* 231 *\/$/;"	m	struct:TkStubs
tk_PostscriptColor	generic/tkDecls.h	/^    int (*tk_PostscriptColor) (Tcl_Interp *interp, Tk_PostscriptInfo psInfo, XColor *colorPtr); \/* 232 *\/$/;"	m	struct:TkStubs
tk_PostscriptFont	generic/tkDecls.h	/^    int (*tk_PostscriptFont) (Tcl_Interp *interp, Tk_PostscriptInfo psInfo, Tk_Font font); \/* 233 *\/$/;"	m	struct:TkStubs
tk_PostscriptFontName	generic/tkDecls.h	/^    int (*tk_PostscriptFontName) (Tk_Font tkfont, Tcl_DString *dsPtr); \/* 152 *\/$/;"	m	struct:TkStubs
tk_PostscriptImage	generic/tkDecls.h	/^    int (*tk_PostscriptImage) (Tk_Image image, Tcl_Interp *interp, Tk_Window tkwin, Tk_PostscriptInfo psinfo, int x, int y, int width, int height, int prepass); \/* 234 *\/$/;"	m	struct:TkStubs
tk_PostscriptPath	generic/tkDecls.h	/^    void (*tk_PostscriptPath) (Tcl_Interp *interp, Tk_PostscriptInfo psInfo, double *coordPtr, int numPoints); \/* 235 *\/$/;"	m	struct:TkStubs
tk_PostscriptPhoto	generic/tkDecls.h	/^    int (*tk_PostscriptPhoto) (Tcl_Interp *interp, Tk_PhotoImageBlock *blockPtr, Tk_PostscriptInfo psInfo, int width, int height); \/* 238 *\/$/;"	m	struct:TkStubs
tk_PostscriptStipple	generic/tkDecls.h	/^    int (*tk_PostscriptStipple) (Tcl_Interp *interp, Tk_Window tkwin, Tk_PostscriptInfo psInfo, Pixmap bitmap); \/* 236 *\/$/;"	m	struct:TkStubs
tk_PostscriptY	generic/tkDecls.h	/^    double (*tk_PostscriptY) (double y, Tk_PostscriptInfo psInfo); \/* 237 *\/$/;"	m	struct:TkStubs
tk_PreserveColormap	generic/tkDecls.h	/^    void (*tk_PreserveColormap) (Display *display, Colormap colormap); \/* 153 *\/$/;"	m	struct:TkStubs
tk_QueueWindowEvent	generic/tkDecls.h	/^    void (*tk_QueueWindowEvent) (XEvent *eventPtr, Tcl_QueuePosition position); \/* 154 *\/$/;"	m	struct:TkStubs
tk_RedrawImage	generic/tkDecls.h	/^    void (*tk_RedrawImage) (Tk_Image image, int imageX, int imageY, int width, int height, Drawable drawable, int drawableX, int drawableY); \/* 155 *\/$/;"	m	struct:TkStubs
tk_RegisterStyleEngine	generic/tkDecls.h	/^    Tk_StyleEngine (*tk_RegisterStyleEngine) (const char *name, Tk_StyleEngine parent); \/* 249 *\/$/;"	m	struct:TkStubs
tk_RegisterStyledElement	generic/tkDecls.h	/^    int (*tk_RegisterStyledElement) (Tk_StyleEngine engine, Tk_ElementSpec *templatePtr); \/* 251 *\/$/;"	m	struct:TkStubs
tk_ResetOutlineGC	generic/tkDecls.h	/^    int (*tk_ResetOutlineGC) (Tk_Canvas canvas, Tk_Item *item, Tk_Outline *outline); \/* 225 *\/$/;"	m	struct:TkStubs
tk_ResetUserInactiveTime	generic/tkDecls.h	/^    void (*tk_ResetUserInactiveTime) (Display *dpy); \/* 270 *\/$/;"	m	struct:TkStubs
tk_ResizeWindow	generic/tkDecls.h	/^    void (*tk_ResizeWindow) (Tk_Window tkwin, int width, int height); \/* 156 *\/$/;"	m	struct:TkStubs
tk_RestackWindow	generic/tkDecls.h	/^    int (*tk_RestackWindow) (Tk_Window tkwin, int aboveBelow, Tk_Window other); \/* 157 *\/$/;"	m	struct:TkStubs
tk_RestoreSavedOptions	generic/tkDecls.h	/^    void (*tk_RestoreSavedOptions) (Tk_SavedOptions *savePtr); \/* 213 *\/$/;"	m	struct:TkStubs
tk_RestrictEvents	generic/tkDecls.h	/^    Tk_RestrictProc * (*tk_RestrictEvents) (Tk_RestrictProc *proc, ClientData arg, ClientData *prevArgPtr); \/* 158 *\/$/;"	m	struct:TkStubs
tk_SafeInit	generic/tkDecls.h	/^    int (*tk_SafeInit) (Tcl_Interp *interp); \/* 159 *\/$/;"	m	struct:TkStubs
tk_SetAppName	generic/tkDecls.h	/^    const char * (*tk_SetAppName) (Tk_Window tkwin, const char *name); \/* 160 *\/$/;"	m	struct:TkStubs
tk_SetBackgroundFromBorder	generic/tkDecls.h	/^    void (*tk_SetBackgroundFromBorder) (Tk_Window tkwin, Tk_3DBorder border); \/* 161 *\/$/;"	m	struct:TkStubs
tk_SetCaretPos	generic/tkDecls.h	/^    void (*tk_SetCaretPos) (Tk_Window tkwin, int x, int y, int height); \/* 245 *\/$/;"	m	struct:TkStubs
tk_SetClass	generic/tkDecls.h	/^    void (*tk_SetClass) (Tk_Window tkwin, const char *className); \/* 162 *\/$/;"	m	struct:TkStubs
tk_SetClassProcs	generic/tkDecls.h	/^    void (*tk_SetClassProcs) (Tk_Window tkwin, const Tk_ClassProcs *procs, ClientData instanceData); \/* 242 *\/$/;"	m	struct:TkStubs
tk_SetGrid	generic/tkDecls.h	/^    void (*tk_SetGrid) (Tk_Window tkwin, int reqWidth, int reqHeight, int gridWidth, int gridHeight); \/* 163 *\/$/;"	m	struct:TkStubs
tk_SetInternalBorder	generic/tkDecls.h	/^    void (*tk_SetInternalBorder) (Tk_Window tkwin, int width); \/* 164 *\/$/;"	m	struct:TkStubs
tk_SetInternalBorderEx	generic/tkDecls.h	/^    void (*tk_SetInternalBorderEx) (Tk_Window tkwin, int left, int right, int top, int bottom); \/* 243 *\/$/;"	m	struct:TkStubs
tk_SetMinimumRequestSize	generic/tkDecls.h	/^    void (*tk_SetMinimumRequestSize) (Tk_Window tkwin, int minWidth, int minHeight); \/* 244 *\/$/;"	m	struct:TkStubs
tk_SetOptions	generic/tkDecls.h	/^    int (*tk_SetOptions) (Tcl_Interp *interp, char *recordPtr, Tk_OptionTable optionTable, int objc, Tcl_Obj *const objv[], Tk_Window tkwin, Tk_SavedOptions *savePtr, int *maskPtr); \/* 214 *\/$/;"	m	struct:TkStubs
tk_SetTSOrigin	generic/tkDecls.h	/^    void (*tk_SetTSOrigin) (Tk_Window tkwin, GC gc, int x, int y); \/* 227 *\/$/;"	m	struct:TkStubs
tk_SetWindowBackground	generic/tkDecls.h	/^    void (*tk_SetWindowBackground) (Tk_Window tkwin, unsigned long pixel); \/* 165 *\/$/;"	m	struct:TkStubs
tk_SetWindowBackgroundPixmap	generic/tkDecls.h	/^    void (*tk_SetWindowBackgroundPixmap) (Tk_Window tkwin, Pixmap pixmap); \/* 166 *\/$/;"	m	struct:TkStubs
tk_SetWindowBorder	generic/tkDecls.h	/^    void (*tk_SetWindowBorder) (Tk_Window tkwin, unsigned long pixel); \/* 167 *\/$/;"	m	struct:TkStubs
tk_SetWindowBorderPixmap	generic/tkDecls.h	/^    void (*tk_SetWindowBorderPixmap) (Tk_Window tkwin, Pixmap pixmap); \/* 169 *\/$/;"	m	struct:TkStubs
tk_SetWindowBorderWidth	generic/tkDecls.h	/^    void (*tk_SetWindowBorderWidth) (Tk_Window tkwin, int width); \/* 168 *\/$/;"	m	struct:TkStubs
tk_SetWindowColormap	generic/tkDecls.h	/^    void (*tk_SetWindowColormap) (Tk_Window tkwin, Colormap colormap); \/* 170 *\/$/;"	m	struct:TkStubs
tk_SetWindowVisual	generic/tkDecls.h	/^    int (*tk_SetWindowVisual) (Tk_Window tkwin, Visual *visual, int depth, Colormap colormap); \/* 171 *\/$/;"	m	struct:TkStubs
tk_SizeOfBitmap	generic/tkDecls.h	/^    void (*tk_SizeOfBitmap) (Display *display, Pixmap bitmap, int *widthPtr, int *heightPtr); \/* 172 *\/$/;"	m	struct:TkStubs
tk_SizeOfImage	generic/tkDecls.h	/^    void (*tk_SizeOfImage) (Tk_Image image, int *widthPtr, int *heightPtr); \/* 173 *\/$/;"	m	struct:TkStubs
tk_StrictMotif	generic/tkDecls.h	/^    int (*tk_StrictMotif) (Tk_Window tkwin); \/* 174 *\/$/;"	m	struct:TkStubs
tk_TextLayoutToPostscript	generic/tkDecls.h	/^    void (*tk_TextLayoutToPostscript) (Tcl_Interp *interp, Tk_TextLayout layout); \/* 175 *\/$/;"	m	struct:TkStubs
tk_TextWidth	generic/tkDecls.h	/^    int (*tk_TextWidth) (Tk_Font font, const char *str, int numBytes); \/* 176 *\/$/;"	m	struct:TkStubs
tk_TopCoordsToWindow	generic/tkIntPlatDecls.h	/^    Tk_Window (*tk_TopCoordsToWindow) (Tk_Window tkwin, int rootX, int rootY, int *newX, int *newY); \/* 42 *\/$/;"	m	struct:TkIntPlatStubs
tk_TranslateWinEvent	generic/tkPlatDecls.h	/^    int (*tk_TranslateWinEvent) (HWND hwnd, UINT message, WPARAM wParam, LPARAM lParam, LRESULT *result); \/* 5 *\/$/;"	m	struct:TkPlatStubs
tk_UndefineCursor	generic/tkDecls.h	/^    void (*tk_UndefineCursor) (Tk_Window window); \/* 177 *\/$/;"	m	struct:TkStubs
tk_UnderlineChars	generic/tkDecls.h	/^    void (*tk_UnderlineChars) (Display *display, Drawable drawable, GC gc, Tk_Font tkfont, const char *source, int x, int y, int firstByte, int lastByte); \/* 178 *\/$/;"	m	struct:TkStubs
tk_UnderlineTextLayout	generic/tkDecls.h	/^    void (*tk_UnderlineTextLayout) (Display *display, Drawable drawable, GC gc, Tk_TextLayout layout, int x, int y, int underline); \/* 179 *\/$/;"	m	struct:TkStubs
tk_Ungrab	generic/tkDecls.h	/^    void (*tk_Ungrab) (Tk_Window tkwin); \/* 180 *\/$/;"	m	struct:TkStubs
tk_UnmaintainGeometry	generic/tkDecls.h	/^    void (*tk_UnmaintainGeometry) (Tk_Window slave, Tk_Window master); \/* 181 *\/$/;"	m	struct:TkStubs
tk_UnmapWindow	generic/tkDecls.h	/^    void (*tk_UnmapWindow) (Tk_Window tkwin); \/* 182 *\/$/;"	m	struct:TkStubs
tk_UnsetGrid	generic/tkDecls.h	/^    void (*tk_UnsetGrid) (Tk_Window tkwin); \/* 183 *\/$/;"	m	struct:TkStubs
tk_UpdatePointer	generic/tkDecls.h	/^    void (*tk_UpdatePointer) (Tk_Window tkwin, int x, int y, int state); \/* 184 *\/$/;"	m	struct:TkStubs
tk_bindForTraversal	library/obsolete.tcl	/^proc tk_bindForTraversal args {}$/;"	p
tk_else_mac_os_x_10_5	macosx/tkMacOSXPrivate.h	69;"	d
tk_else_mac_os_x_10_5	macosx/tkMacOSXPrivate.h	76;"	d
tk_else_mac_os_x_10_5	macosx/tkMacOSXPrivate.h	81;"	d
tk_else_mac_os_x_chk	macosx/tkMacOSXPrivate.h	56;"	d
tk_else_mac_os_x_min_10_5	macosx/tkMacOSXPrivate.h	66;"	d
tk_else_mac_os_x_min_10_5	macosx/tkMacOSXPrivate.h	73;"	d
tk_else_mac_os_x_no	macosx/tkMacOSXPrivate.h	60;"	d
tk_else_mac_os_x_yes	macosx/tkMacOSXPrivate.h	52;"	d
tk_if_mac_os_x_10_5	macosx/tkMacOSXPrivate.h	68;"	d
tk_if_mac_os_x_10_5	macosx/tkMacOSXPrivate.h	75;"	d
tk_if_mac_os_x_10_5	macosx/tkMacOSXPrivate.h	80;"	d
tk_if_mac_os_x_chk	macosx/tkMacOSXPrivate.h	54;"	d
tk_if_mac_os_x_min_10_5	macosx/tkMacOSXPrivate.h	65;"	d
tk_if_mac_os_x_min_10_5	macosx/tkMacOSXPrivate.h	72;"	d
tk_if_mac_os_x_no	macosx/tkMacOSXPrivate.h	58;"	d
tk_if_mac_os_x_yes	macosx/tkMacOSXPrivate.h	50;"	d
tk_menuBar	library/obsolete.tcl	/^proc tk_menuBar args {}$/;"	p
tkcygwindll	generic/tkWindow.c	/^static HMODULE tkcygwindll = NULL;$/;"	v	file:
tkfont	generic/tkButton.h	/^    Tk_Font tkfont;		\/* Value of -font option: specifies font to$/;"	m	struct:__anon178
tkfont	generic/tkCanvText.c	/^    Tk_Font tkfont;		\/* Font for drawing text. *\/$/;"	m	struct:TextItem	file:
tkfont	generic/tkEntry.h	/^    Tk_Font tkfont;		\/* Information about text font, or NULL. *\/$/;"	m	struct:__anon183
tkfont	generic/tkFont.c	/^    Tk_Font tkfont;		\/* The font used when laying out the text. *\/$/;"	m	struct:TextLayout	file:
tkfont	generic/tkFrame.c	/^    Tk_Font tkfont;		\/* Value of -font option: specifies font to$/;"	m	struct:__anon146	file:
tkfont	generic/tkListbox.c	/^    Tk_Font tkfont;		\/* Information about text font, or NULL. *\/$/;"	m	struct:__anon149	file:
tkfont	generic/tkMenubutton.h	/^    Tk_Font tkfont;		\/* Information about text font, or NULL. *\/$/;"	m	struct:__anon137
tkfont	generic/tkMessage.c	/^    Tk_Font tkfont;		\/* Information about text font, or NULL. *\/$/;"	m	struct:__anon153	file:
tkfont	generic/tkScale.h	/^    Tk_Font tkfont;		\/* Information about text font, or NULL. *\/$/;"	m	struct:TkScale
tkfont	generic/tkText.h	/^    Tk_Font tkfont;		\/* Default font for displaying text. *\/$/;"	m	struct:TkText
tkfont	generic/tkText.h	/^    Tk_Font tkfont;		\/* Font for displaying text. NULL means no$/;"	m	struct:TkTextTag
tkfont	generic/tkTextDisp.c	/^    Tk_Font tkfont;		\/* Font for displaying text. *\/$/;"	m	struct:StyleValues	file:
tkfont	generic/ttk/ttkLabel.c	/^    Tk_Font		tkfont;$/;"	m	struct:__anon61	file:
tkimg	generic/ttk/ttkLabel.c	/^    Tk_Image	tkimg;$/;"	m	struct:__anon62	file:
tkpButtonProcs	generic/tkButton.h	/^MODULE_SCOPE const Tk_ClassProcs tkpButtonProcs;$/;"	v
tkpButtonProcs	macosx/tkMacOSXButton.c	/^const Tk_ClassProcs tkpButtonProcs = {$/;"	v
tkpButtonProcs	unix/tkUnixButton.c	/^const Tk_ClassProcs tkpButtonProcs = {$/;"	v
tkpButtonProcs	win/tkWinButton.c	/^const Tk_ClassProcs tkpButtonProcs = {$/;"	v
tkpChangeFocus	generic/tkIntDecls.h	/^    int (*tkpChangeFocus) (TkWindow *winPtr, int force); \/* 55 *\/$/;"	m	struct:TkIntStubs
tkpClaimFocus	generic/tkIntDecls.h	/^    void (*tkpClaimFocus) (TkWindow *topLevelPtr, int force); \/* 57 *\/$/;"	m	struct:TkIntStubs
tkpCloseDisplay	generic/tkIntDecls.h	/^    void (*tkpCloseDisplay) (TkDisplay *dispPtr); \/* 56 *\/$/;"	m	struct:TkIntStubs
tkpCmapStressed	generic/tkIntPlatDecls.h	/^    int (*tkpCmapStressed) (Tk_Window tkwin, Colormap colormap); \/* 3 *\/$/;"	m	struct:TkIntPlatStubs
tkpCmapStressed	generic/tkIntPlatDecls.h	/^    int (*tkpCmapStressed) (Tk_Window tkwin, Colormap colormap); \/* 38 *\/$/;"	m	struct:TkIntPlatStubs
tkpCreateNativeBitmap	generic/tkIntDecls.h	/^    Pixmap (*tkpCreateNativeBitmap) (Display *display, const void *source); \/* 121 *\/$/;"	m	struct:TkIntStubs
tkpDefineNativeBitmaps	generic/tkIntDecls.h	/^    void (*tkpDefineNativeBitmaps) (void); \/* 122 *\/$/;"	m	struct:TkIntStubs
tkpDisplayWarning	generic/tkIntDecls.h	/^    void (*tkpDisplayWarning) (const char *msg, const char *title); \/* 58 *\/$/;"	m	struct:TkIntStubs
tkpDrawFrame	generic/tkIntDecls.h	/^    void (*tkpDrawFrame) (Tk_Window tkwin, Tk_3DBorder border, int highlightWidth, int borderWidth, int relief); \/* 152 *\/$/;"	m	struct:TkIntStubs
tkpDrawHighlightBorder	generic/tkIntDecls.h	/^    void (*tkpDrawHighlightBorder) (Tk_Window tkwin, GC fgGC, GC bgGC, int highlightWidth, Drawable drawable); \/* 135 *\/$/;"	m	struct:TkIntStubs
tkpFreeCursor	generic/tkIntDecls.h	/^    void (*tkpFreeCursor) (TkCursor *cursorPtr); \/* 29 *\/$/;"	m	struct:TkIntStubs
tkpGetAppName	generic/tkIntDecls.h	/^    void (*tkpGetAppName) (Tcl_Interp *interp, Tcl_DString *name); \/* 59 *\/$/;"	m	struct:TkIntStubs
tkpGetKeySym	generic/tkIntDecls.h	/^    KeySym (*tkpGetKeySym) (TkDisplay *dispPtr, XEvent *eventPtr); \/* 138 *\/$/;"	m	struct:TkIntStubs
tkpGetMS	generic/tkIntPlatDecls.h	/^    unsigned long (*tkpGetMS) (void); \/* 3 *\/$/;"	m	struct:TkIntPlatStubs
tkpGetMS	generic/tkIntPlatDecls.h	/^    unsigned long (*tkpGetMS) (void); \/* 53 *\/$/;"	m	struct:TkIntPlatStubs
tkpGetNativeAppBitmap	generic/tkIntDecls.h	/^    Pixmap (*tkpGetNativeAppBitmap) (Display *display, const char *name, int *width, int *height); \/* 124 *\/$/;"	m	struct:TkIntStubs
tkpGetOtherWindow	generic/tkIntDecls.h	/^    TkWindow * (*tkpGetOtherWindow) (TkWindow *winPtr); \/* 60 *\/$/;"	m	struct:TkIntStubs
tkpGetString	generic/tkIntDecls.h	/^    CONST86 char * (*tkpGetString) (TkWindow *winPtr, XEvent *eventPtr, Tcl_DString *dsPtr); \/* 109 *\/$/;"	m	struct:TkIntStubs
tkpGetSubFonts	generic/tkIntDecls.h	/^    void (*tkpGetSubFonts) (Tcl_Interp *interp, Tk_Font tkfont); \/* 110 *\/$/;"	m	struct:TkIntStubs
tkpGetSystemDefault	generic/tkIntDecls.h	/^    Tcl_Obj * (*tkpGetSystemDefault) (Tk_Window tkwin, const char *dbName, const char *className); \/* 111 *\/$/;"	m	struct:TkIntStubs
tkpGetWrapperWindow	generic/tkIntDecls.h	/^    TkWindow * (*tkpGetWrapperWindow) (TkWindow *winPtr); \/* 61 *\/$/;"	m	struct:TkIntStubs
tkpInit	generic/tkIntDecls.h	/^    int (*tkpInit) (Tcl_Interp *interp); \/* 62 *\/$/;"	m	struct:TkIntStubs
tkpInitKeymapInfo	generic/tkIntDecls.h	/^    void (*tkpInitKeymapInfo) (TkDisplay *dispPtr); \/* 139 *\/$/;"	m	struct:TkIntStubs
tkpInitializeMenuBindings	generic/tkIntDecls.h	/^    void (*tkpInitializeMenuBindings) (Tcl_Interp *interp, Tk_BindingTable bindingTable); \/* 63 *\/$/;"	m	struct:TkIntStubs
tkpIsWindowFloating	generic/tkIntPlatDecls.h	/^    int (*tkpIsWindowFloating) (void *window); \/* 46 *\/$/;"	m	struct:TkIntPlatStubs
tkpMakeContainer	generic/tkIntDecls.h	/^    void (*tkpMakeContainer) (Tk_Window tkwin); \/* 64 *\/$/;"	m	struct:TkIntStubs
tkpMakeMenuWindow	generic/tkIntDecls.h	/^    void (*tkpMakeMenuWindow) (Tk_Window tkwin, int transient); \/* 65 *\/$/;"	m	struct:TkIntStubs
tkpMakeWindow	generic/tkIntDecls.h	/^    Window (*tkpMakeWindow) (TkWindow *winPtr, Window parent); \/* 66 *\/$/;"	m	struct:TkIntStubs
tkpMenuNotifyToplevelCreate	generic/tkIntDecls.h	/^    void (*tkpMenuNotifyToplevelCreate) (Tcl_Interp *interp, const char *menuName); \/* 67 *\/$/;"	m	struct:TkIntStubs
tkpMenuThreadInit	generic/tkIntDecls.h	/^    void (*tkpMenuThreadInit) (void); \/* 112 *\/$/;"	m	struct:TkIntStubs
tkpMenubuttonClass	macosx/tkMacOSXMenubutton.c	/^Tk_ClassProcs tkpMenubuttonClass = {$/;"	v
tkpOpenDisplay	generic/tkIntDecls.h	/^    TkDisplay * (*tkpOpenDisplay) (const char *display_name); \/* 68 *\/$/;"	m	struct:TkIntStubs
tkpPrintWindowId	generic/tkIntPlatDecls.h	/^    void (*tkpPrintWindowId) (char *buf, Window window); \/* 5 *\/$/;"	m	struct:TkIntPlatStubs
tkpRedirectKeyEvent	generic/tkIntDecls.h	/^    void (*tkpRedirectKeyEvent) (TkWindow *winPtr, XEvent *eventPtr); \/* 73 *\/$/;"	m	struct:TkIntStubs
tkpScanWindowId	generic/tkIntPlatDecls.h	/^    int (*tkpScanWindowId) (Tcl_Interp *interp, const char *string, Window *idPtr); \/* 55 *\/$/;"	m	struct:TkIntPlatStubs
tkpScanWindowId	generic/tkIntPlatDecls.h	/^    int (*tkpScanWindowId) (Tcl_Interp *interp, const char *string, Window *idPtr); \/* 6 *\/$/;"	m	struct:TkIntPlatStubs
tkpScanWindowId	generic/tkIntPlatDecls.h	/^    int (*tkpScanWindowId) (Tcl_Interp *interp, const char *string, Window *idPtr); \/* 8 *\/$/;"	m	struct:TkIntPlatStubs
tkpScrollbarProcs	generic/tkScrollbar.h	/^MODULE_SCOPE const Tk_ClassProcs tkpScrollbarProcs;$/;"	v
tkpScrollbarProcs	macosx/tkMacOSXScrlbr.c	/^const Tk_ClassProcs tkpScrollbarProcs = {$/;"	v
tkpScrollbarProcs	unix/tkUnixScrlbr.c	/^const Tk_ClassProcs tkpScrollbarProcs = {$/;"	v
tkpScrollbarProcs	win/tkWinScrlbr.c	/^const Tk_ClassProcs tkpScrollbarProcs = {$/;"	v
tkpSetCapture	generic/tkIntPlatDecls.h	/^    void (*tkpSetCapture) (TkWindow *winPtr); \/* 4 *\/$/;"	m	struct:TkIntPlatStubs
tkpSetCapture	generic/tkIntPlatDecls.h	/^    void (*tkpSetCapture) (TkWindow *winPtr); \/* 7 *\/$/;"	m	struct:TkIntPlatStubs
tkpSetCursor	generic/tkIntPlatDecls.h	/^    void (*tkpSetCursor) (TkpCursor cursor); \/* 5 *\/$/;"	m	struct:TkIntPlatStubs
tkpSetCursor	generic/tkIntPlatDecls.h	/^    void (*tkpSetCursor) (TkpCursor cursor); \/* 8 *\/$/;"	m	struct:TkIntPlatStubs
tkpSetKeycodeAndState	generic/tkIntDecls.h	/^    void (*tkpSetKeycodeAndState) (Tk_Window tkwin, KeySym keySym, XEvent *eventPtr); \/* 137 *\/$/;"	m	struct:TkIntStubs
tkpSetMainMenubar	generic/tkIntDecls.h	/^    void (*tkpSetMainMenubar) (Tcl_Interp *interp, Tk_Window tkwin, const char *menuName); \/* 74 *\/$/;"	m	struct:TkIntStubs
tkpSync	generic/tkIntPlatDecls.h	/^    void (*tkpSync) (Display *display); \/* 39 *\/$/;"	m	struct:TkIntPlatStubs
tkpSync	generic/tkIntPlatDecls.h	/^    void (*tkpSync) (Display *display); \/* 4 *\/$/;"	m	struct:TkIntPlatStubs
tkpTestembedCmd	generic/tkIntDecls.h	/^    int (*tkpTestembedCmd) (ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *const objv[]); \/* 156 *\/$/;"	m	struct:TkIntStubs
tkpTestsendCmd	generic/tkIntPlatDecls.h	/^    int (*tkpTestsendCmd) (ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *const objv[]); \/* 13 *\/$/;"	m	struct:TkIntPlatStubs
tkpTestsendCmd	generic/tkIntPlatDecls.h	/^    int (*tkpTestsendCmd) (ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *const objv[]); \/* 45 *\/$/;"	m	struct:TkIntPlatStubs
tkpTesttextCmd	generic/tkIntDecls.h	/^    int (*tkpTesttextCmd) (ClientData dummy, Tcl_Interp *interp, int objc, Tcl_Obj *const objv[]); \/* 157 *\/$/;"	m	struct:TkIntStubs
tkpUseWindow	generic/tkIntDecls.h	/^    int (*tkpUseWindow) (Tcl_Interp *interp, Tk_Window tkwin, const char *string); \/* 75 *\/$/;"	m	struct:TkIntStubs
tkpWinBltModes	win/tkWinDraw.c	/^const int tkpWinBltModes[] = {$/;"	v
tkpWinBltModes	win/tkWinInt.h	/^MODULE_SCOPE const int tkpWinBltModes[];$/;"	v
tkpWinRopModes	win/tkWinDraw.c	/^const int tkpWinRopModes[] = {$/;"	v
tkpWinRopModes	win/tkWinInt.h	/^MODULE_SCOPE const int tkpWinRopModes[];$/;"	v
tkpWmSetState	generic/tkIntPlatDecls.h	/^    int (*tkpWmSetState) (TkWindow *winPtr, int state); \/* 12 *\/$/;"	m	struct:TkIntPlatStubs
tkpWmSetState	generic/tkIntPlatDecls.h	/^    int (*tkpWmSetState) (TkWindow *winPtr, int state); \/* 9 *\/$/;"	m	struct:TkIntPlatStubs
tkpWmSetState	generic/tkIntPlatDecls.h	/^    void (*tkpWmSetState) (TkWindow *winPtr, int state); \/* 6 *\/$/;"	m	struct:TkIntPlatStubs
tkwin	generic/tk.h	/^    Tk_Window tkwin;		\/* Window associated with recordPtr; needed to$/;"	m	struct:Tk_SavedOptions
tkwin	generic/tkButton.h	/^    Tk_Window tkwin;		\/* Window that embodies the button. NULL means$/;"	m	struct:__anon178
tkwin	generic/tkCanvPs.c	/^    Tk_Window tkwin;		\/* Window to get font pixel\/point transform$/;"	m	struct:TkPostscriptInfo	file:
tkwin	generic/tkCanvWind.c	/^    Tk_Window tkwin;		\/* Window associated with item.  NULL means$/;"	m	struct:WindowItem	file:
tkwin	generic/tkCanvas.h	/^    Tk_Window tkwin;		\/* Window that embodies the canvas. NULL means$/;"	m	struct:TkCanvas
tkwin	generic/tkEntry.h	/^    Tk_Window tkwin;		\/* Window that embodies the entry. NULL means$/;"	m	struct:__anon183
tkwin	generic/tkFrame.c	/^    Tk_Window tkwin;		\/* Window that embodies the frame. NULL means$/;"	m	struct:__anon145	file:
tkwin	generic/tkGrid.c	/^    Tk_Window tkwin;		\/* Tk token for window. NULL means that the$/;"	m	struct:Gridder	file:
tkwin	generic/tkImage.c	/^    Tk_Window tkwin;		\/* Window passed to Tk_GetImage (needed to$/;"	m	struct:Image	file:
tkwin	generic/tkImgBmap.c	/^    Tk_Window tkwin;		\/* Window in which the instances will be$/;"	m	struct:BitmapInstance	file:
tkwin	generic/tkListbox.c	/^    Tk_Window tkwin;		\/* Window that embodies the listbox. NULL$/;"	m	struct:__anon149	file:
tkwin	generic/tkMenu.h	/^    Tk_Window tkwin;		\/* The window that has this menu as its$/;"	m	struct:TkMenuTopLevelList
tkwin	generic/tkMenu.h	/^    Tk_Window tkwin;		\/* Window that embodies the pane. NULL means$/;"	m	struct:TkMenu
tkwin	generic/tkMenubutton.h	/^    Tk_Window tkwin;		\/* Window that embodies the widget. NULL means$/;"	m	struct:__anon137
tkwin	generic/tkMessage.c	/^    Tk_Window tkwin;		\/* Window that embodies the message. NULL$/;"	m	struct:__anon153	file:
tkwin	generic/tkObj.c	/^    Tk_Window tkwin;		\/* Cached window; NULL if not found. *\/$/;"	m	struct:WindowRep	file:
tkwin	generic/tkObj.c	/^    Tk_Window tkwin;$/;"	m	struct:MMRep	file:
tkwin	generic/tkObj.c	/^    Tk_Window tkwin;$/;"	m	struct:PixelRep	file:
tkwin	generic/tkPack.c	/^    Tk_Window tkwin;		\/* Tk token for window. NULL means that the$/;"	m	struct:Packer	file:
tkwin	generic/tkPanedWindow.c	/^    Tk_Window tkwin;		\/* Window being managed. *\/$/;"	m	struct:Slave	file:
tkwin	generic/tkPanedWindow.c	/^    Tk_Window tkwin;		\/* Window that embodies the paned window. *\/$/;"	m	struct:PanedWindow	file:
tkwin	generic/tkPlace.c	/^    Tk_Window tkwin;		\/* Tk's token for master window. *\/$/;"	m	struct:Master	file:
tkwin	generic/tkPlace.c	/^    Tk_Window tkwin;		\/* Tk's token for window. *\/$/;"	m	struct:Slave	file:
tkwin	generic/tkScale.h	/^    Tk_Window tkwin;		\/* Window that embodies the scale. NULL means$/;"	m	struct:TkScale
tkwin	generic/tkScrollbar.h	/^    Tk_Window tkwin;		\/* Window that embodies the scrollbar. NULL$/;"	m	struct:TkScrollbar
tkwin	generic/tkSquare.c	/^    Tk_Window tkwin;		\/* Window that embodies the square. NULL means$/;"	m	struct:__anon142	file:
tkwin	generic/tkTest.c	/^    Tk_Window tkwin;		\/* For widgets, the window associated with$/;"	m	struct:TrivialCommandHeader	file:
tkwin	generic/tkText.h	/^    Tk_Window tkwin;		\/* Window for this segment. NULL means that$/;"	m	struct:TkTextEmbWindowClient
tkwin	generic/tkText.h	/^    Tk_Window tkwin;		\/* Window for this segment. This is just a$/;"	m	struct:TkTextEmbWindow
tkwin	generic/tkText.h	/^    Tk_Window tkwin;		\/* Window that embodies the text. NULL means$/;"	m	struct:TkText
tkwin	generic/ttk/ttkCache.c	/^    Tk_Window	  tkwin;	\/* Cache window. *\/$/;"	m	struct:Ttk_ResourceCache_	file:
tkwin	generic/ttk/ttkLayout.c	/^    Tk_Window		tkwin;$/;"	m	struct:Ttk_Layout_	file:
tkwin	generic/ttk/ttkTagSet.c	/^    Tk_Window		tkwin;		\/* owner window *\/$/;"	m	struct:TtkTagTable	file:
tkwin	generic/ttk/ttkWidget.h	/^    Tk_Window tkwin;		\/* Window associated with widget *\/$/;"	m	struct:__anon48
tkwin	win/tkWinDialog.c	/^    Tk_Window tkwin;            \/* Owner window for dialog *\/$/;"	m	struct:OFNOpts	file:
tlFocusPtr	generic/tkInt.h	/^    struct TkToplevelFocusInfo *tlFocusPtr;$/;"	m	struct:TkMainInfo	typeref:struct:TkMainInfo::TkToplevelFocusInfo
toObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*toObj;$/;"	m	struct:__anon30	file:
toObj	generic/ttk/ttkScale.c	/^    Tcl_Obj *toObj;           \/* maximum value *\/$/;"	m	struct:__anon107	file:
toObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *toObj;		\/* maximum value *\/$/;"	m	struct:__anon212	file:
toValue	generic/tkEntry.h	/^    double toValue;		\/* Value corresponding to right\/bottom of$/;"	m	struct:__anon184
toValue	generic/tkScale.h	/^    double toValue;		\/* Value corresponding to right or bottom of$/;"	m	struct:TkScale
toX	generic/tkImgPhoto.c	/^    int toX, toY;		\/* Values specified for -to option. *\/$/;"	m	struct:SubcommandOptions	file:
toX2	generic/tkImgPhoto.c	/^    int toX2, toY2;		\/* Second coordinate pair for -to option. *\/$/;"	m	struct:SubcommandOptions	file:
toY	generic/tkImgPhoto.c	/^    int toX, toY;		\/* Values specified for -to option. *\/$/;"	m	struct:SubcommandOptions	file:
toY2	generic/tkImgPhoto.c	/^    int toX2, toY2;		\/* Second coordinate pair for -to option. *\/$/;"	m	struct:SubcommandOptions	file:
toggle	generic/tkText.h	/^	TkTextToggle toggle;	\/* Information about tag toggle. *\/$/;"	m	union:TkTextSegment::__anon158
toggleCount	generic/tkText.h	/^    int toggleCount;		\/* Total number of tag toggles. *\/$/;"	m	struct:TkTextTag
toggleCount	generic/tkTextBTree.c	/^    int toggleCount;		\/* Number of transitions into or out of this$/;"	m	struct:Summary	file:
token	win/tkWinSend.c	/^    Tcl_Command token;		\/* Winsend command token *\/$/;"	m	struct:__anon223	file:
toolbutton_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable toolbutton_statemap[] =  {$/;"	v	file:
top	generic/ttk/ttkTheme.h	/^    short top;$/;"	m	struct:__anon72
topArrowHeight	macosx/tkMacOSXScrlbr.c	/^    int minHeight, topArrowHeight, bottomArrowHeight;$/;"	m	struct:ScrollbarMetrics	file:
topIndex	generic/tkListbox.c	/^    int topIndex;		\/* Index of top-most element visible in$/;"	m	struct:__anon149	file:
topIndex	generic/tkText.h	/^    TkTextIndex topIndex;	\/* Identifies first character in top display$/;"	m	struct:TkText
topLevelListPtr	generic/tkMenu.h	/^    TkMenuTopLevelList *topLevelListPtr;$/;"	m	struct:TkMenuReferences
topLevelPtr	generic/tkFocus.c	/^    TkWindow *topLevelPtr;	\/* Information about top-level window. *\/$/;"	m	struct:TkToplevelFocusInfo	file:
topOfEof	generic/tkTextDisp.c	/^    int topOfEof;		\/* Top-most pixel (lowest y-value) that has$/;"	m	struct:TextDInfo	file:
topPixelOffset	generic/tkTextDisp.c	/^    int topPixelOffset;		\/* Identifies first pixel in top display line$/;"	m	struct:TextDInfo	file:
toplevel	macosx/tkMacOSXInt.h	/^    struct TkWindowPrivate *toplevel;$/;"	m	struct:TkWindowPrivate	typeref:struct:TkWindowPrivate::TkWindowPrivate
toplevelOptSpec	generic/tkFrame.c	/^static const Tk_OptionSpec toplevelOptSpec[] = {$/;"	v	file:
topmost	unix/tkUnixWm.c	/^    int topmost;		\/* Flag: true=>stay-on-top *\/$/;"	m	struct:__anon214	file:
total	generic/ttk/ttkWidget.h	/^    int 	total;		\/* Total #items *\/$/;"	m	struct:__anon49
totalHeight	generic/tkMenu.h	/^    int totalHeight;		\/* Height of entire menu. *\/$/;"	m	struct:TkMenu
totalHeight	generic/ttk/ttkLabel.c	/^    int 		totalWidth, totalHeight;$/;"	m	struct:__anon63	file:
totalUnits	generic/tkScrollbar.h	/^    int totalUnits;		\/* Total dimension of application, in units.$/;"	m	struct:TkScrollbar
totalWidth	generic/tkFont.c	/^    int totalWidth;		\/* Width in pixels of this chunk. Used when$/;"	m	struct:LayoutChunk	file:
totalWidth	generic/tkMenu.h	/^    int totalWidth;		\/* Width of entire menu. *\/$/;"	m	struct:TkMenu
totalWidth	generic/ttk/ttkLabel.c	/^    int 		totalWidth, totalHeight;$/;"	m	struct:__anon63	file:
tracking	generic/ttk/ttkTrack.c	/^    Ttk_Layout		tracking;	\/* current layout being tracked *\/$/;"	m	struct:__anon50	file:
transVal	generic/tkImgPNG.c	/^    unsigned char transVal[6];	\/* Fully-transparent RGB\/Gray Value. *\/$/;"	m	struct:__anon179	file:
trans_chars	xlib/X11/Xlib.h	/^        char trans_chars[XMaxTransChars];$/;"	m	struct:__anon287
translateProc	generic/tk.h	/^    Tk_ItemTranslateProc *translateProc;$/;"	m	struct:Tk_ItemType
tree	generic/tkText.h	/^    TkTextBTree tree;		\/* B-tree representation of text and tags for$/;"	m	struct:TkSharedText
tree	generic/tkText.h	/^    TkTextBTree tree;		\/* Tree containing desired position. *\/$/;"	m	struct:TkTextIndex
tree	generic/ttk/ttkTreeview.c	/^    TreePart tree;$/;"	m	struct:__anon84	file:
treeArea	generic/ttk/ttkTreeview.c	/^    Ttk_Box treeArea;   	\/* Display area for tree *\/$/;"	m	struct:__anon83	file:
treeview_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable treeview_statemap[] =$/;"	v	file:
trimmed	win/tkWinFont.c	/^    TRIMMEDTABLE trimmed;$/;"	m	union:SUBTABLE	file:
tristateImage	generic/tkButton.h	/^    Tk_Image tristateImage;	\/* Derived from tristateImagePtr by calling$/;"	m	struct:__anon178
tristateImagePtr	generic/tkButton.h	/^    Tcl_Obj *tristateImagePtr;	\/* Value of -tristateimage option: specifies$/;"	m	struct:__anon178
tristateValuePtr	generic/tkButton.h	/^    Tcl_Obj *tristateValuePtr;	\/* Value of -tristatevalue option: specifies$/;"	m	struct:__anon178
tristate_check	library/demos/check.tcl	/^proc tristate_check {n1 n2 op} {$/;"	p
troughBox	generic/ttk/ttkScrollbar.c	/^    Ttk_Box	troughBox;		\/* trough parcel *\/ $/;"	m	struct:__anon51	file:
troughColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj 	*troughColorObj;$/;"	m	struct:__anon58	file:
troughColorPtr	generic/tkScale.h	/^    XColor *troughColorPtr;	\/* Color for drawing trough. *\/$/;"	m	struct:TkScale
troughColorPtr	generic/tkScrollbar.h	/^    XColor *troughColorPtr;	\/* Color for drawing trough. *\/$/;"	m	struct:TkScrollbar
troughGC	generic/tkScale.h	/^    GC troughGC;		\/* For drawing trough. *\/$/;"	m	struct:TkScale
troughGC	macosx/tkMacOSXScrlbr.c	/^    GC troughGC;		\/* For drawing trough. *\/$/;"	m	struct:MacScrollbar	file:
troughGC	unix/tkUnixScrlbr.c	/^    GC troughGC;		\/* For drawing trough. *\/$/;"	m	struct:UnixScrollbar	file:
ts_x_origin	xlib/X11/Xlib.h	/^	int ts_x_origin;	\/* offset for tile or stipple operations *\/$/;"	m	struct:__anon268
ts_y_origin	xlib/X11/Xlib.h	/^	int ts_y_origin;$/;"	m	struct:__anon268
tsoffset	generic/tk.h	/^    Tk_TSOffset tsoffset;	\/* Stipple offset for outline. *\/$/;"	m	struct:Tk_Outline
tsoffset	generic/tkCanvArc.c	/^    Tk_TSOffset tsoffset;$/;"	m	struct:ArcItem	file:
tsoffset	generic/tkCanvPoly.c	/^    Tk_TSOffset tsoffset;$/;"	m	struct:PolygonItem	file:
tsoffset	generic/tkCanvText.c	/^    Tk_TSOffset tsoffset;$/;"	m	struct:TextItem	file:
tsoffset	generic/tkCanvas.h	/^    Tk_TSOffset tsoffset;$/;"	m	struct:TkCanvas
tsoffset	generic/tkRectOval.c	/^    Tk_TSOffset tsoffset;$/;"	m	struct:RectOvalItem	file:
ttk::CancelRepeat	library/ttk/utils.tcl	/^proc ttk::CancelRepeat {} {$/;"	p
ttk::CursorSampler	library/ttk/cursors.tcl	/^proc ttk::CursorSampler {f} {$/;"	p
ttk::DefaultTheme	library/ttk/ttk.tcl	/^proc ttk::DefaultTheme {} {$/;"	p
ttk::GuessTakeFocus	library/ttk/utils.tcl	/^proc ttk::GuessTakeFocus {w} {$/;"	p
ttk::LoadThemes	library/ttk/ttk.tcl	/^proc ttk::LoadThemes {} {$/;"	p
ttk::Repeat	library/ttk/utils.tcl	/^proc ttk::Repeat {} {$/;"	p
ttk::Repeatedly	library/ttk/utils.tcl	/^proc ttk::Repeatedly {args} {$/;"	p
ttk::RestoreGrab	library/ttk/utils.tcl	/^proc ttk::RestoreGrab {w} {$/;"	p
ttk::SaveGrab	library/ttk/utils.tcl	/^proc ttk::SaveGrab {w} {$/;"	p
ttk::bindMouseWheel	library/ttk/utils.tcl	/^proc ttk::bindMouseWheel {bindtag callback} {$/;"	p
ttk::button::RadioTraverse	library/ttk/button.tcl	/^proc ttk::button::RadioTraverse {w dir} {$/;"	p
ttk::button::activate	library/ttk/button.tcl	/^proc ttk::button::activate {w} {$/;"	p
ttk::clickToFocus	library/ttk/utils.tcl	/^proc ttk::clickToFocus {w} {$/;"	p
ttk::combobox::ConfigureListbox	library/ttk/combobox.tcl	/^proc ttk::combobox::ConfigureListbox {cb} {$/;"	p
ttk::combobox::Drag	library/ttk/combobox.tcl	/^proc ttk::combobox::Drag {w x}  {$/;"	p
ttk::combobox::LBCancel	library/ttk/combobox.tcl	/^proc ttk::combobox::LBCancel {lb} {$/;"	p
ttk::combobox::LBCleanup	library/ttk/combobox.tcl	/^proc ttk::combobox::LBCleanup {lb} {$/;"	p
ttk::combobox::LBHover	library/ttk/combobox.tcl	/^proc ttk::combobox::LBHover {w x y} {$/;"	p
ttk::combobox::LBMaster	library/ttk/combobox.tcl	/^proc ttk::combobox::LBMaster {lb} {$/;"	p
ttk::combobox::LBSelect	library/ttk/combobox.tcl	/^proc ttk::combobox::LBSelect {lb} {$/;"	p
ttk::combobox::LBSelected	library/ttk/combobox.tcl	/^proc ttk::combobox::LBSelected {lb} {$/;"	p
ttk::combobox::LBTab	library/ttk/combobox.tcl	/^proc ttk::combobox::LBTab {lb dir} {$/;"	p
ttk::combobox::MapPopdown	library/ttk/combobox.tcl	/^proc ttk::combobox::MapPopdown {w} {$/;"	p
ttk::combobox::Motion	library/ttk/combobox.tcl	/^proc ttk::combobox::Motion {w x y} {$/;"	p
ttk::combobox::PlacePopdown	library/ttk/combobox.tcl	/^proc ttk::combobox::PlacePopdown {cb popdown} {$/;"	p
ttk::combobox::PopdownToplevel	library/ttk/combobox.tcl	/^proc ttk::combobox::PopdownToplevel {w} {$/;"	p
ttk::combobox::PopdownWindow	library/ttk/combobox.tcl	/^proc ttk::combobox::PopdownWindow {cb} {$/;"	p
ttk::combobox::Post	library/ttk/combobox.tcl	/^proc ttk::combobox::Post {cb} {$/;"	p
ttk::combobox::Press	library/ttk/combobox.tcl	/^proc ttk::combobox::Press {mode w x y} {$/;"	p
ttk::combobox::Scroll	library/ttk/combobox.tcl	/^proc ttk::combobox::Scroll {cb dir} {$/;"	p
ttk::combobox::SelectEntry	library/ttk/combobox.tcl	/^proc ttk::combobox::SelectEntry {cb index} {$/;"	p
ttk::combobox::TraverseIn	library/ttk/combobox.tcl	/^proc ttk::combobox::TraverseIn {w} {$/;"	p
ttk::combobox::UnmapPopdown	library/ttk/combobox.tcl	/^proc ttk::combobox::UnmapPopdown {w} {$/;"	p
ttk::combobox::Unpost	library/ttk/combobox.tcl	/^proc ttk::combobox::Unpost {cb} {$/;"	p
ttk::copyBindings	library/ttk/utils.tcl	/^proc ttk::copyBindings {from to} {$/;"	p
ttk::cursor	library/ttk/cursors.tcl	/^proc ttk::cursor {name} {$/;"	p
ttk::deprecated	library/ttk/ttk.tcl	/^proc ttk::deprecated {old new} {$/;"	p
ttk::deprecated'warning	library/ttk/ttk.tcl	/^proc ttk::deprecated'warning {old new} {$/;"	p
ttk::do'deprecate	library/ttk/ttk.tcl	/^proc ttk::do'deprecate {old new args} {$/;"	p
ttk::entry::AutoScroll	library/ttk/entry.tcl	/^proc ttk::entry::AutoScroll {w} {$/;"	p
ttk::entry::Backspace	library/ttk/entry.tcl	/^proc ttk::entry::Backspace {w} {$/;"	p
ttk::entry::CharSelect	library/ttk/entry.tcl	/^proc ttk::entry::CharSelect {w from to} {$/;"	p
ttk::entry::Clear	library/ttk/entry.tcl	/^proc ttk::entry::Clear {w} {$/;"	p
ttk::entry::ClosestGap	library/ttk/entry.tcl	/^proc ttk::entry::ClosestGap {w x} {$/;"	p
ttk::entry::Copy	library/ttk/entry.tcl	/^proc ttk::entry::Copy {w} {$/;"	p
ttk::entry::Cut	library/ttk/entry.tcl	/^proc ttk::entry::Cut {w} {$/;"	p
ttk::entry::Delete	library/ttk/entry.tcl	/^proc ttk::entry::Delete {w} {$/;"	p
ttk::entry::Drag	library/ttk/entry.tcl	/^proc ttk::entry::Drag {w x} {$/;"	p
ttk::entry::DragIn	library/ttk/entry.tcl	/^proc ttk::entry::DragIn {w} {$/;"	p
ttk::entry::DragOut	library/ttk/entry.tcl	/^proc ttk::entry::DragOut {w mode} {$/;"	p
ttk::entry::DragTo	library/ttk/entry.tcl	/^proc ttk::entry::DragTo {w x} {$/;"	p
ttk::entry::EntrySelection	library/ttk/entry.tcl	/^proc ttk::entry::EntrySelection {w} {$/;"	p
ttk::entry::Extend	library/ttk/entry.tcl	/^proc ttk::entry::Extend {w where} {$/;"	p
ttk::entry::ExtendTo	library/ttk/entry.tcl	/^proc ttk::entry::ExtendTo {w index} {$/;"	p
ttk::entry::Insert	library/ttk/entry.tcl	/^proc ttk::entry::Insert {w s} {$/;"	p
ttk::entry::LineSelect	library/ttk/entry.tcl	/^proc ttk::entry::LineSelect {w _ _} {$/;"	p
ttk::entry::Move	library/ttk/entry.tcl	/^proc ttk::entry::Move {w where} {$/;"	p
ttk::entry::NextWord	library/ttk/entry.tcl	/^proc ttk::entry::NextWord {w start} {$/;"	p
ttk::entry::Paste	library/ttk/entry.tcl	/^proc ttk::entry::Paste {w} {$/;"	p
ttk::entry::PendingDelete	library/ttk/entry.tcl	/^proc ttk::entry::PendingDelete {w} {$/;"	p
ttk::entry::Press	library/ttk/entry.tcl	/^proc ttk::entry::Press {w x} {$/;"	p
ttk::entry::PrevWord	library/ttk/entry.tcl	/^proc ttk::entry::PrevWord {w start} {$/;"	p
ttk::entry::RelIndex	library/ttk/entry.tcl	/^proc ttk::entry::RelIndex {w where {index insert}} {$/;"	p
ttk::entry::Release	library/ttk/entry.tcl	/^proc ttk::entry::Release {w} {$/;"	p
ttk::entry::ScanDrag	library/ttk/entry.tcl	/^proc ttk::entry::ScanDrag {w x} {$/;"	p
ttk::entry::ScanMark	library/ttk/entry.tcl	/^proc ttk::entry::ScanMark {w x} {$/;"	p
ttk::entry::ScanRelease	library/ttk/entry.tcl	/^proc ttk::entry::ScanRelease {w x} {$/;"	p
ttk::entry::See	library/ttk/entry.tcl	/^proc ttk::entry::See {w {index insert}} {$/;"	p
ttk::entry::Select	library/ttk/entry.tcl	/^proc ttk::entry::Select {w x mode} {$/;"	p
ttk::entry::Shift-Press	library/ttk/entry.tcl	/^proc ttk::entry::Shift-Press {w x} {$/;"	p
ttk::entry::WordBack	library/ttk/entry.tcl	/^proc ttk::entry::WordBack {text index} {$/;"	p
ttk::entry::WordForward	library/ttk/entry.tcl	/^proc ttk::entry::WordForward {text index} {$/;"	p
ttk::entry::WordSelect	library/ttk/entry.tcl	/^proc ttk::entry::WordSelect {w from to} {$/;"	p
ttk::focusFirst	library/ttk/utils.tcl	/^proc ttk::focusFirst {w} {$/;"	p
ttk::globalGrab	library/ttk/utils.tcl	/^proc ttk::globalGrab {w} {$/;"	p
ttk::grabWindow	library/ttk/utils.tcl	/^proc ttk::grabWindow {w} {$/;"	p
ttk::menubutton::FindMenuEntry	library/ttk/menubutton.tcl	/^proc ttk::menubutton::FindMenuEntry {menu s} {$/;"	p
ttk::menubutton::Popdown	library/ttk/menubutton.tcl	/^proc ttk::menubutton::Popdown {mb} {$/;"	p
ttk::menubutton::PostPosition	library/ttk/menubutton.tcl	/^proc ttk::menubutton::PostPosition {mb menu} {$/;"	p
ttk::menubutton::Pulldown	library/ttk/menubutton.tcl	/^proc ttk::menubutton::Pulldown {mb} {$/;"	p
ttk::menubutton::TransferGrab	library/ttk/menubutton.tcl	/^proc ttk::menubutton::TransferGrab {mb} {$/;"	p
ttk::notebook::ActivateTab	library/ttk/notebook.tcl	/^proc ttk::notebook::ActivateTab {w tab} {$/;"	p
ttk::notebook::Cleanup	library/ttk/notebook.tcl	/^proc ttk::notebook::Cleanup {nb} {$/;"	p
ttk::notebook::CycleTab	library/ttk/notebook.tcl	/^proc ttk::notebook::CycleTab {w dir} {$/;"	p
ttk::notebook::EnclosingNotebook	library/ttk/notebook.tcl	/^proc ttk::notebook::EnclosingNotebook {w} {$/;"	p
ttk::notebook::MnemonicActivation	library/ttk/notebook.tcl	/^proc ttk::notebook::MnemonicActivation {top key} {$/;"	p
ttk::notebook::MnemonicTab	library/ttk/notebook.tcl	/^proc ttk::notebook::MnemonicTab {nb key} {$/;"	p
ttk::notebook::Press	library/ttk/notebook.tcl	/^proc ttk::notebook::Press {w x y} {$/;"	p
ttk::notebook::TLCleanup	library/ttk/notebook.tcl	/^proc ttk::notebook::TLCleanup {w} {$/;"	p
ttk::notebook::TLCycleTab	library/ttk/notebook.tcl	/^proc ttk::notebook::TLCycleTab {w dir} {$/;"	p
ttk::notebook::enableTraversal	library/ttk/notebook.tcl	/^proc ttk::notebook::enableTraversal {nb} {$/;"	p
ttk::panedwindow::Drag	library/ttk/panedwindow.tcl	/^proc ttk::panedwindow::Drag {w x y} {$/;"	p
ttk::panedwindow::Press	library/ttk/panedwindow.tcl	/^proc ttk::panedwindow::Press {w x y} {$/;"	p
ttk::panedwindow::Release	library/ttk/panedwindow.tcl	/^proc ttk::panedwindow::Release {w x y} {$/;"	p
ttk::panedwindow::ResetCursor	library/ttk/panedwindow.tcl	/^proc ttk::panedwindow::ResetCursor {w} {$/;"	p
ttk::panedwindow::SetCursor	library/ttk/panedwindow.tcl	/^proc ttk::panedwindow::SetCursor {w x y} {$/;"	p
ttk::progressbar::Autoincrement	library/ttk/progress.tcl	/^proc ttk::progressbar::Autoincrement {pb steptime stepsize} {$/;"	p
ttk::progressbar::start	library/ttk/progress.tcl	/^proc ttk::progressbar::start {pb {steptime 50} {stepsize 1}} {$/;"	p
ttk::progressbar::stop	library/ttk/progress.tcl	/^proc ttk::progressbar::stop {pb} {$/;"	p
ttk::releaseGrab	library/ttk/utils.tcl	/^proc ttk::releaseGrab {w} {$/;"	p
ttk::scale::Drag	library/ttk/scale.tcl	/^proc ttk::scale::Drag {w x y} {$/;"	p
ttk::scale::Increment	library/ttk/scale.tcl	/^proc ttk::scale::Increment {w delta} {$/;"	p
ttk::scale::Jump	library/ttk/scale.tcl	/^proc ttk::scale::Jump {w x y} {$/;"	p
ttk::scale::Press	library/ttk/scale.tcl	/^proc ttk::scale::Press {w x y} {$/;"	p
ttk::scale::Release	library/ttk/scale.tcl	/^proc ttk::scale::Release {w x y} {$/;"	p
ttk::scrollbar	library/ttk/scrollbar.tcl	/^    proc ttk::scrollbar {w args} {$/;"	p
ttk::scrollbar::Drag	library/ttk/scrollbar.tcl	/^proc ttk::scrollbar::Drag {w x y} {$/;"	p
ttk::scrollbar::Jump	library/ttk/scrollbar.tcl	/^proc ttk::scrollbar::Jump {w x y} {$/;"	p
ttk::scrollbar::Moveto	library/ttk/scrollbar.tcl	/^proc ttk::scrollbar::Moveto {w fraction} {$/;"	p
ttk::scrollbar::Press	library/ttk/scrollbar.tcl	/^proc ttk::scrollbar::Press {w x y} {$/;"	p
ttk::scrollbar::Release	library/ttk/scrollbar.tcl	/^proc ttk::scrollbar::Release {w x y} {$/;"	p
ttk::scrollbar::Scroll	library/ttk/scrollbar.tcl	/^proc ttk::scrollbar::Scroll {w n units} {$/;"	p
ttk::setCursor	library/ttk/cursors.tcl	/^proc ttk::setCursor {w name} {$/;"	p
ttk::sizegrip::Drag	library/ttk/sizegrip.tcl	/^proc ttk::sizegrip::Drag {W X Y} {$/;"	p
ttk::sizegrip::Press	library/ttk/sizegrip.tcl	/^proc ttk::sizegrip::Press {W X Y} {$/;"	p
ttk::sizegrip::Release	library/ttk/sizegrip.tcl	/^proc ttk::sizegrip::Release {W X Y} {$/;"	p
ttk::spinbox::Adjust	library/ttk/spinbox.tcl	/^proc ttk::spinbox::Adjust {w v min max} {$/;"	p
ttk::spinbox::DoubleClick	library/ttk/spinbox.tcl	/^proc ttk::spinbox::DoubleClick {w x y} {$/;"	p
ttk::spinbox::FormatValue	library/ttk/spinbox.tcl	/^proc ttk::spinbox::FormatValue {w val} {$/;"	p
ttk::spinbox::Limit	library/ttk/spinbox.tcl	/^proc ttk::spinbox::Limit {v min max} {$/;"	p
ttk::spinbox::Motion	library/ttk/spinbox.tcl	/^proc ttk::spinbox::Motion {w x y} {$/;"	p
ttk::spinbox::MouseWheel	library/ttk/spinbox.tcl	/^proc ttk::spinbox::MouseWheel {w dir} {$/;"	p
ttk::spinbox::Press	library/ttk/spinbox.tcl	/^proc ttk::spinbox::Press {w x y} {$/;"	p
ttk::spinbox::Release	library/ttk/spinbox.tcl	/^proc ttk::spinbox::Release {w} {$/;"	p
ttk::spinbox::SelectAll	library/ttk/spinbox.tcl	/^proc ttk::spinbox::SelectAll {w} {$/;"	p
ttk::spinbox::Spin	library/ttk/spinbox.tcl	/^proc ttk::spinbox::Spin {w dir} {$/;"	p
ttk::spinbox::Wrap	library/ttk/spinbox.tcl	/^proc ttk::spinbox::Wrap {v min max} {$/;"	p
ttk::takefocus	library/ttk/utils.tcl	/^proc ttk::takefocus {w} {$/;"	p
ttk::takesFocus	library/ttk/utils.tcl	/^proc ttk::takesFocus {w} {$/;"	p
ttk::traverseTo	library/ttk/utils.tcl	/^proc ttk::traverseTo {w} {$/;"	p
ttk::treeview::ActivateHeading	library/ttk/treeview.tcl	/^proc ttk::treeview::ActivateHeading {w heading} {$/;"	p
ttk::treeview::BrowseTo	library/ttk/treeview.tcl	/^proc ttk::treeview::BrowseTo {w item} {$/;"	p
ttk::treeview::CloseItem	library/ttk/treeview.tcl	/^proc ttk::treeview::CloseItem {w item} {$/;"	p
ttk::treeview::DoubleClick	library/ttk/treeview.tcl	/^proc ttk::treeview::DoubleClick {w x y} {$/;"	p
ttk::treeview::Drag	library/ttk/treeview.tcl	/^proc ttk::treeview::Drag {w x y} {$/;"	p
ttk::treeview::Keynav	library/ttk/treeview.tcl	/^proc ttk::treeview::Keynav {w dir} {$/;"	p
ttk::treeview::Motion	library/ttk/treeview.tcl	/^proc ttk::treeview::Motion {w x y} {$/;"	p
ttk::treeview::OpenItem	library/ttk/treeview.tcl	/^proc ttk::treeview::OpenItem {w item} {$/;"	p
ttk::treeview::Press	library/ttk/treeview.tcl	/^proc ttk::treeview::Press {w x y} {$/;"	p
ttk::treeview::Release	library/ttk/treeview.tcl	/^proc ttk::treeview::Release {w x y} {$/;"	p
ttk::treeview::ScanBetween	library/ttk/treeview.tcl	/^proc ttk::treeview::ScanBetween {tv item1 item2 item} {$/;"	p
ttk::treeview::Select	library/ttk/treeview.tcl	/^proc ttk::treeview::Select {w x y op} {$/;"	p
ttk::treeview::SelectOp	library/ttk/treeview.tcl	/^proc ttk::treeview::SelectOp {w item op} {$/;"	p
ttk::treeview::Toggle	library/ttk/treeview.tcl	/^proc ttk::treeview::Toggle {w item} {$/;"	p
ttk::treeview::ToggleFocus	library/ttk/treeview.tcl	/^proc ttk::treeview::ToggleFocus {w} {$/;"	p
ttk::treeview::between	library/ttk/treeview.tcl	/^proc ttk::treeview::between {tv item1 item2} {$/;"	p
ttk::treeview::heading.drag	library/ttk/treeview.tcl	/^proc ttk::treeview::heading.drag {w x y} {$/;"	p
ttk::treeview::heading.press	library/ttk/treeview.tcl	/^proc ttk::treeview::heading.press {w x y} {$/;"	p
ttk::treeview::heading.release	library/ttk/treeview.tcl	/^proc ttk::treeview::heading.release {w} {$/;"	p
ttk::treeview::resize.drag	library/ttk/treeview.tcl	/^proc ttk::treeview::resize.drag {w x} {$/;"	p
ttk::treeview::resize.press	library/ttk/treeview.tcl	/^proc ttk::treeview::resize.press {w x y} {$/;"	p
ttk::treeview::resize.release	library/ttk/treeview.tcl	/^proc ttk::treeview::resize.release {w x} {$/;"	p
ttk::treeview::select.choose.browse	library/ttk/treeview.tcl	/^proc ttk::treeview::select.choose.browse {w item} { BrowseTo $w $item }$/;"	p
ttk::treeview::select.choose.extended	library/ttk/treeview.tcl	/^proc ttk::treeview::select.choose.extended {w item} {$/;"	p
ttk::treeview::select.choose.none	library/ttk/treeview.tcl	/^proc ttk::treeview::select.choose.none {w item} { $w focus $item }$/;"	p
ttk::treeview::select.extend.browse	library/ttk/treeview.tcl	/^proc ttk::treeview::select.extend.browse {w item} { BrowseTo $w $item }$/;"	p
ttk::treeview::select.extend.extended	library/ttk/treeview.tcl	/^proc ttk::treeview::select.extend.extended {w item} {$/;"	p
ttk::treeview::select.extend.none	library/ttk/treeview.tcl	/^proc ttk::treeview::select.extend.none {w item} { $w focus $item }$/;"	p
ttk::treeview::select.toggle.browse	library/ttk/treeview.tcl	/^proc ttk::treeview::select.toggle.browse {w item} { BrowseTo $w $item }$/;"	p
ttk::treeview::select.toggle.extended	library/ttk/treeview.tcl	/^proc ttk::treeview::select.toggle.extended {w item} {$/;"	p
ttk::treeview::select.toggle.none	library/ttk/treeview.tcl	/^proc ttk::treeview::select.toggle.none {w item} { $w focus $item }$/;"	p
ttkCompoundStrings	generic/ttk/ttkInit.c	/^const char *ttkCompoundStrings[] = {$/;"	v
ttkCompoundStrings	generic/ttk/ttkWidget.h	/^MODULE_SCOPE const char *ttkCompoundStrings[];$/;"	v
ttkCoreOptionSpecs	generic/ttk/ttkInit.c	/^Tk_OptionSpec ttkCoreOptionSpecs[] =$/;"	v
ttkCoreOptionSpecs	generic/ttk/ttkWidget.h	/^MODULE_SCOPE Tk_OptionSpec ttkCoreOptionSpecs[];$/;"	v
ttkDefaultStrings	generic/ttk/ttkInit.c	/^const char *ttkDefaultStrings[] = {$/;"	v
ttkDefaultStrings	generic/ttk/ttkWidget.h	/^MODULE_SCOPE const char *ttkDefaultStrings[];$/;"	v
ttkNullElementSpec	generic/ttk/ttkElements.c	/^\/* public *\/ Ttk_ElementSpec ttkNullElementSpec = {$/;"	v
ttkNullElementSpec	generic/ttk/ttkTheme.h	/^MODULE_SCOPE Ttk_ElementSpec ttkNullElementSpec;$/;"	v
ttkOrientStrings	generic/ttk/ttkInit.c	/^const char *ttkOrientStrings[] = {$/;"	v
ttkOrientStrings	generic/ttk/ttkWidget.h	/^MODULE_SCOPE const char *ttkOrientStrings[];$/;"	v
ttkStateStrings	generic/ttk/ttkInit.c	/^static const char *ttkStateStrings[] = {$/;"	v	file:
ttkStubs	generic/ttk/ttkStubInit.c	/^MODULE_SCOPE const TtkStubs ttkStubs;$/;"	v
ttkStubs	generic/ttk/ttkStubInit.c	/^const TtkStubs ttkStubs = {$/;"	v
ttkStubsPtr	generic/ttk/ttkStubLib.c	/^MODULE_SCOPE const TtkStubs *ttkStubsPtr;$/;"	v
ttkStubsPtr	generic/ttk/ttkStubLib.c	/^const TtkStubs *ttkStubsPtr = NULL;$/;"	v
ttk_AddPadding	generic/ttk/ttkDecls.h	/^    Ttk_Padding (*ttk_AddPadding) (Ttk_Padding pad1, Ttk_Padding pad2); \/* 25 *\/$/;"	m	struct:TtkStubs
ttk_AnchorBox	generic/ttk/ttkDecls.h	/^    Ttk_Box (*ttk_AnchorBox) (Ttk_Box parcel, int w, int h, Tk_Anchor anchor); \/* 31 *\/$/;"	m	struct:TtkStubs
ttk_BoxContains	generic/ttk/ttkDecls.h	/^    int (*ttk_BoxContains) (Ttk_Box box, int x, int y); \/* 28 *\/$/;"	m	struct:TtkStubs
ttk_CreateTheme	generic/ttk/ttkDecls.h	/^    Ttk_Theme (*ttk_CreateTheme) (Tcl_Interp *interp, const char *name, Ttk_Theme parent); \/* 3 *\/$/;"	m	struct:TtkStubs
ttk_ExpandBox	generic/ttk/ttkDecls.h	/^    Ttk_Box (*ttk_ExpandBox) (Ttk_Box b, Ttk_Padding p); \/* 33 *\/$/;"	m	struct:TtkStubs
ttk_GetBorderFromObj	generic/ttk/ttkDecls.h	/^    int (*ttk_GetBorderFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Ttk_Padding *pad_rtn); \/* 21 *\/$/;"	m	struct:TtkStubs
ttk_GetCurrentTheme	generic/ttk/ttkDecls.h	/^    Ttk_Theme (*ttk_GetCurrentTheme) (Tcl_Interp *interp); \/* 2 *\/$/;"	m	struct:TtkStubs
ttk_GetDefaultTheme	generic/ttk/ttkDecls.h	/^    Ttk_Theme (*ttk_GetDefaultTheme) (Tcl_Interp *interp); \/* 1 *\/$/;"	m	struct:TtkStubs
ttk_GetOrientFromObj	generic/ttk/ttkDecls.h	/^    int (*ttk_GetOrientFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, int *orient); \/* 40 *\/$/;"	m	struct:TtkStubs
ttk_GetPaddingFromObj	generic/ttk/ttkDecls.h	/^    int (*ttk_GetPaddingFromObj) (Tcl_Interp *interp, Tk_Window tkwin, Tcl_Obj *objPtr, Ttk_Padding *pad_rtn); \/* 20 *\/$/;"	m	struct:TtkStubs
ttk_GetStateMapFromObj	generic/ttk/ttkDecls.h	/^    Ttk_StateMap (*ttk_GetStateMapFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr); \/* 12 *\/$/;"	m	struct:TtkStubs
ttk_GetStateSpecFromObj	generic/ttk/ttkDecls.h	/^    int (*ttk_GetStateSpecFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Ttk_StateSpec *spec_rtn); \/* 10 *\/$/;"	m	struct:TtkStubs
ttk_GetStickyFromObj	generic/ttk/ttkDecls.h	/^    int (*ttk_GetStickyFromObj) (Tcl_Interp *interp, Tcl_Obj *objPtr, Ttk_Sticky *sticky_rtn); \/* 22 *\/$/;"	m	struct:TtkStubs
ttk_GetTheme	generic/ttk/ttkDecls.h	/^    Ttk_Theme (*ttk_GetTheme) (Tcl_Interp *interp, const char *name); \/* 0 *\/$/;"	m	struct:TtkStubs
ttk_MakeBox	generic/ttk/ttkDecls.h	/^    Ttk_Box (*ttk_MakeBox) (int x, int y, int width, int height); \/* 27 *\/$/;"	m	struct:TtkStubs
ttk_MakePadding	generic/ttk/ttkDecls.h	/^    Ttk_Padding (*ttk_MakePadding) (short l, short t, short r, short b); \/* 23 *\/$/;"	m	struct:TtkStubs
ttk_NewBoxObj	generic/ttk/ttkDecls.h	/^    Tcl_Obj * (*ttk_NewBoxObj) (Ttk_Box box); \/* 35 *\/$/;"	m	struct:TtkStubs
ttk_NewStateSpecObj	generic/ttk/ttkDecls.h	/^    Tcl_Obj * (*ttk_NewStateSpecObj) (unsigned int onbits, unsigned int offbits); \/* 11 *\/$/;"	m	struct:TtkStubs
ttk_PackBox	generic/ttk/ttkDecls.h	/^    Ttk_Box (*ttk_PackBox) (Ttk_Box *cavity, int w, int h, Ttk_Side side); \/* 29 *\/$/;"	m	struct:TtkStubs
ttk_PadBox	generic/ttk/ttkDecls.h	/^    Ttk_Box (*ttk_PadBox) (Ttk_Box b, Ttk_Padding p); \/* 32 *\/$/;"	m	struct:TtkStubs
ttk_PlaceBox	generic/ttk/ttkDecls.h	/^    Ttk_Box (*ttk_PlaceBox) (Ttk_Box *cavity, int w, int h, Ttk_Side side, Ttk_Sticky sticky); \/* 34 *\/$/;"	m	struct:TtkStubs
ttk_RegisterCleanup	generic/ttk/ttkDecls.h	/^    void (*ttk_RegisterCleanup) (Tcl_Interp *interp, void *deleteData, Ttk_CleanupProc *cleanupProc); \/* 4 *\/$/;"	m	struct:TtkStubs
ttk_RegisterElement	generic/ttk/ttkDecls.h	/^    Ttk_ElementClass * (*ttk_RegisterElement) (Tcl_Interp *interp, Ttk_Theme theme, const char *elementName, Ttk_ElementSpec *elementSpec, void *clientData); \/* 6 *\/$/;"	m	struct:TtkStubs
ttk_RegisterElementFactory	generic/ttk/ttkDecls.h	/^    int (*ttk_RegisterElementFactory) (Tcl_Interp *interp, const char *name, Ttk_ElementFactory factoryProc, void *clientData); \/* 7 *\/$/;"	m	struct:TtkStubs
ttk_RegisterElementSpec	generic/ttk/ttkDecls.h	/^    int (*ttk_RegisterElementSpec) (Ttk_Theme theme, const char *elementName, Ttk_ElementSpec *elementSpec, void *clientData); \/* 5 *\/$/;"	m	struct:TtkStubs
ttk_RegisterLayout	generic/ttk/ttkDecls.h	/^    void (*ttk_RegisterLayout) (Ttk_Theme theme, const char *className, Ttk_LayoutSpec layoutSpec); \/* 8 *\/$/;"	m	struct:TtkStubs
ttk_RelievePadding	generic/ttk/ttkDecls.h	/^    Ttk_Padding (*ttk_RelievePadding) (Ttk_Padding padding, int relief, int n); \/* 26 *\/$/;"	m	struct:TtkStubs
ttk_StateMapLookup	generic/ttk/ttkDecls.h	/^    Tcl_Obj * (*ttk_StateMapLookup) (Tcl_Interp *interp, Ttk_StateMap map, Ttk_State state); \/* 13 *\/$/;"	m	struct:TtkStubs
ttk_StateTableLookup	generic/ttk/ttkDecls.h	/^    int (*ttk_StateTableLookup) (Ttk_StateTable map[], Ttk_State state); \/* 14 *\/$/;"	m	struct:TtkStubs
ttk_StickBox	generic/ttk/ttkDecls.h	/^    Ttk_Box (*ttk_StickBox) (Ttk_Box parcel, int w, int h, Ttk_Sticky sticky); \/* 30 *\/$/;"	m	struct:TtkStubs
ttk_UniformPadding	generic/ttk/ttkDecls.h	/^    Ttk_Padding (*ttk_UniformPadding) (short borderWidth); \/* 24 *\/$/;"	m	struct:TtkStubs
tty	generic/tkMain.c	/^    int tty;			\/* Non-zero means standard input is a$/;"	m	struct:InteractiveState	file:
tvpglyph_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable tvpglyph_statemap[] =$/;"	v	file:
type	generic/tk.h	/^    Tk_OptionType type;		\/* Accepted option type. TK_OPTION_END means$/;"	m	struct:Tk_ElementOptionSpec
type	generic/tk.h	/^    Tk_OptionType type;		\/* Type of option, such as TK_OPTION_COLOR;$/;"	m	struct:Tk_OptionSpec
type	generic/tk.h	/^    int type;			\/* Indicates option type; see below. *\/$/;"	m	struct:__anon5
type	generic/tk.h	/^    int type;			\/* Type of option, such as TK_CONFIG_COLOR;$/;"	m	struct:Tk_ConfigSpec
type	generic/tk.h	/^    int type;$/;"	m	struct:__anon10
type	generic/tk.h	/^    int type;$/;"	m	struct:__anon9
type	generic/tkBind.c	/^    int type;			\/* Event type for X, such as ButtonPress. *\/$/;"	m	struct:__anon174	file:
type	generic/tkBind.c	/^    int type;			\/* Type of event (from X). *\/$/;"	m	struct:__anon168	file:
type	generic/tkButton.h	/^    int type;			\/* Type of widget, such as TYPE_LABEL:$/;"	m	struct:__anon178
type	generic/tkCanvas.c	/^    int type;			\/* Search type (see #defs below) *\/$/;"	m	struct:TagSearch	file:
type	generic/tkColor.h	/^    int type;			\/* TK_COLOR_BY_NAME or TK_COLOR_BY_VALUE. *\/$/;"	m	struct:TkColor
type	generic/tkConsole.c	/^    int type;			\/* TCL_STDOUT or TCL_STDERR *\/$/;"	m	struct:ChannelData	file:
type	generic/tkEntry.h	/^    enum EntryType type;	\/* Specialized type of Entry widget *\/$/;"	m	struct:__anon183	typeref:enum:__anon183::EntryType
type	generic/tkFileFilter.h	/^    OSType type;		\/* Mac file type, such as 'TEXT' or 'GIFF' *\/$/;"	m	struct:MacFileType
type	generic/tkFrame.c	/^    enum FrameType type;	\/* Type of widget, such as TYPE_FRAME. *\/$/;"	m	struct:__anon145	typeref:enum:__anon145::FrameType	file:
type	generic/tkInt.h	/^    int type;			\/* TKP_CLIP_PIXMAP or TKP_CLIP_REGION. *\/$/;"	m	struct:TkpClipMask
type	generic/tkMenu.h	/^    int type;			\/* Type of menu entry; see below for valid$/;"	m	struct:TkMenuEntry
type	generic/tkSelect.h	/^    Atom type;			\/* Type conversion supported. *\/$/;"	m	struct:TkClipboardTarget
type	generic/tkUndo.h	/^    TkUndoAtomType type;	\/* The type that will trigger the required$/;"	m	struct:TkUndoAtom
type	generic/ttk/ttkTheme.h	/^    Tk_OptionType type; 	\/* Accepted option types *\/$/;"	m	struct:Ttk_ElementOptionSpec
type	macosx/tkMacOSXCursor.c	/^    int type;			\/* Type of Mac cursor *\/$/;"	m	struct:__anon208	file:
type	unix/tkUnixWm.c	/^    int type;			\/* We only care about this type of event. *\/$/;"	m	struct:WaitRestrictInfo	file:
type	win/tkWinDialog.c	/^static const struct {int type; int btnIds[3];} allowedTypes[] = {$/;"	m	struct:__anon230	file:
type	win/tkWinInt.h	/^    int type;$/;"	m	struct:__anon225
type	win/tkWinInt.h	/^    int type;$/;"	m	struct:__anon226
type	win/tkWinInt.h	/^    int type;$/;"	m	struct:__anon227
type	win/tkWinInt.h	/^    int type;$/;"	m	union:__anon228
type	xlib/X11/Xlib.h	/^	int type;		\/* FocusIn or FocusOut *\/$/;"	m	struct:__anon291
type	xlib/X11/Xlib.h	/^	int type;		\/* of event *\/$/;"	m	struct:__anon287
type	xlib/X11/Xlib.h	/^	int type;		\/* of event *\/$/;"	m	struct:__anon288
type	xlib/X11/Xlib.h	/^	int type;		\/* of event *\/$/;"	m	struct:__anon289
type	xlib/X11/Xlib.h	/^	int type;		\/* of event *\/$/;"	m	struct:__anon290
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon292
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon293
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon294
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon295
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon296
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon297
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon298
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon299
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon300
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon301
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon302
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon303
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon304
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon305
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon306
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon307
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon308
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon309
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon310
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon311
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon312
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon313
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon314
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon316
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon317
type	xlib/X11/Xlib.h	/^	int type;$/;"	m	struct:__anon318
type	xlib/X11/Xlib.h	/^        int type;		\/* must not be changed; first element *\/$/;"	m	union:_XEvent
type	xlib/X11/Xlib.h	/^    XIMStatusDataType type;$/;"	m	struct:_XIMStatusDrawCallbackStruct
typeIndex	macosx/tkMacOSXDialog.c	/^    int typeIndex;$/;"	m	struct:__anon192	file:
typeList	generic/tkCanvas.c	/^static Tk_ItemType *typeList = NULL;$/;"	v	file:
typeMap	win/tkWinDialog.c	/^static const TkStateMap typeMap[] = {$/;"	v	file:
typeMask	generic/tk.h	/^    int typeMask;		\/* An arbitrary bit mask defined by the class$/;"	m	struct:Tk_OptionSpec
typePtr	generic/tk.h	/^    struct Tk_ItemType *typePtr;\/* Table of procedures that implement this$/;"	m	struct:Tk_Item	typeref:struct:Tk_Item::Tk_ItemType
typePtr	generic/tkImage.c	/^    Tk_ImageType *typePtr;	\/* Information about image type. NULL means$/;"	m	struct:ImageMaster	file:
typePtr	generic/tkText.h	/^    const struct Tk_SegType *typePtr;$/;"	m	struct:TkTextSegment	typeref:struct:TkTextSegment::Tk_SegType
typeVariableObj	win/tkWinDialog.c	/^    Tcl_Obj *typeVariableObj;   \/* Variable in which to store type selected *\/$/;"	m	struct:OFNOpts	file:
uid	generic/tkCanvas.h	/^    Tk_Uid uid;			\/* The uid of the whole expression. *\/$/;"	m	struct:TagSearchExpr_s
uidInit	generic/tkInt.h	/^    int uidInit;		\/* 0 means uidTable needs initializing. *\/$/;"	m	struct:TkDisplay
uidTable	generic/tkGet.c	/^    Tcl_HashTable uidTable;$/;"	m	struct:ThreadSpecificData	file:
uidTable	generic/tkInt.h	/^    Tcl_HashTable uidTable;	\/* Stores all Tk_Uid used in a thread. *\/$/;"	m	struct:TkDisplay
uidTable	win/tkWinFont.c	/^    Tcl_HashTable uidTable;$/;"	m	struct:ThreadSpecificData	file:
uids	generic/tkCanvas.h	/^    Tk_Uid *uids;		\/* Expresion compiled to an array of uids. *\/$/;"	m	struct:TagSearchExpr_s
underline	generic/tkButton.h	/^    int underline;		\/* Value of -underline option: specifies index$/;"	m	struct:__anon178
underline	generic/tkCanvText.c	/^    int underline;		\/* Index of character to put underline beneath$/;"	m	struct:TextItem	file:
underline	generic/tkFont.h	/^    int underline;		\/* Non-zero for underline font. *\/$/;"	m	struct:TkFontAttributes
underline	generic/tkMenu.h	/^    int underline;		\/* Value of -underline option: specifies index$/;"	m	struct:TkMenuEntry
underline	generic/tkMenubutton.h	/^    int underline;		\/* Index of character to underline. *\/$/;"	m	struct:__anon137
underline	generic/tkText.h	/^    int underline;		\/* Non-zero means draw underline underneath$/;"	m	struct:TkTextTag
underline	generic/tkTextDisp.c	/^    int underline;		\/* Non-zero means draw underline underneath$/;"	m	struct:StyleValues	file:
underlineHeight	generic/tkFont.h	/^    int underlineHeight;	\/* Height of underline bar (used for drawing$/;"	m	struct:TkFont
underlineMap	generic/tkFont.c	/^static const TkStateMap underlineMap[] = {$/;"	v	file:
underlineObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *underlineObj;$/;"	m	struct:__anon13	file:
underlineObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj 	*underlineObj;$/;"	m	struct:__anon120	file:
underlineObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*underlineObj;$/;"	m	struct:__anon61	file:
underlineObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj *underlineObj;$/;"	m	struct:__anon65	file:
underlinePos	generic/tkFont.h	/^    int	underlinePos;		\/* Offset from baseline to origin of underline$/;"	m	struct:TkFont
underlinePos	unix/tkUnixFont.c	/^    int underlinePos;		\/* Offset from baseline to origin of underline$/;"	m	struct:UnixFont	file:
underlinePtr	generic/tkMenu.h	/^    Tcl_Obj *underlinePtr;	\/* Index of character to underline. *\/$/;"	m	struct:TkMenuEntry
underlineString	generic/tkText.h	/^    char *underlineString;	\/* -underline option string (malloc-ed). NULL$/;"	m	struct:TkTextTag
undisplayProc	generic/tkText.h	/^    Tk_ChunkUndisplayProc *undisplayProc;$/;"	m	struct:TkTextDispChunk
undo	generic/tkText.h	/^    int undo;			\/* Non-zero means the undo\/redo behaviour is$/;"	m	struct:TkSharedText
undo	generic/tkText.h	/^    int undo;			\/* Non-zero means the undo\/redo behaviour is$/;"	m	struct:TkText
undoStack	generic/tkText.h	/^    TkUndoRedoStack *undoStack;	\/* The undo\/redo stack. *\/$/;"	m	struct:TkSharedText
undoStack	generic/tkUndo.h	/^    TkUndoAtom *undoStack;	\/* The undo stack. *\/$/;"	m	struct:TkUndoRedoStack
unicodeEncoding	win/tkWinX.c	/^static Tcl_Encoding unicodeEncoding = NULL;$/;"	v	file:
uniform	generic/tkGrid.c	/^    Tk_Uid uniform;		\/* Value of -uniform option. It is used to$/;"	m	struct:GridLayout	file:
uniform	generic/tkGrid.c	/^    Tk_Uid uniform;		\/* Value of -uniform option. It is used to$/;"	m	struct:SlotInfo	file:
units	generic/tkObj.c	/^    int units;$/;"	m	struct:MMRep	file:
units	generic/tkObj.c	/^    int units;$/;"	m	struct:PixelRep	file:
unshareObj	generic/ttk/ttkTreeview.c	/^static Tcl_Obj *unshareObj(Tcl_Obj *objPtr)$/;"	f	file:
untearoff	library/demos/toolbar.tcl	/^proc untearoff {w} {$/;"	p
unused	generic/ttk/ttkTheme.h	/^    Tcl_Obj	*unused;$/;"	m	struct:__anon75
uparrow_statemap	win/ttkWinXPTheme.c	/^static Ttk_StateTable uparrow_statemap[] =$/;"	v	file:
updatePending	generic/tkFont.c	/^    int updatePending;		\/* Non-zero when a World Changed event has$/;"	m	struct:TkFontInfo	file:
updatePending	generic/tkSquare.c	/^    int updatePending;		\/* Non-zero means a call to SquareDisplay has$/;"	m	struct:__anon142	file:
updatingClipboard	win/tkWinX.c	/^    int updatingClipboard;	\/* If 1, we are updating the clipboard. *\/$/;"	m	struct:ThreadSpecificData	file:
upperColorObj	generic/ttk/ttkClamTheme.c	/^    Tcl_Obj *upperColorObj;$/;"	m	struct:__anon55	file:
use	generic/tkWindow.c	/^static char *use = NULL;$/;"	v	file:
usePresentationFormsFor	library/demos/unicodeout.tcl	/^proc usePresentationFormsFor {language} {$/;"	p
useTRNS	generic/tkImgPNG.c	/^    int useTRNS;		\/* Flag to indicate whether there was a$/;"	m	struct:__anon179	file:
useThemedFrame	macosx/tkMacOSXDraw.c	/^static int useThemedFrame = 0;$/;"	v	file:
useThemedToplevel	macosx/tkMacOSXDraw.c	/^static int useThemedToplevel = 0;$/;"	v	file:
useThis	generic/tkFrame.c	/^    char *useThis;		\/* If the window is embedded, this points to$/;"	m	struct:__anon145	file:
useTkText	macosx/tkMacOSXButton.c	/^    int useTkText;$/;"	m	struct:__anon202	file:
userHeight	generic/tkImgPhoto.h	/^    int userWidth, userHeight;	\/* User-declared image dimensions. *\/$/;"	m	struct:PhotoMaster
userWidth	generic/tkImgPhoto.h	/^    int userWidth, userHeight;	\/* User-declared image dimensions. *\/$/;"	m	struct:PhotoMaster
user_data	generic/tk.h	/^    Tcl_Obj *user_data;		\/* Application-specific data reference; Tk$/;"	m	struct:__anon9
usingControl	macosx/tkMacOSXButton.c	/^    int usingControl;$/;"	m	struct:__anon202	file:
utf8Atom	generic/tkInt.h	/^    Atom utf8Atom;		\/* Atom for UTF8_STRING. *\/$/;"	m	struct:TkDisplay
utfDirString	win/tkWinDialog.c	/^    Tcl_DString utfDirString;   \/* Initial dir *\/$/;"	m	struct:OFNOpts	file:
vArrowHeight	win/tkWinScrlbr.c	/^static int vArrowHeight, vThumb; \/* Vertical control metrics. *\/$/;"	v	file:
vRoot	macosx/tkMacOSXWm.h	/^    Window vRoot;		\/* Virtual root window for this top-level, or$/;"	m	struct:TkWmInfo
vRoot	unix/tkUnixWm.c	/^    Window vRoot;		\/* Virtual root window for this top-level, or$/;"	m	struct:TkWmInfo	file:
vRootHeight	macosx/tkMacOSXWm.h	/^    unsigned int vRootWidth, vRootHeight;$/;"	m	struct:TkWmInfo
vRootHeight	unix/tkUnixWm.c	/^    int vRootWidth, vRootHeight;\/* Dimensions of the virtual root window. If$/;"	m	struct:TkWmInfo	file:
vRootWidth	macosx/tkMacOSXWm.h	/^    unsigned int vRootWidth, vRootHeight;$/;"	m	struct:TkWmInfo
vRootWidth	unix/tkUnixWm.c	/^    int vRootWidth, vRootHeight;\/* Dimensions of the virtual root window. If$/;"	m	struct:TkWmInfo	file:
vRootX	macosx/tkMacOSXWm.h	/^    int vRootX, vRootY;		\/* Position of the virtual root inside the root$/;"	m	struct:TkWmInfo
vRootX	unix/tkUnixWm.c	/^    int vRootX, vRootY;		\/* Position of the virtual root inside the$/;"	m	struct:TkWmInfo	file:
vRootY	macosx/tkMacOSXWm.h	/^    int vRootX, vRootY;		\/* Position of the virtual root inside the root$/;"	m	struct:TkWmInfo
vRootY	unix/tkUnixWm.c	/^    int vRootX, vRootY;		\/* Position of the virtual root inside the$/;"	m	struct:TkWmInfo	file:
vThumb	win/tkWinScrlbr.c	/^static int vArrowHeight, vThumb; \/* Vertical control metrics. *\/$/;"	v	file:
validAttrs	macosx/tkMacOSXWm.c	/^    const UInt64 validAttrs, defaultAttrs, forceOnAttrs, forceOffAttrs;$/;"	m	struct:__anon205	file:
validRegion	generic/tkImgPhoto.h	/^    TkRegion validRegion;	\/* Tk region indicating which parts of the$/;"	m	struct:PhotoMaster
validate	generic/tkEntry.h	/^    int validate;		\/* Non-zero means try to validate *\/$/;"	m	struct:__anon183
validate	generic/ttk/ttkEntry.c	/^    VMODE validate;		\/* Validation mode *\/$/;"	m	struct:__anon26	file:
validateCmd	generic/tkEntry.h	/^    char *validateCmd;		\/* Command prefix to use when invoking$/;"	m	struct:__anon183
validateCmd	generic/ttk/ttkEntry.c	/^    char *validateCmd;		\/* Validation script template *\/$/;"	m	struct:__anon26	file:
validateMode	generic/ttk/ttkEntry.c	/^typedef enum validateMode {$/;"	g	file:
validatePhoneChange	library/demos/entry3.tcl	/^proc validatePhoneChange {W vmode idx char} {$/;"	p
validateReason	generic/ttk/ttkEntry.c	/^typedef enum validateReason {$/;"	g	file:
validateReasonStrings	generic/ttk/ttkEntry.c	/^static const char *const validateReasonStrings[] = {$/;"	v	file:
validateStrings	generic/tkEntry.c	/^static const char *const validateStrings[] = {$/;"	v	file:
validateStrings	generic/ttk/ttkEntry.c	/^static const char *const validateStrings[] = {$/;"	v	file:
validateType	generic/tkEntry.c	/^enum validateType {$/;"	g	file:
value	generic/tkBind.c	/^    KeySym value;		\/* Numeric identifier for keysym. *\/$/;"	m	struct:__anon172	file:
value	generic/tkInt.h	/^    } value;$/;"	m	struct:TkpClipMask	typeref:union:TkpClipMask::__anon134
value	generic/tkObj.c	/^    double value;$/;"	m	struct:MMRep	file:
value	generic/tkObj.c	/^    double value;$/;"	m	struct:PixelRep	file:
value	generic/tkScale.h	/^    double value;		\/* Current value of scale. *\/$/;"	m	struct:TkScale
value	macosx/tkMacOSXBitmap.c	/^    char *value;$/;"	m	struct:__anon188	file:
value	win/nmakehlp.c	/^    char * value;$/;"	m	struct:list_item_t	file:
value	xlib/X11/Xutil.h	/^    unsigned char *value;		\/* same as Property routines *\/$/;"	m	struct:__anon260
valueFormat	generic/tkEntry.h	/^    char *valueFormat;		\/* Sprintf conversion specifier used for the$/;"	m	struct:__anon184
valueHashPtr	generic/tkGC.c	/^    Tcl_HashEntry *valueHashPtr;\/* Entry in valueTable (needed when deleting$/;"	m	struct:__anon140	file:
valueObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *valueObj;$/;"	m	struct:__anon21	file:
valueObj	generic/ttk/ttkProgress.c	/^    Tcl_Obj 	*valueObj;$/;"	m	struct:__anon101	file:
valueObj	generic/ttk/ttkScale.c	/^    Tcl_Obj *valueObj;        \/* current value *\/$/;"	m	struct:__anon107	file:
valueObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *valueObj;		\/* current value *\/$/;"	m	struct:__anon212	file:
valueObj	macosx/ttkMacOSXTheme.c	/^    Tcl_Obj *valueObj;		\/* current value *\/$/;"	m	struct:__anon213	file:
valuePtr	generic/tk.h	/^    Tcl_Obj *valuePtr;		\/* The old value of the option, in the form of$/;"	m	struct:Tk_SavedOption
valueStr	generic/tkEntry.h	/^    char *valueStr;		\/* Values List. Malloc'ed. *\/$/;"	m	struct:__anon184
valueUid	generic/tkOption.c	/^	Tk_Uid valueUid;	\/* For leaf nodes, this is the string value of$/;"	m	union:Element::__anon185	file:
value_mask	xlib/X11/Xlib.h	/^	unsigned long value_mask;$/;"	m	struct:__anon306
values	generic/tkGC.c	/^    XGCValues values;		\/* Desired values for GC. *\/$/;"	m	struct:__anon141	file:
valuesObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*valuesObj;$/;"	m	struct:__anon28	file:
valuesObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*valuesObj;$/;"	m	struct:__anon30	file:
valuesObj	generic/ttk/ttkTreeview.c	/^    Tcl_Obj	*valuesObj;$/;"	m	struct:TreeItemRec	file:
varName	generic/tkOldTest.c	/^    char *varName;              \/* Name of variable in which to log events for$/;"	m	struct:TImageMaster	file:
varName	generic/tkTest.c	/^    char *varName;		\/* Name of variable in which to log events for$/;"	m	struct:TImageMaster	file:
varNamePtr	generic/tkScale.h	/^    Tcl_Obj *varNamePtr;	\/* Name of variable or NULL. If non-NULL,$/;"	m	struct:TkScale
varPtr	generic/tkText.c	/^    Tcl_Obj *varPtr;		\/* If non-NULL, store length(s) of match(es)$/;"	m	struct:SearchSpec	file:
variable	library/mkpsenc.tcl	/^	proc variable {name value} {$/;"	p
variableObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *variableObj;$/;"	m	struct:__anon19	file:
variableObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *variableObj;$/;"	m	struct:__anon21	file:
variableObj	generic/ttk/ttkProgress.c	/^    Tcl_Obj 	*variableObj;$/;"	m	struct:__anon101	file:
variableObj	generic/ttk/ttkScale.c	/^    Tcl_Obj *variableObj;$/;"	m	struct:__anon107	file:
variableTrace	generic/ttk/ttkButton.c	/^    Ttk_TraceHandle	*variableTrace;$/;"	m	struct:__anon21	file:
variableTrace	generic/ttk/ttkButton.c	/^    Ttk_TraceHandle *variableTrace;$/;"	m	struct:__anon19	file:
variableTrace	generic/ttk/ttkProgress.c	/^    Ttk_TraceHandle *variableTrace;	\/* Trace handle for -variable option *\/$/;"	m	struct:__anon101	file:
variableTrace	generic/ttk/ttkScale.c	/^    Ttk_TraceHandle *variableTrace;$/;"	m	struct:__anon107	file:
varnameObj	generic/ttk/ttkTrace.c	/^    Tcl_Obj 		*varnameObj;	\/* Name of variable being traced *\/$/;"	m	struct:TtkTraceHandle_	file:
vendor	xlib/X11/Xlib.h	/^	char *vendor;		\/* vendor of the server hardware *\/$/;"	m	struct:_XDisplay
version	generic/tk.h	/^    int version;		\/* Version of the style support. *\/$/;"	m	struct:Tk_ElementSpec
version	generic/ttk/ttkTheme.h	/^    enum TTKStyleVersion2 version;	\/* Version of the style support. *\/$/;"	m	struct:Ttk_ElementSpec	typeref:enum:Ttk_ElementSpec::TTKStyleVersion2
version	win/tkWinFont.c	/^    USHORT version;		\/* Table version number (0). *\/$/;"	m	struct:CMAPTABLE	file:
version	win/tkWinFont.c	/^    USHORT version;		\/* Version number (starts at 0). *\/$/;"	m	struct:ANYTABLE	file:
version	win/tkWinFont.c	/^    USHORT version;		\/* Version number (starts at 0). *\/$/;"	m	struct:BYTETABLE	file:
version	win/tkWinFont.c	/^    USHORT version;		\/* Version number (starts at 0). *\/$/;"	m	struct:HIBYTETABLE	file:
version	win/tkWinFont.c	/^    USHORT version;		\/* Version number (starts at 0). *\/$/;"	m	struct:SEGMENTTABLE	file:
version	win/tkWinFont.c	/^    USHORT version;		\/* Version number (starts at 0). *\/$/;"	m	struct:TRIMMEDTABLE	file:
vertLabelX	generic/tkScale.h	/^    int vertLabelX;		\/* X-location of origin of label. *\/$/;"	m	struct:TkScale
vertTickRightX	generic/tkScale.h	/^    int vertTickRightX;		\/* X-location of right side of tick-marks. *\/$/;"	m	struct:TkScale
vertTroughX	generic/tkScale.h	/^    int vertTroughX;		\/* X-location of scale's slider trough. *\/$/;"	m	struct:TkScale
vertValueRightX	generic/tkScale.h	/^    int vertValueRightX;	\/* X-location of right side of value string. *\/$/;"	m	struct:TkScale
vertical	generic/tkScrollbar.h	/^    int vertical;		\/* Non-zero means vertical orientation$/;"	m	struct:TkScrollbar
verticalOrientation	macosx/tkMacOSXFont.c	20;"	d	file:
verticalOrientation	macosx/tkMacOSXFont.c	23;"	d	file:
view	macosx/tkMacOSXInt.h	/^    NSView *view;$/;"	m	struct:TkWindowPrivate
view	macosx/tkMacOSXPrivate.h	/^    NSView *view;$/;"	m	struct:TkMacOSXDrawingContext
virtualEventMasks	generic/tkEvent.c	/^static const unsigned long virtualEventMasks[TK_LASTEVENT-VirtualEvent] = {$/;"	v	file:
virtualEventTable	generic/tkBind.c	/^    VirtualEventTable virtualEventTable;$/;"	m	struct:TkBindInfo_	file:
virtualkeyArray	macosx/tkMacOSXKeyboard.c	/^static KeyInfo virtualkeyArray[] = {$/;"	v	file:
visNotify	generic/tkBind.c	/^static const TkStateMap visNotify[] = {$/;"	v	file:
visRgn	macosx/tkMacOSXInt.h	/^    HIShapeRef visRgn;		\/* Visible region of window *\/$/;"	m	struct:TkWindowPrivate
visual	generic/tk.h	/^    Visual *visual;$/;"	m	struct:Tk_FakeWin
visual	generic/tk3d.h	/^    Visual *visual;		\/* Visual for all windows and pixmaps using$/;"	m	struct:TkBorder
visual	generic/tkColor.h	/^    Visual *visual;		\/* Visual associated with colormap. *\/$/;"	m	struct:TkColor
visual	generic/tkInt.h	/^    Visual *visual;		\/* Visual to use for window. If not default,$/;"	m	struct:TkWindow
visual	generic/tkVisual.c	/^    Visual *visual;		\/* Visual for which colormap was allocated. *\/$/;"	m	struct:TkColormap	file:
visual	generic/tkWindow.c	/^static char *visual = NULL;$/;"	v	file:
visual	xlib/X11/Xlib.h	/^		Visual *visual;$/;"	m	union:__anon325
visual	xlib/X11/Xlib.h	/^    Visual *visual;		\/* the associated visual structure *\/$/;"	m	struct:__anon274
visual	xlib/X11/Xutil.h	/^  Visual *visual;$/;"	m	struct:__anon264
visualInfo	generic/tkImgPhoto.h	/^    XVisualInfo	visualInfo;	\/* Information about the visual for windows$/;"	m	struct:ColorTable
visualInfo	generic/tkImgPhoto.h	/^    XVisualInfo visualInfo;	\/* Information about the visual that these$/;"	m	struct:PhotoInstance
visualName	generic/tkFrame.c	/^    char *visualName;		\/* Textual description of visual for window,$/;"	m	struct:__anon145	file:
visualNames	generic/tkVisual.c	/^static const VisualDictionary visualNames[] = {$/;"	v	file:
visualid	xlib/X11/Xlib.h	/^	VisualID visualid;	\/* visual id of this visual *\/$/;"	m	struct:__anon269
visualid	xlib/X11/Xutil.h	/^	VisualID visualid;		\/* added by ICCCM version 1 *\/$/;"	m	struct:__anon265
visualid	xlib/X11/Xutil.h	/^  VisualID visualid;$/;"	m	struct:__anon264
visuals	xlib/X11/Xlib.h	/^	Visual *visuals;	\/* list of visuals possible at this depth *\/$/;"	m	struct:__anon270
vkeyTable	macosx/tkMacOSXKeyboard.c	/^static Tcl_HashTable vkeyTable;		\/* virtualkeyArray hashed by virtual$/;"	v	file:
vnumber	xlib/X11/Xlib.h	/^	int vnumber;		\/* Xlib's X protocol version number. *\/$/;"	m	struct:_XDisplay
voPtr	generic/tkBind.c	/^    struct VirtualOwners *voPtr;\/* In a binding table, always NULL. In a$/;"	m	struct:PatSeq	typeref:struct:PatSeq::VirtualOwners	file:
wBitCount	win/tkWinWm.c	/^    WORD wBitCount;		\/* Bits per pixel *\/$/;"	m	struct:__anon235	file:
wPlanes	win/tkWinWm.c	/^    WORD wPlanes;		\/* Color Planes *\/$/;"	m	struct:__anon235	file:
warpMainwin	generic/tkInt.h	/^    Tk_Window warpMainwin;	\/* For finding the root window for warping$/;"	m	struct:TkDisplay
warpWindow	generic/tkInt.h	/^    Tk_Window warpWindow;$/;"	m	struct:TkDisplay
warpX	generic/tkInt.h	/^    int warpX;$/;"	m	struct:TkDisplay
warpY	generic/tkInt.h	/^    int warpY;$/;"	m	struct:TkDisplay
waveCoordsTracer	library/demos/aniwave.tcl	/^proc waveCoordsTracer {w args} {$/;"	p
weight	generic/tkFont.h	/^    int weight;			\/* Weight flag; see below for def'n. *\/$/;"	m	struct:TkFontAttributes
weight	generic/tkGrid.c	/^    int weight;			\/* Slot weight, controls resizing. *\/$/;"	m	struct:GridLayout	file:
weight	generic/tkGrid.c	/^    int weight;			\/* The resize weight of this slot. (0) means$/;"	m	struct:SlotInfo	file:
weight	generic/ttk/ttkPanedwindow.c	/^    int 	weight; 		\/* Pane -weight, for resizing *\/$/;"	m	struct:__anon125	file:
weightMap	generic/tkFont.c	/^static const TkStateMap weightMap[] = {$/;"	v	file:
white_pixel	xlib/X11/Xlib.h	/^	unsigned long white_pixel;$/;"	m	struct:__anon271
whitespaceCharacterSet	macosx/tkMacOSXFont.c	/^static NSCharacterSet *whitespaceCharacterSet = nil;$/;"	v	file:
wide_char	xlib/X11/Xlib.h	/^	wchar_t *wide_char;$/;"	m	union:_XIMText::__anon331
widgetClassProcs	generic/ttk/ttkWidget.c	/^static Tk_ClassProcs widgetClassProcs = {$/;"	v	file:
widgetClientData	generic/tkImage.c	/^    ClientData widgetClientData;\/* Argument to pass to changeProc. *\/$/;"	m	struct:Image	file:
widgetCmd	generic/tkButton.h	/^    Tcl_Command widgetCmd;	\/* Token for button's widget command. *\/$/;"	m	struct:__anon178
widgetCmd	generic/tkCanvas.h	/^    Tcl_Command widgetCmd;	\/* Token for canvas's widget command. *\/$/;"	m	struct:TkCanvas
widgetCmd	generic/tkEntry.h	/^    Tcl_Command widgetCmd;	\/* Token for entry's widget command. *\/$/;"	m	struct:__anon183
widgetCmd	generic/tkFrame.c	/^    Tcl_Command widgetCmd;	\/* Token for frame's widget command. *\/$/;"	m	struct:__anon145	file:
widgetCmd	generic/tkListbox.c	/^    Tcl_Command widgetCmd;	\/* Token for listbox's widget command. *\/$/;"	m	struct:__anon149	file:
widgetCmd	generic/tkMenu.h	/^    Tcl_Command widgetCmd;	\/* Token for menu's widget command. *\/$/;"	m	struct:TkMenu
widgetCmd	generic/tkMenubutton.h	/^    Tcl_Command widgetCmd;	\/* Token for menubutton's widget command. *\/$/;"	m	struct:__anon137
widgetCmd	generic/tkMessage.c	/^    Tcl_Command widgetCmd;	\/* Token for message's widget command. *\/$/;"	m	struct:__anon153	file:
widgetCmd	generic/tkPanedWindow.c	/^    Tcl_Command widgetCmd;	\/* Token for square's widget command. *\/$/;"	m	struct:PanedWindow	file:
widgetCmd	generic/tkScale.h	/^    Tcl_Command widgetCmd;	\/* Token for scale's widget command. *\/$/;"	m	struct:TkScale
widgetCmd	generic/tkScrollbar.h	/^    Tcl_Command widgetCmd;	\/* Token for scrollbar's widget command. *\/$/;"	m	struct:TkScrollbar
widgetCmd	generic/tkSquare.c	/^    Tcl_Command widgetCmd;	\/* Token for square's widget command. *\/$/;"	m	struct:__anon142	file:
widgetCmd	generic/tkTest.c	/^    Tcl_Command widgetCmd;	\/* For widgets, the command associated with$/;"	m	struct:TrivialCommandHeader	file:
widgetCmd	generic/tkText.h	/^    Tcl_Command widgetCmd;	\/* Token for text's widget command. *\/$/;"	m	struct:TkText
widgetCmd	generic/ttk/ttkWidget.h	/^    Tcl_Command widgetCmd;	\/* Token for widget command. *\/$/;"	m	struct:__anon48
widgetSpec	generic/ttk/ttkWidget.h	/^    WidgetSpec *widgetSpec;	\/* Widget class hooks *\/$/;"	m	struct:__anon48
widgetSpecs	generic/tkStyle.c	/^    StyledWidgetSpec *widgetSpecs;$/;"	m	struct:StyledElement	file:
width	generic/tk.h	/^    double width;		\/* Width of outline. *\/$/;"	m	struct:Tk_Outline
width	generic/tk.h	/^    int width;			\/* Width of block, in pixels. *\/$/;"	m	struct:Tk_PhotoImageBlock
width	generic/tkBitmap.c	/^    int width, height;		\/* Dimensions of bitmap. *\/$/;"	m	struct:TkBitmap	file:
width	generic/tkBitmap.c	/^    int width, height;		\/* Dimensions of bitmap. *\/$/;"	m	struct:__anon2	file:
width	generic/tkBusy.h	/^    int width, height;		\/* Size of the reference window. Retained to$/;"	m	struct:Busy
width	generic/tkButton.h	/^    int width;			\/* Integer value corresponding to widthPtr. *\/$/;"	m	struct:__anon178
width	generic/tkCanvPs.c	/^    int x, y, width, height;	\/* Area to print, in canvas pixel$/;"	m	struct:TkPostscriptInfo	file:
width	generic/tkCanvText.c	/^    int width;			\/* Width of lines for word-wrap, pixels. Zero$/;"	m	struct:TextItem	file:
width	generic/tkCanvWind.c	/^    int width;			\/* Width to use for window (<= 0 means use$/;"	m	struct:WindowItem	file:
width	generic/tkCanvas.h	/^    int width, height;		\/* Dimensions to request for canvas window,$/;"	m	struct:TkCanvas
width	generic/tkCursor.c	/^    int width, height;		\/* Dimensions of cursor (and data and$/;"	m	struct:__anon1	file:
width	generic/tkFont.c	/^    int width;			\/* The maximum width of all lines in the text$/;"	m	struct:TextLayout	file:
width	generic/tkFrame.c	/^    int width;			\/* Width to request for window. <= 0 means$/;"	m	struct:__anon145	file:
width	generic/tkGeometry.c	/^    int width, height;		\/* Desired dimensions of slave. *\/$/;"	m	struct:MaintainSlave	file:
width	generic/tkImage.c	/^    int width, height;		\/* Last known dimensions for image. *\/$/;"	m	struct:ImageMaster	file:
width	generic/tkImgBmap.c	/^    int width, height;		\/* Dimensions of image. *\/$/;"	m	struct:BitmapMaster	file:
width	generic/tkImgPhoto.h	/^    int	width, height;		\/* Dimensions of image. *\/$/;"	m	struct:PhotoMaster
width	generic/tkImgPhoto.h	/^    int width, height;		\/* Dimensions of the pixmap. *\/$/;"	m	struct:PhotoInstance
width	generic/tkInt.h	/^    int width, height;		\/* Dimensions of bitmap. *\/$/;"	m	struct:__anon132
width	generic/tkListbox.c	/^    int width;			\/* Desired width of window, in characters. *\/$/;"	m	struct:__anon149	file:
width	generic/tkMenu.h	/^    int width;			\/* Number of pixels occupied by entry in$/;"	m	struct:TkMenuEntry
width	generic/tkMenubutton.h	/^    int width, height;		\/* If > 0, these specify dimensions to request$/;"	m	struct:__anon137
width	generic/tkMessage.c	/^    int width;			\/* User-requested width, in pixels. 0 means$/;"	m	struct:__anon153	file:
width	generic/tkOldTest.c	/^    int width, height;          \/* Dimensions of image. *\/$/;"	m	struct:TImageMaster	file:
width	generic/tkPanedWindow.c	/^    int width, height;		\/* Width and height of the widget. *\/$/;"	m	struct:PanedWindow	file:
width	generic/tkPanedWindow.c	/^    int width;			\/* Slave width. *\/$/;"	m	struct:Slave	file:
width	generic/tkPlace.c	/^    int width, height;		\/* Absolute dimensions for tkwin. *\/$/;"	m	struct:Slave	file:
width	generic/tkScale.h	/^    int width;			\/* Desired narrow dimension of scale, in$/;"	m	struct:TkScale
width	generic/tkScrollbar.h	/^    int width;			\/* Desired narrow dimension of scrollbar, in$/;"	m	struct:TkScrollbar
width	generic/tkTest.c	/^    int width, height;		\/* Dimensions of image. *\/$/;"	m	struct:TImageMaster	file:
width	generic/tkText.h	/^    int width, height;		\/* Desired dimensions for window, measured in$/;"	m	struct:TkText
width	generic/tkText.h	/^    int width;			\/* Width of this chunk, in pixels. Initially$/;"	m	struct:TkTextDispChunk
width	generic/tkTextDisp.c	/^    int width;			\/* Width in pixels of the whole string, if$/;"	m	struct:BaseCharInfo	file:
width	generic/ttk/ttkDefaultTheme.c	/^    int width;		\/* Width of each image *\/$/;"	m	struct:__anon90	file:
width	generic/ttk/ttkLabel.c	/^    int 		width;$/;"	m	struct:__anon61	file:
width	generic/ttk/ttkLabel.c	/^    int 	width;$/;"	m	struct:__anon62	file:
width	generic/ttk/ttkNotebook.c	/^    int 	width, height;		\/* Requested size of tab *\/$/;"	m	struct:__anon65	file:
width	generic/ttk/ttkPanedwindow.c	/^    int 	width;$/;"	m	struct:__anon123	file:
width	generic/ttk/ttkTheme.h	/^    int width;$/;"	m	struct:__anon73
width	generic/ttk/ttkTreeview.c	/^    int 	width;		\/* Column width, in pixels *\/$/;"	m	struct:__anon82	file:
width	macosx/tkMacOSXBitmap.c	/^    int kind, width, height;$/;"	m	struct:__anon188	file:
width	macosx/tkMacOSXScrlbr.c	/^    SInt32 width, minThumbHeight;$/;"	m	struct:ScrollbarMetrics	file:
width	macosx/tkMacOSXWm.h	/^    int width, height;		\/* Desired dimensions of window, specified in$/;"	m	struct:TkWmInfo
width	unix/tkUnixWm.c	/^    int width, height;		\/* Desired dimensions of window, specified in$/;"	m	struct:TkWmInfo	file:
width	win/tkWinWm.c	/^    int width, height;		\/* Desired dimensions of window, specified in$/;"	m	struct:TkWmInfo	file:
width	xlib/X11/Xlib.h	/^	int width, height;	\/* size of window *\/$/;"	m	struct:__anon297
width	xlib/X11/Xlib.h	/^	int width, height;	\/* width and height of screen *\/$/;"	m	struct:__anon271
width	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon293
width	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon294
width	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon303
width	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon305
width	xlib/X11/Xlib.h	/^	int width, height;$/;"	m	struct:__anon306
width	xlib/X11/Xlib.h	/^    int width, height;		\/* size of image *\/$/;"	m	struct:_XImage
width	xlib/X11/Xlib.h	/^    int width, height;		\/* width and height of window *\/$/;"	m	struct:__anon274
width	xlib/X11/Xlib.h	/^    int width, height;$/;"	m	struct:__anon276
width	xlib/X11/Xlib.h	/^    short	width;		\/* advance to next char's origin *\/$/;"	m	struct:__anon319
width	xlib/X11/Xlib.h	/^    unsigned short width, height;$/;"	m	struct:__anon280
width	xlib/X11/Xlib.h	/^    unsigned short width, height;$/;"	m	struct:__anon281
width	xlib/X11/Xutil.h	/^	int width, height;	\/* should set so old wm's don't mess up *\/$/;"	m	struct:__anon257
widthInc	macosx/tkMacOSXWm.h	/^    int widthInc, heightInc;	\/* Increments for size changes (# pixels per$/;"	m	struct:TkWmInfo
widthInc	unix/tkUnixWm.c	/^    int widthInc, heightInc;	\/* Increments for size changes (# pixels per$/;"	m	struct:TkWmInfo	file:
widthInc	win/tkWinWm.c	/^    int widthInc, heightInc;	\/* Increments for size changes (# pixels per$/;"	m	struct:TkWmInfo	file:
widthObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *widthObj;$/;"	m	struct:__anon13	file:
widthObj	generic/ttk/ttkElements.c	/^    Tcl_Obj *widthObj;$/;"	m	struct:__anon41	file:
widthObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*widthObj;$/;"	m	struct:__anon32	file:
widthObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj *widthObj;		\/* Desired width of window (in avgchars) *\/$/;"	m	struct:__anon26	file:
widthObj	generic/ttk/ttkFrame.c	/^    Tcl_Obj 	*widthObj;$/;"	m	struct:__anon118	file:
widthObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*widthObj;$/;"	m	struct:__anon61	file:
widthObj	generic/ttk/ttkNotebook.c	/^    Tcl_Obj *widthObj;		\/* Default width *\/$/;"	m	struct:__anon66	file:
widthObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *widthObj;$/;"	m	struct:__anon111	file:
widthObj	generic/ttk/ttkSquare.c	/^    Tcl_Obj *widthObj;$/;"	m	struct:__anon113	file:
widthPtr	generic/tkButton.h	/^    Tcl_Obj *widthPtr;		\/* Value of -width option. *\/$/;"	m	struct:__anon178
widthPtr	generic/tkPanedWindow.c	/^    Tcl_Obj *widthPtr, *heightPtr;$/;"	m	struct:Slave	file:
widthPtr	generic/tkPanedWindow.c	/^    Tcl_Obj *widthPtr;		\/* Tcl_Obj rep for width. *\/$/;"	m	struct:PanedWindow	file:
widthPtr	generic/tkPlace.c	/^    Tcl_Obj *widthPtr;		\/* Tcl_Obj rep of width, to keep pixel$/;"	m	struct:Slave	file:
widthString	generic/tkMenubutton.h	/^    char *widthString;		\/* Value of -width option. Malloc'ed. *\/$/;"	m	struct:__anon137
width_inc	xlib/X11/Xutil.h	/^	int width_inc, height_inc;$/;"	m	struct:__anon262
width_inc	xlib/X11/Xutil.h	/^    	int width_inc, height_inc;$/;"	m	struct:__anon257
widths	unix/tkUnixFont.c	/^    int widths[BASE_CHARS];	\/* Widths of first 256 chars in the base font,$/;"	m	struct:UnixFont	file:
widths	win/tkWinFont.c	/^    int widths[BASE_CHARS];	\/* Widths of first 128 chars in the base font,$/;"	m	struct:WinFont	file:
winCursor	win/tkWinCursor.c	/^    HCURSOR winCursor;		\/* Win32 cursor handle. *\/$/;"	m	struct:__anon243	file:
winDC	win/tkWinInt.h	/^    TkWinDC winDC;$/;"	m	union:__anon228
winDisplay	win/tkWinX.c	/^    TkDisplay *winDisplay;	\/* TkDisplay structure that represents Windows$/;"	m	struct:ThreadSpecificData	file:
winFlags	win/tkWinScrlbr.c	/^    int winFlags;		\/* Various flags; see below. *\/$/;"	m	struct:WinScrollbar	file:
winMenuTable	win/tkWinMenu.c	/^    Tcl_HashTable winMenuTable;	\/* Need this to map HMENUs back to menuPtrs *\/$/;"	m	struct:ThreadSpecificData	file:
winPoints	win/tkWinDraw.c	/^    POINT *winPoints;		\/* Array of points that is reused. *\/$/;"	m	struct:ThreadSpecificData	file:
winPtr	generic/tkEvent.c	/^    TkWindow *winPtr;		\/* Window for event. Gets set to None if$/;"	m	struct:InProgress	file:
winPtr	generic/tkImage.c	/^    TkWindow *winPtr;		\/* Main window of interpreter (used to detect$/;"	m	struct:ImageMaster	file:
winPtr	generic/tkInt.h	/^    struct TkWindow *winPtr;	\/* Pointer to main window. *\/$/;"	m	struct:TkMainInfo	typeref:struct:TkMainInfo::TkWindow
winPtr	generic/tkInt.h	/^    struct TkWindow *winPtr;	\/* The window on which we requested caret$/;"	m	struct:TkCaret	typeref:struct:TkCaret::TkWindow
winPtr	generic/tkOption.c	/^    TkWindow *winPtr;		\/* Window corresponding to this stack$/;"	m	struct:StackLevel	file:
winPtr	generic/tkSelect.h	/^    TkWindow *winPtr;		\/* Window used as requestor for selection. *\/$/;"	m	struct:TkSelRetrievalInfo
winPtr	generic/tkWindow.c	/^    struct TkWindow *winPtr;$/;"	m	struct:TkHalfdeadWindow	typeref:struct:TkHalfdeadWindow::TkWindow	file:
winPtr	macosx/tkMacOSXInt.h	/^    TkWindow *winPtr;		\/* Ptr to tk window or NULL if Pixmap *\/$/;"	m	struct:TkWindowPrivate
winPtr	macosx/tkMacOSXWm.h	/^    TkWindow *winPtr;		\/* Pointer to main Tk information for this$/;"	m	struct:TkWmInfo
winPtr	unix/tkUnixSelect.c	/^    TkWindow *winPtr;		\/* Window that owns selection. *\/$/;"	m	struct:IncrInfo	file:
winPtr	unix/tkUnixWm.c	/^    TkWindow *winPtr;		\/* Pointer to main Tk information for this$/;"	m	struct:TkWmInfo	file:
winPtr	win/tkWinInt.h	/^    TkWindow *winPtr;$/;"	m	struct:__anon225
winPtr	win/tkWinWm.c	/^    TkWindow *winPtr;		\/* Pointer to main Tk information for this$/;"	m	struct:TkWmInfo	file:
winPtr	win/tkWinWm.c	/^    TkWindow *winPtr;$/;"	m	struct:ActivateEvent	file:
winScreenName	win/tkWinX.c	/^static const char winScreenName[] = ":0"; \/* Default name of windows display. *\/$/;"	v	file:
winTable	generic/tkInt.h	/^    Tcl_HashTable winTable;	\/* Maps from X window ids to TkWindow ptrs. *\/$/;"	m	struct:TkDisplay
win_gravity	xlib/X11/Xlib.h	/^    int win_gravity;		\/* one of the window gravity values *\/$/;"	m	struct:__anon273
win_gravity	xlib/X11/Xlib.h	/^    int win_gravity;		\/* one of the window gravity values *\/$/;"	m	struct:__anon274
win_gravity	xlib/X11/Xutil.h	/^	int win_gravity;			\/* added by ICCCM version 1 *\/$/;"	m	struct:__anon257
window	generic/tk.h	/^    Window window;		\/* Window in which event occurred. *\/$/;"	m	struct:__anon10
window	generic/tk.h	/^    Window window;$/;"	m	struct:Tk_FakeWin
window	generic/tkImgGIF.c	/^	unsigned int window;$/;"	m	struct:__anon127::__anon128	file:
window	generic/tkInt.h	/^    Window window;		\/* X's id for window. NULL means window hasn't$/;"	m	struct:TkWindow
window	macosx/tkMacOSXMouseEvent.c	/^    Window window;$/;"	m	struct:__anon194	file:
window	macosx/tkMacOSXWm.h	/^    NSWindow *window;$/;"	m	struct:TkWmInfo
window	unix/tkUnixDraw.c	/^    Window window;		\/* Window to filter. *\/$/;"	m	struct:ScrollInfo	file:
window	win/tkWinInt.h	/^    TkWinWindow window;$/;"	m	union:__anon228
window	xlib/X11/Xlib.h	/^	Window window;		\/* unused *\/$/;"	m	struct:__anon316
window	xlib/X11/Xlib.h	/^	Window window;		\/* window id of window created *\/$/;"	m	struct:__anon297
window	xlib/X11/Xlib.h	/^	Window window;		\/* window of event *\/$/;"	m	struct:__anon291
window	xlib/X11/Xlib.h	/^	Window window;	        \/* "event" window it is reported relative to *\/$/;"	m	struct:__anon287
window	xlib/X11/Xlib.h	/^	Window window;	        \/* "event" window it is reported relative to *\/$/;"	m	struct:__anon288
window	xlib/X11/Xlib.h	/^	Window window;	        \/* "event" window reported relative to *\/$/;"	m	struct:__anon289
window	xlib/X11/Xlib.h	/^	Window window;	        \/* "event" window reported relative to *\/$/;"	m	struct:__anon290
window	xlib/X11/Xlib.h	/^	Window window;	\/* window on which event was requested in event mask *\/$/;"	m	struct:__anon318
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon292
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon293
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon296
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon298
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon299
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon300
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon301
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon302
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon303
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon304
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon305
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon306
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon307
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon308
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon309
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon310
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon313
window	xlib/X11/Xlib.h	/^	Window window;$/;"	m	struct:__anon314
windowAtom	generic/tkInt.h	/^    Atom windowAtom;		\/* Atom for TK_WINDOW. *\/$/;"	m	struct:TkDisplay
windowHashInit	macosx/tkMacOSXWm.c	/^static int windowHashInit = false;$/;"	v	file:
windowObjType	generic/tkObj.c	/^static const Tcl_ObjType windowObjType = {$/;"	v	file:
windowPtr	win/tkWinWm.c	/^    TkWindow **windowPtr;$/;"	m	struct:TkWmStackorderToplevelPair	file:
windowTable	generic/tkText.h	/^    Tcl_HashTable windowTable;	\/* Hash table that maps from window names to$/;"	m	struct:TkSharedText
windowTable	macosx/tkMacOSXWm.c	/^static Tcl_HashTable windowTable;$/;"	v	file:
windowTable	win/tkWinWindow.c	/^    Tcl_HashTable windowTable;  \/* The windowTable maps from HWND to Tk_Window$/;"	m	struct:ThreadSpecificData	file:
windowUnits	generic/tkScrollbar.h	/^    int windowUnits;		\/* Maximum number of units that can be$/;"	m	struct:TkScrollbar
window_group	xlib/X11/Xutil.h	/^	XID window_group;	\/* id of related window group *\/$/;"	m	struct:__anon259
winnt	win/rmd.bat	/^:winnt$/;"	l
wire_vec	xlib/X11/Xlib.h	/^	Status (*wire_vec[128])(); \/* vector for event to wire *\/$/;"	m	struct:_XDisplay
wish	macosx/GNUmakefile	/^wish			:= ${wish}-X11$/;"	m
wish	macosx/GNUmakefile	/^wish			:= wish$/;"	m
withdrawn	unix/tkUnixWm.c	/^    int withdrawn;		\/* Non-zero means window has been withdrawn. *\/$/;"	m	struct:TkWmInfo	file:
wmInfoPtr	generic/tkInt.h	/^    struct TkWmInfo *wmInfoPtr;	\/* For top-level windows (and also for special$/;"	m	struct:TkWindow	typeref:struct:TkWindow::TkWmInfo
wmInfoPtr	unix/tkUnixWm.c	/^    WmInfo *wmInfoPtr;$/;"	m	struct:WaitRestrictInfo	file:
wmMgrType	macosx/tkMacOSXWm.c	/^static const Tk_GeomMgr wmMgrType = {$/;"	v	file:
wmMgrType	unix/tkUnixWm.c	/^static const Tk_GeomMgr wmMgrType = {$/;"	v	file:
wmMgrType	win/tkWinWm.c	/^static const Tk_GeomMgr wmMgrType = {$/;"	v	file:
wmTracing	macosx/tkMacOSXWm.c	/^static int wmTracing = 0;$/;"	v	file:
word	generic/tkImgBmap.c	/^    char word[MAX_WORD_LENGTH+1];$/;"	m	struct:ParseInfo	file:
wordLength	generic/tkImgBmap.c	/^    int wordLength;		\/* Number of non-NULL bytes in word. *\/$/;"	m	struct:ParseInfo	file:
workingBuffer	generic/tkImgGIF.c	/^    unsigned char workingBuffer[280];$/;"	m	struct:__anon127	file:
worldChangedProc	generic/tk.h	/^    Tk_ClassWorldChangedProc *worldChangedProc;$/;"	m	struct:Tk_ClassProcs
wrap	generic/tkEntry.h	/^    int wrap;			\/* whether to wrap around when spinning *\/$/;"	m	struct:__anon184
wrapLength	generic/tkButton.h	/^    int wrapLength;		\/* Integer value corresponding to$/;"	m	struct:__anon178
wrapLength	generic/tkMenubutton.h	/^    int wrapLength;		\/* Line length (in pixels) at which to wrap$/;"	m	struct:__anon137
wrapLengthObj	generic/ttk/ttkButton.c	/^    Tcl_Obj *wrapLengthObj;$/;"	m	struct:__anon15	file:
wrapLengthObj	generic/ttk/ttkLabel.c	/^    Tcl_Obj	*wrapLengthObj;$/;"	m	struct:__anon61	file:
wrapLengthPtr	generic/tkButton.h	/^    Tcl_Obj *wrapLengthPtr;	\/* Value of -wraplength option: specifies line$/;"	m	struct:__anon178
wrapMode	generic/tkText.h	/^    TkWrapMode wrapMode;	\/* How to handle wrap-around for this tag.$/;"	m	struct:TkTextTag
wrapMode	generic/tkText.h	/^    TkWrapMode wrapMode;	\/* How to handle wrap-around. Must be$/;"	m	struct:TkText
wrapMode	generic/tkTextDisp.c	/^    TkWrapMode wrapMode;	\/* How to handle wrap-around for this tag.$/;"	m	struct:StyleValues	file:
wrapObj	generic/ttk/ttkEntry.c	/^    Tcl_Obj	*wrapObj;$/;"	m	struct:__anon30	file:
wrapStrings	generic/tkText.c	/^static const char *const wrapStrings[] = {$/;"	v	file:
wrapStrings	generic/tkTextTag.c	/^static const char *const wrapStrings[] = {$/;"	v	file:
wrapper	unix/tkUnixEmbed.c	/^    Window wrapper;		\/* X's window id for the wrapper window for$/;"	m	struct:Container	file:
wrapper	win/tkWinWm.c	/^    HWND wrapper;		\/* This is the decorative frame window created$/;"	m	struct:TkWmInfo	file:
wrapperPtr	unix/tkUnixWm.c	/^    TkWindow *wrapperPtr;	\/* Pointer to information about the wrapper.$/;"	m	struct:TkWmInfo	file:
writeProc	generic/tkImgGIF.c	/^    WriteBytesFunc *writeProc;$/;"	m	struct:__anon130	file:
x	generic/tk.h	/^    int x, y;			\/* Pointer x, y coordinates in event$/;"	m	struct:__anon9
x	generic/tkBusy.h	/^    int x, y;			\/* Position of the reference window *\/$/;"	m	struct:Busy
x	generic/tkCanvBmap.c	/^    double x, y;		\/* Coordinates of positioning point for$/;"	m	struct:BitmapItem	file:
x	generic/tkCanvImg.c	/^    double x, y;		\/* Coordinates of positioning point for$/;"	m	struct:ImageItem	file:
x	generic/tkCanvPs.c	/^    int x, y, width, height;	\/* Area to print, in canvas pixel$/;"	m	struct:TkPostscriptInfo	file:
x	generic/tkCanvText.c	/^    double x, y;		\/* Positioning point for text. *\/$/;"	m	struct:TextItem	file:
x	generic/tkCanvWind.c	/^    double x, y;		\/* Coordinates of positioning point for$/;"	m	struct:WindowItem	file:
x	generic/tkFont.c	/^    int x, y;			\/* The origin of the first character in this$/;"	m	struct:LayoutChunk	file:
x	generic/tkGeometry.c	/^    int x, y;			\/* Desired position of slave relative to$/;"	m	struct:MaintainSlave	file:
x	generic/tkInt.h	/^    int x;			\/* Relative x coord of the caret. *\/$/;"	m	struct:TkCaret
x	generic/tkMenu.h	/^    int x;			\/* X-coordinate of leftmost pixel in entry. *\/$/;"	m	struct:TkMenuEntry
x	generic/tkPanedWindow.c	/^    int x, y;			\/* Coordinates of the widget. *\/$/;"	m	struct:Slave	file:
x	generic/tkPlace.c	/^    int x, y;			\/* X and Y pixel coordinates for tkwin. *\/$/;"	m	struct:Slave	file:
x	generic/tkSquare.c	/^    int x, y;$/;"	m	struct:__anon142	file:
x	generic/tkText.h	/^    int x;			\/* X position of chunk, in pixels. This$/;"	m	struct:TkTextDispChunk
x	generic/tkTextDisp.c	/^    int x;			\/* First x-coordinate that may be used for$/;"	m	struct:TextDInfo	file:
x	generic/ttk/ttkTheme.h	/^    int x;$/;"	m	struct:__anon73
x	macosx/tkMacOSXWm.h	/^	int x;			\/* numerator *\/$/;"	m	struct:TkWmInfo::__anon189
x	macosx/tkMacOSXWm.h	/^    int x, y;			\/* Desired X and Y coordinates for window.$/;"	m	struct:TkWmInfo
x	unix/tkUnixWm.c	/^	int x;			\/* numerator *\/$/;"	m	struct:TkWmInfo::__anon216	file:
x	unix/tkUnixWm.c	/^    int x, y;			\/* Desired X and Y coordinates for window.$/;"	m	struct:TkWmInfo	file:
x	win/tkWinWm.c	/^	int x;	\/* numerator *\/$/;"	m	struct:TkWmInfo::__anon237	file:
x	win/tkWinWm.c	/^    int x, y;			\/* Desired X and Y coordinates for window.$/;"	m	struct:TkWmInfo	file:
x	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon287
x	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon288
x	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon289
x	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon290
x	xlib/X11/Xlib.h	/^	int x, y;		\/* window location *\/$/;"	m	struct:__anon297
x	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon293
x	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon294
x	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon302
x	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon303
x	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon304
x	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon306
x	xlib/X11/Xlib.h	/^	short x, y;$/;"	m	struct:__anon284
x	xlib/X11/Xlib.h	/^    int x, y;			\/* location of window *\/$/;"	m	struct:__anon274
x	xlib/X11/Xlib.h	/^    int x, y;$/;"	m	struct:__anon276
x	xlib/X11/Xlib.h	/^    short x, y;$/;"	m	struct:__anon279
x	xlib/X11/Xlib.h	/^    short x, y;$/;"	m	struct:__anon280
x	xlib/X11/Xlib.h	/^    short x, y;$/;"	m	struct:__anon281
x	xlib/X11/Xutil.h	/^		int x;	\/* numerator *\/$/;"	m	struct:__anon257::__anon258
x	xlib/X11/Xutil.h	/^	int x, y;		\/* obsolete for new window mgrs, but clients *\/$/;"	m	struct:__anon257
x1	generic/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item
x1	xlib/X11/Xlib.h	/^    short x1, y1, x2, y2;$/;"	m	struct:__anon278
x2	generic/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item
x2	generic/tkCanvPs.c	/^    int x2, y2;			\/* x+width and y+height. *\/$/;"	m	struct:TkPostscriptInfo	file:
x2	xlib/X11/Xlib.h	/^    short x1, y1, x2, y2;$/;"	m	struct:__anon278
xAllocColor	generic/tkIntXlibDecls.h	/^    Status (*xAllocColor) (Display *d, Colormap c, XColor *xp); \/* 12 *\/$/;"	m	struct:TkIntXlibStubs
xAllocColor	generic/tkIntXlibDecls.h	/^    Status (*xAllocColor) (Display *d, Colormap c, XColor *xp); \/* 18 *\/$/;"	m	struct:TkIntXlibStubs
xBell	generic/tkIntXlibDecls.h	/^    int (*xBell) (Display *d, int i); \/* 13 *\/$/;"	m	struct:TkIntXlibStubs
xBell	generic/tkIntXlibDecls.h	/^    int (*xBell) (Display *d, int i); \/* 19 *\/$/;"	m	struct:TkIntXlibStubs
xBitReverseTable	xlib/xbytes.h	/^static unsigned char xBitReverseTable[256] = {$/;"	v
xChangeGC	generic/tkIntXlibDecls.h	/^    int (*xChangeGC) (Display *d, GC gc, unsigned long mask, XGCValues *values); \/* 67 *\/$/;"	m	struct:TkIntXlibStubs
xChangeGC	generic/tkIntXlibDecls.h	/^    int (*xChangeGC) (Display *d, GC gc, unsigned long mask, XGCValues *values); \/* 91 *\/$/;"	m	struct:TkIntXlibStubs
xChangeProperty	generic/tkIntXlibDecls.h	/^    int (*xChangeProperty) (Display *d, Window w, Atom a1, Atom a2, int i1, int i2, _Xconst unsigned char *c, int i3); \/* 20 *\/$/;"	m	struct:TkIntXlibStubs
xChangeProperty	generic/tkIntXlibDecls.h	/^    void (*xChangeProperty) (Display *d, Window w, Atom a1, Atom a2, int i1, int i2, _Xconst unsigned char *c, int i3); \/* 14 *\/$/;"	m	struct:TkIntXlibStubs
xChangeWindowAttributes	generic/tkIntXlibDecls.h	/^    int (*xChangeWindowAttributes) (Display *d, Window w, unsigned long ul, XSetWindowAttributes *x); \/* 21 *\/$/;"	m	struct:TkIntXlibStubs
xChangeWindowAttributes	generic/tkIntXlibDecls.h	/^    void (*xChangeWindowAttributes) (Display *d, Window w, unsigned long ul, XSetWindowAttributes *x); \/* 15 *\/$/;"	m	struct:TkIntXlibStubs
xClearWindow	generic/tkIntXlibDecls.h	/^    int (*xClearWindow) (Display *d, Window w); \/* 22 *\/$/;"	m	struct:TkIntXlibStubs
xClearWindow	generic/tkIntXlibDecls.h	/^    void (*xClearWindow) (Display *d, Window w); \/* 84 *\/$/;"	m	struct:TkIntXlibStubs
xColors	xlib/xcolors.c	/^static const elem xColors[] = {$/;"	v	file:
xConfigureWindow	generic/tkIntXlibDecls.h	/^    int (*xConfigureWindow) (Display *d, Window w, unsigned int i, XWindowChanges *x); \/* 23 *\/$/;"	m	struct:TkIntXlibStubs
xConfigureWindow	generic/tkIntXlibDecls.h	/^    void (*xConfigureWindow) (Display *d, Window w, unsigned int i, XWindowChanges *x); \/* 16 *\/$/;"	m	struct:TkIntXlibStubs
xCopyArea	generic/tkIntXlibDecls.h	/^    int (*xCopyArea) (Display *d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 24 *\/$/;"	m	struct:TkIntXlibStubs
xCopyArea	generic/tkIntXlibDecls.h	/^    void (*xCopyArea) (Display *d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 17 *\/$/;"	m	struct:TkIntXlibStubs
xCopyPlane	generic/tkIntXlibDecls.h	/^    int (*xCopyPlane) (Display *d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4, unsigned long ul); \/* 25 *\/$/;"	m	struct:TkIntXlibStubs
xCopyPlane	generic/tkIntXlibDecls.h	/^    void (*xCopyPlane) (Display *d, Drawable dr1, Drawable dr2, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4, unsigned long ul); \/* 18 *\/$/;"	m	struct:TkIntXlibStubs
xCreateBitmapFromData	generic/tkIntXlibDecls.h	/^    Pixmap (*xCreateBitmapFromData) (Display *display, Drawable d, _Xconst char *data, unsigned int width, unsigned int height); \/* 19 *\/$/;"	m	struct:TkIntXlibStubs
xCreateBitmapFromData	generic/tkIntXlibDecls.h	/^    Pixmap (*xCreateBitmapFromData) (Display *display, Drawable d, _Xconst char *data, unsigned int width, unsigned int height); \/* 26 *\/$/;"	m	struct:TkIntXlibStubs
xCreateColormap	generic/tkIntXlibDecls.h	/^    Colormap (*xCreateColormap) (Display *d, Window w, Visual *v, int i); \/* 6 *\/$/;"	m	struct:TkIntXlibStubs
xCreateGC	generic/tkIntXlibDecls.h	/^    GC (*xCreateGC) (Display *display, Drawable d, unsigned long valuemask, XGCValues *values); \/* 59 *\/$/;"	m	struct:TkIntXlibStubs
xCreateGC	generic/tkIntXlibDecls.h	/^    GC (*xCreateGC) (Display *display, Drawable d, unsigned long valuemask, XGCValues *values); \/* 83 *\/$/;"	m	struct:TkIntXlibStubs
xCreateGlyphCursor	generic/tkIntXlibDecls.h	/^    Cursor (*xCreateGlyphCursor) (Display *d, Font f1, Font f2, unsigned int ui1, unsigned int ui2, XColor _Xconst *x1, XColor _Xconst *x2); \/* 8 *\/$/;"	m	struct:TkIntXlibStubs
xCreateIC	generic/tkIntXlibDecls.h	/^    XIC (*xCreateIC) (XIM xim, ...); \/* 100 *\/$/;"	m	struct:TkIntXlibStubs
xCreateIC	generic/tkIntXlibDecls.h	/^    XIC (*xCreateIC) (void); \/* 76 *\/$/;"	m	struct:TkIntXlibStubs
xCreateImage	generic/tkIntXlibDecls.h	/^    XImage * (*xCreateImage) (Display *d, Visual *v, unsigned int ui1, int i1, int i2, char *cp, unsigned int ui2, unsigned int ui3, int i3, int i4); \/* 2 *\/$/;"	m	struct:TkIntXlibStubs
xCreatePixmapCursor	generic/tkIntXlibDecls.h	/^    Cursor (*xCreatePixmapCursor) (Display *d, Pixmap p1, Pixmap p2, XColor *x1, XColor *x2, unsigned int ui1, unsigned int ui2); \/* 7 *\/$/;"	m	struct:TkIntXlibStubs
xDefineCursor	generic/tkIntXlibDecls.h	/^    int (*xDefineCursor) (Display *d, Window w, Cursor c); \/* 20 *\/$/;"	m	struct:TkIntXlibStubs
xDefineCursor	generic/tkIntXlibDecls.h	/^    int (*xDefineCursor) (Display *d, Window w, Cursor c); \/* 27 *\/$/;"	m	struct:TkIntXlibStubs
xDeleteProperty	generic/tkIntXlibDecls.h	/^    int (*xDeleteProperty) (Display *d, Window w, Atom a); \/* 28 *\/$/;"	m	struct:TkIntXlibStubs
xDestroyIC	generic/tkIntXlibDecls.h	/^    void (*xDestroyIC) (XIC x); \/* 77 *\/$/;"	m	struct:TkIntXlibStubs
xDestroyWindow	generic/tkIntXlibDecls.h	/^    int (*xDestroyWindow) (Display *d, Window w); \/* 29 *\/$/;"	m	struct:TkIntXlibStubs
xDestroyWindow	generic/tkIntXlibDecls.h	/^    void (*xDestroyWindow) (Display *d, Window w); \/* 21 *\/$/;"	m	struct:TkIntXlibStubs
xDrawArc	generic/tkIntXlibDecls.h	/^    int (*xDrawArc) (Display *d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 30 *\/$/;"	m	struct:TkIntXlibStubs
xDrawArc	generic/tkIntXlibDecls.h	/^    void (*xDrawArc) (Display *d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 22 *\/$/;"	m	struct:TkIntXlibStubs
xDrawLine	generic/tkIntXlibDecls.h	/^    int (*xDrawLine) (Display *d, Drawable dr, GC g, int x1, int y1, int x2, int y2); \/* 104 *\/$/;"	m	struct:TkIntXlibStubs
xDrawLine	generic/tkIntXlibDecls.h	/^    int (*xDrawLine) (Display *d, Drawable dr, GC g, int x1, int y1, int x2, int y2); \/* 82 *\/$/;"	m	struct:TkIntXlibStubs
xDrawLines	generic/tkIntXlibDecls.h	/^    int (*xDrawLines) (Display *d, Drawable dr, GC g, XPoint *x, int i1, int i2); \/* 23 *\/$/;"	m	struct:TkIntXlibStubs
xDrawLines	generic/tkIntXlibDecls.h	/^    int (*xDrawLines) (Display *d, Drawable dr, GC g, XPoint *x, int i1, int i2); \/* 31 *\/$/;"	m	struct:TkIntXlibStubs
xDrawPoint	generic/tkIntXlibDecls.h	/^    void (*xDrawPoint) (Display *display, Drawable d, GC gc, int x, int y); \/* 85 *\/$/;"	m	struct:TkIntXlibStubs
xDrawPoints	generic/tkIntXlibDecls.h	/^    void (*xDrawPoints) (Display *display, Drawable d, GC gc, XPoint *points, int npoints, int mode); \/* 86 *\/$/;"	m	struct:TkIntXlibStubs
xDrawRectangle	generic/tkIntXlibDecls.h	/^    int (*xDrawRectangle) (Display *d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 32 *\/$/;"	m	struct:TkIntXlibStubs
xDrawRectangle	generic/tkIntXlibDecls.h	/^    void (*xDrawRectangle) (Display *d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 24 *\/$/;"	m	struct:TkIntXlibStubs
xDrawSegments	generic/tkIntXlibDecls.h	/^    void (*xDrawSegments) (Display *display, Drawable d, GC gc, XSegment *segments, int nsegments); \/* 80 *\/$/;"	m	struct:TkIntXlibStubs
xFillArc	generic/tkIntXlibDecls.h	/^    int (*xFillArc) (Display *d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 33 *\/$/;"	m	struct:TkIntXlibStubs
xFillArc	generic/tkIntXlibDecls.h	/^    void (*xFillArc) (Display *d, Drawable dr, GC g, int i1, int i2, unsigned int ui1, unsigned int ui2, int i3, int i4); \/* 25 *\/$/;"	m	struct:TkIntXlibStubs
xFillPolygon	generic/tkIntXlibDecls.h	/^    int (*xFillPolygon) (Display *d, Drawable dr, GC g, XPoint *x, int i1, int i2, int i3); \/* 34 *\/$/;"	m	struct:TkIntXlibStubs
xFillPolygon	generic/tkIntXlibDecls.h	/^    void (*xFillPolygon) (Display *d, Drawable dr, GC g, XPoint *x, int i1, int i2, int i3); \/* 26 *\/$/;"	m	struct:TkIntXlibStubs
xFillRectangle	generic/tkIntXlibDecls.h	/^    int (*xFillRectangle) (Display *display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height); \/* 106 *\/$/;"	m	struct:TkIntXlibStubs
xFillRectangle	generic/tkIntXlibDecls.h	/^    int (*xFillRectangle) (Display *display, Drawable d, GC gc, int x, int y, unsigned int width, unsigned int height); \/* 83 *\/$/;"	m	struct:TkIntXlibStubs
xFillRectangles	generic/tkIntXlibDecls.h	/^    int (*xFillRectangles) (Display *d, Drawable dr, GC g, XRectangle *x, int i); \/* 27 *\/$/;"	m	struct:TkIntXlibStubs
xFillRectangles	generic/tkIntXlibDecls.h	/^    int (*xFillRectangles) (Display *d, Drawable dr, GC g, XRectangle *x, int i); \/* 35 *\/$/;"	m	struct:TkIntXlibStubs
xFilterEvent	generic/tkIntXlibDecls.h	/^    Bool (*xFilterEvent) (XEvent *x, Window w); \/* 78 *\/$/;"	m	struct:TkIntXlibStubs
xFlush	generic/tkIntXlibDecls.h	/^    int (*xFlush) (Display *display); \/* 107 *\/$/;"	m	struct:TkIntXlibStubs
xForceScreenSaver	generic/tkIntXlibDecls.h	/^    int (*xForceScreenSaver) (Display *d, int i); \/* 36 *\/$/;"	m	struct:TkIntXlibStubs
xForceScreenSaver	generic/tkIntXlibDecls.h	/^    void (*xForceScreenSaver) (Display *display, int mode); \/* 81 *\/$/;"	m	struct:TkIntXlibStubs
xFree	generic/tkIntXlibDecls.h	/^    int (*xFree) (void *data); \/* 110 *\/$/;"	m	struct:TkIntXlibStubs
xFreeColormap	generic/tkIntXlibDecls.h	/^    int (*xFreeColormap) (Display *d, Colormap c); \/* 28 *\/$/;"	m	struct:TkIntXlibStubs
xFreeColormap	generic/tkIntXlibDecls.h	/^    int (*xFreeColormap) (Display *d, Colormap c); \/* 37 *\/$/;"	m	struct:TkIntXlibStubs
xFreeColors	generic/tkIntXlibDecls.h	/^    int (*xFreeColors) (Display *d, Colormap c, unsigned long *ulp, int i, unsigned long ul); \/* 29 *\/$/;"	m	struct:TkIntXlibStubs
xFreeColors	generic/tkIntXlibDecls.h	/^    int (*xFreeColors) (Display *d, Colormap c, unsigned long *ulp, int i, unsigned long ul); \/* 38 *\/$/;"	m	struct:TkIntXlibStubs
xFreeCursor	generic/tkIntXlibDecls.h	/^    int (*xFreeCursor) (Display *d, Cursor c); \/* 39 *\/$/;"	m	struct:TkIntXlibStubs
xFreeGC	generic/tkIntXlibDecls.h	/^    int (*xFreeGC) (Display *display, GC gc); \/* 60 *\/$/;"	m	struct:TkIntXlibStubs
xFreeGC	generic/tkIntXlibDecls.h	/^    int (*xFreeGC) (Display *display, GC gc); \/* 84 *\/$/;"	m	struct:TkIntXlibStubs
xFreeModifiermap	generic/tkIntXlibDecls.h	/^    int (*xFreeModifiermap) (XModifierKeymap *x); \/* 30 *\/$/;"	m	struct:TkIntXlibStubs
xFreeModifiermap	generic/tkIntXlibDecls.h	/^    int (*xFreeModifiermap) (XModifierKeymap *x); \/* 40 *\/$/;"	m	struct:TkIntXlibStubs
xGContextFromGC	generic/tkIntXlibDecls.h	/^    GContext (*xGContextFromGC) (GC g); \/* 7 *\/$/;"	m	struct:TkIntXlibStubs
xGContextFromGC	generic/tkIntXlibDecls.h	/^    GContext (*xGContextFromGC) (GC g); \/* 9 *\/$/;"	m	struct:TkIntXlibStubs
xGetAtomName	generic/tkIntXlibDecls.h	/^    char * (*xGetAtomName) (Display *d, Atom a); \/* 4 *\/$/;"	m	struct:TkIntXlibStubs
xGetGeometry	generic/tkIntXlibDecls.h	/^    Status (*xGetGeometry) (Display *d, Drawable dr, Window *w, int *i1, int *i2, unsigned int *ui1, unsigned int *ui2, unsigned int *ui3, unsigned int *ui4); \/* 31 *\/$/;"	m	struct:TkIntXlibStubs
xGetGeometry	generic/tkIntXlibDecls.h	/^    Status (*xGetGeometry) (Display *d, Drawable dr, Window *w, int *i1, int *i2, unsigned int *ui1, unsigned int *ui2, unsigned int *ui3, unsigned int *ui4); \/* 41 *\/$/;"	m	struct:TkIntXlibStubs
xGetImage	generic/tkIntXlibDecls.h	/^    XImage * (*xGetImage) (Display *d, Drawable dr, int i1, int i2, unsigned int ui1, unsigned int ui2, unsigned long ul, int i3); \/* 3 *\/$/;"	m	struct:TkIntXlibStubs
xGetInputFocus	generic/tkIntXlibDecls.h	/^    int (*xGetInputFocus) (Display *d, Window *w, int *i); \/* 42 *\/$/;"	m	struct:TkIntXlibStubs
xGetModifierMapping	generic/tkIntXlibDecls.h	/^    XModifierKeymap * (*xGetModifierMapping) (Display *d); \/* 1 *\/$/;"	m	struct:TkIntXlibStubs
xGetVisualInfo	generic/tkIntXlibDecls.h	/^    XVisualInfo * (*xGetVisualInfo) (Display *display, long vinfo_mask, XVisualInfo *vinfo_template, int *nitems_return); \/* 101 *\/$/;"	m	struct:TkIntXlibStubs
xGetVisualInfo	generic/tkIntXlibDecls.h	/^    XVisualInfo * (*xGetVisualInfo) (Display *display, long vinfo_mask, XVisualInfo *vinfo_template, int *nitems_return); \/* 77 *\/$/;"	m	struct:TkIntXlibStubs
xGetWMColormapWindows	generic/tkIntXlibDecls.h	/^    Status (*xGetWMColormapWindows) (Display *d, Window w, Window **wpp, int *ip); \/* 17 *\/$/;"	m	struct:TkIntXlibStubs
xGetWindowAttributes	generic/tkIntXlibDecls.h	/^    Status (*xGetWindowAttributes) (Display *d, Window w, XWindowAttributes *x); \/* 44 *\/$/;"	m	struct:TkIntXlibStubs
xGetWindowProperty	generic/tkIntXlibDecls.h	/^    int (*xGetWindowProperty) (Display *d, Window w, Atom a1, long l1, long l2, Bool b, Atom a2, Atom *ap, int *ip, unsigned long *ulp1, unsigned long *ulp2, unsigned char **cpp); \/* 32 *\/$/;"	m	struct:TkIntXlibStubs
xGetWindowProperty	generic/tkIntXlibDecls.h	/^    int (*xGetWindowProperty) (Display *d, Window w, Atom a1, long l1, long l2, Bool b, Atom a2, Atom *ap, int *ip, unsigned long *ulp1, unsigned long *ulp2, unsigned char **cpp); \/* 43 *\/$/;"	m	struct:TkIntXlibStubs
xGrabKeyboard	generic/tkIntXlibDecls.h	/^    int (*xGrabKeyboard) (Display *d, Window w, Bool b, int i1, int i2, Time t); \/* 33 *\/$/;"	m	struct:TkIntXlibStubs
xGrabKeyboard	generic/tkIntXlibDecls.h	/^    int (*xGrabKeyboard) (Display *d, Window w, Bool b, int i1, int i2, Time t); \/* 45 *\/$/;"	m	struct:TkIntXlibStubs
xGrabPointer	generic/tkIntXlibDecls.h	/^    int (*xGrabPointer) (Display *d, Window w1, Bool b, unsigned int ui, int i1, int i2, Window w2, Cursor c, Time t); \/* 34 *\/$/;"	m	struct:TkIntXlibStubs
xGrabPointer	generic/tkIntXlibDecls.h	/^    int (*xGrabPointer) (Display *d, Window w1, Bool b, unsigned int ui, int i1, int i2, Window w2, Cursor c, Time t); \/* 46 *\/$/;"	m	struct:TkIntXlibStubs
xGrabServer	generic/tkIntXlibDecls.h	/^    int (*xGrabServer) (Display *display); \/* 108 *\/$/;"	m	struct:TkIntXlibStubs
xHot	generic/tkCursor.c	/^    int xHot, yHot;		\/* Location of cursor hot-spot. *\/$/;"	m	struct:__anon1	file:
xIconifyWindow	generic/tkIntXlibDecls.h	/^    Status (*xIconifyWindow) (Display *d, Window w, int i); \/* 15 *\/$/;"	m	struct:TkIntXlibStubs
xInParent	macosx/tkMacOSXWm.h	/^    int xInParent, yInParent;	\/* Offset of window within reparent, measured$/;"	m	struct:TkWmInfo
xInParent	unix/tkUnixWm.c	/^    int xInParent, yInParent;	\/* Offset of wrapperPtr within reparent,$/;"	m	struct:TkWmInfo	file:
xInternAtom	generic/tkIntXlibDecls.h	/^    Atom (*xInternAtom) (Display *display, _Xconst char *atom_name, Bool only_if_exists); \/* 61 *\/$/;"	m	struct:TkIntXlibStubs
xInternAtom	generic/tkIntXlibDecls.h	/^    Atom (*xInternAtom) (Display *display, _Xconst char *atom_name, Bool only_if_exists); \/* 85 *\/$/;"	m	struct:TkIntXlibStubs
xKeycodeToKeysym	generic/tkIntXlibDecls.h	/^    KeySym (*xKeycodeToKeysym) (Display *d, KeyCode k, int i); \/* 8 *\/$/;"	m	struct:TkIntXlibStubs
xKeycodeToKeysym	generic/tkIntXlibDecls.h	/^    KeySym (*xKeycodeToKeysym) (Display *d, unsigned int k, int i); \/* 11 *\/$/;"	m	struct:TkIntXlibStubs
xKeysymToKeycode	generic/tkIntXlibDecls.h	/^    KeyCode (*xKeysymToKeycode) (Display *d, KeySym k); \/* 35 *\/$/;"	m	struct:TkIntXlibStubs
xKeysymToKeycode	generic/tkIntXlibDecls.h	/^    KeyCode (*xKeysymToKeycode) (Display *d, KeySym k); \/* 47 *\/$/;"	m	struct:TkIntXlibStubs
xKeysymToString	generic/tkIntXlibDecls.h	/^    char * (*xKeysymToString) (KeySym k); \/* 5 *\/$/;"	m	struct:TkIntXlibStubs
xListHosts	generic/tkIntXlibDecls.h	/^    XHostAddress * (*xListHosts) (Display *d, int *i, Bool *b); \/* 10 *\/$/;"	m	struct:TkIntXlibStubs
xLookupColor	generic/tkIntXlibDecls.h	/^    Status (*xLookupColor) (Display *d, Colormap c1, _Xconst char *c2, XColor *x1, XColor *x2); \/* 48 *\/$/;"	m	struct:TkIntXlibStubs
xMapWindow	generic/tkIntXlibDecls.h	/^    int (*xMapWindow) (Display *d, Window w); \/* 49 *\/$/;"	m	struct:TkIntXlibStubs
xMapWindow	generic/tkIntXlibDecls.h	/^    void (*xMapWindow) (Display *d, Window w); \/* 36 *\/$/;"	m	struct:TkIntXlibStubs
xMoveResizeWindow	generic/tkIntXlibDecls.h	/^    int (*xMoveResizeWindow) (Display *d, Window w, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 50 *\/$/;"	m	struct:TkIntXlibStubs
xMoveResizeWindow	generic/tkIntXlibDecls.h	/^    void (*xMoveResizeWindow) (Display *d, Window w, int i1, int i2, unsigned int ui1, unsigned int ui2); \/* 37 *\/$/;"	m	struct:TkIntXlibStubs
xMoveWindow	generic/tkIntXlibDecls.h	/^    int (*xMoveWindow) (Display *d, Window w, int i1, int i2); \/* 51 *\/$/;"	m	struct:TkIntXlibStubs
xMoveWindow	generic/tkIntXlibDecls.h	/^    void (*xMoveWindow) (Display *d, Window w, int i1, int i2); \/* 38 *\/$/;"	m	struct:TkIntXlibStubs
xNextEvent	generic/tkIntXlibDecls.h	/^    int (*xNextEvent) (Display *d, XEvent *x); \/* 52 *\/$/;"	m	struct:TkIntXlibStubs
xNoOp	generic/tkIntXlibDecls.h	/^    int (*xNoOp) (Display *display); \/* 111 *\/$/;"	m	struct:TkIntXlibStubs
xOff	macosx/tkMacOSXInt.h	/^    int xOff;			\/* X offset from toplevel window *\/$/;"	m	struct:TkWindowPrivate
xOffset	generic/tkListbox.c	/^    int xOffset;		\/* The left edge of each string in the listbox$/;"	m	struct:__anon149	file:
xOrigin	generic/tkCanvas.h	/^    int xOrigin, yOrigin;	\/* Canvas coordinates corresponding to$/;"	m	struct:TkCanvas
xParseColor	generic/tkIntXlibDecls.h	/^    Status (*xParseColor) (Display *display, Colormap map, _Xconst char *spec, XColor *colorPtr); \/* 58 *\/$/;"	m	struct:TkIntXlibStubs
xParseColor	generic/tkIntXlibDecls.h	/^    Status (*xParseColor) (Display *display, Colormap map, _Xconst char *spec, XColor *colorPtr); \/* 82 *\/$/;"	m	struct:TkIntXlibStubs
xPtr	generic/tkPlace.c	/^    Tcl_Obj *xPtr, *yPtr;	\/* Tcl_Obj rep's of x, y coords, to keep pixel$/;"	m	struct:Slave	file:
xPtr	generic/tkSquare.c	/^    Tcl_Obj *xPtr, *yPtr;	\/* Position of square's upper-left corner$/;"	m	struct:__anon142	file:
xPutBackEvent	generic/tkIntXlibDecls.h	/^    int (*xPutBackEvent) (Display *d, XEvent *x); \/* 53 *\/$/;"	m	struct:TkIntXlibStubs
xQueryColor	generic/tkIntXlibDecls.h	/^    void (*xQueryColor) (Display *display, Colormap colormap, XColor *def_in_out); \/* 88 *\/$/;"	m	struct:TkIntXlibStubs
xQueryColors	generic/tkIntXlibDecls.h	/^    int (*xQueryColors) (Display *d, Colormap c, XColor *x, int i); \/* 54 *\/$/;"	m	struct:TkIntXlibStubs
xQueryColors	generic/tkIntXlibDecls.h	/^    void (*xQueryColors) (Display *display, Colormap colormap, XColor *defs_in_out, int ncolors); \/* 89 *\/$/;"	m	struct:TkIntXlibStubs
xQueryPointer	generic/tkIntXlibDecls.h	/^    Bool (*xQueryPointer) (Display *d, Window w1, Window *w2, Window *w3, int *i1, int *i2, int *i3, int *i4, unsigned int *ui); \/* 39 *\/$/;"	m	struct:TkIntXlibStubs
xQueryPointer	generic/tkIntXlibDecls.h	/^    Bool (*xQueryPointer) (Display *d, Window w1, Window *w2, Window *w3, int *i1, int *i2, int *i3, int *i4, unsigned int *ui); \/* 55 *\/$/;"	m	struct:TkIntXlibStubs
xQueryTree	generic/tkIntXlibDecls.h	/^    Status (*xQueryTree) (Display *d, Window w1, Window *w2, Window *w3, Window **w4, unsigned int *ui); \/* 56 *\/$/;"	m	struct:TkIntXlibStubs
xQueryTree	generic/tkIntXlibDecls.h	/^    Status (*xQueryTree) (Display *d, Window w1, Window *w2, Window *w3, Window **w4, unsigned int *ui); \/* 90 *\/$/;"	m	struct:TkIntXlibStubs
xRaiseWindow	generic/tkIntXlibDecls.h	/^    int (*xRaiseWindow) (Display *d, Window w); \/* 57 *\/$/;"	m	struct:TkIntXlibStubs
xRaiseWindow	generic/tkIntXlibDecls.h	/^    void (*xRaiseWindow) (Display *d, Window w); \/* 40 *\/$/;"	m	struct:TkIntXlibStubs
xRefreshKeyboardMapping	generic/tkIntXlibDecls.h	/^    int (*xRefreshKeyboardMapping) (XMappingEvent *x); \/* 58 *\/$/;"	m	struct:TkIntXlibStubs
xRefreshKeyboardMapping	generic/tkIntXlibDecls.h	/^    void (*xRefreshKeyboardMapping) (XMappingEvent *x); \/* 41 *\/$/;"	m	struct:TkIntXlibStubs
xResizeWindow	generic/tkIntXlibDecls.h	/^    int (*xResizeWindow) (Display *d, Window w, unsigned int ui1, unsigned int ui2); \/* 59 *\/$/;"	m	struct:TkIntXlibStubs
xResizeWindow	generic/tkIntXlibDecls.h	/^    void (*xResizeWindow) (Display *d, Window w, unsigned int ui1, unsigned int ui2); \/* 42 *\/$/;"	m	struct:TkIntXlibStubs
xRootWindow	generic/tkIntXlibDecls.h	/^    Window (*xRootWindow) (Display *d, int i); \/* 10 *\/$/;"	m	struct:TkIntXlibStubs
xRootWindow	generic/tkIntXlibDecls.h	/^    Window (*xRootWindow) (Display *d, int i); \/* 13 *\/$/;"	m	struct:TkIntXlibStubs
xScrollCmd	generic/tkCanvas.h	/^    char *xScrollCmd;		\/* Command prefix for communicating with$/;"	m	struct:TkCanvas
xScrollCmd	generic/tkListbox.c	/^    char *xScrollCmd;		\/* Command prefix for communicating with$/;"	m	struct:__anon149	file:
xScrollCmd	generic/tkText.h	/^    char *xScrollCmd;		\/* Prefix of command to issue to update$/;"	m	struct:TkText
xScrollFirst	generic/tkTextDisp.c	/^    double xScrollFirst, xScrollLast;$/;"	m	struct:TextDInfo	file:
xScrollIncrement	generic/tkCanvas.h	/^    int xScrollIncrement;	\/* If >0, defines a grid for horizontal$/;"	m	struct:TkCanvas
xScrollLast	generic/tkTextDisp.c	/^    double xScrollFirst, xScrollLast;$/;"	m	struct:TextDInfo	file:
xScrollUnit	generic/tkListbox.c	/^    int xScrollUnit;		\/* Number of pixels in one "unit" for$/;"	m	struct:__anon149	file:
xSelectInput	generic/tkIntXlibDecls.h	/^    int (*xSelectInput) (Display *d, Window w, long l); \/* 60 *\/$/;"	m	struct:TkIntXlibStubs
xSelectInput	generic/tkIntXlibDecls.h	/^    void (*xSelectInput) (Display *d, Window w, long l); \/* 43 *\/$/;"	m	struct:TkIntXlibStubs
xSendEvent	generic/tkIntXlibDecls.h	/^    Status (*xSendEvent) (Display *d, Window w, Bool b, long l, XEvent *x); \/* 44 *\/$/;"	m	struct:TkIntXlibStubs
xSendEvent	generic/tkIntXlibDecls.h	/^    Status (*xSendEvent) (Display *d, Window w, Bool b, long l, XEvent *x); \/* 61 *\/$/;"	m	struct:TkIntXlibStubs
xSetArcMode	generic/tkIntXlibDecls.h	/^    int (*xSetArcMode) (Display *display, GC gc, int arc_mode); \/* 69 *\/$/;"	m	struct:TkIntXlibStubs
xSetArcMode	generic/tkIntXlibDecls.h	/^    int (*xSetArcMode) (Display *display, GC gc, int arc_mode); \/* 93 *\/$/;"	m	struct:TkIntXlibStubs
xSetBackground	generic/tkIntXlibDecls.h	/^    int (*xSetBackground) (Display *display, GC gc, unsigned long foreground); \/* 62 *\/$/;"	m	struct:TkIntXlibStubs
xSetBackground	generic/tkIntXlibDecls.h	/^    int (*xSetBackground) (Display *display, GC gc, unsigned long foreground); \/* 86 *\/$/;"	m	struct:TkIntXlibStubs
xSetClipMask	generic/tkIntXlibDecls.h	/^    int (*xSetClipMask) (Display *display, GC gc, Pixmap pixmap); \/* 64 *\/$/;"	m	struct:TkIntXlibStubs
xSetClipMask	generic/tkIntXlibDecls.h	/^    int (*xSetClipMask) (Display *display, GC gc, Pixmap pixmap); \/* 88 *\/$/;"	m	struct:TkIntXlibStubs
xSetClipOrigin	generic/tkIntXlibDecls.h	/^    int (*xSetClipOrigin) (Display *display, GC gc, int clip_x_origin, int clip_y_origin); \/* 65 *\/$/;"	m	struct:TkIntXlibStubs
xSetClipOrigin	generic/tkIntXlibDecls.h	/^    int (*xSetClipOrigin) (Display *display, GC gc, int clip_x_origin, int clip_y_origin); \/* 89 *\/$/;"	m	struct:TkIntXlibStubs
xSetCommand	generic/tkIntXlibDecls.h	/^    int (*xSetCommand) (Display *d, Window w, char **c, int i); \/* 62 *\/$/;"	m	struct:TkIntXlibStubs
xSetDashes	generic/tkIntXlibDecls.h	/^    int (*xSetDashes) (Display *display, GC gc, int dash_offset, _Xconst char *dash_list, int n); \/* 0 *\/$/;"	m	struct:TkIntXlibStubs
xSetErrorHandler	generic/tkIntXlibDecls.h	/^    XErrorHandler (*xSetErrorHandler) (XErrorHandler x); \/* 11 *\/$/;"	m	struct:TkIntXlibStubs
xSetErrorHandler	generic/tkIntXlibDecls.h	/^    XErrorHandler (*xSetErrorHandler) (XErrorHandler x); \/* 14 *\/$/;"	m	struct:TkIntXlibStubs
xSetFillRule	generic/tkIntXlibDecls.h	/^    int (*xSetFillRule) (Display *display, GC gc, int fill_rule); \/* 71 *\/$/;"	m	struct:TkIntXlibStubs
xSetFillRule	generic/tkIntXlibDecls.h	/^    int (*xSetFillRule) (Display *display, GC gc, int fill_rule); \/* 95 *\/$/;"	m	struct:TkIntXlibStubs
xSetFillStyle	generic/tkIntXlibDecls.h	/^    int (*xSetFillStyle) (Display *display, GC gc, int fill_style); \/* 72 *\/$/;"	m	struct:TkIntXlibStubs
xSetFillStyle	generic/tkIntXlibDecls.h	/^    int (*xSetFillStyle) (Display *display, GC gc, int fill_style); \/* 96 *\/$/;"	m	struct:TkIntXlibStubs
xSetFont	generic/tkIntXlibDecls.h	/^    int (*xSetFont) (Display *display, GC gc, Font font); \/* 68 *\/$/;"	m	struct:TkIntXlibStubs
xSetFont	generic/tkIntXlibDecls.h	/^    int (*xSetFont) (Display *display, GC gc, Font font); \/* 92 *\/$/;"	m	struct:TkIntXlibStubs
xSetForeground	generic/tkIntXlibDecls.h	/^    int (*xSetForeground) (Display *display, GC gc, unsigned long foreground); \/* 63 *\/$/;"	m	struct:TkIntXlibStubs
xSetForeground	generic/tkIntXlibDecls.h	/^    int (*xSetForeground) (Display *display, GC gc, unsigned long foreground); \/* 87 *\/$/;"	m	struct:TkIntXlibStubs
xSetFunction	generic/tkIntXlibDecls.h	/^    int (*xSetFunction) (Display *display, GC gc, int function); \/* 73 *\/$/;"	m	struct:TkIntXlibStubs
xSetFunction	generic/tkIntXlibDecls.h	/^    int (*xSetFunction) (Display *display, GC gc, int function); \/* 97 *\/$/;"	m	struct:TkIntXlibStubs
xSetIconName	generic/tkIntXlibDecls.h	/^    int (*xSetIconName) (Display *d, Window w, _Xconst char *c); \/* 63 *\/$/;"	m	struct:TkIntXlibStubs
xSetIconName	generic/tkIntXlibDecls.h	/^    void (*xSetIconName) (Display *d, Window w, _Xconst char *c); \/* 45 *\/$/;"	m	struct:TkIntXlibStubs
xSetInputFocus	generic/tkIntXlibDecls.h	/^    int (*xSetInputFocus) (Display *d, Window w, int i, Time t); \/* 64 *\/$/;"	m	struct:TkIntXlibStubs
xSetInputFocus	generic/tkIntXlibDecls.h	/^    void (*xSetInputFocus) (Display *d, Window w, int i, Time t); \/* 46 *\/$/;"	m	struct:TkIntXlibStubs
xSetLineAttributes	generic/tkIntXlibDecls.h	/^    int (*xSetLineAttributes) (Display *display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style); \/* 74 *\/$/;"	m	struct:TkIntXlibStubs
xSetLineAttributes	generic/tkIntXlibDecls.h	/^    int (*xSetLineAttributes) (Display *display, GC gc, unsigned int line_width, int line_style, int cap_style, int join_style); \/* 98 *\/$/;"	m	struct:TkIntXlibStubs
xSetSelectionOwner	generic/tkIntXlibDecls.h	/^    int (*xSetSelectionOwner) (Display *d, Atom a, Window w, Time t); \/* 47 *\/$/;"	m	struct:TkIntXlibStubs
xSetSelectionOwner	generic/tkIntXlibDecls.h	/^    int (*xSetSelectionOwner) (Display *d, Atom a, Window w, Time t); \/* 65 *\/$/;"	m	struct:TkIntXlibStubs
xSetStipple	generic/tkIntXlibDecls.h	/^    int (*xSetStipple) (Display *display, GC gc, Pixmap stipple); \/* 70 *\/$/;"	m	struct:TkIntXlibStubs
xSetStipple	generic/tkIntXlibDecls.h	/^    int (*xSetStipple) (Display *display, GC gc, Pixmap stipple); \/* 94 *\/$/;"	m	struct:TkIntXlibStubs
xSetTSOrigin	generic/tkIntXlibDecls.h	/^    int (*xSetTSOrigin) (Display *display, GC gc, int ts_x_origin, int ts_y_origin); \/* 66 *\/$/;"	m	struct:TkIntXlibStubs
xSetTSOrigin	generic/tkIntXlibDecls.h	/^    int (*xSetTSOrigin) (Display *display, GC gc, int ts_x_origin, int ts_y_origin); \/* 90 *\/$/;"	m	struct:TkIntXlibStubs
xSetWMClientMachine	generic/tkIntXlibDecls.h	/^    void (*xSetWMClientMachine) (Display *display, Window w, XTextProperty *text_prop); \/* 102 *\/$/;"	m	struct:TkIntXlibStubs
xSetWMClientMachine	generic/tkIntXlibDecls.h	/^    void (*xSetWMClientMachine) (Display *display, Window w, XTextProperty *text_prop); \/* 78 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBackground	generic/tkIntXlibDecls.h	/^    int (*xSetWindowBackground) (Display *d, Window w, unsigned long ul); \/* 66 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBackground	generic/tkIntXlibDecls.h	/^    void (*xSetWindowBackground) (Display *d, Window w, unsigned long ul); \/* 48 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBackgroundPixmap	generic/tkIntXlibDecls.h	/^    int (*xSetWindowBackgroundPixmap) (Display *d, Window w, Pixmap p); \/* 67 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBackgroundPixmap	generic/tkIntXlibDecls.h	/^    void (*xSetWindowBackgroundPixmap) (Display *d, Window w, Pixmap p); \/* 49 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBorder	generic/tkIntXlibDecls.h	/^    int (*xSetWindowBorder) (Display *d, Window w, unsigned long ul); \/* 68 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBorder	generic/tkIntXlibDecls.h	/^    void (*xSetWindowBorder) (Display *d, Window w, unsigned long ul); \/* 50 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBorderPixmap	generic/tkIntXlibDecls.h	/^    int (*xSetWindowBorderPixmap) (Display *d, Window w, Pixmap p); \/* 69 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBorderPixmap	generic/tkIntXlibDecls.h	/^    void (*xSetWindowBorderPixmap) (Display *d, Window w, Pixmap p); \/* 51 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBorderWidth	generic/tkIntXlibDecls.h	/^    int (*xSetWindowBorderWidth) (Display *d, Window w, unsigned int ui); \/* 70 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowBorderWidth	generic/tkIntXlibDecls.h	/^    void (*xSetWindowBorderWidth) (Display *d, Window w, unsigned int ui); \/* 52 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowColormap	generic/tkIntXlibDecls.h	/^    int (*xSetWindowColormap) (Display *d, Window w, Colormap c); \/* 71 *\/$/;"	m	struct:TkIntXlibStubs
xSetWindowColormap	generic/tkIntXlibDecls.h	/^    void (*xSetWindowColormap) (Display *d, Window w, Colormap c); \/* 53 *\/$/;"	m	struct:TkIntXlibStubs
xStringListToTextProperty	generic/tkIntXlibDecls.h	/^    Status (*xStringListToTextProperty) (char **list, int count, XTextProperty *text_prop_return); \/* 103 *\/$/;"	m	struct:TkIntXlibStubs
xStringListToTextProperty	generic/tkIntXlibDecls.h	/^    Status (*xStringListToTextProperty) (char **list, int count, XTextProperty *text_prop_return); \/* 79 *\/$/;"	m	struct:TkIntXlibStubs
xStringToKeysym	generic/tkIntXlibDecls.h	/^    KeySym (*xStringToKeysym) (_Xconst char *c); \/* 12 *\/$/;"	m	struct:TkIntXlibStubs
xStringToKeysym	generic/tkIntXlibDecls.h	/^    KeySym (*xStringToKeysym) (_Xconst char *c); \/* 9 *\/$/;"	m	struct:TkIntXlibStubs
xSync	generic/tkIntXlibDecls.h	/^    int (*xSync) (Display *display, Bool discard); \/* 113 *\/$/;"	m	struct:TkIntXlibStubs
xSync	generic/tkIntXlibDecls.h	/^    int (*xSync) (Display *display, Bool flag); \/* 91 *\/$/;"	m	struct:TkIntXlibStubs
xSynchronize	generic/tkIntXlibDecls.h	/^    XAfterFunction (*xSynchronize) (Display *display, Bool onoff); \/* 112 *\/$/;"	m	struct:TkIntXlibStubs
xTranslateCoordinates	generic/tkIntXlibDecls.h	/^    Bool (*xTranslateCoordinates) (Display *d, Window w1, Window w2, int i1, int i2, int *i3, int *i4, Window *w3); \/* 72 *\/$/;"	m	struct:TkIntXlibStubs
xUngrabKeyboard	generic/tkIntXlibDecls.h	/^    int (*xUngrabKeyboard) (Display *d, Time t); \/* 73 *\/$/;"	m	struct:TkIntXlibStubs
xUngrabKeyboard	generic/tkIntXlibDecls.h	/^    void (*xUngrabKeyboard) (Display *d, Time t); \/* 54 *\/$/;"	m	struct:TkIntXlibStubs
xUngrabPointer	generic/tkIntXlibDecls.h	/^    int (*xUngrabPointer) (Display *d, Time t); \/* 55 *\/$/;"	m	struct:TkIntXlibStubs
xUngrabPointer	generic/tkIntXlibDecls.h	/^    int (*xUngrabPointer) (Display *d, Time t); \/* 74 *\/$/;"	m	struct:TkIntXlibStubs
xUngrabServer	generic/tkIntXlibDecls.h	/^    int (*xUngrabServer) (Display *display); \/* 109 *\/$/;"	m	struct:TkIntXlibStubs
xUnmapWindow	generic/tkIntXlibDecls.h	/^    int (*xUnmapWindow) (Display *d, Window w); \/* 75 *\/$/;"	m	struct:TkIntXlibStubs
xUnmapWindow	generic/tkIntXlibDecls.h	/^    void (*xUnmapWindow) (Display *d, Window w); \/* 56 *\/$/;"	m	struct:TkIntXlibStubs
xVisualIDFromVisual	generic/tkIntXlibDecls.h	/^    VisualID (*xVisualIDFromVisual) (Visual *visual); \/* 114 *\/$/;"	m	struct:TkIntXlibStubs
xWarpPointer	generic/tkIntXlibDecls.h	/^    int (*xWarpPointer) (Display *d, Window s, Window dw, int sx, int sy, unsigned int sw, unsigned int sh, int dx, int dy); \/* 105 *\/$/;"	m	struct:TkIntXlibStubs
xWarpPointer	generic/tkIntXlibDecls.h	/^    int (*xWarpPointer) (Display *display, Window src_w, Window dest_w, int src_x, int src_y, unsigned int src_width, unsigned int src_height, int dest_x, int dest_y); \/* 87 *\/$/;"	m	struct:TkIntXlibStubs
xWidth	generic/tkEntry.h	/^    int xWidth;			\/* Extra width to reserve for widget. Used by$/;"	m	struct:__anon183
xWindowEvent	generic/tkIntXlibDecls.h	/^    int (*xWindowEvent) (Display *d, Window w, long l, XEvent *x); \/* 76 *\/$/;"	m	struct:TkIntXlibStubs
xWithdrawWindow	generic/tkIntXlibDecls.h	/^    Status (*xWithdrawWindow) (Display *d, Window w, int i); \/* 16 *\/$/;"	m	struct:TkIntXlibStubs
x_root	generic/tk.h	/^    int x_root, y_root;		\/* Coordinates relative to root. *\/$/;"	m	struct:__anon9
x_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon287
x_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon288
x_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon289
x_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon290
xa	unix/tkUnixFont.c	/^    TkXLFDAttributes xa;	\/* Additional attributes that specify the$/;"	m	struct:UnixFont	file:
xa	unix/tkUnixFont.c	/^    TkXLFDAttributes xa;$/;"	m	struct:FontAttributes	file:
xany	xlib/X11/Xlib.h	/^	XAnyEvent xany;$/;"	m	union:_XEvent
xbutton	xlib/X11/Xlib.h	/^	XButtonEvent xbutton;$/;"	m	union:_XEvent
xcirculate	xlib/X11/Xlib.h	/^	XCirculateEvent xcirculate;$/;"	m	union:_XEvent
xcirculaterequest	xlib/X11/Xlib.h	/^	XCirculateRequestEvent xcirculaterequest;$/;"	m	union:_XEvent
xclient	xlib/X11/Xlib.h	/^	XClientMessageEvent xclient;$/;"	m	union:_XEvent
xcolormap	xlib/X11/Xlib.h	/^	XColormapEvent xcolormap;$/;"	m	union:_XEvent
xconfigure	xlib/X11/Xlib.h	/^	XConfigureEvent xconfigure;$/;"	m	union:_XEvent
xconfigurerequest	xlib/X11/Xlib.h	/^	XConfigureRequestEvent xconfigurerequest;$/;"	m	union:_XEvent
xcreatewindow	xlib/X11/Xlib.h	/^	XCreateWindowEvent xcreatewindow;$/;"	m	union:_XEvent
xcrossing	xlib/X11/Xlib.h	/^	XCrossingEvent xcrossing;$/;"	m	union:_XEvent
xdefaults	xlib/X11/Xlib.h	/^	char *xdefaults;	\/* contents of defaults from server *\/$/;"	m	struct:_XDisplay
xdestroywindow	xlib/X11/Xlib.h	/^	XDestroyWindowEvent xdestroywindow;$/;"	m	union:_XEvent
xerror	xlib/X11/Xlib.h	/^	XErrorEvent xerror;$/;"	m	union:_XEvent
xerrorhandler	generic/tkCanvWind.c	/^xerrorhandler($/;"	f	file:
xexpose	xlib/X11/Xlib.h	/^	XExposeEvent xexpose;$/;"	m	union:_XEvent
xfocus	xlib/X11/Xlib.h	/^	XFocusChangeEvent xfocus;$/;"	m	union:_XEvent
xgraphicsexpose	xlib/X11/Xlib.h	/^	XGraphicsExposeEvent xgraphicsexpose;$/;"	m	union:_XEvent
xgravity	xlib/X11/Xlib.h	/^	XGravityEvent xgravity;$/;"	m	union:_XEvent
xkey	xlib/X11/Xlib.h	/^	XKeyEvent xkey;$/;"	m	union:_XEvent
xkeymap	xlib/X11/Xlib.h	/^	XKeymapEvent xkeymap;$/;"	m	union:_XEvent
xlfdSetwidthMap	generic/tkFont.c	/^static const TkStateMap xlfdSetwidthMap[] = {$/;"	v	file:
xlfdSlantMap	generic/tkFont.c	/^static const TkStateMap xlfdSlantMap[] = {$/;"	v	file:
xlfdWeightMap	generic/tkFont.c	/^static const TkStateMap xlfdWeightMap[] = {$/;"	v	file:
xmap	xlib/X11/Xlib.h	/^	XMapEvent xmap;$/;"	m	union:_XEvent
xmapping	xlib/X11/Xlib.h	/^	XMappingEvent xmapping;$/;"	m	union:_XEvent
xmaprequest	xlib/X11/Xlib.h	/^	XMapRequestEvent xmaprequest;$/;"	m	union:_XEvent
xmbLookupString	generic/tkIntXlibDecls.h	/^    int (*xmbLookupString) (XIC xi, XKeyPressedEvent *xk, char *c, int i, KeySym *k, Status *s); \/* 79 *\/$/;"	m	struct:TkIntXlibStubs
xmotion	xlib/X11/Xlib.h	/^	XMotionEvent xmotion;$/;"	m	union:_XEvent
xnoexpose	xlib/X11/Xlib.h	/^	XNoExposeEvent xnoexpose;$/;"	m	union:_XEvent
xoffset	generic/tk.h	/^    int xoffset;		\/* x offset *\/$/;"	m	struct:Tk_TSOffset
xoffset	xlib/X11/Xlib.h	/^    int xoffset;		\/* number of pixels offset in X direction *\/$/;"	m	struct:_XImage
xorUid	generic/tkCanvas.c	/^    Tk_Uid xorUid;$/;"	m	struct:__anon154	file:
xproperty	xlib/X11/Xlib.h	/^	XPropertyEvent xproperty;$/;"	m	union:_XEvent
xreparent	xlib/X11/Xlib.h	/^	XReparentEvent xreparent;$/;"	m	union:_XEvent
xresizerequest	xlib/X11/Xlib.h	/^	XResizeRequestEvent xresizerequest;$/;"	m	union:_XEvent
xscroll	generic/ttk/ttkEntry.c	/^    Scrollable xscroll;		\/* Current scroll position *\/$/;"	m	struct:__anon26	file:
xscroll	generic/ttk/ttkTreeview.c	/^    Scrollable xscroll;$/;"	m	struct:__anon83	file:
xscrollHandle	generic/ttk/ttkEntry.c	/^    ScrollHandle xscrollHandle;$/;"	m	struct:__anon26	file:
xscrollHandle	generic/ttk/ttkTreeview.c	/^    ScrollHandle xscrollHandle;$/;"	m	struct:__anon83	file:
xselection	xlib/X11/Xlib.h	/^	XSelectionEvent xselection;$/;"	m	union:_XEvent
xselectionclear	xlib/X11/Xlib.h	/^	XSelectionClearEvent xselectionclear;$/;"	m	union:_XEvent
xselectionrequest	xlib/X11/Xlib.h	/^	XSelectionRequestEvent xselectionrequest;$/;"	m	union:_XEvent
xunmap	xlib/X11/Xlib.h	/^	XUnmapEvent xunmap;$/;"	m	union:_XEvent
xvisibility	xlib/X11/Xlib.h	/^	XVisibilityEvent xvisibility;$/;"	m	union:_XEvent
y	generic/tk.h	/^    int x, y;			\/* Pointer x, y coordinates in event$/;"	m	struct:__anon9
y	generic/tkBusy.h	/^    int x, y;			\/* Position of the reference window *\/$/;"	m	struct:Busy
y	generic/tkCanvBmap.c	/^    double x, y;		\/* Coordinates of positioning point for$/;"	m	struct:BitmapItem	file:
y	generic/tkCanvImg.c	/^    double x, y;		\/* Coordinates of positioning point for$/;"	m	struct:ImageItem	file:
y	generic/tkCanvPs.c	/^    int x, y, width, height;	\/* Area to print, in canvas pixel$/;"	m	struct:TkPostscriptInfo	file:
y	generic/tkCanvText.c	/^    double x, y;		\/* Positioning point for text. *\/$/;"	m	struct:TextItem	file:
y	generic/tkCanvWind.c	/^    double x, y;		\/* Coordinates of positioning point for$/;"	m	struct:WindowItem	file:
y	generic/tkFont.c	/^    int x, y;			\/* The origin of the first character in this$/;"	m	struct:LayoutChunk	file:
y	generic/tkGeometry.c	/^    int x, y;			\/* Desired position of slave relative to$/;"	m	struct:MaintainSlave	file:
y	generic/tkInt.h	/^    int y;			\/* Relative y coord of the caret. *\/$/;"	m	struct:TkCaret
y	generic/tkMenu.h	/^    int y;			\/* Y-coordinate of topmost pixel in entry. *\/$/;"	m	struct:TkMenuEntry
y	generic/tkPanedWindow.c	/^    int x, y;			\/* Coordinates of the widget. *\/$/;"	m	struct:Slave	file:
y	generic/tkPlace.c	/^    int x, y;			\/* X and Y pixel coordinates for tkwin. *\/$/;"	m	struct:Slave	file:
y	generic/tkSquare.c	/^    int x, y;$/;"	m	struct:__anon142	file:
y	generic/tkTextDisp.c	/^    int y;			\/* First y-coordinate that may be used for$/;"	m	struct:TextDInfo	file:
y	generic/tkTextDisp.c	/^    int y;			\/* Y-position at which line is supposed to be$/;"	m	struct:DLine	file:
y	generic/ttk/ttkTheme.h	/^    int y;$/;"	m	struct:__anon73
y	macosx/tkMacOSXWm.h	/^	int y;			\/* denominator *\/$/;"	m	struct:TkWmInfo::__anon189
y	macosx/tkMacOSXWm.h	/^    int x, y;			\/* Desired X and Y coordinates for window.$/;"	m	struct:TkWmInfo
y	unix/tkUnixWm.c	/^	int y;			\/* denominator *\/$/;"	m	struct:TkWmInfo::__anon216	file:
y	unix/tkUnixWm.c	/^    int x, y;			\/* Desired X and Y coordinates for window.$/;"	m	struct:TkWmInfo	file:
y	win/tkWinWm.c	/^	int y;	\/* denominator *\/$/;"	m	struct:TkWmInfo::__anon237	file:
y	win/tkWinWm.c	/^    int x, y;			\/* Desired X and Y coordinates for window.$/;"	m	struct:TkWmInfo	file:
y	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon287
y	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon288
y	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon289
y	xlib/X11/Xlib.h	/^	int x, y;		\/* pointer x, y coordinates in event window *\/$/;"	m	struct:__anon290
y	xlib/X11/Xlib.h	/^	int x, y;		\/* window location *\/$/;"	m	struct:__anon297
y	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon293
y	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon294
y	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon302
y	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon303
y	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon304
y	xlib/X11/Xlib.h	/^	int x, y;$/;"	m	struct:__anon306
y	xlib/X11/Xlib.h	/^	short x, y;$/;"	m	struct:__anon284
y	xlib/X11/Xlib.h	/^    int x, y;			\/* location of window *\/$/;"	m	struct:__anon274
y	xlib/X11/Xlib.h	/^    int x, y;$/;"	m	struct:__anon276
y	xlib/X11/Xlib.h	/^    short x, y;$/;"	m	struct:__anon279
y	xlib/X11/Xlib.h	/^    short x, y;$/;"	m	struct:__anon280
y	xlib/X11/Xlib.h	/^    short x, y;$/;"	m	struct:__anon281
y	xlib/X11/Xutil.h	/^		int y;	\/* denominator *\/$/;"	m	struct:__anon257::__anon258
y	xlib/X11/Xutil.h	/^	int x, y;		\/* obsolete for new window mgrs, but clients *\/$/;"	m	struct:__anon257
y1	generic/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item
y1	xlib/X11/Xlib.h	/^    short x1, y1, x2, y2;$/;"	m	struct:__anon278
y2	generic/tk.h	/^    int x1, y1, x2, y2;		\/* Bounding box for item, in integer canvas$/;"	m	struct:Tk_Item
y2	generic/tkCanvPs.c	/^    int x2, y2;			\/* x+width and y+height. *\/$/;"	m	struct:TkPostscriptInfo	file:
y2	xlib/X11/Xlib.h	/^    short x1, y1, x2, y2;$/;"	m	struct:__anon278
yHot	generic/tkCursor.c	/^    int xHot, yHot;		\/* Location of cursor hot-spot. *\/$/;"	m	struct:__anon1	file:
yInParent	macosx/tkMacOSXWm.h	/^    int xInParent, yInParent;	\/* Offset of window within reparent, measured$/;"	m	struct:TkWmInfo
yInParent	unix/tkUnixWm.c	/^    int xInParent, yInParent;	\/* Offset of wrapperPtr within reparent,$/;"	m	struct:TkWmInfo	file:
yOff	macosx/tkMacOSXInt.h	/^    int yOff;			\/* Y offset from toplevel window *\/$/;"	m	struct:TkWindowPrivate
yOrigin	generic/tkCanvas.h	/^    int xOrigin, yOrigin;	\/* Canvas coordinates corresponding to$/;"	m	struct:TkCanvas
yPtr	generic/tkPlace.c	/^    Tcl_Obj *xPtr, *yPtr;	\/* Tcl_Obj rep's of x, y coords, to keep pixel$/;"	m	struct:Slave	file:
yPtr	generic/tkSquare.c	/^    Tcl_Obj *xPtr, *yPtr;	\/* Position of square's upper-left corner$/;"	m	struct:__anon142	file:
yScrollCmd	generic/tkCanvas.h	/^    char *yScrollCmd;		\/* Command prefix for communicating with$/;"	m	struct:TkCanvas
yScrollCmd	generic/tkListbox.c	/^    char *yScrollCmd;		\/* Command prefix for communicating with$/;"	m	struct:__anon149	file:
yScrollCmd	generic/tkText.h	/^    char *yScrollCmd;		\/* Prefix of command to issue to update$/;"	m	struct:TkText
yScrollFirst	generic/tkTextDisp.c	/^    double yScrollFirst, yScrollLast;$/;"	m	struct:TextDInfo	file:
yScrollIncrement	generic/tkCanvas.h	/^    int yScrollIncrement;	\/* If >0, defines a grid for horizontal$/;"	m	struct:TkCanvas
yScrollLast	generic/tkTextDisp.c	/^    double yScrollFirst, yScrollLast;$/;"	m	struct:TextDInfo	file:
y_root	generic/tk.h	/^    int x_root, y_root;		\/* Coordinates relative to root. *\/$/;"	m	struct:__anon9
y_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon287
y_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon288
y_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon289
y_root	xlib/X11/Xlib.h	/^	int x_root, y_root;	\/* coordinates relative to root *\/$/;"	m	struct:__anon290
yoffset	generic/tk.h	/^    int yoffset;		\/* y offset *\/$/;"	m	struct:Tk_TSOffset
your_event_mask	xlib/X11/Xlib.h	/^    long your_event_mask;	\/* my event mask *\/$/;"	m	struct:__anon274
yscroll	generic/ttk/ttkTreeview.c	/^    Scrollable yscroll;$/;"	m	struct:__anon83	file:
yscrollHandle	generic/ttk/ttkTreeview.c	/^    ScrollHandle yscrollHandle;$/;"	m	struct:__anon83	file:
zoomX	generic/tkImgPhoto.c	/^    int zoomX, zoomY;		\/* Values specified for -zoom option. *\/$/;"	m	struct:SubcommandOptions	file:
zoomY	generic/tkImgPhoto.c	/^    int zoomX, zoomY;		\/* Values specified for -zoom option. *\/$/;"	m	struct:SubcommandOptions	file:
zoomed	unix/tkUnixWm.c	/^    int zoomed;			\/* Flag: true=>maximized *\/$/;"	m	struct:__anon214	file:
{	library/console.tcl	/^	proc* {$/;"	p
